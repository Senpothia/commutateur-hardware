

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Sep 26 16:09:29 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1939
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,inline,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,inline,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,delta=2
    61                           	psect	text49,local,class=CODE,merge=1,delta=2
    62                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    63                           	psect	text51,local,class=CODE,merge=1,inline,delta=2
    64                           	psect	text52,local,class=CODE,merge=1,delta=2
    65                           	psect	text53,local,class=CODE,merge=1,delta=2
    66                           	psect	text54,local,class=CODE,merge=1,delta=2
    67                           	psect	text55,local,class=CODE,merge=1,delta=2
    68                           	psect	text56,local,class=CODE,merge=1,delta=2
    69                           	psect	text57,local,class=CODE,merge=1,delta=2
    70                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    71                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    72                           	dabs	1,0x7E,2
    73  0000                     
    74                           ; Version 2.32
    75                           ; Generated 02/02/2021 GMT
    76                           ; 
    77                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution. Publication is not required when
    91                           ;        this file is used in an embedded application.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC16F1939 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0015                     	;# 
   130  0016                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001C                     	;# 
   138  001E                     	;# 
   139  001F                     	;# 
   140  008C                     	;# 
   141  008D                     	;# 
   142  008E                     	;# 
   143  008F                     	;# 
   144  0090                     	;# 
   145  0091                     	;# 
   146  0092                     	;# 
   147  0093                     	;# 
   148  0095                     	;# 
   149  0096                     	;# 
   150  0097                     	;# 
   151  0098                     	;# 
   152  0099                     	;# 
   153  009A                     	;# 
   154  009B                     	;# 
   155  009B                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  010C                     	;# 
   160  010D                     	;# 
   161  010E                     	;# 
   162  010F                     	;# 
   163  0110                     	;# 
   164  0111                     	;# 
   165  0112                     	;# 
   166  0113                     	;# 
   167  0114                     	;# 
   168  0115                     	;# 
   169  0116                     	;# 
   170  0117                     	;# 
   171  0118                     	;# 
   172  0119                     	;# 
   173  011A                     	;# 
   174  011B                     	;# 
   175  011D                     	;# 
   176  018C                     	;# 
   177  018D                     	;# 
   178  018F                     	;# 
   179  0190                     	;# 
   180  0191                     	;# 
   181  0191                     	;# 
   182  0192                     	;# 
   183  0193                     	;# 
   184  0193                     	;# 
   185  0193                     	;# 
   186  0194                     	;# 
   187  0195                     	;# 
   188  0196                     	;# 
   189  0199                     	;# 
   190  019A                     	;# 
   191  019B                     	;# 
   192  019B                     	;# 
   193  019B                     	;# 
   194  019B                     	;# 
   195  019C                     	;# 
   196  019C                     	;# 
   197  019D                     	;# 
   198  019E                     	;# 
   199  019F                     	;# 
   200  020D                     	;# 
   201  0210                     	;# 
   202  0211                     	;# 
   203  0212                     	;# 
   204  0213                     	;# 
   205  0214                     	;# 
   206  0215                     	;# 
   207  0215                     	;# 
   208  0216                     	;# 
   209  0217                     	;# 
   210  0291                     	;# 
   211  0291                     	;# 
   212  0292                     	;# 
   213  0293                     	;# 
   214  0294                     	;# 
   215  0295                     	;# 
   216  0295                     	;# 
   217  0296                     	;# 
   218  0298                     	;# 
   219  0298                     	;# 
   220  0299                     	;# 
   221  029A                     	;# 
   222  029B                     	;# 
   223  029C                     	;# 
   224  029C                     	;# 
   225  029D                     	;# 
   226  029E                     	;# 
   227  029F                     	;# 
   228  0311                     	;# 
   229  0311                     	;# 
   230  0312                     	;# 
   231  0313                     	;# 
   232  0314                     	;# 
   233  0315                     	;# 
   234  0315                     	;# 
   235  0316                     	;# 
   236  0318                     	;# 
   237  0318                     	;# 
   238  0319                     	;# 
   239  031A                     	;# 
   240  031C                     	;# 
   241  031C                     	;# 
   242  031D                     	;# 
   243  031E                     	;# 
   244  0394                     	;# 
   245  0395                     	;# 
   246  0396                     	;# 
   247  0415                     	;# 
   248  0416                     	;# 
   249  0417                     	;# 
   250  041C                     	;# 
   251  041D                     	;# 
   252  041E                     	;# 
   253  0791                     	;# 
   254  0792                     	;# 
   255  0793                     	;# 
   256  0794                     	;# 
   257  0795                     	;# 
   258  0798                     	;# 
   259  0799                     	;# 
   260  079A                     	;# 
   261  07A0                     	;# 
   262  07A1                     	;# 
   263  07A2                     	;# 
   264  07A3                     	;# 
   265  07A4                     	;# 
   266  07A5                     	;# 
   267  07A6                     	;# 
   268  07A7                     	;# 
   269  07A8                     	;# 
   270  07A9                     	;# 
   271  07AA                     	;# 
   272  07AB                     	;# 
   273  0FE4                     	;# 
   274  0FE5                     	;# 
   275  0FE6                     	;# 
   276  0FE7                     	;# 
   277  0FE8                     	;# 
   278  0FE9                     	;# 
   279  0FEA                     	;# 
   280  0FEB                     	;# 
   281  0FED                     	;# 
   282  0FEE                     	;# 
   283  0FEF                     	;# 
   284  0000                     	;# 
   285  0001                     	;# 
   286  0002                     	;# 
   287  0003                     	;# 
   288  0004                     	;# 
   289  0005                     	;# 
   290  0006                     	;# 
   291  0007                     	;# 
   292  0008                     	;# 
   293  0009                     	;# 
   294  000A                     	;# 
   295  000B                     	;# 
   296  000C                     	;# 
   297  000D                     	;# 
   298  000E                     	;# 
   299  000F                     	;# 
   300  0010                     	;# 
   301  0011                     	;# 
   302  0012                     	;# 
   303  0013                     	;# 
   304  0015                     	;# 
   305  0016                     	;# 
   306  0016                     	;# 
   307  0017                     	;# 
   308  0018                     	;# 
   309  0019                     	;# 
   310  001A                     	;# 
   311  001B                     	;# 
   312  001C                     	;# 
   313  001E                     	;# 
   314  001F                     	;# 
   315  008C                     	;# 
   316  008D                     	;# 
   317  008E                     	;# 
   318  008F                     	;# 
   319  0090                     	;# 
   320  0091                     	;# 
   321  0092                     	;# 
   322  0093                     	;# 
   323  0095                     	;# 
   324  0096                     	;# 
   325  0097                     	;# 
   326  0098                     	;# 
   327  0099                     	;# 
   328  009A                     	;# 
   329  009B                     	;# 
   330  009B                     	;# 
   331  009C                     	;# 
   332  009D                     	;# 
   333  009E                     	;# 
   334  010C                     	;# 
   335  010D                     	;# 
   336  010E                     	;# 
   337  010F                     	;# 
   338  0110                     	;# 
   339  0111                     	;# 
   340  0112                     	;# 
   341  0113                     	;# 
   342  0114                     	;# 
   343  0115                     	;# 
   344  0116                     	;# 
   345  0117                     	;# 
   346  0118                     	;# 
   347  0119                     	;# 
   348  011A                     	;# 
   349  011B                     	;# 
   350  011D                     	;# 
   351  018C                     	;# 
   352  018D                     	;# 
   353  018F                     	;# 
   354  0190                     	;# 
   355  0191                     	;# 
   356  0191                     	;# 
   357  0192                     	;# 
   358  0193                     	;# 
   359  0193                     	;# 
   360  0193                     	;# 
   361  0194                     	;# 
   362  0195                     	;# 
   363  0196                     	;# 
   364  0199                     	;# 
   365  019A                     	;# 
   366  019B                     	;# 
   367  019B                     	;# 
   368  019B                     	;# 
   369  019B                     	;# 
   370  019C                     	;# 
   371  019C                     	;# 
   372  019D                     	;# 
   373  019E                     	;# 
   374  019F                     	;# 
   375  020D                     	;# 
   376  0210                     	;# 
   377  0211                     	;# 
   378  0212                     	;# 
   379  0213                     	;# 
   380  0214                     	;# 
   381  0215                     	;# 
   382  0215                     	;# 
   383  0216                     	;# 
   384  0217                     	;# 
   385  0291                     	;# 
   386  0291                     	;# 
   387  0292                     	;# 
   388  0293                     	;# 
   389  0294                     	;# 
   390  0295                     	;# 
   391  0295                     	;# 
   392  0296                     	;# 
   393  0298                     	;# 
   394  0298                     	;# 
   395  0299                     	;# 
   396  029A                     	;# 
   397  029B                     	;# 
   398  029C                     	;# 
   399  029C                     	;# 
   400  029D                     	;# 
   401  029E                     	;# 
   402  029F                     	;# 
   403  0311                     	;# 
   404  0311                     	;# 
   405  0312                     	;# 
   406  0313                     	;# 
   407  0314                     	;# 
   408  0315                     	;# 
   409  0315                     	;# 
   410  0316                     	;# 
   411  0318                     	;# 
   412  0318                     	;# 
   413  0319                     	;# 
   414  031A                     	;# 
   415  031C                     	;# 
   416  031C                     	;# 
   417  031D                     	;# 
   418  031E                     	;# 
   419  0394                     	;# 
   420  0395                     	;# 
   421  0396                     	;# 
   422  0415                     	;# 
   423  0416                     	;# 
   424  0417                     	;# 
   425  041C                     	;# 
   426  041D                     	;# 
   427  041E                     	;# 
   428  0791                     	;# 
   429  0792                     	;# 
   430  0793                     	;# 
   431  0794                     	;# 
   432  0795                     	;# 
   433  0798                     	;# 
   434  0799                     	;# 
   435  079A                     	;# 
   436  07A0                     	;# 
   437  07A1                     	;# 
   438  07A2                     	;# 
   439  07A3                     	;# 
   440  07A4                     	;# 
   441  07A5                     	;# 
   442  07A6                     	;# 
   443  07A7                     	;# 
   444  07A8                     	;# 
   445  07A9                     	;# 
   446  07AA                     	;# 
   447  07AB                     	;# 
   448  0FE4                     	;# 
   449  0FE5                     	;# 
   450  0FE6                     	;# 
   451  0FE7                     	;# 
   452  0FE8                     	;# 
   453  0FE9                     	;# 
   454  0FEA                     	;# 
   455  0FEB                     	;# 
   456  0FED                     	;# 
   457  0FEE                     	;# 
   458  0FEF                     	;# 
   459  0000                     	;# 
   460  0001                     	;# 
   461  0002                     	;# 
   462  0003                     	;# 
   463  0004                     	;# 
   464  0005                     	;# 
   465  0006                     	;# 
   466  0007                     	;# 
   467  0008                     	;# 
   468  0009                     	;# 
   469  000A                     	;# 
   470  000B                     	;# 
   471  000C                     	;# 
   472  000D                     	;# 
   473  000E                     	;# 
   474  000F                     	;# 
   475  0010                     	;# 
   476  0011                     	;# 
   477  0012                     	;# 
   478  0013                     	;# 
   479  0015                     	;# 
   480  0016                     	;# 
   481  0016                     	;# 
   482  0017                     	;# 
   483  0018                     	;# 
   484  0019                     	;# 
   485  001A                     	;# 
   486  001B                     	;# 
   487  001C                     	;# 
   488  001E                     	;# 
   489  001F                     	;# 
   490  008C                     	;# 
   491  008D                     	;# 
   492  008E                     	;# 
   493  008F                     	;# 
   494  0090                     	;# 
   495  0091                     	;# 
   496  0092                     	;# 
   497  0093                     	;# 
   498  0095                     	;# 
   499  0096                     	;# 
   500  0097                     	;# 
   501  0098                     	;# 
   502  0099                     	;# 
   503  009A                     	;# 
   504  009B                     	;# 
   505  009B                     	;# 
   506  009C                     	;# 
   507  009D                     	;# 
   508  009E                     	;# 
   509  010C                     	;# 
   510  010D                     	;# 
   511  010E                     	;# 
   512  010F                     	;# 
   513  0110                     	;# 
   514  0111                     	;# 
   515  0112                     	;# 
   516  0113                     	;# 
   517  0114                     	;# 
   518  0115                     	;# 
   519  0116                     	;# 
   520  0117                     	;# 
   521  0118                     	;# 
   522  0119                     	;# 
   523  011A                     	;# 
   524  011B                     	;# 
   525  011D                     	;# 
   526  018C                     	;# 
   527  018D                     	;# 
   528  018F                     	;# 
   529  0190                     	;# 
   530  0191                     	;# 
   531  0191                     	;# 
   532  0192                     	;# 
   533  0193                     	;# 
   534  0193                     	;# 
   535  0193                     	;# 
   536  0194                     	;# 
   537  0195                     	;# 
   538  0196                     	;# 
   539  0199                     	;# 
   540  019A                     	;# 
   541  019B                     	;# 
   542  019B                     	;# 
   543  019B                     	;# 
   544  019B                     	;# 
   545  019C                     	;# 
   546  019C                     	;# 
   547  019D                     	;# 
   548  019E                     	;# 
   549  019F                     	;# 
   550  020D                     	;# 
   551  0210                     	;# 
   552  0211                     	;# 
   553  0212                     	;# 
   554  0213                     	;# 
   555  0214                     	;# 
   556  0215                     	;# 
   557  0215                     	;# 
   558  0216                     	;# 
   559  0217                     	;# 
   560  0291                     	;# 
   561  0291                     	;# 
   562  0292                     	;# 
   563  0293                     	;# 
   564  0294                     	;# 
   565  0295                     	;# 
   566  0295                     	;# 
   567  0296                     	;# 
   568  0298                     	;# 
   569  0298                     	;# 
   570  0299                     	;# 
   571  029A                     	;# 
   572  029B                     	;# 
   573  029C                     	;# 
   574  029C                     	;# 
   575  029D                     	;# 
   576  029E                     	;# 
   577  029F                     	;# 
   578  0311                     	;# 
   579  0311                     	;# 
   580  0312                     	;# 
   581  0313                     	;# 
   582  0314                     	;# 
   583  0315                     	;# 
   584  0315                     	;# 
   585  0316                     	;# 
   586  0318                     	;# 
   587  0318                     	;# 
   588  0319                     	;# 
   589  031A                     	;# 
   590  031C                     	;# 
   591  031C                     	;# 
   592  031D                     	;# 
   593  031E                     	;# 
   594  0394                     	;# 
   595  0395                     	;# 
   596  0396                     	;# 
   597  0415                     	;# 
   598  0416                     	;# 
   599  0417                     	;# 
   600  041C                     	;# 
   601  041D                     	;# 
   602  041E                     	;# 
   603  0791                     	;# 
   604  0792                     	;# 
   605  0793                     	;# 
   606  0794                     	;# 
   607  0795                     	;# 
   608  0798                     	;# 
   609  0799                     	;# 
   610  079A                     	;# 
   611  07A0                     	;# 
   612  07A1                     	;# 
   613  07A2                     	;# 
   614  07A3                     	;# 
   615  07A4                     	;# 
   616  07A5                     	;# 
   617  07A6                     	;# 
   618  07A7                     	;# 
   619  07A8                     	;# 
   620  07A9                     	;# 
   621  07AA                     	;# 
   622  07AB                     	;# 
   623  0FE4                     	;# 
   624  0FE5                     	;# 
   625  0FE6                     	;# 
   626  0FE7                     	;# 
   627  0FE8                     	;# 
   628  0FE9                     	;# 
   629  0FEA                     	;# 
   630  0FEB                     	;# 
   631  0FED                     	;# 
   632  0FEE                     	;# 
   633  0FEF                     	;# 
   634  0000                     	;# 
   635  0001                     	;# 
   636  0002                     	;# 
   637  0003                     	;# 
   638  0004                     	;# 
   639  0005                     	;# 
   640  0006                     	;# 
   641  0007                     	;# 
   642  0008                     	;# 
   643  0009                     	;# 
   644  000A                     	;# 
   645  000B                     	;# 
   646  000C                     	;# 
   647  000D                     	;# 
   648  000E                     	;# 
   649  000F                     	;# 
   650  0010                     	;# 
   651  0011                     	;# 
   652  0012                     	;# 
   653  0013                     	;# 
   654  0015                     	;# 
   655  0016                     	;# 
   656  0016                     	;# 
   657  0017                     	;# 
   658  0018                     	;# 
   659  0019                     	;# 
   660  001A                     	;# 
   661  001B                     	;# 
   662  001C                     	;# 
   663  001E                     	;# 
   664  001F                     	;# 
   665  008C                     	;# 
   666  008D                     	;# 
   667  008E                     	;# 
   668  008F                     	;# 
   669  0090                     	;# 
   670  0091                     	;# 
   671  0092                     	;# 
   672  0093                     	;# 
   673  0095                     	;# 
   674  0096                     	;# 
   675  0097                     	;# 
   676  0098                     	;# 
   677  0099                     	;# 
   678  009A                     	;# 
   679  009B                     	;# 
   680  009B                     	;# 
   681  009C                     	;# 
   682  009D                     	;# 
   683  009E                     	;# 
   684  010C                     	;# 
   685  010D                     	;# 
   686  010E                     	;# 
   687  010F                     	;# 
   688  0110                     	;# 
   689  0111                     	;# 
   690  0112                     	;# 
   691  0113                     	;# 
   692  0114                     	;# 
   693  0115                     	;# 
   694  0116                     	;# 
   695  0117                     	;# 
   696  0118                     	;# 
   697  0119                     	;# 
   698  011A                     	;# 
   699  011B                     	;# 
   700  011D                     	;# 
   701  018C                     	;# 
   702  018D                     	;# 
   703  018F                     	;# 
   704  0190                     	;# 
   705  0191                     	;# 
   706  0191                     	;# 
   707  0192                     	;# 
   708  0193                     	;# 
   709  0193                     	;# 
   710  0193                     	;# 
   711  0194                     	;# 
   712  0195                     	;# 
   713  0196                     	;# 
   714  0199                     	;# 
   715  019A                     	;# 
   716  019B                     	;# 
   717  019B                     	;# 
   718  019B                     	;# 
   719  019B                     	;# 
   720  019C                     	;# 
   721  019C                     	;# 
   722  019D                     	;# 
   723  019E                     	;# 
   724  019F                     	;# 
   725  020D                     	;# 
   726  0210                     	;# 
   727  0211                     	;# 
   728  0212                     	;# 
   729  0213                     	;# 
   730  0214                     	;# 
   731  0215                     	;# 
   732  0215                     	;# 
   733  0216                     	;# 
   734  0217                     	;# 
   735  0291                     	;# 
   736  0291                     	;# 
   737  0292                     	;# 
   738  0293                     	;# 
   739  0294                     	;# 
   740  0295                     	;# 
   741  0295                     	;# 
   742  0296                     	;# 
   743  0298                     	;# 
   744  0298                     	;# 
   745  0299                     	;# 
   746  029A                     	;# 
   747  029B                     	;# 
   748  029C                     	;# 
   749  029C                     	;# 
   750  029D                     	;# 
   751  029E                     	;# 
   752  029F                     	;# 
   753  0311                     	;# 
   754  0311                     	;# 
   755  0312                     	;# 
   756  0313                     	;# 
   757  0314                     	;# 
   758  0315                     	;# 
   759  0315                     	;# 
   760  0316                     	;# 
   761  0318                     	;# 
   762  0318                     	;# 
   763  0319                     	;# 
   764  031A                     	;# 
   765  031C                     	;# 
   766  031C                     	;# 
   767  031D                     	;# 
   768  031E                     	;# 
   769  0394                     	;# 
   770  0395                     	;# 
   771  0396                     	;# 
   772  0415                     	;# 
   773  0416                     	;# 
   774  0417                     	;# 
   775  041C                     	;# 
   776  041D                     	;# 
   777  041E                     	;# 
   778  0791                     	;# 
   779  0792                     	;# 
   780  0793                     	;# 
   781  0794                     	;# 
   782  0795                     	;# 
   783  0798                     	;# 
   784  0799                     	;# 
   785  079A                     	;# 
   786  07A0                     	;# 
   787  07A1                     	;# 
   788  07A2                     	;# 
   789  07A3                     	;# 
   790  07A4                     	;# 
   791  07A5                     	;# 
   792  07A6                     	;# 
   793  07A7                     	;# 
   794  07A8                     	;# 
   795  07A9                     	;# 
   796  07AA                     	;# 
   797  07AB                     	;# 
   798  0FE4                     	;# 
   799  0FE5                     	;# 
   800  0FE6                     	;# 
   801  0FE7                     	;# 
   802  0FE8                     	;# 
   803  0FE9                     	;# 
   804  0FEA                     	;# 
   805  0FEB                     	;# 
   806  0FED                     	;# 
   807  0FEE                     	;# 
   808  0FEF                     	;# 
   809  0000                     	;# 
   810  0001                     	;# 
   811  0002                     	;# 
   812  0003                     	;# 
   813  0004                     	;# 
   814  0005                     	;# 
   815  0006                     	;# 
   816  0007                     	;# 
   817  0008                     	;# 
   818  0009                     	;# 
   819  000A                     	;# 
   820  000B                     	;# 
   821  000C                     	;# 
   822  000D                     	;# 
   823  000E                     	;# 
   824  000F                     	;# 
   825  0010                     	;# 
   826  0011                     	;# 
   827  0012                     	;# 
   828  0013                     	;# 
   829  0015                     	;# 
   830  0016                     	;# 
   831  0016                     	;# 
   832  0017                     	;# 
   833  0018                     	;# 
   834  0019                     	;# 
   835  001A                     	;# 
   836  001B                     	;# 
   837  001C                     	;# 
   838  001E                     	;# 
   839  001F                     	;# 
   840  008C                     	;# 
   841  008D                     	;# 
   842  008E                     	;# 
   843  008F                     	;# 
   844  0090                     	;# 
   845  0091                     	;# 
   846  0092                     	;# 
   847  0093                     	;# 
   848  0095                     	;# 
   849  0096                     	;# 
   850  0097                     	;# 
   851  0098                     	;# 
   852  0099                     	;# 
   853  009A                     	;# 
   854  009B                     	;# 
   855  009B                     	;# 
   856  009C                     	;# 
   857  009D                     	;# 
   858  009E                     	;# 
   859  010C                     	;# 
   860  010D                     	;# 
   861  010E                     	;# 
   862  010F                     	;# 
   863  0110                     	;# 
   864  0111                     	;# 
   865  0112                     	;# 
   866  0113                     	;# 
   867  0114                     	;# 
   868  0115                     	;# 
   869  0116                     	;# 
   870  0117                     	;# 
   871  0118                     	;# 
   872  0119                     	;# 
   873  011A                     	;# 
   874  011B                     	;# 
   875  011D                     	;# 
   876  018C                     	;# 
   877  018D                     	;# 
   878  018F                     	;# 
   879  0190                     	;# 
   880  0191                     	;# 
   881  0191                     	;# 
   882  0192                     	;# 
   883  0193                     	;# 
   884  0193                     	;# 
   885  0193                     	;# 
   886  0194                     	;# 
   887  0195                     	;# 
   888  0196                     	;# 
   889  0199                     	;# 
   890  019A                     	;# 
   891  019B                     	;# 
   892  019B                     	;# 
   893  019B                     	;# 
   894  019B                     	;# 
   895  019C                     	;# 
   896  019C                     	;# 
   897  019D                     	;# 
   898  019E                     	;# 
   899  019F                     	;# 
   900  020D                     	;# 
   901  0210                     	;# 
   902  0211                     	;# 
   903  0212                     	;# 
   904  0213                     	;# 
   905  0214                     	;# 
   906  0215                     	;# 
   907  0215                     	;# 
   908  0216                     	;# 
   909  0217                     	;# 
   910  0291                     	;# 
   911  0291                     	;# 
   912  0292                     	;# 
   913  0293                     	;# 
   914  0294                     	;# 
   915  0295                     	;# 
   916  0295                     	;# 
   917  0296                     	;# 
   918  0298                     	;# 
   919  0298                     	;# 
   920  0299                     	;# 
   921  029A                     	;# 
   922  029B                     	;# 
   923  029C                     	;# 
   924  029C                     	;# 
   925  029D                     	;# 
   926  029E                     	;# 
   927  029F                     	;# 
   928  0311                     	;# 
   929  0311                     	;# 
   930  0312                     	;# 
   931  0313                     	;# 
   932  0314                     	;# 
   933  0315                     	;# 
   934  0315                     	;# 
   935  0316                     	;# 
   936  0318                     	;# 
   937  0318                     	;# 
   938  0319                     	;# 
   939  031A                     	;# 
   940  031C                     	;# 
   941  031C                     	;# 
   942  031D                     	;# 
   943  031E                     	;# 
   944  0394                     	;# 
   945  0395                     	;# 
   946  0396                     	;# 
   947  0415                     	;# 
   948  0416                     	;# 
   949  0417                     	;# 
   950  041C                     	;# 
   951  041D                     	;# 
   952  041E                     	;# 
   953  0791                     	;# 
   954  0792                     	;# 
   955  0793                     	;# 
   956  0794                     	;# 
   957  0795                     	;# 
   958  0798                     	;# 
   959  0799                     	;# 
   960  079A                     	;# 
   961  07A0                     	;# 
   962  07A1                     	;# 
   963  07A2                     	;# 
   964  07A3                     	;# 
   965  07A4                     	;# 
   966  07A5                     	;# 
   967  07A6                     	;# 
   968  07A7                     	;# 
   969  07A8                     	;# 
   970  07A9                     	;# 
   971  07AA                     	;# 
   972  07AB                     	;# 
   973  0FE4                     	;# 
   974  0FE5                     	;# 
   975  0FE6                     	;# 
   976  0FE7                     	;# 
   977  0FE8                     	;# 
   978  0FE9                     	;# 
   979  0FEA                     	;# 
   980  0FEB                     	;# 
   981  0FED                     	;# 
   982  0FEE                     	;# 
   983  0FEF                     	;# 
   984  0000                     	;# 
   985  0001                     	;# 
   986  0002                     	;# 
   987  0003                     	;# 
   988  0004                     	;# 
   989  0005                     	;# 
   990  0006                     	;# 
   991  0007                     	;# 
   992  0008                     	;# 
   993  0009                     	;# 
   994  000A                     	;# 
   995  000B                     	;# 
   996  000C                     	;# 
   997  000D                     	;# 
   998  000E                     	;# 
   999  000F                     	;# 
  1000  0010                     	;# 
  1001  0011                     	;# 
  1002  0012                     	;# 
  1003  0013                     	;# 
  1004  0015                     	;# 
  1005  0016                     	;# 
  1006  0016                     	;# 
  1007  0017                     	;# 
  1008  0018                     	;# 
  1009  0019                     	;# 
  1010  001A                     	;# 
  1011  001B                     	;# 
  1012  001C                     	;# 
  1013  001E                     	;# 
  1014  001F                     	;# 
  1015  008C                     	;# 
  1016  008D                     	;# 
  1017  008E                     	;# 
  1018  008F                     	;# 
  1019  0090                     	;# 
  1020  0091                     	;# 
  1021  0092                     	;# 
  1022  0093                     	;# 
  1023  0095                     	;# 
  1024  0096                     	;# 
  1025  0097                     	;# 
  1026  0098                     	;# 
  1027  0099                     	;# 
  1028  009A                     	;# 
  1029  009B                     	;# 
  1030  009B                     	;# 
  1031  009C                     	;# 
  1032  009D                     	;# 
  1033  009E                     	;# 
  1034  010C                     	;# 
  1035  010D                     	;# 
  1036  010E                     	;# 
  1037  010F                     	;# 
  1038  0110                     	;# 
  1039  0111                     	;# 
  1040  0112                     	;# 
  1041  0113                     	;# 
  1042  0114                     	;# 
  1043  0115                     	;# 
  1044  0116                     	;# 
  1045  0117                     	;# 
  1046  0118                     	;# 
  1047  0119                     	;# 
  1048  011A                     	;# 
  1049  011B                     	;# 
  1050  011D                     	;# 
  1051  018C                     	;# 
  1052  018D                     	;# 
  1053  018F                     	;# 
  1054  0190                     	;# 
  1055  0191                     	;# 
  1056  0191                     	;# 
  1057  0192                     	;# 
  1058  0193                     	;# 
  1059  0193                     	;# 
  1060  0193                     	;# 
  1061  0194                     	;# 
  1062  0195                     	;# 
  1063  0196                     	;# 
  1064  0199                     	;# 
  1065  019A                     	;# 
  1066  019B                     	;# 
  1067  019B                     	;# 
  1068  019B                     	;# 
  1069  019B                     	;# 
  1070  019C                     	;# 
  1071  019C                     	;# 
  1072  019D                     	;# 
  1073  019E                     	;# 
  1074  019F                     	;# 
  1075  020D                     	;# 
  1076  0210                     	;# 
  1077  0211                     	;# 
  1078  0212                     	;# 
  1079  0213                     	;# 
  1080  0214                     	;# 
  1081  0215                     	;# 
  1082  0215                     	;# 
  1083  0216                     	;# 
  1084  0217                     	;# 
  1085  0291                     	;# 
  1086  0291                     	;# 
  1087  0292                     	;# 
  1088  0293                     	;# 
  1089  0294                     	;# 
  1090  0295                     	;# 
  1091  0295                     	;# 
  1092  0296                     	;# 
  1093  0298                     	;# 
  1094  0298                     	;# 
  1095  0299                     	;# 
  1096  029A                     	;# 
  1097  029B                     	;# 
  1098  029C                     	;# 
  1099  029C                     	;# 
  1100  029D                     	;# 
  1101  029E                     	;# 
  1102  029F                     	;# 
  1103  0311                     	;# 
  1104  0311                     	;# 
  1105  0312                     	;# 
  1106  0313                     	;# 
  1107  0314                     	;# 
  1108  0315                     	;# 
  1109  0315                     	;# 
  1110  0316                     	;# 
  1111  0318                     	;# 
  1112  0318                     	;# 
  1113  0319                     	;# 
  1114  031A                     	;# 
  1115  031C                     	;# 
  1116  031C                     	;# 
  1117  031D                     	;# 
  1118  031E                     	;# 
  1119  0394                     	;# 
  1120  0395                     	;# 
  1121  0396                     	;# 
  1122  0415                     	;# 
  1123  0416                     	;# 
  1124  0417                     	;# 
  1125  041C                     	;# 
  1126  041D                     	;# 
  1127  041E                     	;# 
  1128  0791                     	;# 
  1129  0792                     	;# 
  1130  0793                     	;# 
  1131  0794                     	;# 
  1132  0795                     	;# 
  1133  0798                     	;# 
  1134  0799                     	;# 
  1135  079A                     	;# 
  1136  07A0                     	;# 
  1137  07A1                     	;# 
  1138  07A2                     	;# 
  1139  07A3                     	;# 
  1140  07A4                     	;# 
  1141  07A5                     	;# 
  1142  07A6                     	;# 
  1143  07A7                     	;# 
  1144  07A8                     	;# 
  1145  07A9                     	;# 
  1146  07AA                     	;# 
  1147  07AB                     	;# 
  1148  0FE4                     	;# 
  1149  0FE5                     	;# 
  1150  0FE6                     	;# 
  1151  0FE7                     	;# 
  1152  0FE8                     	;# 
  1153  0FE9                     	;# 
  1154  0FEA                     	;# 
  1155  0FEB                     	;# 
  1156  0FED                     	;# 
  1157  0FEE                     	;# 
  1158  0FEF                     	;# 
  1159  0000                     	;# 
  1160  0001                     	;# 
  1161  0002                     	;# 
  1162  0003                     	;# 
  1163  0004                     	;# 
  1164  0005                     	;# 
  1165  0006                     	;# 
  1166  0007                     	;# 
  1167  0008                     	;# 
  1168  0009                     	;# 
  1169  000A                     	;# 
  1170  000B                     	;# 
  1171  000C                     	;# 
  1172  000D                     	;# 
  1173  000E                     	;# 
  1174  000F                     	;# 
  1175  0010                     	;# 
  1176  0011                     	;# 
  1177  0012                     	;# 
  1178  0013                     	;# 
  1179  0015                     	;# 
  1180  0016                     	;# 
  1181  0016                     	;# 
  1182  0017                     	;# 
  1183  0018                     	;# 
  1184  0019                     	;# 
  1185  001A                     	;# 
  1186  001B                     	;# 
  1187  001C                     	;# 
  1188  001E                     	;# 
  1189  001F                     	;# 
  1190  008C                     	;# 
  1191  008D                     	;# 
  1192  008E                     	;# 
  1193  008F                     	;# 
  1194  0090                     	;# 
  1195  0091                     	;# 
  1196  0092                     	;# 
  1197  0093                     	;# 
  1198  0095                     	;# 
  1199  0096                     	;# 
  1200  0097                     	;# 
  1201  0098                     	;# 
  1202  0099                     	;# 
  1203  009A                     	;# 
  1204  009B                     	;# 
  1205  009B                     	;# 
  1206  009C                     	;# 
  1207  009D                     	;# 
  1208  009E                     	;# 
  1209  010C                     	;# 
  1210  010D                     	;# 
  1211  010E                     	;# 
  1212  010F                     	;# 
  1213  0110                     	;# 
  1214  0111                     	;# 
  1215  0112                     	;# 
  1216  0113                     	;# 
  1217  0114                     	;# 
  1218  0115                     	;# 
  1219  0116                     	;# 
  1220  0117                     	;# 
  1221  0118                     	;# 
  1222  0119                     	;# 
  1223  011A                     	;# 
  1224  011B                     	;# 
  1225  011D                     	;# 
  1226  018C                     	;# 
  1227  018D                     	;# 
  1228  018F                     	;# 
  1229  0190                     	;# 
  1230  0191                     	;# 
  1231  0191                     	;# 
  1232  0192                     	;# 
  1233  0193                     	;# 
  1234  0193                     	;# 
  1235  0193                     	;# 
  1236  0194                     	;# 
  1237  0195                     	;# 
  1238  0196                     	;# 
  1239  0199                     	;# 
  1240  019A                     	;# 
  1241  019B                     	;# 
  1242  019B                     	;# 
  1243  019B                     	;# 
  1244  019B                     	;# 
  1245  019C                     	;# 
  1246  019C                     	;# 
  1247  019D                     	;# 
  1248  019E                     	;# 
  1249  019F                     	;# 
  1250  020D                     	;# 
  1251  0210                     	;# 
  1252  0211                     	;# 
  1253  0212                     	;# 
  1254  0213                     	;# 
  1255  0214                     	;# 
  1256  0215                     	;# 
  1257  0215                     	;# 
  1258  0216                     	;# 
  1259  0217                     	;# 
  1260  0291                     	;# 
  1261  0291                     	;# 
  1262  0292                     	;# 
  1263  0293                     	;# 
  1264  0294                     	;# 
  1265  0295                     	;# 
  1266  0295                     	;# 
  1267  0296                     	;# 
  1268  0298                     	;# 
  1269  0298                     	;# 
  1270  0299                     	;# 
  1271  029A                     	;# 
  1272  029B                     	;# 
  1273  029C                     	;# 
  1274  029C                     	;# 
  1275  029D                     	;# 
  1276  029E                     	;# 
  1277  029F                     	;# 
  1278  0311                     	;# 
  1279  0311                     	;# 
  1280  0312                     	;# 
  1281  0313                     	;# 
  1282  0314                     	;# 
  1283  0315                     	;# 
  1284  0315                     	;# 
  1285  0316                     	;# 
  1286  0318                     	;# 
  1287  0318                     	;# 
  1288  0319                     	;# 
  1289  031A                     	;# 
  1290  031C                     	;# 
  1291  031C                     	;# 
  1292  031D                     	;# 
  1293  031E                     	;# 
  1294  0394                     	;# 
  1295  0395                     	;# 
  1296  0396                     	;# 
  1297  0415                     	;# 
  1298  0416                     	;# 
  1299  0417                     	;# 
  1300  041C                     	;# 
  1301  041D                     	;# 
  1302  041E                     	;# 
  1303  0791                     	;# 
  1304  0792                     	;# 
  1305  0793                     	;# 
  1306  0794                     	;# 
  1307  0795                     	;# 
  1308  0798                     	;# 
  1309  0799                     	;# 
  1310  079A                     	;# 
  1311  07A0                     	;# 
  1312  07A1                     	;# 
  1313  07A2                     	;# 
  1314  07A3                     	;# 
  1315  07A4                     	;# 
  1316  07A5                     	;# 
  1317  07A6                     	;# 
  1318  07A7                     	;# 
  1319  07A8                     	;# 
  1320  07A9                     	;# 
  1321  07AA                     	;# 
  1322  07AB                     	;# 
  1323  0FE4                     	;# 
  1324  0FE5                     	;# 
  1325  0FE6                     	;# 
  1326  0FE7                     	;# 
  1327  0FE8                     	;# 
  1328  0FE9                     	;# 
  1329  0FEA                     	;# 
  1330  0FEB                     	;# 
  1331  0FED                     	;# 
  1332  0FEE                     	;# 
  1333  0FEF                     	;# 
  1334  0000                     	;# 
  1335  0001                     	;# 
  1336  0002                     	;# 
  1337  0003                     	;# 
  1338  0004                     	;# 
  1339  0005                     	;# 
  1340  0006                     	;# 
  1341  0007                     	;# 
  1342  0008                     	;# 
  1343  0009                     	;# 
  1344  000A                     	;# 
  1345  000B                     	;# 
  1346  000C                     	;# 
  1347  000D                     	;# 
  1348  000E                     	;# 
  1349  000F                     	;# 
  1350  0010                     	;# 
  1351  0011                     	;# 
  1352  0012                     	;# 
  1353  0013                     	;# 
  1354  0015                     	;# 
  1355  0016                     	;# 
  1356  0016                     	;# 
  1357  0017                     	;# 
  1358  0018                     	;# 
  1359  0019                     	;# 
  1360  001A                     	;# 
  1361  001B                     	;# 
  1362  001C                     	;# 
  1363  001E                     	;# 
  1364  001F                     	;# 
  1365  008C                     	;# 
  1366  008D                     	;# 
  1367  008E                     	;# 
  1368  008F                     	;# 
  1369  0090                     	;# 
  1370  0091                     	;# 
  1371  0092                     	;# 
  1372  0093                     	;# 
  1373  0095                     	;# 
  1374  0096                     	;# 
  1375  0097                     	;# 
  1376  0098                     	;# 
  1377  0099                     	;# 
  1378  009A                     	;# 
  1379  009B                     	;# 
  1380  009B                     	;# 
  1381  009C                     	;# 
  1382  009D                     	;# 
  1383  009E                     	;# 
  1384  010C                     	;# 
  1385  010D                     	;# 
  1386  010E                     	;# 
  1387  010F                     	;# 
  1388  0110                     	;# 
  1389  0111                     	;# 
  1390  0112                     	;# 
  1391  0113                     	;# 
  1392  0114                     	;# 
  1393  0115                     	;# 
  1394  0116                     	;# 
  1395  0117                     	;# 
  1396  0118                     	;# 
  1397  0119                     	;# 
  1398  011A                     	;# 
  1399  011B                     	;# 
  1400  011D                     	;# 
  1401  018C                     	;# 
  1402  018D                     	;# 
  1403  018F                     	;# 
  1404  0190                     	;# 
  1405  0191                     	;# 
  1406  0191                     	;# 
  1407  0192                     	;# 
  1408  0193                     	;# 
  1409  0193                     	;# 
  1410  0193                     	;# 
  1411  0194                     	;# 
  1412  0195                     	;# 
  1413  0196                     	;# 
  1414  0199                     	;# 
  1415  019A                     	;# 
  1416  019B                     	;# 
  1417  019B                     	;# 
  1418  019B                     	;# 
  1419  019B                     	;# 
  1420  019C                     	;# 
  1421  019C                     	;# 
  1422  019D                     	;# 
  1423  019E                     	;# 
  1424  019F                     	;# 
  1425  020D                     	;# 
  1426  0210                     	;# 
  1427  0211                     	;# 
  1428  0212                     	;# 
  1429  0213                     	;# 
  1430  0214                     	;# 
  1431  0215                     	;# 
  1432  0215                     	;# 
  1433  0216                     	;# 
  1434  0217                     	;# 
  1435  0291                     	;# 
  1436  0291                     	;# 
  1437  0292                     	;# 
  1438  0293                     	;# 
  1439  0294                     	;# 
  1440  0295                     	;# 
  1441  0295                     	;# 
  1442  0296                     	;# 
  1443  0298                     	;# 
  1444  0298                     	;# 
  1445  0299                     	;# 
  1446  029A                     	;# 
  1447  029B                     	;# 
  1448  029C                     	;# 
  1449  029C                     	;# 
  1450  029D                     	;# 
  1451  029E                     	;# 
  1452  029F                     	;# 
  1453  0311                     	;# 
  1454  0311                     	;# 
  1455  0312                     	;# 
  1456  0313                     	;# 
  1457  0314                     	;# 
  1458  0315                     	;# 
  1459  0315                     	;# 
  1460  0316                     	;# 
  1461  0318                     	;# 
  1462  0318                     	;# 
  1463  0319                     	;# 
  1464  031A                     	;# 
  1465  031C                     	;# 
  1466  031C                     	;# 
  1467  031D                     	;# 
  1468  031E                     	;# 
  1469  0394                     	;# 
  1470  0395                     	;# 
  1471  0396                     	;# 
  1472  0415                     	;# 
  1473  0416                     	;# 
  1474  0417                     	;# 
  1475  041C                     	;# 
  1476  041D                     	;# 
  1477  041E                     	;# 
  1478  0791                     	;# 
  1479  0792                     	;# 
  1480  0793                     	;# 
  1481  0794                     	;# 
  1482  0795                     	;# 
  1483  0798                     	;# 
  1484  0799                     	;# 
  1485  079A                     	;# 
  1486  07A0                     	;# 
  1487  07A1                     	;# 
  1488  07A2                     	;# 
  1489  07A3                     	;# 
  1490  07A4                     	;# 
  1491  07A5                     	;# 
  1492  07A6                     	;# 
  1493  07A7                     	;# 
  1494  07A8                     	;# 
  1495  07A9                     	;# 
  1496  07AA                     	;# 
  1497  07AB                     	;# 
  1498  0FE4                     	;# 
  1499  0FE5                     	;# 
  1500  0FE6                     	;# 
  1501  0FE7                     	;# 
  1502  0FE8                     	;# 
  1503  0FE9                     	;# 
  1504  0FEA                     	;# 
  1505  0FEB                     	;# 
  1506  0FED                     	;# 
  1507  0FEE                     	;# 
  1508  0FEF                     	;# 
  1509  0000                     	;# 
  1510  0001                     	;# 
  1511  0002                     	;# 
  1512  0003                     	;# 
  1513  0004                     	;# 
  1514  0005                     	;# 
  1515  0006                     	;# 
  1516  0007                     	;# 
  1517  0008                     	;# 
  1518  0009                     	;# 
  1519  000A                     	;# 
  1520  000B                     	;# 
  1521  000C                     	;# 
  1522  000D                     	;# 
  1523  000E                     	;# 
  1524  000F                     	;# 
  1525  0010                     	;# 
  1526  0011                     	;# 
  1527  0012                     	;# 
  1528  0013                     	;# 
  1529  0015                     	;# 
  1530  0016                     	;# 
  1531  0016                     	;# 
  1532  0017                     	;# 
  1533  0018                     	;# 
  1534  0019                     	;# 
  1535  001A                     	;# 
  1536  001B                     	;# 
  1537  001C                     	;# 
  1538  001E                     	;# 
  1539  001F                     	;# 
  1540  008C                     	;# 
  1541  008D                     	;# 
  1542  008E                     	;# 
  1543  008F                     	;# 
  1544  0090                     	;# 
  1545  0091                     	;# 
  1546  0092                     	;# 
  1547  0093                     	;# 
  1548  0095                     	;# 
  1549  0096                     	;# 
  1550  0097                     	;# 
  1551  0098                     	;# 
  1552  0099                     	;# 
  1553  009A                     	;# 
  1554  009B                     	;# 
  1555  009B                     	;# 
  1556  009C                     	;# 
  1557  009D                     	;# 
  1558  009E                     	;# 
  1559  010C                     	;# 
  1560  010D                     	;# 
  1561  010E                     	;# 
  1562  010F                     	;# 
  1563  0110                     	;# 
  1564  0111                     	;# 
  1565  0112                     	;# 
  1566  0113                     	;# 
  1567  0114                     	;# 
  1568  0115                     	;# 
  1569  0116                     	;# 
  1570  0117                     	;# 
  1571  0118                     	;# 
  1572  0119                     	;# 
  1573  011A                     	;# 
  1574  011B                     	;# 
  1575  011D                     	;# 
  1576  018C                     	;# 
  1577  018D                     	;# 
  1578  018F                     	;# 
  1579  0190                     	;# 
  1580  0191                     	;# 
  1581  0191                     	;# 
  1582  0192                     	;# 
  1583  0193                     	;# 
  1584  0193                     	;# 
  1585  0193                     	;# 
  1586  0194                     	;# 
  1587  0195                     	;# 
  1588  0196                     	;# 
  1589  0199                     	;# 
  1590  019A                     	;# 
  1591  019B                     	;# 
  1592  019B                     	;# 
  1593  019B                     	;# 
  1594  019B                     	;# 
  1595  019C                     	;# 
  1596  019C                     	;# 
  1597  019D                     	;# 
  1598  019E                     	;# 
  1599  019F                     	;# 
  1600  020D                     	;# 
  1601  0210                     	;# 
  1602  0211                     	;# 
  1603  0212                     	;# 
  1604  0213                     	;# 
  1605  0214                     	;# 
  1606  0215                     	;# 
  1607  0215                     	;# 
  1608  0216                     	;# 
  1609  0217                     	;# 
  1610  0291                     	;# 
  1611  0291                     	;# 
  1612  0292                     	;# 
  1613  0293                     	;# 
  1614  0294                     	;# 
  1615  0295                     	;# 
  1616  0295                     	;# 
  1617  0296                     	;# 
  1618  0298                     	;# 
  1619  0298                     	;# 
  1620  0299                     	;# 
  1621  029A                     	;# 
  1622  029B                     	;# 
  1623  029C                     	;# 
  1624  029C                     	;# 
  1625  029D                     	;# 
  1626  029E                     	;# 
  1627  029F                     	;# 
  1628  0311                     	;# 
  1629  0311                     	;# 
  1630  0312                     	;# 
  1631  0313                     	;# 
  1632  0314                     	;# 
  1633  0315                     	;# 
  1634  0315                     	;# 
  1635  0316                     	;# 
  1636  0318                     	;# 
  1637  0318                     	;# 
  1638  0319                     	;# 
  1639  031A                     	;# 
  1640  031C                     	;# 
  1641  031C                     	;# 
  1642  031D                     	;# 
  1643  031E                     	;# 
  1644  0394                     	;# 
  1645  0395                     	;# 
  1646  0396                     	;# 
  1647  0415                     	;# 
  1648  0416                     	;# 
  1649  0417                     	;# 
  1650  041C                     	;# 
  1651  041D                     	;# 
  1652  041E                     	;# 
  1653  0791                     	;# 
  1654  0792                     	;# 
  1655  0793                     	;# 
  1656  0794                     	;# 
  1657  0795                     	;# 
  1658  0798                     	;# 
  1659  0799                     	;# 
  1660  079A                     	;# 
  1661  07A0                     	;# 
  1662  07A1                     	;# 
  1663  07A2                     	;# 
  1664  07A3                     	;# 
  1665  07A4                     	;# 
  1666  07A5                     	;# 
  1667  07A6                     	;# 
  1668  07A7                     	;# 
  1669  07A8                     	;# 
  1670  07A9                     	;# 
  1671  07AA                     	;# 
  1672  07AB                     	;# 
  1673  0FE4                     	;# 
  1674  0FE5                     	;# 
  1675  0FE6                     	;# 
  1676  0FE7                     	;# 
  1677  0FE8                     	;# 
  1678  0FE9                     	;# 
  1679  0FEA                     	;# 
  1680  0FEB                     	;# 
  1681  0FED                     	;# 
  1682  0FEE                     	;# 
  1683  0FEF                     	;# 
  1684                           
  1685                           	psect	stringtext1
  1686  023C                     __pstringtext1:
  1687  023C                     _i2c_fsmStateTable:
  1688  023C  34C1               	retlw	low _I2C_DO_IDLE
  1689  023D  3403               	retlw	high _I2C_DO_IDLE
  1690  023E  3465               	retlw	low _I2C_DO_SEND_ADR_READ
  1691  023F  3403               	retlw	high _I2C_DO_SEND_ADR_READ
  1692  0240  347E               	retlw	low _I2C_DO_SEND_ADR_WRITE
  1693  0241  3403               	retlw	high _I2C_DO_SEND_ADR_WRITE
  1694  0242  3456               	retlw	low _I2C_DO_TX
  1695  0243  3400               	retlw	high _I2C_DO_TX
  1696  0244  34AB               	retlw	low _I2C_DO_RX
  1697  0245  3400               	retlw	high _I2C_DO_RX
  1698  0246  3486               	retlw	low _I2C_DO_RCEN
  1699  0247  3403               	retlw	high _I2C_DO_RCEN
  1700  0248  346E               	retlw	low _I2C_DO_TX_EMPTY
  1701  0249  3401               	retlw	high _I2C_DO_TX_EMPTY
  1702  024A  34BC               	retlw	low _I2C_DO_SEND_RESTART_READ
  1703  024B  3403               	retlw	high _I2C_DO_SEND_RESTART_READ
  1704  024C  34B7               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  1705  024D  3403               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  1706  024E  34B2               	retlw	low _I2C_DO_SEND_RESTART
  1707  024F  3403               	retlw	high _I2C_DO_SEND_RESTART
  1708  0250  34AD               	retlw	low _I2C_DO_SEND_STOP
  1709  0251  3403               	retlw	high _I2C_DO_SEND_STOP
  1710  0252  34A8               	retlw	low _I2C_DO_RX_ACK
  1711  0253  3403               	retlw	high _I2C_DO_RX_ACK
  1712  0254  34A3               	retlw	low _I2C_DO_RX_NACK_STOP
  1713  0255  3403               	retlw	high _I2C_DO_RX_NACK_STOP
  1714  0256  349E               	retlw	low _I2C_DO_RX_NACK_RESTART
  1715  0257  3403               	retlw	high _I2C_DO_RX_NACK_RESTART
  1716  0258  3499               	retlw	low _I2C_DO_RESET
  1717  0259  3403               	retlw	high _I2C_DO_RESET
  1718  025A  349D               	retlw	low _I2C_DO_ADDRESS_NACK
  1719  025B  3401               	retlw	high _I2C_DO_ADDRESS_NACK
  1720  025C                     __end_of_i2c_fsmStateTable:
  1721  0012                     _PIR2bits	set	18
  1722  0011                     _PIR1bits	set	17
  1723  000B                     _INTCONbits	set	11
  1724  0092                     _PIE2bits	set	146
  1725  0091                     _PIE1bits	set	145
  1726  009D                     _ADCON0bits	set	157
  1727  009D                     _ADCON0	set	157
  1728  009C                     _ADRESH	set	156
  1729  009B                     _ADRESL	set	155
  1730  009E                     _ADCON1	set	158
  1731  0097                     _WDTCON	set	151
  1732  0098                     _OSCTUNE	set	152
  1733  0099                     _OSCCON	set	153
  1734  0095                     _OPTION_REGbits	set	149
  1735  008F                     _TRISD	set	143
  1736  008E                     _TRISC	set	142
  1737  008D                     _TRISB	set	141
  1738  008C                     _TRISA	set	140
  1739  0090                     _TRISE	set	144
  1740  04D6                     _PLLR	set	1238
  1741  0116                     _BORCON	set	278
  1742  011D                     _APFCON	set	285
  1743  010E                     _LATC	set	270
  1744  010D                     _LATB	set	269
  1745  010C                     _LATA	set	268
  1746  010F                     _LATD	set	271
  1747  0110                     _LATE	set	272
  1748  0196                     _EECON2	set	406
  1749  0193                     _EEDATL	set	403
  1750  0194                     _EEDATH	set	404
  1751  0195                     _EECON1bits	set	405
  1752  0192                     _EEADRH	set	402
  1753  0191                     _EEADRL	set	401
  1754  0199                     _RCREG	set	409
  1755  019D                     _RCSTAbits	set	413
  1756  019A                     _TXREG	set	410
  1757  019E                     _TXSTAbits	set	414
  1758  019C                     _SPBRGH	set	412
  1759  019B                     _SPBRGL	set	411
  1760  019E                     _TXSTA	set	414
  1761  019D                     _RCSTA	set	413
  1762  019F                     _BAUDCON	set	415
  1763  018C                     _ANSELA	set	396
  1764  0190                     _ANSELE	set	400
  1765  018D                     _ANSELB	set	397
  1766  018F                     _ANSELD	set	399
  1767  0214                     _SSPSTATbits	set	532
  1768  0216                     _SSPCON2bits	set	534
  1769  0211                     _SSPBUF	set	529
  1770  0215                     _SSPCON1bits	set	533
  1771  0212                     _SSPADD	set	530
  1772  0216                     _SSPCON2	set	534
  1773  0215                     _SSPCON1	set	533
  1774  0214                     _SSPSTAT	set	532
  1775  020D                     _WPUB	set	525
  1776  0210                     _WPUE	set	528
  1777                           
  1778                           	psect	cinit
  1779  0049                     start_initialization:	
  1780                           ; #config settings
  1781                           
  1782  0049                     __initialization:
  1783                           
  1784                           ; Clear objects allocated to COMMON
  1785  0049  01FD               	clrf	__pbssCOMMON& (0+127)
  1786                           
  1787                           ; Clear objects allocated to BANK0
  1788  004A  3020               	movlw	low __pbssBANK0
  1789  004B  0084               	movwf	4
  1790  004C  3000               	movlw	high __pbssBANK0
  1791  004D  0085               	movwf	5
  1792  004E  3049               	movlw	73
  1793  004F  3183  238D  3180   	fcall	clear_ram0
  1794  0052                     end_of_initialization:	
  1795                           ;End of C runtime variable initialization code
  1796                           
  1797  0052                     __end_of__initialization:
  1798  0052  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1799  0053  0020               	movlb	0
  1800  0054  3183  2B6E         	ljmp	_main	;jump to C main() function
  1801                           
  1802                           	psect	bssCOMMON
  1803  007D                     __pbssCOMMON:
  1804  007D                     _eusartRxTail:
  1805  007D                     	ds	1
  1806                           
  1807                           	psect	bssBANK0
  1808  0020                     __pbssBANK0:
  1809  0020                     _I2C_Status:
  1810  0020                     	ds	29
  1811  003D                     _eusartRxStatusBuffer:
  1812  003D                     	ds	8
  1813  0045                     _eusartRxBuffer:
  1814  0045                     	ds	8
  1815  004D                     _eusartTxBuffer:
  1816  004D                     	ds	8
  1817  0055                     _EUSART_ErrorHandler:
  1818  0055                     	ds	2
  1819  0057                     _EUSART_OverrunErrorHandler:
  1820  0057                     	ds	2
  1821  0059                     _EUSART_FramingErrorHandler:
  1822  0059                     	ds	2
  1823  005B                     _EUSART_RxDefaultInterruptHandler:
  1824  005B                     	ds	2
  1825  005D                     _EUSART_TxDefaultInterruptHandler:
  1826  005D                     	ds	2
  1827  005F                     _ADC_InterruptHandler:
  1828  005F                     	ds	2
  1829  0061                     _MSSP_InterruptHandler:
  1830  0061                     	ds	2
  1831  0063                     _eusartRxLastError:
  1832  0063                     	ds	1
  1833  0064                     _eusartRxCount:
  1834  0064                     	ds	1
  1835  0065                     _eusartRxHead:
  1836  0065                     	ds	1
  1837  0066                     _eusartTxBufferRemaining:
  1838  0066                     	ds	1
  1839  0067                     _eusartTxTail:
  1840  0067                     	ds	1
  1841  0068                     _eusartTxHead:
  1842  0068                     	ds	1
  1843                           
  1844                           	psect	clrtext
  1845  038D                     clear_ram0:	
  1846                           ;	Called with FSR0 containing the base address, and
  1847                           ;	WREG with the size to clear
  1848                           
  1849  038D  0064               	clrwdt	;clear the watchdog before getting into this loop
  1850  038E                     clrloop0:
  1851  038E  0180               	clrf	0	;clear RAM location pointed to by FSR
  1852  038F  3101               	addfsr 0,1
  1853  0390  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1854  0391  2B8E               	goto	clrloop0	;have we reached the end yet?
  1855  0392  3400               	retlw	0	;all done for this memory range, return
  1856                           
  1857                           	psect	cstackBANK1
  1858  00A0                     __pcstackBANK1:
  1859  00A0                     ?_EUSART_SetRxInterruptHandler:
  1860  00A0                     ?_EUSART_SetTxInterruptHandler:	
  1861                           ; 1 bytes @ 0x0
  1862                           
  1863  00A0                     ?_EUSART_SetFramingErrorHandler:	
  1864                           ; 1 bytes @ 0x0
  1865                           
  1866  00A0                     ?_EUSART_SetOverrunErrorHandler:	
  1867                           ; 1 bytes @ 0x0
  1868                           
  1869  00A0                     ?_EUSART_SetErrorHandler:	
  1870                           ; 1 bytes @ 0x0
  1871                           
  1872  00A0                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1873                           ; 1 bytes @ 0x0
  1874                           
  1875  00A0                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1876                           ; 2 bytes @ 0x0
  1877                           
  1878  00A0                     EUSART_SetErrorHandler@interruptHandler:	
  1879                           ; 2 bytes @ 0x0
  1880                           
  1881  00A0                     EUSART_SetTxInterruptHandler@interruptHandler:	
  1882                           ; 2 bytes @ 0x0
  1883                           
  1884  00A0                     EUSART_SetRxInterruptHandler@interruptHandler:	
  1885                           ; 2 bytes @ 0x0
  1886                           
  1887                           
  1888                           ; 2 bytes @ 0x0
  1889  00A0                     	ds	2
  1890                           
  1891                           	psect	cstackCOMMON
  1892  0070                     __pcstackCOMMON:
  1893  0070                     ?_I2C_SetBuffer:
  1894  0070                     ?_I2C_Initialize:	
  1895                           ; 1 bytes @ 0x0
  1896                           
  1897  0070                     ?_OSCILLATOR_Initialize:	
  1898                           ; 1 bytes @ 0x0
  1899                           
  1900  0070                     ?_WDT_Initialize:	
  1901                           ; 1 bytes @ 0x0
  1902                           
  1903  0070                     ?_ADC_Initialize:	
  1904                           ; 1 bytes @ 0x0
  1905                           
  1906  0070                     ?_EUSART_Initialize:	
  1907                           ; 1 bytes @ 0x0
  1908                           
  1909  0070                     ?_EUSART_Receive_ISR:	
  1910                           ; 1 bytes @ 0x0
  1911                           
  1912  0070                     ?_EUSART_Transmit_ISR:	
  1913                           ; 1 bytes @ 0x0
  1914                           
  1915  0070                     ??_EUSART_Transmit_ISR:	
  1916                           ; 1 bytes @ 0x0
  1917                           
  1918  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  1919                           ; 1 bytes @ 0x0
  1920                           
  1921  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  1922                           ; 1 bytes @ 0x0
  1923                           
  1924  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  1925                           ; 1 bytes @ 0x0
  1926                           
  1927  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  1928                           ; 1 bytes @ 0x0
  1929                           
  1930  0070                     ?_EUSART_DefaultErrorHandler:	
  1931                           ; 1 bytes @ 0x0
  1932                           
  1933  0070                     ?_EUSART_RxDataHandler:	
  1934                           ; 1 bytes @ 0x0
  1935                           
  1936  0070                     ??_EUSART_RxDataHandler:	
  1937                           ; 1 bytes @ 0x0
  1938                           
  1939  0070                     ?_I2C_DO_IDLE:	
  1940                           ; 1 bytes @ 0x0
  1941                           
  1942  0070                     ??_I2C_DO_IDLE:	
  1943                           ; 1 bytes @ 0x0
  1944                           
  1945  0070                     ?_I2C_DO_SEND_ADR_READ:	
  1946                           ; 1 bytes @ 0x0
  1947                           
  1948  0070                     ??_I2C_DO_SEND_ADR_READ:	
  1949                           ; 1 bytes @ 0x0
  1950                           
  1951  0070                     ?_I2C_DO_SEND_ADR_WRITE:	
  1952                           ; 1 bytes @ 0x0
  1953                           
  1954  0070                     ?_I2C_DO_TX:	
  1955                           ; 1 bytes @ 0x0
  1956                           
  1957  0070                     ?_I2C_DO_RX:	
  1958                           ; 1 bytes @ 0x0
  1959                           
  1960  0070                     ?_I2C_DO_RCEN:	
  1961                           ; 1 bytes @ 0x0
  1962                           
  1963  0070                     ??_I2C_DO_RCEN:	
  1964                           ; 1 bytes @ 0x0
  1965                           
  1966  0070                     ?_I2C_DO_TX_EMPTY:	
  1967                           ; 1 bytes @ 0x0
  1968                           
  1969  0070                     ?_I2C_DO_SEND_RESTART_READ:	
  1970                           ; 1 bytes @ 0x0
  1971                           
  1972  0070                     ??_I2C_DO_SEND_RESTART_READ:	
  1973                           ; 1 bytes @ 0x0
  1974                           
  1975  0070                     ?_I2C_DO_SEND_RESTART_WRITE:	
  1976                           ; 1 bytes @ 0x0
  1977                           
  1978  0070                     ??_I2C_DO_SEND_RESTART_WRITE:	
  1979                           ; 1 bytes @ 0x0
  1980                           
  1981  0070                     ?_I2C_DO_SEND_RESTART:	
  1982                           ; 1 bytes @ 0x0
  1983                           
  1984  0070                     ??_I2C_DO_SEND_RESTART:	
  1985                           ; 1 bytes @ 0x0
  1986                           
  1987  0070                     ?_I2C_DO_SEND_STOP:	
  1988                           ; 1 bytes @ 0x0
  1989                           
  1990  0070                     ??_I2C_DO_SEND_STOP:	
  1991                           ; 1 bytes @ 0x0
  1992                           
  1993  0070                     ?_I2C_DO_RX_ACK:	
  1994                           ; 1 bytes @ 0x0
  1995                           
  1996  0070                     ??_I2C_DO_RX_ACK:	
  1997                           ; 1 bytes @ 0x0
  1998                           
  1999  0070                     ?_I2C_DO_RX_NACK_STOP:	
  2000                           ; 1 bytes @ 0x0
  2001                           
  2002  0070                     ??_I2C_DO_RX_NACK_STOP:	
  2003                           ; 1 bytes @ 0x0
  2004                           
  2005  0070                     ?_I2C_DO_RX_NACK_RESTART:	
  2006                           ; 1 bytes @ 0x0
  2007                           
  2008  0070                     ??_I2C_DO_RX_NACK_RESTART:	
  2009                           ; 1 bytes @ 0x0
  2010                           
  2011  0070                     ?_I2C_DO_RESET:	
  2012                           ; 1 bytes @ 0x0
  2013                           
  2014  0070                     ??_I2C_DO_RESET:	
  2015                           ; 1 bytes @ 0x0
  2016                           
  2017  0070                     ?_I2C_DO_ADDRESS_NACK:	
  2018                           ; 1 bytes @ 0x0
  2019                           
  2020  0070                     ?_I2C_MasterIsr:	
  2021                           ; 1 bytes @ 0x0
  2022                           
  2023  0070                     ?_I2C_MasterClearIrq:	
  2024                           ; 1 bytes @ 0x0
  2025                           
  2026  0070                     ??_I2C_MasterClearIrq:	
  2027                           ; 1 bytes @ 0x0
  2028                           
  2029  0070                     ?_I2C_SetCallback:	
  2030                           ; 1 bytes @ 0x0
  2031                           
  2032  0070                     ?_I2C_MasterFsm:	
  2033                           ; 1 bytes @ 0x0
  2034                           
  2035  0070                     ?_I2C_MasterIsNack:	
  2036                           ; 1 bytes @ 0x0
  2037                           
  2038  0070                     ??_I2C_MasterIsNack:	
  2039                           ; 1 bytes @ 0x0
  2040                           
  2041  0070                     ?_I2C_MasterSendTxData:	
  2042                           ; 1 bytes @ 0x0
  2043                           
  2044  0070                     ??_I2C_MasterSendTxData:	
  2045                           ; 1 bytes @ 0x0
  2046                           
  2047  0070                     ?_I2C_MasterGetRxData:	
  2048                           ; 1 bytes @ 0x0
  2049                           
  2050  0070                     ??_I2C_MasterGetRxData:	
  2051                           ; 1 bytes @ 0x0
  2052                           
  2053  0070                     ?_I2C_MasterSendAck:	
  2054                           ; 1 bytes @ 0x0
  2055                           
  2056  0070                     ??_I2C_MasterSendAck:	
  2057                           ; 1 bytes @ 0x0
  2058                           
  2059  0070                     ?_I2C_MasterStartRx:	
  2060                           ; 1 bytes @ 0x0
  2061                           
  2062  0070                     ??_I2C_MasterStartRx:	
  2063                           ; 1 bytes @ 0x0
  2064                           
  2065  0070                     ?_I2C_MasterSetIrq:	
  2066                           ; 1 bytes @ 0x0
  2067                           
  2068  0070                     ??_I2C_MasterSetIrq:	
  2069                           ; 1 bytes @ 0x0
  2070                           
  2071  0070                     ?_I2C_MasterEnableRestart:	
  2072                           ; 1 bytes @ 0x0
  2073                           
  2074  0070                     ??_I2C_MasterEnableRestart:	
  2075                           ; 1 bytes @ 0x0
  2076                           
  2077  0070                     ?_I2C_MasterStop:	
  2078                           ; 1 bytes @ 0x0
  2079                           
  2080  0070                     ??_I2C_MasterStop:	
  2081                           ; 1 bytes @ 0x0
  2082                           
  2083  0070                     ?_I2C_MasterSendNack:	
  2084                           ; 1 bytes @ 0x0
  2085                           
  2086  0070                     ??_I2C_MasterSendNack:	
  2087                           ; 1 bytes @ 0x0
  2088                           
  2089  0070                     ?_PIN_MANAGER_Initialize:	
  2090                           ; 1 bytes @ 0x0
  2091                           
  2092  0070                     ?_SYSTEM_Initialize:	
  2093                           ; 1 bytes @ 0x0
  2094                           
  2095  0070                     ?_INTERRUPT_InterruptManager:	
  2096                           ; 1 bytes @ 0x0
  2097                           
  2098  0070                     ?_main:	
  2099                           ; 1 bytes @ 0x0
  2100                           
  2101  0070                     I2C_MasterSendTxData@data:	
  2102                           ; 1 bytes @ 0x0
  2103                           
  2104  0070                     I2C_SetBuffer@bufferSize:	
  2105                           ; 1 bytes @ 0x0
  2106                           
  2107  0070                     I2C_SetCallback@cb:	
  2108                           ; 2 bytes @ 0x0
  2109                           
  2110                           
  2111                           ; 2 bytes @ 0x0
  2112  0070                     	ds	1
  2113  0071                     ??_EUSART_Receive_ISR:
  2114  0071                     ??_EUSART_DefaultErrorHandler:	
  2115                           ; 1 bytes @ 0x1
  2116                           
  2117  0071                     ??_I2C_DO_SEND_ADR_WRITE:	
  2118                           ; 1 bytes @ 0x1
  2119                           
  2120                           
  2121                           ; 1 bytes @ 0x1
  2122  0071                     	ds	1
  2123  0072                     ??_I2C_SetBuffer:
  2124  0072                     I2C_SetCallback@ptr:	
  2125                           ; 1 bytes @ 0x2
  2126                           
  2127                           
  2128                           ; 1 bytes @ 0x2
  2129  0072                     	ds	1
  2130  0073                     ??_I2C_SetCallback:
  2131  0073                     I2C_SetBuffer@buffer:	
  2132                           ; 1 bytes @ 0x3
  2133                           
  2134                           
  2135                           ; 1 bytes @ 0x3
  2136  0073                     	ds	1
  2137  0074                     I2C_SetCallback@idx:
  2138                           
  2139                           ; 1 bytes @ 0x4
  2140  0074                     	ds	1
  2141  0075                     ?_I2C_SetDataCompleteCallback:
  2142  0075                     I2C_SetDataCompleteCallback@cb:	
  2143                           ; 1 bytes @ 0x5
  2144                           
  2145                           
  2146                           ; 2 bytes @ 0x5
  2147  0075                     	ds	2
  2148  0077                     I2C_SetDataCompleteCallback@ptr:
  2149                           
  2150                           ; 1 bytes @ 0x7
  2151  0077                     	ds	1
  2152  0078                     ??_I2C_SetDataCompleteCallback:
  2153                           
  2154                           ; 1 bytes @ 0x8
  2155  0078                     	ds	1
  2156  0079                     ?_rd1RegCompleteHandler:
  2157  0079                     ?_rd2RegCompleteHandler:	
  2158                           ; 1 bytes @ 0x9
  2159                           
  2160  0079                     ?_wr1RegCompleteHandler:	
  2161                           ; 1 bytes @ 0x9
  2162                           
  2163  0079                     ?_wr2RegCompleteHandler:	
  2164                           ; 1 bytes @ 0x9
  2165                           
  2166  0079                     ?_rdBlkRegCompleteHandler:	
  2167                           ; 1 bytes @ 0x9
  2168                           
  2169  0079                     ?_I2C_CallbackReturnStop:	
  2170                           ; 1 bytes @ 0x9
  2171                           
  2172  0079                     ?_I2C_CallbackReturnReset:	
  2173                           ; 1 bytes @ 0x9
  2174                           
  2175  0079                     rd1RegCompleteHandler@ptr:	
  2176                           ; 1 bytes @ 0x9
  2177                           
  2178  0079                     rd2RegCompleteHandler@ptr:	
  2179                           ; 1 bytes @ 0x9
  2180                           
  2181  0079                     wr1RegCompleteHandler@ptr:	
  2182                           ; 1 bytes @ 0x9
  2183                           
  2184  0079                     wr2RegCompleteHandler@ptr:	
  2185                           ; 1 bytes @ 0x9
  2186                           
  2187  0079                     rdBlkRegCompleteHandler@ptr:	
  2188                           ; 1 bytes @ 0x9
  2189                           
  2190  0079                     I2C_CallbackReturnStop@funPtr:	
  2191                           ; 1 bytes @ 0x9
  2192                           
  2193  0079                     I2C_CallbackReturnReset@funPtr:	
  2194                           ; 1 bytes @ 0x9
  2195                           
  2196                           
  2197                           ; 1 bytes @ 0x9
  2198  0079                     	ds	1
  2199  007A                     ??_rd1RegCompleteHandler:
  2200  007A                     ??_rd2RegCompleteHandler:	
  2201                           ; 1 bytes @ 0xA
  2202                           
  2203  007A                     ??_wr1RegCompleteHandler:	
  2204                           ; 1 bytes @ 0xA
  2205                           
  2206  007A                     ??_wr2RegCompleteHandler:	
  2207                           ; 1 bytes @ 0xA
  2208                           
  2209  007A                     ??_rdBlkRegCompleteHandler:	
  2210                           ; 1 bytes @ 0xA
  2211                           
  2212  007A                     ??_I2C_DO_TX:	
  2213                           ; 1 bytes @ 0xA
  2214                           
  2215  007A                     ??_I2C_DO_RX:	
  2216                           ; 1 bytes @ 0xA
  2217                           
  2218  007A                     ??_I2C_DO_TX_EMPTY:	
  2219                           ; 1 bytes @ 0xA
  2220                           
  2221  007A                     ??_I2C_DO_ADDRESS_NACK:	
  2222                           ; 1 bytes @ 0xA
  2223                           
  2224  007A                     ??_I2C_CallbackReturnStop:	
  2225                           ; 1 bytes @ 0xA
  2226                           
  2227  007A                     ??_I2C_CallbackReturnReset:	
  2228                           ; 1 bytes @ 0xA
  2229                           
  2230                           
  2231                           ; 1 bytes @ 0xA
  2232  007A                     	ds	3
  2233  007D                     ??_I2C_MasterIsr:
  2234  007D                     ??_INTERRUPT_InterruptManager:	
  2235                           ; 1 bytes @ 0xD
  2236                           
  2237                           
  2238                           	psect	cstackBANK0
  2239  0069                     __pcstackBANK0:	
  2240                           ; 1 bytes @ 0xD
  2241                           
  2242  0069                     ??_I2C_MasterFsm:
  2243                           
  2244                           ; 1 bytes @ 0x0
  2245  0069                     	ds	3
  2246  006C                     ??_I2C_Initialize:
  2247  006C                     ??_OSCILLATOR_Initialize:	
  2248                           ; 1 bytes @ 0x3
  2249                           
  2250  006C                     ??_WDT_Initialize:	
  2251                           ; 1 bytes @ 0x3
  2252                           
  2253  006C                     ??_ADC_Initialize:	
  2254                           ; 1 bytes @ 0x3
  2255                           
  2256  006C                     ??_EUSART_Initialize:	
  2257                           ; 1 bytes @ 0x3
  2258                           
  2259  006C                     ??_EUSART_SetRxInterruptHandler:	
  2260                           ; 1 bytes @ 0x3
  2261                           
  2262  006C                     ??_EUSART_SetTxInterruptHandler:	
  2263                           ; 1 bytes @ 0x3
  2264                           
  2265  006C                     ??_EUSART_SetFramingErrorHandler:	
  2266                           ; 1 bytes @ 0x3
  2267                           
  2268  006C                     ??_EUSART_SetOverrunErrorHandler:	
  2269                           ; 1 bytes @ 0x3
  2270                           
  2271  006C                     ??_EUSART_SetErrorHandler:	
  2272                           ; 1 bytes @ 0x3
  2273                           
  2274  006C                     ??_PIN_MANAGER_Initialize:	
  2275                           ; 1 bytes @ 0x3
  2276                           
  2277                           
  2278                           ; 1 bytes @ 0x3
  2279  006C                     	ds	1
  2280  006D                     ??_SYSTEM_Initialize:
  2281  006D                     ??_main:	
  2282                           ; 1 bytes @ 0x4
  2283                           
  2284                           
  2285                           	psect	maintext
  2286  036E                     __pmaintext:	
  2287                           ; 1 bytes @ 0x4
  2288 ;;
  2289 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2290 ;;
  2291 ;; *************** function _main *****************
  2292 ;; Defined at:
  2293 ;;		line 51 in file "main.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;		None
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;		None
  2298 ;; Return value:  Size  Location     Type
  2299 ;;                  1    wreg      void 
  2300 ;; Registers used:
  2301 ;;		wreg, status,2, status,0, pclath, cstack
  2302 ;; Tracked objects:
  2303 ;;		On entry : B1F/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2311 ;;Total ram usage:        0 bytes
  2312 ;; Hardware stack levels required when called: 10
  2313 ;; This function calls:
  2314 ;;		_SYSTEM_Initialize
  2315 ;; This function is called by:
  2316 ;;		Startup code after reset
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           
  2321                           ;psect for function _main
  2322  036E                     _main:
  2323  036E                     l3218:	
  2324                           ;incstack = 0
  2325                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  2326                           
  2327                           
  2328                           ;main.c: 53:     SYSTEM_Initialize();
  2329  036E  3182  22AE  3183   	fcall	_SYSTEM_Initialize
  2330  0371                     l3220:
  2331                           
  2332                           ;main.c: 59:     (INTCONbits.GIE = 1);
  2333  0371  178B               	bsf	11,7	;volatile
  2334  0372                     l3222:
  2335                           
  2336                           ;main.c: 62:     (INTCONbits.PEIE = 1);
  2337  0372  170B               	bsf	11,6	;volatile
  2338  0373                     l801:	
  2339                           ;main.c: 72:     while (1) {
  2340                           
  2341  0373                     l802:	
  2342                           ;main.c: 75:     }
  2343                           
  2344  0373  2B73               	goto	l801
  2345  0374  3180  2847         	ljmp	start
  2346  0376                     __end_of_main:
  2347                           
  2348                           	psect	text1
  2349  02AE                     __ptext1:	
  2350 ;; *************** function _SYSTEM_Initialize *****************
  2351 ;; Defined at:
  2352 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;		None
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;		None
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  1    wreg      void 
  2359 ;; Registers used:
  2360 ;;		wreg, status,2, status,0, pclath, cstack
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2370 ;;Total ram usage:        0 bytes
  2371 ;; Hardware stack levels used: 1
  2372 ;; Hardware stack levels required when called: 9
  2373 ;; This function calls:
  2374 ;;		_ADC_Initialize
  2375 ;;		_EUSART_Initialize
  2376 ;;		_I2C_Initialize
  2377 ;;		_OSCILLATOR_Initialize
  2378 ;;		_PIN_MANAGER_Initialize
  2379 ;;		_WDT_Initialize
  2380 ;; This function is called by:
  2381 ;;		_main
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           
  2386                           ;psect for function _SYSTEM_Initialize
  2387  02AE                     _SYSTEM_Initialize:
  2388  02AE                     l3216:	
  2389                           ;incstack = 0
  2390                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2391                           
  2392                           
  2393                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  2394  02AE  3183  232E  3182   	fcall	_I2C_Initialize
  2395                           
  2396                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  2397  02B1  3182  225C  3182   	fcall	_PIN_MANAGER_Initialize
  2398                           
  2399                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  2400  02B4  3183  2322  3182   	fcall	_OSCILLATOR_Initialize
  2401                           
  2402                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  2403  02B7  3183  23CB  3182   	fcall	_WDT_Initialize
  2404                           
  2405                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  2406  02BA  3183  2376  3182   	fcall	_ADC_Initialize
  2407                           
  2408                           ;mcc_generated_files/mcc.c: 58:     EUSART_Initialize();
  2409  02BD  3180  20F1  3182   	fcall	_EUSART_Initialize
  2410  02C0                     l173:
  2411  02C0  0008               	return
  2412  02C1                     __end_of_SYSTEM_Initialize:
  2413                           
  2414                           	psect	text2
  2415  03CB                     __ptext2:	
  2416 ;; *************** function _WDT_Initialize *****************
  2417 ;; Defined at:
  2418 ;;		line 75 in file "mcc_generated_files/mcc.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;		None
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;		None
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  1    wreg      void 
  2425 ;; Registers used:
  2426 ;;		wreg
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2436 ;;Total ram usage:        0 bytes
  2437 ;; Hardware stack levels used: 1
  2438 ;; Hardware stack levels required when called: 7
  2439 ;; This function calls:
  2440 ;;		Nothing
  2441 ;; This function is called by:
  2442 ;;		_SYSTEM_Initialize
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446                           
  2447                           ;psect for function _WDT_Initialize
  2448  03CB                     _WDT_Initialize:
  2449  03CB                     l2752:	
  2450                           ;incstack = 0
  2451                           ; Regs used in _WDT_Initialize: [wreg]
  2452                           
  2453                           
  2454                           ;mcc_generated_files/mcc.c: 78:     WDTCON = 0x16;
  2455  03CB  3016               	movlw	22
  2456  03CC  0021               	movlb	1	; select bank1
  2457  03CD  0097               	movwf	23	;volatile
  2458  03CE                     l182:
  2459  03CE  0008               	return
  2460  03CF                     __end_of_WDT_Initialize:
  2461                           
  2462                           	psect	text3
  2463  025C                     __ptext3:	
  2464 ;; *************** function _PIN_MANAGER_Initialize *****************
  2465 ;; Defined at:
  2466 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;		None
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;		None
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  1    wreg      void 
  2473 ;; Registers used:
  2474 ;;		wreg, status,2
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2484 ;;Total ram usage:        0 bytes
  2485 ;; Hardware stack levels used: 1
  2486 ;; Hardware stack levels required when called: 7
  2487 ;; This function calls:
  2488 ;;		Nothing
  2489 ;; This function is called by:
  2490 ;;		_SYSTEM_Initialize
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           
  2495                           ;psect for function _PIN_MANAGER_Initialize
  2496  025C                     _PIN_MANAGER_Initialize:
  2497  025C                     l2722:	
  2498                           ;incstack = 0
  2499                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2500                           
  2501                           
  2502                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  2503  025C  0022               	movlb	2	; select bank2
  2504  025D  0190               	clrf	16	;volatile
  2505                           
  2506                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  2507  025E  018F               	clrf	15	;volatile
  2508                           
  2509                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  2510  025F  018C               	clrf	12	;volatile
  2511                           
  2512                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  2513  0260  018D               	clrf	13	;volatile
  2514                           
  2515                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  2516  0261  018E               	clrf	14	;volatile
  2517  0262                     l2724:
  2518                           
  2519                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x08;
  2520  0262  3008               	movlw	8
  2521  0263  0021               	movlb	1	; select bank1
  2522  0264  0090               	movwf	16	;volatile
  2523  0265                     l2726:
  2524                           
  2525                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x00;
  2526  0265  018C               	clrf	12	;volatile
  2527                           
  2528                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xDF;
  2529  0266  30DF               	movlw	223
  2530  0267  008D               	movwf	13	;volatile
  2531                           
  2532                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  2533  0268  30BF               	movlw	191
  2534  0269  008E               	movwf	14	;volatile
  2535                           
  2536                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  2537  026A  30FF               	movlw	255
  2538  026B  008F               	movwf	15	;volatile
  2539  026C                     l2728:
  2540                           
  2541                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
  2542  026C  0023               	movlb	3	; select bank3
  2543  026D  018F               	clrf	15	;volatile
  2544  026E                     l2730:
  2545                           
  2546                           ;mcc_generated_files/pin_manager.c: 79:     ANSELB = 0x3F;
  2547  026E  303F               	movlw	63
  2548  026F  008D               	movwf	13	;volatile
  2549  0270                     l2732:
  2550                           
  2551                           ;mcc_generated_files/pin_manager.c: 80:     ANSELE = 0x07;
  2552  0270  3007               	movlw	7
  2553  0271  0090               	movwf	16	;volatile
  2554  0272                     l2734:
  2555                           
  2556                           ;mcc_generated_files/pin_manager.c: 81:     ANSELA = 0x3C;
  2557  0272  303C               	movlw	60
  2558  0273  008C               	movwf	12	;volatile
  2559                           
  2560                           ;mcc_generated_files/pin_manager.c: 86:     WPUE = 0x00;
  2561  0274  0024               	movlb	4	; select bank4
  2562  0275  0190               	clrf	16	;volatile
  2563                           
  2564                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  2565  0276  018D               	clrf	13	;volatile
  2566  0277                     l2736:
  2567                           
  2568                           ;mcc_generated_files/pin_manager.c: 88:     OPTION_REGbits.nWPUEN = 1;
  2569  0277  0021               	movlb	1	; select bank1
  2570  0278  1795               	bsf	21,7	;volatile
  2571                           
  2572                           ;mcc_generated_files/pin_manager.c: 94:     APFCON = 0x00;
  2573  0279  0022               	movlb	2	; select bank2
  2574  027A  019D               	clrf	29	;volatile
  2575  027B                     l143:
  2576  027B  0008               	return
  2577  027C                     __end_of_PIN_MANAGER_Initialize:
  2578                           
  2579                           	psect	text4
  2580  0322                     __ptext4:	
  2581 ;; *************** function _OSCILLATOR_Initialize *****************
  2582 ;; Defined at:
  2583 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;		None
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;		None
  2588 ;; Return value:  Size  Location     Type
  2589 ;;                  1    wreg      void 
  2590 ;; Registers used:
  2591 ;;		wreg, status,2
  2592 ;; Tracked objects:
  2593 ;;		On entry : 0/0
  2594 ;;		On exit  : 0/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2601 ;;Total ram usage:        0 bytes
  2602 ;; Hardware stack levels used: 1
  2603 ;; Hardware stack levels required when called: 7
  2604 ;; This function calls:
  2605 ;;		Nothing
  2606 ;; This function is called by:
  2607 ;;		_SYSTEM_Initialize
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           
  2612                           ;psect for function _OSCILLATOR_Initialize
  2613  0322                     _OSCILLATOR_Initialize:
  2614  0322                     l2746:	
  2615                           ;incstack = 0
  2616                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2617                           
  2618                           
  2619                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  2620  0322  3070               	movlw	112
  2621  0323  0021               	movlb	1	; select bank1
  2622  0324  0099               	movwf	25	;volatile
  2623  0325                     l2748:
  2624                           
  2625                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  2626  0325  0198               	clrf	24	;volatile
  2627  0326                     l2750:
  2628                           
  2629                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  2630  0326  0022               	movlb	2	; select bank2
  2631  0327  0196               	clrf	22	;volatile
  2632  0328                     l176:	
  2633                           ;mcc_generated_files/mcc.c: 71:     {;mcc_generated_files/mcc.c: 72:     }
  2634                           
  2635                           
  2636                           ;mcc_generated_files/mcc.c: 70:     while(PLLR == 0)
  2637  0328  0021               	movlb	1	; select bank1
  2638  0329  1F1A               	btfss	26,6	;volatile
  2639  032A  2B2C               	goto	u631
  2640  032B  2B2D               	goto	u630
  2641  032C                     u631:
  2642  032C  2B28               	goto	l176
  2643  032D                     u630:
  2644  032D                     l179:
  2645  032D  0008               	return
  2646  032E                     __end_of_OSCILLATOR_Initialize:
  2647                           
  2648                           	psect	text5
  2649  032E                     __ptext5:	
  2650 ;; *************** function _I2C_Initialize *****************
  2651 ;; Defined at:
  2652 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;		None
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;		None
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  1    wreg      void 
  2659 ;; Registers used:
  2660 ;;		wreg, status,2
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2670 ;;Total ram usage:        0 bytes
  2671 ;; Hardware stack levels used: 1
  2672 ;; Hardware stack levels required when called: 7
  2673 ;; This function calls:
  2674 ;;		Nothing
  2675 ;; This function is called by:
  2676 ;;		_SYSTEM_Initialize
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           
  2680                           
  2681                           ;psect for function _I2C_Initialize
  2682  032E                     _I2C_Initialize:
  2683  032E                     l2738:	
  2684                           ;incstack = 0
  2685                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  2686                           
  2687                           
  2688                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0xC0;
  2689  032E  30C0               	movlw	192
  2690  032F  0024               	movlb	4	; select bank4
  2691  0330  0094               	movwf	20	;volatile
  2692                           
  2693                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  2694  0331  3008               	movlw	8
  2695  0332  0095               	movwf	21	;volatile
  2696  0333                     l2740:
  2697                           
  2698                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  2699  0333  0196               	clrf	22	;volatile
  2700  0334                     l2742:
  2701                           
  2702                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x4F;
  2703  0334  304F               	movlw	79
  2704  0335  0092               	movwf	18	;volatile
  2705  0336                     l2744:
  2706                           
  2707                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  2708  0336  1295               	bcf	21,5	;volatile
  2709  0337                     l510:
  2710  0337  0008               	return
  2711  0338                     __end_of_I2C_Initialize:
  2712                           
  2713                           	psect	text6
  2714  00F1                     __ptext6:	
  2715 ;; *************** function _EUSART_Initialize *****************
  2716 ;; Defined at:
  2717 ;;		line 88 in file "mcc_generated_files/eusart.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;		None
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;		None
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  1    wreg      void 
  2724 ;; Registers used:
  2725 ;;		wreg, status,2, status,0, pclath, cstack
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2733 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2734 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2735 ;;Total ram usage:        1 bytes
  2736 ;; Hardware stack levels used: 1
  2737 ;; Hardware stack levels required when called: 8
  2738 ;; This function calls:
  2739 ;;		_EUSART_SetErrorHandler
  2740 ;;		_EUSART_SetFramingErrorHandler
  2741 ;;		_EUSART_SetOverrunErrorHandler
  2742 ;;		_EUSART_SetRxInterruptHandler
  2743 ;;		_EUSART_SetTxInterruptHandler
  2744 ;; This function is called by:
  2745 ;;		_SYSTEM_Initialize
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           
  2750                           ;psect for function _EUSART_Initialize
  2751  00F1                     _EUSART_Initialize:
  2752  00F1                     l3184:	
  2753                           ;incstack = 0
  2754                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2755                           
  2756                           
  2757                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  2758  00F1  0021               	movlb	1	; select bank1
  2759  00F2  1291               	bcf	17,5	;volatile
  2760  00F3                     l3186:
  2761                           
  2762                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  2763  00F3  3034               	movlw	low _EUSART_Receive_ISR
  2764  00F4  00A0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^(0+128)
  2765  00F5  3001               	movlw	high _EUSART_Receive_ISR
  2766  00F6  00A1               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler^(0+128)+1)
  2767  00F7  3183  2341  3180   	fcall	_EUSART_SetRxInterruptHandler
  2768  00FA                     l3188:
  2769                           
  2770                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  2771  00FA  0021               	movlb	1	; select bank1
  2772  00FB  1211               	bcf	17,4	;volatile
  2773                           
  2774                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  2775  00FC  301A               	movlw	low _EUSART_Transmit_ISR
  2776  00FD  00A0               	movwf	EUSART_SetTxInterruptHandler@interruptHandler^(0+128)
  2777  00FE  3002               	movlw	high _EUSART_Transmit_ISR
  2778  00FF  00A1               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler^(0+128)+1)
  2779  0100  3183  2338  3180   	fcall	_EUSART_SetTxInterruptHandler
  2780  0103                     l3190:
  2781                           
  2782                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  2783  0103  3008               	movlw	8
  2784  0104  0023               	movlb	3	; select bank3
  2785  0105  009F               	movwf	31	;volatile
  2786  0106                     l3192:
  2787                           
  2788                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  2789  0106  3090               	movlw	144
  2790  0107  009D               	movwf	29	;volatile
  2791  0108                     l3194:
  2792                           
  2793                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  2794  0108  3024               	movlw	36
  2795  0109  009E               	movwf	30	;volatile
  2796  010A                     l3196:
  2797                           
  2798                           ;mcc_generated_files/eusart.c: 107:     SPBRGL = 0x40;
  2799  010A  3040               	movlw	64
  2800  010B  009B               	movwf	27	;volatile
  2801  010C                     l3198:
  2802                           
  2803                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x03;
  2804  010C  3003               	movlw	3
  2805  010D  009C               	movwf	28	;volatile
  2806  010E                     l3200:
  2807                           
  2808                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  2809  010E  30F9               	movlw	low _EUSART_DefaultFramingErrorHandler
  2810  010F  0021               	movlb	1	; select bank1
  2811  0110  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  2812  0111  3003               	movlw	high _EUSART_DefaultFramingErrorHandler
  2813  0112  00A1               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  2814  0113  3183  2353  3180   	fcall	_EUSART_SetFramingErrorHandler
  2815  0116                     l3202:
  2816                           
  2817                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  2818  0116  30DB               	movlw	low _EUSART_DefaultOverrunErrorHandler
  2819  0117  0021               	movlb	1	; select bank1
  2820  0118  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  2821  0119  3003               	movlw	high _EUSART_DefaultOverrunErrorHandler
  2822  011A  00A1               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  2823  011B  3183  234A  3180   	fcall	_EUSART_SetOverrunErrorHandler
  2824  011E                     l3204:
  2825                           
  2826                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  2827  011E  30DF               	movlw	low _EUSART_DefaultErrorHandler
  2828  011F  0021               	movlb	1	; select bank1
  2829  0120  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  2830  0121  3003               	movlw	high _EUSART_DefaultErrorHandler
  2831  0122  00A1               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  2832  0123  3183  235C  3180   	fcall	_EUSART_SetErrorHandler
  2833  0126                     l3206:
  2834                           
  2835                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  2836  0126  0020               	movlb	0	; select bank0
  2837  0127  01E3               	clrf	_eusartRxLastError	;volatile
  2838  0128                     l3208:
  2839                           
  2840                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  2841  0128  01E8               	clrf	_eusartTxHead	;volatile
  2842  0129                     l3210:
  2843                           
  2844                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  2845  0129  01E7               	clrf	_eusartTxTail	;volatile
  2846  012A                     l3212:
  2847                           
  2848                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  2849  012A  3008               	movlw	8
  2850  012B  00EC               	movwf	??_EUSART_Initialize
  2851  012C  086C               	movf	??_EUSART_Initialize,w
  2852  012D  00E6               	movwf	_eusartTxBufferRemaining	;volatile
  2853                           
  2854                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  2855  012E  01E5               	clrf	_eusartRxHead	;volatile
  2856                           
  2857                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  2858  012F  01FD               	clrf	_eusartRxTail	;volatile
  2859                           
  2860                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  2861  0130  01E4               	clrf	_eusartRxCount	;volatile
  2862  0131                     l3214:
  2863                           
  2864                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  2865  0131  0021               	movlb	1	; select bank1
  2866  0132  1691               	bsf	17,5	;volatile
  2867  0133                     l295:
  2868  0133  0008               	return
  2869  0134                     __end_of_EUSART_Initialize:
  2870                           
  2871                           	psect	text7
  2872  0338                     __ptext7:	
  2873 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  2874 ;; Defined at:
  2875 ;;		line 285 in file "mcc_generated_files/eusart.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  2878 ;;		 -> EUSART_Transmit_ISR(1), 
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;		None
  2881 ;; Return value:  Size  Location     Type
  2882 ;;                  1    wreg      void 
  2883 ;; Registers used:
  2884 ;;		wreg
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2890 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2893 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2894 ;;Total ram usage:        2 bytes
  2895 ;; Hardware stack levels used: 1
  2896 ;; Hardware stack levels required when called: 7
  2897 ;; This function calls:
  2898 ;;		Nothing
  2899 ;; This function is called by:
  2900 ;;		_EUSART_Initialize
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           
  2905                           ;psect for function _EUSART_SetTxInterruptHandler
  2906  0338                     _EUSART_SetTxInterruptHandler:
  2907  0338                     l3176:	
  2908                           ;incstack = 0
  2909                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  2910                           
  2911                           
  2912                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  2913  0338  0021               	movlb	1	; select bank1
  2914  0339  0821               	movf	(EUSART_SetTxInterruptHandler@interruptHandler+1)^(0+128),w
  2915  033A  0020               	movlb	0	; select bank0
  2916  033B  00DE               	movwf	_EUSART_TxDefaultInterruptHandler+1
  2917  033C  0021               	movlb	1	; select bank1
  2918  033D  0820               	movf	EUSART_SetTxInterruptHandler@interruptHandler^(0+128),w
  2919  033E  0020               	movlb	0	; select bank0
  2920  033F  00DD               	movwf	_EUSART_TxDefaultInterruptHandler
  2921  0340                     l367:
  2922  0340  0008               	return
  2923  0341                     __end_of_EUSART_SetTxInterruptHandler:
  2924                           
  2925                           	psect	text8
  2926  0341                     __ptext8:	
  2927 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  2928 ;; Defined at:
  2929 ;;		line 289 in file "mcc_generated_files/eusart.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  2932 ;;		 -> EUSART_Receive_ISR(1), 
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;		None
  2935 ;; Return value:  Size  Location     Type
  2936 ;;                  1    wreg      void 
  2937 ;; Registers used:
  2938 ;;		wreg
  2939 ;; Tracked objects:
  2940 ;;		On entry : 0/0
  2941 ;;		On exit  : 0/0
  2942 ;;		Unchanged: 0/0
  2943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2944 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2947 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2948 ;;Total ram usage:        2 bytes
  2949 ;; Hardware stack levels used: 1
  2950 ;; Hardware stack levels required when called: 7
  2951 ;; This function calls:
  2952 ;;		Nothing
  2953 ;; This function is called by:
  2954 ;;		_EUSART_Initialize
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958                           
  2959                           ;psect for function _EUSART_SetRxInterruptHandler
  2960  0341                     _EUSART_SetRxInterruptHandler:
  2961  0341                     l3174:	
  2962                           ;incstack = 0
  2963                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  2964                           
  2965                           
  2966                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  2967  0341  0021               	movlb	1	; select bank1
  2968  0342  0821               	movf	(EUSART_SetRxInterruptHandler@interruptHandler+1)^(0+128),w
  2969  0343  0020               	movlb	0	; select bank0
  2970  0344  00DC               	movwf	_EUSART_RxDefaultInterruptHandler+1
  2971  0345  0021               	movlb	1	; select bank1
  2972  0346  0820               	movf	EUSART_SetRxInterruptHandler@interruptHandler^(0+128),w
  2973  0347  0020               	movlb	0	; select bank0
  2974  0348  00DB               	movwf	_EUSART_RxDefaultInterruptHandler
  2975  0349                     l370:
  2976  0349  0008               	return
  2977  034A                     __end_of_EUSART_SetRxInterruptHandler:
  2978                           
  2979                           	psect	text9
  2980  034A                     __ptext9:	
  2981 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  2982 ;; Defined at:
  2983 ;;		line 277 in file "mcc_generated_files/eusart.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  2986 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  2987 ;; Auto vars:     Size  Location     Type
  2988 ;;		None
  2989 ;; Return value:  Size  Location     Type
  2990 ;;                  1    wreg      void 
  2991 ;; Registers used:
  2992 ;;		wreg
  2993 ;; Tracked objects:
  2994 ;;		On entry : 0/0
  2995 ;;		On exit  : 0/0
  2996 ;;		Unchanged: 0/0
  2997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2998 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3001 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3002 ;;Total ram usage:        2 bytes
  3003 ;; Hardware stack levels used: 1
  3004 ;; Hardware stack levels required when called: 7
  3005 ;; This function calls:
  3006 ;;		Nothing
  3007 ;; This function is called by:
  3008 ;;		_EUSART_Initialize
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012                           
  3013                           ;psect for function _EUSART_SetOverrunErrorHandler
  3014  034A                     _EUSART_SetOverrunErrorHandler:
  3015  034A                     l3180:	
  3016                           ;incstack = 0
  3017                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  3018                           
  3019                           
  3020                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
  3021  034A  0021               	movlb	1	; select bank1
  3022  034B  0821               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  3023  034C  0020               	movlb	0	; select bank0
  3024  034D  00D8               	movwf	_EUSART_OverrunErrorHandler+1
  3025  034E  0021               	movlb	1	; select bank1
  3026  034F  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  3027  0350  0020               	movlb	0	; select bank0
  3028  0351  00D7               	movwf	_EUSART_OverrunErrorHandler
  3029  0352                     l361:
  3030  0352  0008               	return
  3031  0353                     __end_of_EUSART_SetOverrunErrorHandler:
  3032                           
  3033                           	psect	text10
  3034  0353                     __ptext10:	
  3035 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3036 ;; Defined at:
  3037 ;;		line 273 in file "mcc_generated_files/eusart.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  3040 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;		None
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  1    wreg      void 
  3045 ;; Registers used:
  3046 ;;		wreg
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3052 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3055 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3056 ;;Total ram usage:        2 bytes
  3057 ;; Hardware stack levels used: 1
  3058 ;; Hardware stack levels required when called: 7
  3059 ;; This function calls:
  3060 ;;		Nothing
  3061 ;; This function is called by:
  3062 ;;		_EUSART_Initialize
  3063 ;; This function uses a non-reentrant model
  3064 ;;
  3065                           
  3066                           
  3067                           ;psect for function _EUSART_SetFramingErrorHandler
  3068  0353                     _EUSART_SetFramingErrorHandler:
  3069  0353                     l3178:	
  3070                           ;incstack = 0
  3071                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  3072                           
  3073                           
  3074                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
  3075  0353  0021               	movlb	1	; select bank1
  3076  0354  0821               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  3077  0355  0020               	movlb	0	; select bank0
  3078  0356  00DA               	movwf	_EUSART_FramingErrorHandler+1
  3079  0357  0021               	movlb	1	; select bank1
  3080  0358  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  3081  0359  0020               	movlb	0	; select bank0
  3082  035A  00D9               	movwf	_EUSART_FramingErrorHandler
  3083  035B                     l358:
  3084  035B  0008               	return
  3085  035C                     __end_of_EUSART_SetFramingErrorHandler:
  3086                           
  3087                           	psect	text11
  3088  035C                     __ptext11:	
  3089 ;; *************** function _EUSART_SetErrorHandler *****************
  3090 ;; Defined at:
  3091 ;;		line 281 in file "mcc_generated_files/eusart.c"
  3092 ;; Parameters:    Size  Location     Type
  3093 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  3094 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;		None
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  1    wreg      void 
  3099 ;; Registers used:
  3100 ;;		wreg
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3106 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3109 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3110 ;;Total ram usage:        2 bytes
  3111 ;; Hardware stack levels used: 1
  3112 ;; Hardware stack levels required when called: 7
  3113 ;; This function calls:
  3114 ;;		Nothing
  3115 ;; This function is called by:
  3116 ;;		_EUSART_Initialize
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119                           
  3120                           
  3121                           ;psect for function _EUSART_SetErrorHandler
  3122  035C                     _EUSART_SetErrorHandler:
  3123  035C                     l3182:	
  3124                           ;incstack = 0
  3125                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  3126                           
  3127                           
  3128                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
  3129  035C  0021               	movlb	1	; select bank1
  3130  035D  0821               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  3131  035E  0020               	movlb	0	; select bank0
  3132  035F  00D6               	movwf	_EUSART_ErrorHandler+1
  3133  0360  0021               	movlb	1	; select bank1
  3134  0361  0820               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  3135  0362  0020               	movlb	0	; select bank0
  3136  0363  00D5               	movwf	_EUSART_ErrorHandler
  3137  0364                     l364:
  3138  0364  0008               	return
  3139  0365                     __end_of_EUSART_SetErrorHandler:
  3140                           
  3141                           	psect	text12
  3142  0376                     __ptext12:	
  3143 ;; *************** function _ADC_Initialize *****************
  3144 ;; Defined at:
  3145 ;;		line 67 in file "mcc_generated_files/adc.c"
  3146 ;; Parameters:    Size  Location     Type
  3147 ;;		None
  3148 ;; Auto vars:     Size  Location     Type
  3149 ;;		None
  3150 ;; Return value:  Size  Location     Type
  3151 ;;                  1    wreg      void 
  3152 ;; Registers used:
  3153 ;;		wreg, status,2
  3154 ;; Tracked objects:
  3155 ;;		On entry : 0/0
  3156 ;;		On exit  : 0/0
  3157 ;;		Unchanged: 0/0
  3158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3163 ;;Total ram usage:        0 bytes
  3164 ;; Hardware stack levels used: 1
  3165 ;; Hardware stack levels required when called: 7
  3166 ;; This function calls:
  3167 ;;		Nothing
  3168 ;; This function is called by:
  3169 ;;		_SYSTEM_Initialize
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           
  3174                           ;psect for function _ADC_Initialize
  3175  0376                     _ADC_Initialize:
  3176  0376                     l2754:	
  3177                           ;incstack = 0
  3178                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3179                           
  3180                           
  3181                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xF0;
  3182  0376  30F0               	movlw	240
  3183  0377  0021               	movlb	1	; select bank1
  3184  0378  009E               	movwf	30	;volatile
  3185  0379                     l2756:
  3186                           
  3187                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  3188  0379  019B               	clrf	27	;volatile
  3189  037A                     l2758:
  3190                           
  3191                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  3192  037A  019C               	clrf	28	;volatile
  3193                           
  3194                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  3195  037B  3001               	movlw	1
  3196  037C  009D               	movwf	29	;volatile
  3197  037D                     l199:
  3198  037D  0008               	return
  3199  037E                     __end_of_ADC_Initialize:
  3200                           
  3201                           	psect	intentry
  3202  0004                     __pintentry:	
  3203 ;; *************** function _INTERRUPT_InterruptManager *****************
  3204 ;; Defined at:
  3205 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;		None
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;		None
  3210 ;; Return value:  Size  Location     Type
  3211 ;;                  1    wreg      void 
  3212 ;; Registers used:
  3213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3214 ;; Tracked objects:
  3215 ;;		On entry : 0/0
  3216 ;;		On exit  : 0/0
  3217 ;;		Unchanged: 0/0
  3218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3223 ;;Total ram usage:        0 bytes
  3224 ;; Hardware stack levels used: 1
  3225 ;; Hardware stack levels required when called: 6
  3226 ;; This function calls:
  3227 ;;		Absolute function
  3228 ;;		_EUSART_Receive_ISR
  3229 ;;		_EUSART_Transmit_ISR
  3230 ;;		_I2C_MasterIsr
  3231 ;; This function is called by:
  3232 ;;		Interrupt level 1
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236  0004                     _INTERRUPT_InterruptManager:
  3237                           
  3238                           ;incstack = 0
  3239  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3240                           
  3241                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3242  0005  3180               	pagesel	$
  3243  0006                     i1l3036:
  3244                           
  3245                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  3246  0006  1F0B               	btfss	11,6	;volatile
  3247  0007  2809               	goto	u92_21
  3248  0008  280A               	goto	u92_20
  3249  0009                     u92_21:
  3250  0009  2845               	goto	i1l401
  3251  000A                     u92_20:
  3252  000A                     i1l3038:
  3253                           
  3254                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  3255  000A  0021               	movlb	1	; select bank1
  3256  000B  1E11               	btfss	17,4	;volatile
  3257  000C  280E               	goto	u93_21
  3258  000D  280F               	goto	u93_20
  3259  000E                     u93_21:
  3260  000E  281A               	goto	i1l392
  3261  000F                     u93_20:
  3262  000F                     i1l3040:
  3263  000F  0020               	movlb	0	; select bank0
  3264  0010  1E11               	btfss	17,4	;volatile
  3265  0011  2813               	goto	u94_21
  3266  0012  2814               	goto	u94_20
  3267  0013                     u94_21:
  3268  0013  281A               	goto	i1l392
  3269  0014                     u94_20:
  3270  0014                     i1l3042:
  3271                           
  3272                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
  3273  0014  085E               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  3274  0015  008A               	movwf	10
  3275  0016  085D               	movf	_EUSART_TxDefaultInterruptHandler,w
  3276  0017  000A               	callw
  3277  0018  3180               	pagesel	$
  3278                           
  3279                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  3280  0019  2845               	goto	i1l401
  3281  001A                     i1l392:	
  3282                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  3283                           
  3284  001A  0021               	movlb	1	; select bank1
  3285  001B  1E91               	btfss	17,5	;volatile
  3286  001C  281E               	goto	u95_21
  3287  001D  281F               	goto	u95_20
  3288  001E                     u95_21:
  3289  001E  282A               	goto	i1l394
  3290  001F                     u95_20:
  3291  001F                     i1l3044:
  3292  001F  0020               	movlb	0	; select bank0
  3293  0020  1E91               	btfss	17,5	;volatile
  3294  0021  2823               	goto	u96_21
  3295  0022  2824               	goto	u96_20
  3296  0023                     u96_21:
  3297  0023  282A               	goto	i1l394
  3298  0024                     u96_20:
  3299  0024                     i1l3046:
  3300                           
  3301                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
  3302  0024  085C               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  3303  0025  008A               	movwf	10
  3304  0026  085B               	movf	_EUSART_RxDefaultInterruptHandler,w
  3305  0027  000A               	callw
  3306  0028  3180               	pagesel	$
  3307                           
  3308                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  3309  0029  2845               	goto	i1l401
  3310  002A                     i1l394:	
  3311                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE2bits.BCLIE == 1 && PIR
      +                          2bits.BCLIF == 1)
  3312                           
  3313  002A  0021               	movlb	1	; select bank1
  3314  002B  1D92               	btfss	18,3	;volatile
  3315  002C  282E               	goto	u97_21
  3316  002D  282F               	goto	u97_20
  3317  002E                     u97_21:
  3318  002E  283A               	goto	i1l396
  3319  002F                     u97_20:
  3320  002F                     i1l3048:
  3321  002F  0020               	movlb	0	; select bank0
  3322  0030  1D92               	btfss	18,3	;volatile
  3323  0031  2833               	goto	u98_21
  3324  0032  2834               	goto	u98_20
  3325  0033                     u98_21:
  3326  0033  283A               	goto	i1l396
  3327  0034                     u98_20:
  3328  0034                     i1l3050:
  3329                           
  3330                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             MSSP_InterruptHandler();
  3331  0034  0862               	movf	_MSSP_InterruptHandler+1,w
  3332  0035  008A               	movwf	10
  3333  0036  0861               	movf	_MSSP_InterruptHandler,w
  3334  0037  000A               	callw
  3335  0038  3180               	pagesel	$
  3336                           
  3337                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  3338  0039  2845               	goto	i1l401
  3339  003A                     i1l396:	
  3340                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.SSPIE == 1 && PIR
      +                          1bits.SSPIF == 1)
  3341                           
  3342  003A  0021               	movlb	1	; select bank1
  3343  003B  1D91               	btfss	17,3	;volatile
  3344  003C  283E               	goto	u99_21
  3345  003D  283F               	goto	u99_20
  3346  003E                     u99_21:
  3347  003E  2845               	goto	i1l395
  3348  003F                     u99_20:
  3349  003F                     i1l3052:
  3350  003F  0020               	movlb	0	; select bank0
  3351  0040  1D91               	btfss	17,3	;volatile
  3352  0041  2843               	goto	u100_21
  3353  0042  2844               	goto	u100_20
  3354  0043                     u100_21:
  3355  0043  2845               	goto	i1l395
  3356  0044                     u100_20:
  3357  0044  2834               	goto	i1l3050
  3358  0045                     i1l395:
  3359  0045                     i1l401:
  3360  0045  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3361  0046  0009               	retfie
  3362  0047                     __end_of_INTERRUPT_InterruptManager:
  3363                           
  3364                           	psect	text14
  3365  03CF                     __ptext14:	
  3366 ;; *************** function _I2C_MasterIsr *****************
  3367 ;; Defined at:
  3368 ;;		line 318 in file "mcc_generated_files/i2c_master.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;		None
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;		None
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  1    wreg      void 
  3375 ;; Registers used:
  3376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3386 ;;Total ram usage:        0 bytes
  3387 ;; Hardware stack levels used: 1
  3388 ;; Hardware stack levels required when called: 5
  3389 ;; This function calls:
  3390 ;;		_I2C_MasterFsm
  3391 ;; This function is called by:
  3392 ;;		_I2C_Open
  3393 ;;		_INTERRUPT_InterruptManager
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397                           
  3398                           ;psect for function _I2C_MasterIsr
  3399  03CF                     _I2C_MasterIsr:
  3400  03CF                     i1l2880:	
  3401                           ;incstack = 0
  3402                           ; Regs used in _I2C_MasterIsr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3403                           
  3404                           
  3405                           ;mcc_generated_files/i2c_master.c: 320:     I2C_MasterFsm();
  3406  03CF  3181  21C9  3183   	fcall	_I2C_MasterFsm
  3407  03D2                     i1l563:
  3408  03D2  0008               	return
  3409  03D3                     __end_of_I2C_MasterIsr:
  3410                           
  3411                           	psect	text15
  3412  01C9                     __ptext15:	
  3413 ;; *************** function _I2C_MasterFsm *****************
  3414 ;; Defined at:
  3415 ;;		line 323 in file "mcc_generated_files/i2c_master.c"
  3416 ;; Parameters:    Size  Location     Type
  3417 ;;		None
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;		None
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  1    wreg      void 
  3422 ;; Registers used:
  3423 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3431 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3432 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3433 ;;Total ram usage:        3 bytes
  3434 ;; Hardware stack levels used: 1
  3435 ;; Hardware stack levels required when called: 4
  3436 ;; This function calls:
  3437 ;;		_I2C_DO_ADDRESS_NACK
  3438 ;;		_I2C_DO_IDLE
  3439 ;;		_I2C_DO_RCEN
  3440 ;;		_I2C_DO_RESET
  3441 ;;		_I2C_DO_RX
  3442 ;;		_I2C_DO_RX_ACK
  3443 ;;		_I2C_DO_RX_NACK_RESTART
  3444 ;;		_I2C_DO_RX_NACK_STOP
  3445 ;;		_I2C_DO_SEND_ADR_READ
  3446 ;;		_I2C_DO_SEND_ADR_WRITE
  3447 ;;		_I2C_DO_SEND_RESTART
  3448 ;;		_I2C_DO_SEND_RESTART_READ
  3449 ;;		_I2C_DO_SEND_RESTART_WRITE
  3450 ;;		_I2C_DO_SEND_STOP
  3451 ;;		_I2C_DO_TX
  3452 ;;		_I2C_DO_TX_EMPTY
  3453 ;;		_I2C_MasterClearIrq
  3454 ;;		_I2C_MasterIsNack
  3455 ;; This function is called by:
  3456 ;;		_I2C_MasterIsr
  3457 ;; This function uses a non-reentrant model
  3458 ;;
  3459                           
  3460                           
  3461                           ;psect for function _I2C_MasterFsm
  3462  01C9                     _I2C_MasterFsm:
  3463  01C9                     i1l2796:	
  3464                           ;incstack = 0
  3465                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3466                           
  3467                           
  3468                           ;mcc_generated_files/i2c_master.c: 325:     I2C_MasterClearIrq();
  3469  01C9  3183  23E3  3181   	fcall	_I2C_MasterClearIrq
  3470  01CC                     i1l2798:
  3471                           
  3472                           ;mcc_generated_files/i2c_master.c: 327:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  3473  01CC  0020               	movlb	0	; select bank0
  3474  01CD  1C3C               	btfss	_I2C_Status+28,0
  3475  01CE  29D0               	goto	u64_21
  3476  01CF  29D1               	goto	u64_20
  3477  01D0                     u64_21:
  3478  01D0  29DE               	goto	i1l2804
  3479  01D1                     u64_20:
  3480  01D1                     i1l2800:
  3481  01D1  3183  2393  3181   	fcall	_I2C_MasterIsNack
  3482  01D4  3A00               	xorlw	0
  3483  01D5  1903               	skipnz
  3484  01D6  29D8               	goto	u65_21
  3485  01D7  29D9               	goto	u65_20
  3486  01D8                     u65_21:
  3487  01D8  29DE               	goto	i1l2804
  3488  01D9                     u65_20:
  3489  01D9                     i1l2802:
  3490                           
  3491                           ;mcc_generated_files/i2c_master.c: 328:     {;mcc_generated_files/i2c_master.c: 329:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  3492  01D9  300F               	movlw	15
  3493  01DA  0020               	movlb	0	; select bank0
  3494  01DB  00E9               	movwf	??_I2C_MasterFsm
  3495  01DC  0869               	movf	??_I2C_MasterFsm,w
  3496  01DD  00BA               	movwf	_I2C_Status+26
  3497  01DE                     i1l2804:
  3498                           
  3499                           ;mcc_generated_files/i2c_master.c: 331:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
  3500  01DE  0020               	movlb	0	; select bank0
  3501  01DF  083A               	movf	_I2C_Status+26,w
  3502  01E0  00E9               	movwf	??_I2C_MasterFsm
  3503  01E1  01EA               	clrf	??_I2C_MasterFsm+1
  3504  01E2  35E9               	lslf	??_I2C_MasterFsm,f
  3505  01E3  0DEA               	rlf	??_I2C_MasterFsm+1,f
  3506  01E4  303C               	movlw	low (_i2c_fsmStateTable| (0+32768))
  3507  01E5  0769               	addwf	??_I2C_MasterFsm,w
  3508  01E6  0084               	movwf	4
  3509  01E7  3082               	movlw	high (_i2c_fsmStateTable| (0+32768))
  3510  01E8  3D6A               	addwfc	??_I2C_MasterFsm+1,w
  3511  01E9  0085               	movwf	5
  3512  01EA  3F01               	moviw [1]fsr0
  3513  01EB  008A               	movwf	10
  3514  01EC  3F00               	moviw [0]fsr0
  3515  01ED  000A               	callw
  3516  01EE  3181               	pagesel	$
  3517  01EF  0020               	movlb	0	; select bank0
  3518  01F0  00EB               	movwf	??_I2C_MasterFsm+2
  3519  01F1  086B               	movf	??_I2C_MasterFsm+2,w
  3520  01F2  00BA               	movwf	_I2C_Status+26
  3521  01F3                     i1l567:
  3522  01F3  0008               	return
  3523  01F4                     __end_of_I2C_MasterFsm:
  3524                           
  3525                           	psect	text16
  3526  03E3                     __ptext16:	
  3527 ;; *************** function _I2C_MasterClearIrq *****************
  3528 ;; Defined at:
  3529 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;		None
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;		None
  3534 ;; Return value:  Size  Location     Type
  3535 ;;                  1    wreg      void 
  3536 ;; Registers used:
  3537 ;;		None
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3547 ;;Total ram usage:        0 bytes
  3548 ;; Hardware stack levels used: 1
  3549 ;; This function calls:
  3550 ;;		Nothing
  3551 ;; This function is called by:
  3552 ;;		_I2C_MasterFsm
  3553 ;;		_I2C_Open
  3554 ;;		_I2C_Close
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           
  3559                           ;psect for function _I2C_MasterClearIrq
  3560  03E3                     _I2C_MasterClearIrq:
  3561  03E3                     i1l2566:	
  3562                           ;incstack = 0
  3563                           ; Regs used in _I2C_MasterClearIrq: []
  3564                           
  3565                           
  3566                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
  3567  03E3  0020               	movlb	0	; select bank0
  3568  03E4  1191               	bcf	17,3	;volatile
  3569  03E5                     i1l730:
  3570  03E5  0008               	return
  3571  03E6                     __end_of_I2C_MasterClearIrq:
  3572                           
  3573                           	psect	text17
  3574  019D                     __ptext17:	
  3575 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  3576 ;; Defined at:
  3577 ;;		line 501 in file "mcc_generated_files/i2c_master.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;		None
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;		None
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  1    wreg      enum E3338
  3584 ;; Registers used:
  3585 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3593 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3594 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3595 ;;Total ram usage:        3 bytes
  3596 ;; Hardware stack levels used: 1
  3597 ;; Hardware stack levels required when called: 3
  3598 ;; This function calls:
  3599 ;;		Absolute function
  3600 ;;		_I2C_CallbackReturnReset
  3601 ;;		_I2C_CallbackReturnStop
  3602 ;;		_I2C_DO_SEND_RESTART
  3603 ;;		_I2C_DO_SEND_STOP
  3604 ;;		_rd1RegCompleteHandler
  3605 ;;		_rd2RegCompleteHandler
  3606 ;;		_rdBlkRegCompleteHandler
  3607 ;;		_wr1RegCompleteHandler
  3608 ;;		_wr2RegCompleteHandler
  3609 ;; This function is called by:
  3610 ;;		_I2C_MasterFsm
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614                           
  3615                           ;psect for function _I2C_DO_ADDRESS_NACK
  3616  019D                     _I2C_DO_ADDRESS_NACK:
  3617  019D                     i1l2702:	
  3618                           ;incstack = 0
  3619                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3620                           
  3621                           
  3622                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.addressNackCheck = 0;
  3623  019D  0020               	movlb	0	; select bank0
  3624  019E  103C               	bcf	_I2C_Status+28,0
  3625  019F                     i1l2704:
  3626                           
  3627                           ;mcc_generated_files/i2c_master.c: 504:     I2C_Status.error = I2C_FAIL;
  3628  019F  3002               	movlw	2
  3629  01A0  00FA               	movwf	??_I2C_DO_ADDRESS_NACK
  3630  01A1  087A               	movf	??_I2C_DO_ADDRESS_NACK,w
  3631  01A2  00BB               	movwf	_I2C_Status+27
  3632                           
  3633                           ;mcc_generated_files/i2c_master.c: 505:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  3634  01A3  29AC               	goto	i1l2716
  3635  01A4                     i1l2706:
  3636                           
  3637                           ;mcc_generated_files/i2c_master.c: 509:             return I2C_DO_SEND_RESTART();
  3638  01A4  3183  23B2  3181   	fcall	_I2C_DO_SEND_RESTART
  3639  01A7  29C8               	goto	i1l658
  3640  01A8                     i1l2710:
  3641                           
  3642                           ;mcc_generated_files/i2c_master.c: 511:             return I2C_DO_SEND_STOP();
  3643  01A8  3183  23AD  3181   	fcall	_I2C_DO_SEND_STOP
  3644  01AB  29C8               	goto	i1l658
  3645  01AC                     i1l2716:
  3646  01AC  082E               	movf	low ((_I2C_Status| 0+14)),w
  3647  01AD  00FA               	movwf	??_I2C_DO_ADDRESS_NACK
  3648  01AE  087A               	movf	??_I2C_DO_ADDRESS_NACK,w
  3649  01AF  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  3650  01B0  3004               	movlw	4
  3651  01B1  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  3652  01B2  0086               	movwf	6
  3653  01B3  0187               	clrf	7
  3654  01B4  3F41               	moviw [1]fsr1
  3655  01B5  008A               	movwf	10
  3656  01B6  3F40               	moviw [0]fsr1
  3657  01B7  000A               	callw
  3658  01B8  3181               	pagesel	$
  3659  01B9  00FB               	movwf	??_I2C_DO_ADDRESS_NACK+1
  3660  01BA  01FC               	clrf	??_I2C_DO_ADDRESS_NACK+2
  3661                           
  3662                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3663                           ; Switch size 1, requested type "simple"
  3664                           ; Number of cases is 1, Range of values is 0 to 0
  3665                           ; switch strategies available:
  3666                           ; Name         Instructions Cycles
  3667                           ; simple_byte            4     3 (average)
  3668                           ; direct_byte            8     6 (fixed)
  3669                           ; jumptable            260     6 (fixed)
  3670                           ;	Chosen strategy is simple_byte
  3671  01BB  087C               	movf	??_I2C_DO_ADDRESS_NACK+2,w
  3672  01BC  3A00               	xorlw	0	; case 0
  3673  01BD  1903               	skipnz
  3674  01BE  29C0               	goto	i1l3304
  3675  01BF  29A8               	goto	i1l2710
  3676  01C0                     i1l3304:
  3677                           
  3678                           ; Switch size 1, requested type "simple"
  3679                           ; Number of cases is 2, Range of values is 2 to 3
  3680                           ; switch strategies available:
  3681                           ; Name         Instructions Cycles
  3682                           ; simple_byte            7     4 (average)
  3683                           ; direct_byte           13     9 (fixed)
  3684                           ; jumptable            263     9 (fixed)
  3685                           ;	Chosen strategy is simple_byte
  3686  01C0  087B               	movf	??_I2C_DO_ADDRESS_NACK+1,w
  3687  01C1  3A02               	xorlw	2	; case 2
  3688  01C2  1903               	skipnz
  3689  01C3  29A4               	goto	i1l2706
  3690  01C4  3A01               	xorlw	1	; case 3
  3691  01C5  1903               	skipnz
  3692  01C6  29A4               	goto	i1l2706
  3693  01C7  29A8               	goto	i1l2710
  3694  01C8                     i1l658:
  3695  01C8  0008               	return
  3696  01C9                     __end_of_I2C_DO_ADDRESS_NACK:
  3697                           
  3698                           	psect	text18
  3699  0399                     __ptext18:	
  3700 ;; *************** function _I2C_DO_RESET *****************
  3701 ;; Defined at:
  3702 ;;		line 495 in file "mcc_generated_files/i2c_master.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;		None
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;		None
  3707 ;; Return value:  Size  Location     Type
  3708 ;;                  1    wreg      enum E3338
  3709 ;; Registers used:
  3710 ;;		wreg, status,2
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3720 ;;Total ram usage:        0 bytes
  3721 ;; Hardware stack levels used: 1
  3722 ;; This function calls:
  3723 ;;		Nothing
  3724 ;; This function is called by:
  3725 ;;		_I2C_MasterFsm
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           
  3730                           ;psect for function _I2C_DO_RESET
  3731  0399                     _I2C_DO_RESET:
  3732  0399                     i1l2694:	
  3733                           ;incstack = 0
  3734                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
  3735                           
  3736                           
  3737                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.busy = 0;
  3738  0399  0020               	movlb	0	; select bank0
  3739  039A  10BC               	bcf	_I2C_Status+28,1
  3740  039B                     i1l2696:
  3741                           
  3742                           ;mcc_generated_files/i2c_master.c: 498:     I2C_Status.error = I2C_NOERR;
  3743  039B  01BB               	clrf	_I2C_Status+27
  3744  039C                     i1l2698:
  3745                           
  3746                           ;mcc_generated_files/i2c_master.c: 499:     return I2C_RESET;
  3747  039C  300E               	movlw	14
  3748  039D                     i1l652:
  3749  039D  0008               	return
  3750  039E                     __end_of_I2C_DO_RESET:
  3751                           
  3752                           	psect	text19
  3753  039E                     __ptext19:	
  3754 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  3755 ;; Defined at:
  3756 ;;		line 489 in file "mcc_generated_files/i2c_master.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;		None
  3759 ;; Auto vars:     Size  Location     Type
  3760 ;;		None
  3761 ;; Return value:  Size  Location     Type
  3762 ;;                  1    wreg      enum E3338
  3763 ;; Registers used:
  3764 ;;		wreg, status,2, status,0, pclath, cstack
  3765 ;; Tracked objects:
  3766 ;;		On entry : 0/0
  3767 ;;		On exit  : 0/0
  3768 ;;		Unchanged: 0/0
  3769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3774 ;;Total ram usage:        0 bytes
  3775 ;; Hardware stack levels used: 1
  3776 ;; Hardware stack levels required when called: 1
  3777 ;; This function calls:
  3778 ;;		_I2C_MasterSendNack
  3779 ;; This function is called by:
  3780 ;;		_I2C_DO_RX
  3781 ;;		_I2C_MasterFsm
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           
  3785                           
  3786                           ;psect for function _I2C_DO_RX_NACK_RESTART
  3787  039E                     _I2C_DO_RX_NACK_RESTART:
  3788  039E                     i1l2516:	
  3789                           ;incstack = 0
  3790                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  3791                           
  3792                           
  3793                           ;mcc_generated_files/i2c_master.c: 491:     I2C_MasterSendNack();
  3794  039E  3183  23D7  3183   	fcall	_I2C_MasterSendNack
  3795  03A1                     i1l2518:
  3796                           
  3797                           ;mcc_generated_files/i2c_master.c: 492:     return I2C_SEND_RESTART;
  3798  03A1  3009               	movlw	9
  3799  03A2                     i1l649:
  3800  03A2  0008               	return
  3801  03A3                     __end_of_I2C_DO_RX_NACK_RESTART:
  3802                           
  3803                           	psect	text20
  3804  03A3                     __ptext20:	
  3805 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  3806 ;; Defined at:
  3807 ;;		line 483 in file "mcc_generated_files/i2c_master.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;		None
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;		None
  3812 ;; Return value:  Size  Location     Type
  3813 ;;                  1    wreg      enum E3338
  3814 ;; Registers used:
  3815 ;;		wreg, status,2, status,0, pclath, cstack
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3825 ;;Total ram usage:        0 bytes
  3826 ;; Hardware stack levels used: 1
  3827 ;; Hardware stack levels required when called: 1
  3828 ;; This function calls:
  3829 ;;		_I2C_MasterSendNack
  3830 ;; This function is called by:
  3831 ;;		_I2C_DO_RX
  3832 ;;		_I2C_MasterFsm
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836                           
  3837                           ;psect for function _I2C_DO_RX_NACK_STOP
  3838  03A3                     _I2C_DO_RX_NACK_STOP:
  3839  03A3                     i1l2522:	
  3840                           ;incstack = 0
  3841                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  3842                           
  3843                           
  3844                           ;mcc_generated_files/i2c_master.c: 485:     I2C_MasterSendNack();
  3845  03A3  3183  23D7  3183   	fcall	_I2C_MasterSendNack
  3846  03A6                     i1l2524:
  3847                           
  3848                           ;mcc_generated_files/i2c_master.c: 486:     return I2C_SEND_STOP;
  3849  03A6  300A               	movlw	10
  3850  03A7                     i1l646:
  3851  03A7  0008               	return
  3852  03A8                     __end_of_I2C_DO_RX_NACK_STOP:
  3853                           
  3854                           	psect	text21
  3855  03A8                     __ptext21:	
  3856 ;; *************** function _I2C_DO_RX_ACK *****************
  3857 ;; Defined at:
  3858 ;;		line 476 in file "mcc_generated_files/i2c_master.c"
  3859 ;; Parameters:    Size  Location     Type
  3860 ;;		None
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;		None
  3863 ;; Return value:  Size  Location     Type
  3864 ;;                  1    wreg      enum E3338
  3865 ;; Registers used:
  3866 ;;		wreg, status,2, status,0, pclath, cstack
  3867 ;; Tracked objects:
  3868 ;;		On entry : 0/0
  3869 ;;		On exit  : 0/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3876 ;;Total ram usage:        0 bytes
  3877 ;; Hardware stack levels used: 1
  3878 ;; Hardware stack levels required when called: 1
  3879 ;; This function calls:
  3880 ;;		_I2C_MasterSendAck
  3881 ;; This function is called by:
  3882 ;;		_I2C_MasterFsm
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886                           
  3887                           ;psect for function _I2C_DO_RX_ACK
  3888  03A8                     _I2C_DO_RX_ACK:
  3889  03A8                     i1l2688:	
  3890                           ;incstack = 0
  3891                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
  3892                           
  3893                           
  3894                           ;mcc_generated_files/i2c_master.c: 478:     I2C_MasterSendAck();
  3895  03A8  3183  23D3  3183   	fcall	_I2C_MasterSendAck
  3896  03AB                     i1l2690:
  3897                           
  3898                           ;mcc_generated_files/i2c_master.c: 479:     return I2C_RCEN;
  3899  03AB  3005               	movlw	5
  3900  03AC                     i1l643:
  3901  03AC  0008               	return
  3902  03AD                     __end_of_I2C_DO_RX_ACK:
  3903                           
  3904                           	psect	text22
  3905  03AD                     __ptext22:	
  3906 ;; *************** function _I2C_DO_SEND_STOP *****************
  3907 ;; Defined at:
  3908 ;;		line 470 in file "mcc_generated_files/i2c_master.c"
  3909 ;; Parameters:    Size  Location     Type
  3910 ;;		None
  3911 ;; Auto vars:     Size  Location     Type
  3912 ;;		None
  3913 ;; Return value:  Size  Location     Type
  3914 ;;                  1    wreg      enum E3338
  3915 ;; Registers used:
  3916 ;;		wreg, status,2, status,0, pclath, cstack
  3917 ;; Tracked objects:
  3918 ;;		On entry : 0/0
  3919 ;;		On exit  : 0/0
  3920 ;;		Unchanged: 0/0
  3921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3926 ;;Total ram usage:        0 bytes
  3927 ;; Hardware stack levels used: 1
  3928 ;; Hardware stack levels required when called: 1
  3929 ;; This function calls:
  3930 ;;		_I2C_MasterStop
  3931 ;; This function is called by:
  3932 ;;		_I2C_DO_TX
  3933 ;;		_I2C_DO_TX_EMPTY
  3934 ;;		_I2C_DO_ADDRESS_NACK
  3935 ;;		_I2C_MasterFsm
  3936 ;; This function uses a non-reentrant model
  3937 ;;
  3938                           
  3939                           
  3940                           ;psect for function _I2C_DO_SEND_STOP
  3941  03AD                     _I2C_DO_SEND_STOP:
  3942  03AD                     i1l2504:	
  3943                           ;incstack = 0
  3944                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  3945                           
  3946                           
  3947                           ;mcc_generated_files/i2c_master.c: 472:     I2C_MasterStop();
  3948  03AD  3183  23EF  3183   	fcall	_I2C_MasterStop
  3949  03B0                     i1l2506:
  3950                           
  3951                           ;mcc_generated_files/i2c_master.c: 473:     return I2C_IDLE;
  3952  03B0  3000               	movlw	0
  3953  03B1                     i1l640:
  3954  03B1  0008               	return
  3955  03B2                     __end_of_I2C_DO_SEND_STOP:
  3956                           
  3957                           	psect	text23
  3958  03B2                     __ptext23:	
  3959 ;; *************** function _I2C_DO_SEND_RESTART *****************
  3960 ;; Defined at:
  3961 ;;		line 464 in file "mcc_generated_files/i2c_master.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;		None
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;		None
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  1    wreg      enum E3338
  3968 ;; Registers used:
  3969 ;;		wreg, status,2, status,0, pclath, cstack
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3979 ;;Total ram usage:        0 bytes
  3980 ;; Hardware stack levels used: 1
  3981 ;; Hardware stack levels required when called: 1
  3982 ;; This function calls:
  3983 ;;		_I2C_MasterEnableRestart
  3984 ;; This function is called by:
  3985 ;;		_I2C_DO_TX_EMPTY
  3986 ;;		_I2C_DO_ADDRESS_NACK
  3987 ;;		_I2C_MasterFsm
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           
  3992                           ;psect for function _I2C_DO_SEND_RESTART
  3993  03B2                     _I2C_DO_SEND_RESTART:
  3994  03B2                     i1l2530:	
  3995                           ;incstack = 0
  3996                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  3997                           
  3998                           
  3999                           ;mcc_generated_files/i2c_master.c: 466:     I2C_MasterEnableRestart();
  4000  03B2  3183  23F2  3183   	fcall	_I2C_MasterEnableRestart
  4001  03B5                     i1l2532:
  4002                           
  4003                           ;mcc_generated_files/i2c_master.c: 467:     return I2C_SEND_ADR_READ;
  4004  03B5  3001               	movlw	1
  4005  03B6                     i1l637:
  4006  03B6  0008               	return
  4007  03B7                     __end_of_I2C_DO_SEND_RESTART:
  4008                           
  4009                           	psect	text24
  4010  03B7                     __ptext24:	
  4011 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  4012 ;; Defined at:
  4013 ;;		line 457 in file "mcc_generated_files/i2c_master.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;		None
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;		None
  4018 ;; Return value:  Size  Location     Type
  4019 ;;                  1    wreg      enum E3338
  4020 ;; Registers used:
  4021 ;;		wreg, status,2, status,0, pclath, cstack
  4022 ;; Tracked objects:
  4023 ;;		On entry : 0/0
  4024 ;;		On exit  : 0/0
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4031 ;;Total ram usage:        0 bytes
  4032 ;; Hardware stack levels used: 1
  4033 ;; Hardware stack levels required when called: 1
  4034 ;; This function calls:
  4035 ;;		_I2C_MasterEnableRestart
  4036 ;; This function is called by:
  4037 ;;		_I2C_DO_TX
  4038 ;;		_I2C_MasterFsm
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           
  4043                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
  4044  03B7                     _I2C_DO_SEND_RESTART_WRITE:
  4045  03B7                     i1l2498:	
  4046                           ;incstack = 0
  4047                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  4048                           
  4049                           
  4050                           ;mcc_generated_files/i2c_master.c: 459:     I2C_MasterEnableRestart();
  4051  03B7  3183  23F2  3183   	fcall	_I2C_MasterEnableRestart
  4052  03BA                     i1l2500:
  4053                           
  4054                           ;mcc_generated_files/i2c_master.c: 460:     return I2C_SEND_ADR_WRITE;
  4055  03BA  3002               	movlw	2
  4056  03BB                     i1l634:
  4057  03BB  0008               	return
  4058  03BC                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  4059                           
  4060                           	psect	text25
  4061  03BC                     __ptext25:	
  4062 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  4063 ;; Defined at:
  4064 ;;		line 451 in file "mcc_generated_files/i2c_master.c"
  4065 ;; Parameters:    Size  Location     Type
  4066 ;;		None
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;		None
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  1    wreg      enum E3338
  4071 ;; Registers used:
  4072 ;;		wreg, status,2, status,0, pclath, cstack
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4082 ;;Total ram usage:        0 bytes
  4083 ;; Hardware stack levels used: 1
  4084 ;; Hardware stack levels required when called: 1
  4085 ;; This function calls:
  4086 ;;		_I2C_MasterEnableRestart
  4087 ;; This function is called by:
  4088 ;;		_I2C_DO_TX
  4089 ;;		_I2C_MasterFsm
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093                           
  4094                           ;psect for function _I2C_DO_SEND_RESTART_READ
  4095  03BC                     _I2C_DO_SEND_RESTART_READ:
  4096  03BC                     i1l2492:	
  4097                           ;incstack = 0
  4098                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  4099                           
  4100                           
  4101                           ;mcc_generated_files/i2c_master.c: 453:     I2C_MasterEnableRestart();
  4102  03BC  3183  23F2  3183   	fcall	_I2C_MasterEnableRestart
  4103  03BF                     i1l2494:
  4104                           
  4105                           ;mcc_generated_files/i2c_master.c: 454:     return I2C_SEND_ADR_READ;
  4106  03BF  3001               	movlw	1
  4107  03C0                     i1l631:
  4108  03C0  0008               	return
  4109  03C1                     __end_of_I2C_DO_SEND_RESTART_READ:
  4110                           
  4111                           	psect	text26
  4112  0386                     __ptext26:	
  4113 ;; *************** function _I2C_DO_RCEN *****************
  4114 ;; Defined at:
  4115 ;;		line 404 in file "mcc_generated_files/i2c_master.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;		None
  4118 ;; Auto vars:     Size  Location     Type
  4119 ;;		None
  4120 ;; Return value:  Size  Location     Type
  4121 ;;                  1    wreg      enum E3338
  4122 ;; Registers used:
  4123 ;;		wreg, status,2, status,0, pclath, cstack
  4124 ;; Tracked objects:
  4125 ;;		On entry : 0/0
  4126 ;;		On exit  : 0/0
  4127 ;;		Unchanged: 0/0
  4128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4133 ;;Total ram usage:        0 bytes
  4134 ;; Hardware stack levels used: 1
  4135 ;; Hardware stack levels required when called: 1
  4136 ;; This function calls:
  4137 ;;		_I2C_MasterStartRx
  4138 ;; This function is called by:
  4139 ;;		_I2C_MasterFsm
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           
  4143                           
  4144                           ;psect for function _I2C_DO_RCEN
  4145  0386                     _I2C_DO_RCEN:
  4146  0386                     i1l2656:	
  4147                           ;incstack = 0
  4148                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
  4149                           
  4150                           
  4151                           ;mcc_generated_files/i2c_master.c: 406:     I2C_Status.addressNackCheck = 0;
  4152  0386  0020               	movlb	0	; select bank0
  4153  0387  103C               	bcf	_I2C_Status+28,0
  4154  0388                     i1l2658:
  4155                           
  4156                           ;mcc_generated_files/i2c_master.c: 407:     I2C_MasterStartRx();
  4157  0388  3183  23EC  3183   	fcall	_I2C_MasterStartRx
  4158  038B                     i1l2660:
  4159                           
  4160                           ;mcc_generated_files/i2c_master.c: 408:     return I2C_RX;
  4161  038B  3004               	movlw	4
  4162  038C                     i1l607:
  4163  038C  0008               	return
  4164  038D                     __end_of_I2C_DO_RCEN:
  4165                           
  4166                           	psect	text27
  4167  00AB                     __ptext27:	
  4168 ;; *************** function _I2C_DO_RX *****************
  4169 ;; Defined at:
  4170 ;;		line 380 in file "mcc_generated_files/i2c_master.c"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;		None
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;		None
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  1    wreg      enum E3338
  4177 ;; Registers used:
  4178 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4186 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4187 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4188 ;;Total ram usage:        3 bytes
  4189 ;; Hardware stack levels used: 1
  4190 ;; Hardware stack levels required when called: 3
  4191 ;; This function calls:
  4192 ;;		Absolute function
  4193 ;;		_I2C_CallbackReturnReset
  4194 ;;		_I2C_CallbackReturnStop
  4195 ;;		_I2C_DO_RX_NACK_RESTART
  4196 ;;		_I2C_DO_RX_NACK_STOP
  4197 ;;		_I2C_MasterGetRxData
  4198 ;;		_I2C_MasterSendAck
  4199 ;;		_rd1RegCompleteHandler
  4200 ;;		_rd2RegCompleteHandler
  4201 ;;		_rdBlkRegCompleteHandler
  4202 ;;		_wr1RegCompleteHandler
  4203 ;;		_wr2RegCompleteHandler
  4204 ;; This function is called by:
  4205 ;;		_I2C_MasterFsm
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208                           
  4209                           
  4210                           ;psect for function _I2C_DO_RX
  4211  00AB                     _I2C_DO_RX:
  4212  00AB                     i1l2626:	
  4213                           ;incstack = 0
  4214                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4215                           
  4216                           
  4217                           ;mcc_generated_files/i2c_master.c: 382:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  4218  00AB  3183  23E9  3180   	fcall	_I2C_MasterGetRxData
  4219  00AE  00FA               	movwf	??_I2C_DO_RX
  4220  00AF  0020               	movlb	0	; select bank0
  4221  00B0  0837               	movf	low ((_I2C_Status| 0+23)),w
  4222  00B1  0086               	movwf	6
  4223  00B2  0187               	clrf	7
  4224  00B3  087A               	movf	??_I2C_DO_RX,w
  4225  00B4  0081               	movwf	1
  4226  00B5                     i1l2628:
  4227  00B5  3001               	movlw	1
  4228  00B6  00FA               	movwf	??_I2C_DO_RX
  4229  00B7  087A               	movf	??_I2C_DO_RX,w
  4230  00B8  07B7               	addwf	low ((_I2C_Status| 0+23)),f
  4231  00B9                     i1l2630:
  4232                           
  4233                           ;mcc_generated_files/i2c_master.c: 383:     if(--I2C_Status.data_length)
  4234  00B9  3001               	movlw	1
  4235  00BA  02B8               	subwf	_I2C_Status+24,f
  4236  00BB  3000               	movlw	0
  4237  00BC  3BB9               	subwfb	_I2C_Status+25,f
  4238  00BD  0838               	movf	_I2C_Status+24,w
  4239  00BE  0439               	iorwf	_I2C_Status+25,w
  4240  00BF  1903               	btfsc	3,2
  4241  00C0  28C2               	goto	u62_21
  4242  00C1  28C3               	goto	u62_20
  4243  00C2                     u62_21:
  4244  00C2  28C8               	goto	i1l595
  4245  00C3                     u62_20:
  4246  00C3                     i1l2632:
  4247                           
  4248                           ;mcc_generated_files/i2c_master.c: 384:     {;mcc_generated_files/i2c_master.c: 385:    
      +                               I2C_MasterSendAck();
  4249  00C3  3183  23D3  3180   	fcall	_I2C_MasterSendAck
  4250  00C6                     i1l2634:
  4251                           
  4252                           ;mcc_generated_files/i2c_master.c: 386:         return I2C_RCEN;
  4253  00C6  3005               	movlw	5
  4254  00C7  28F0               	goto	i1l596
  4255  00C8                     i1l595:	
  4256                           ;mcc_generated_files/i2c_master.c: 388:     else
  4257                           
  4258                           
  4259                           ;mcc_generated_files/i2c_master.c: 389:     {;mcc_generated_files/i2c_master.c: 390:    
      +                               I2C_Status.bufferFree = 1;
  4260  00C8  15BC               	bsf	_I2C_Status+28,3
  4261                           
  4262                           ;mcc_generated_files/i2c_master.c: 391:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  4263  00C9  28D2               	goto	i1l2650
  4264  00CA                     i1l2640:
  4265                           
  4266                           ;mcc_generated_files/i2c_master.c: 395:                 return I2C_DO_RX_NACK_RESTART();
  4267  00CA  3183  239E  3180   	fcall	_I2C_DO_RX_NACK_RESTART
  4268  00CD  28F0               	goto	i1l596
  4269  00CE                     i1l2644:
  4270                           
  4271                           ;mcc_generated_files/i2c_master.c: 399:                 return I2C_DO_RX_NACK_STOP();
  4272  00CE  3183  23A3  3180   	fcall	_I2C_DO_RX_NACK_STOP
  4273  00D1  28F0               	goto	i1l596
  4274  00D2                     i1l2650:
  4275  00D2  082C               	movf	low ((_I2C_Status| 0+12)),w
  4276  00D3  00FA               	movwf	??_I2C_DO_RX
  4277  00D4  087A               	movf	??_I2C_DO_RX,w
  4278  00D5  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  4279  00D6  0821               	movf	_I2C_Status+1,w
  4280  00D7  008A               	movwf	10
  4281  00D8  0820               	movf	_I2C_Status,w
  4282  00D9  000A               	callw
  4283  00DA  3180               	pagesel	$
  4284  00DB  00FB               	movwf	??_I2C_DO_RX+1
  4285  00DC  01FC               	clrf	??_I2C_DO_RX+2
  4286                           
  4287                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4288                           ; Switch size 1, requested type "simple"
  4289                           ; Number of cases is 1, Range of values is 0 to 0
  4290                           ; switch strategies available:
  4291                           ; Name         Instructions Cycles
  4292                           ; simple_byte            4     3 (average)
  4293                           ; direct_byte            8     6 (fixed)
  4294                           ; jumptable            260     6 (fixed)
  4295                           ;	Chosen strategy is simple_byte
  4296  00DD  087C               	movf	??_I2C_DO_RX+2,w
  4297  00DE  3A00               	xorlw	0	; case 0
  4298  00DF  1903               	skipnz
  4299  00E0  28E2               	goto	i1l3306
  4300  00E1  28CE               	goto	i1l2644
  4301  00E2                     i1l3306:
  4302                           
  4303                           ; Switch size 1, requested type "simple"
  4304                           ; Number of cases is 4, Range of values is 1 to 4
  4305                           ; switch strategies available:
  4306                           ; Name         Instructions Cycles
  4307                           ; simple_byte           13     7 (average)
  4308                           ; direct_byte           17     9 (fixed)
  4309                           ; jumptable            263     9 (fixed)
  4310                           ;	Chosen strategy is simple_byte
  4311  00E2  087B               	movf	??_I2C_DO_RX+1,w
  4312  00E3  3A01               	xorlw	1	; case 1
  4313  00E4  1903               	skipnz
  4314  00E5  28CE               	goto	i1l2644
  4315  00E6  3A03               	xorlw	3	; case 2
  4316  00E7  1903               	skipnz
  4317  00E8  28CA               	goto	i1l2640
  4318  00E9  3A01               	xorlw	1	; case 3
  4319  00EA  1903               	skipnz
  4320  00EB  28CA               	goto	i1l2640
  4321  00EC  3A07               	xorlw	7	; case 4
  4322  00ED  1903               	skipnz
  4323  00EE  28CE               	goto	i1l2644
  4324  00EF  28CE               	goto	i1l2644
  4325  00F0                     i1l596:
  4326  00F0  0008               	return
  4327  00F1                     __end_of_I2C_DO_RX:
  4328                           
  4329                           	psect	text28
  4330  0056                     __ptext28:	
  4331 ;; *************** function _I2C_DO_TX *****************
  4332 ;; Defined at:
  4333 ;;		line 356 in file "mcc_generated_files/i2c_master.c"
  4334 ;; Parameters:    Size  Location     Type
  4335 ;;		None
  4336 ;; Auto vars:     Size  Location     Type
  4337 ;;		None
  4338 ;; Return value:  Size  Location     Type
  4339 ;;                  1    wreg      enum E3338
  4340 ;; Registers used:
  4341 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4342 ;; Tracked objects:
  4343 ;;		On entry : 0/0
  4344 ;;		On exit  : 0/0
  4345 ;;		Unchanged: 0/0
  4346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4349 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4350 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4351 ;;Total ram usage:        3 bytes
  4352 ;; Hardware stack levels used: 1
  4353 ;; Hardware stack levels required when called: 3
  4354 ;; This function calls:
  4355 ;;		Absolute function
  4356 ;;		_I2C_CallbackReturnReset
  4357 ;;		_I2C_CallbackReturnStop
  4358 ;;		_I2C_DO_SEND_RESTART_READ
  4359 ;;		_I2C_DO_SEND_RESTART_WRITE
  4360 ;;		_I2C_DO_SEND_STOP
  4361 ;;		_I2C_MasterIsNack
  4362 ;;		_I2C_MasterSendTxData
  4363 ;;		_rd1RegCompleteHandler
  4364 ;;		_rd2RegCompleteHandler
  4365 ;;		_rdBlkRegCompleteHandler
  4366 ;;		_wr1RegCompleteHandler
  4367 ;;		_wr2RegCompleteHandler
  4368 ;; This function is called by:
  4369 ;;		_I2C_MasterFsm
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           
  4374                           ;psect for function _I2C_DO_TX
  4375  0056                     _I2C_DO_TX:
  4376  0056                     i1l2592:	
  4377                           ;incstack = 0
  4378                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4379                           
  4380                           
  4381                           ;mcc_generated_files/i2c_master.c: 358:     if(I2C_MasterIsNack())
  4382  0056  3183  2393  3180   	fcall	_I2C_MasterIsNack
  4383  0059  3A00               	xorlw	0
  4384  005A  1903               	skipnz
  4385  005B  285D               	goto	u60_21
  4386  005C  285E               	goto	u60_20
  4387  005D                     u60_21:
  4388  005D  288E               	goto	i1l579
  4389  005E                     u60_20:
  4390  005E  286B               	goto	i1l2610
  4391  005F                     i1l2596:
  4392                           
  4393                           ;mcc_generated_files/i2c_master.c: 363:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  4394  005F  3183  23BC  3180   	fcall	_I2C_DO_SEND_RESTART_READ
  4395  0062  28AA               	goto	i1l582
  4396  0063                     i1l2600:
  4397                           
  4398                           ;mcc_generated_files/i2c_master.c: 365:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  4399  0063  3183  23B7  3180   	fcall	_I2C_DO_SEND_RESTART_WRITE
  4400  0066  28AA               	goto	i1l582
  4401  0067                     i1l2604:
  4402                           
  4403                           ;mcc_generated_files/i2c_master.c: 369:                 return I2C_DO_SEND_STOP();
  4404  0067  3183  23AD  3180   	fcall	_I2C_DO_SEND_STOP
  4405  006A  28AA               	goto	i1l582
  4406  006B                     i1l2610:
  4407  006B  0020               	movlb	0	; select bank0
  4408  006C  082F               	movf	low ((_I2C_Status| 0+15)),w
  4409  006D  00FA               	movwf	??_I2C_DO_TX
  4410  006E  087A               	movf	??_I2C_DO_TX,w
  4411  006F  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  4412  0070  3006               	movlw	6
  4413  0071  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  4414  0072  0086               	movwf	6
  4415  0073  0187               	clrf	7
  4416  0074  3F41               	moviw [1]fsr1
  4417  0075  008A               	movwf	10
  4418  0076  3F40               	moviw [0]fsr1
  4419  0077  000A               	callw
  4420  0078  3180               	pagesel	$
  4421  0079  00FB               	movwf	??_I2C_DO_TX+1
  4422  007A  01FC               	clrf	??_I2C_DO_TX+2
  4423                           
  4424                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4425                           ; Switch size 1, requested type "simple"
  4426                           ; Number of cases is 1, Range of values is 0 to 0
  4427                           ; switch strategies available:
  4428                           ; Name         Instructions Cycles
  4429                           ; simple_byte            4     3 (average)
  4430                           ; direct_byte            8     6 (fixed)
  4431                           ; jumptable            260     6 (fixed)
  4432                           ;	Chosen strategy is simple_byte
  4433  007B  087C               	movf	??_I2C_DO_TX+2,w
  4434  007C  3A00               	xorlw	0	; case 0
  4435  007D  1903               	skipnz
  4436  007E  2880               	goto	i1l3308
  4437  007F  2867               	goto	i1l2604
  4438  0080                     i1l3308:
  4439                           
  4440                           ; Switch size 1, requested type "simple"
  4441                           ; Number of cases is 4, Range of values is 1 to 4
  4442                           ; switch strategies available:
  4443                           ; Name         Instructions Cycles
  4444                           ; simple_byte           13     7 (average)
  4445                           ; direct_byte           17     9 (fixed)
  4446                           ; jumptable            263     9 (fixed)
  4447                           ;	Chosen strategy is simple_byte
  4448  0080  087B               	movf	??_I2C_DO_TX+1,w
  4449  0081  3A01               	xorlw	1	; case 1
  4450  0082  1903               	skipnz
  4451  0083  2867               	goto	i1l2604
  4452  0084  3A03               	xorlw	3	; case 2
  4453  0085  1903               	skipnz
  4454  0086  285F               	goto	i1l2596
  4455  0087  3A01               	xorlw	1	; case 3
  4456  0088  1903               	skipnz
  4457  0089  2863               	goto	i1l2600
  4458  008A  3A07               	xorlw	7	; case 4
  4459  008B  1903               	skipnz
  4460  008C  2867               	goto	i1l2604
  4461  008D  2867               	goto	i1l2604
  4462  008E                     i1l579:	
  4463                           ;mcc_generated_files/i2c_master.c: 372:     else
  4464                           
  4465                           
  4466                           ;mcc_generated_files/i2c_master.c: 373:     {;mcc_generated_files/i2c_master.c: 374:    
      +                               I2C_Status.addressNackCheck = 0;
  4467  008E  0020               	movlb	0	; select bank0
  4468  008F  103C               	bcf	_I2C_Status+28,0
  4469  0090                     i1l2612:
  4470                           
  4471                           ;mcc_generated_files/i2c_master.c: 375:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  4472  0090  3017               	movlw	23
  4473  0091  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  4474  0092  0086               	movwf	6
  4475  0093  0187               	clrf	7
  4476  0094  3F40               	moviw [0]fsr1
  4477  0095  0084               	movwf	4
  4478  0096  0185               	clrf	5
  4479  0097  0A81               	incf	1,f
  4480  0098  0800               	movf	0,w
  4481  0099  3183  23C6  3180   	fcall	_I2C_MasterSendTxData
  4482  009C                     i1l2614:
  4483                           
  4484                           ;mcc_generated_files/i2c_master.c: 376:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  4485  009C  3001               	movlw	1
  4486  009D  0020               	movlb	0	; select bank0
  4487  009E  02B8               	subwf	_I2C_Status+24,f
  4488  009F  3000               	movlw	0
  4489  00A0  3BB9               	subwfb	_I2C_Status+25,f
  4490  00A1  0838               	movf	_I2C_Status+24,w
  4491  00A2  0439               	iorwf	_I2C_Status+25,w
  4492  00A3  1D03               	btfss	3,2
  4493  00A4  28A6               	goto	u61_21
  4494  00A5  28A7               	goto	u61_20
  4495  00A6                     u61_21:
  4496  00A6  28A9               	goto	i1l2618
  4497  00A7                     u61_20:
  4498  00A7                     i1l2616:
  4499  00A7  3006               	movlw	6
  4500  00A8  28AA               	goto	i1l582
  4501  00A9                     i1l2618:
  4502  00A9  3003               	movlw	3
  4503  00AA                     i1l582:
  4504  00AA  0008               	return
  4505  00AB                     __end_of_I2C_DO_TX:
  4506                           
  4507                           	psect	text29
  4508  037E                     __ptext29:	
  4509 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  4510 ;; Defined at:
  4511 ;;		line 349 in file "mcc_generated_files/i2c_master.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;		None
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;		None
  4516 ;; Return value:  Size  Location     Type
  4517 ;;                  1    wreg      enum E3338
  4518 ;; Registers used:
  4519 ;;		wreg, status,2, status,0, pclath, cstack
  4520 ;; Tracked objects:
  4521 ;;		On entry : 0/0
  4522 ;;		On exit  : 0/0
  4523 ;;		Unchanged: 0/0
  4524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4529 ;;Total ram usage:        0 bytes
  4530 ;; Hardware stack levels used: 1
  4531 ;; Hardware stack levels required when called: 1
  4532 ;; This function calls:
  4533 ;;		_I2C_MasterSendTxData
  4534 ;; This function is called by:
  4535 ;;		_I2C_MasterFsm
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           
  4539                           
  4540                           ;psect for function _I2C_DO_SEND_ADR_WRITE
  4541  037E                     _I2C_DO_SEND_ADR_WRITE:
  4542  037E                     i1l2584:	
  4543                           ;incstack = 0
  4544                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  4545                           
  4546                           
  4547                           ;mcc_generated_files/i2c_master.c: 351:     I2C_Status.addressNackCheck = 1;
  4548  037E  0020               	movlb	0	; select bank0
  4549  037F  143C               	bsf	_I2C_Status+28,0
  4550  0380                     i1l2586:
  4551                           
  4552                           ;mcc_generated_files/i2c_master.c: 352:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
  4553  0380  3536               	lslf	_I2C_Status+22,w
  4554  0381  3183  23C6  3183   	fcall	_I2C_MasterSendTxData
  4555  0384                     i1l2588:
  4556                           
  4557                           ;mcc_generated_files/i2c_master.c: 353:     return I2C_TX;
  4558  0384  3003               	movlw	3
  4559  0385                     i1l576:
  4560  0385  0008               	return
  4561  0386                     __end_of_I2C_DO_SEND_ADR_WRITE:
  4562                           
  4563                           	psect	text30
  4564  0365                     __ptext30:	
  4565 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  4566 ;; Defined at:
  4567 ;;		line 342 in file "mcc_generated_files/i2c_master.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;		None
  4570 ;; Auto vars:     Size  Location     Type
  4571 ;;		None
  4572 ;; Return value:  Size  Location     Type
  4573 ;;                  1    wreg      enum E3338
  4574 ;; Registers used:
  4575 ;;		wreg, status,2, status,0, pclath, cstack
  4576 ;; Tracked objects:
  4577 ;;		On entry : 0/0
  4578 ;;		On exit  : 0/0
  4579 ;;		Unchanged: 0/0
  4580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4585 ;;Total ram usage:        0 bytes
  4586 ;; Hardware stack levels used: 1
  4587 ;; Hardware stack levels required when called: 1
  4588 ;; This function calls:
  4589 ;;		_I2C_MasterSendTxData
  4590 ;; This function is called by:
  4591 ;;		_I2C_MasterFsm
  4592 ;; This function uses a non-reentrant model
  4593 ;;
  4594                           
  4595                           
  4596                           ;psect for function _I2C_DO_SEND_ADR_READ
  4597  0365                     _I2C_DO_SEND_ADR_READ:
  4598  0365                     i1l2576:	
  4599                           ;incstack = 0
  4600                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  4601                           
  4602                           
  4603                           ;mcc_generated_files/i2c_master.c: 344:     I2C_Status.addressNackCheck = 1;
  4604  0365  0020               	movlb	0	; select bank0
  4605  0366  143C               	bsf	_I2C_Status+28,0
  4606  0367                     i1l2578:
  4607                           
  4608                           ;mcc_generated_files/i2c_master.c: 345:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
  4609  0367  1403               	setc
  4610  0368  0D36               	rlf	_I2C_Status+22,w
  4611  0369  3183  23C6  3183   	fcall	_I2C_MasterSendTxData
  4612  036C                     i1l2580:
  4613                           
  4614                           ;mcc_generated_files/i2c_master.c: 346:     return I2C_RCEN;
  4615  036C  3005               	movlw	5
  4616  036D                     i1l573:
  4617  036D  0008               	return
  4618  036E                     __end_of_I2C_DO_SEND_ADR_READ:
  4619                           
  4620                           	psect	text31
  4621  03C1                     __ptext31:	
  4622 ;; *************** function _I2C_DO_IDLE *****************
  4623 ;; Defined at:
  4624 ;;		line 335 in file "mcc_generated_files/i2c_master.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;		None
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;		None
  4629 ;; Return value:  Size  Location     Type
  4630 ;;                  1    wreg      enum E3338
  4631 ;; Registers used:
  4632 ;;		wreg, status,2
  4633 ;; Tracked objects:
  4634 ;;		On entry : 0/0
  4635 ;;		On exit  : 0/0
  4636 ;;		Unchanged: 0/0
  4637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4642 ;;Total ram usage:        0 bytes
  4643 ;; Hardware stack levels used: 1
  4644 ;; This function calls:
  4645 ;;		Nothing
  4646 ;; This function is called by:
  4647 ;;		_I2C_MasterFsm
  4648 ;; This function uses a non-reentrant model
  4649 ;;
  4650                           
  4651                           
  4652                           ;psect for function _I2C_DO_IDLE
  4653  03C1                     _I2C_DO_IDLE:
  4654  03C1                     i1l2568:	
  4655                           ;incstack = 0
  4656                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
  4657                           
  4658                           
  4659                           ;mcc_generated_files/i2c_master.c: 337:     I2C_Status.busy = 0;
  4660  03C1  0020               	movlb	0	; select bank0
  4661  03C2  10BC               	bcf	_I2C_Status+28,1
  4662  03C3                     i1l2570:
  4663                           
  4664                           ;mcc_generated_files/i2c_master.c: 338:     I2C_Status.error = I2C_NOERR;
  4665  03C3  01BB               	clrf	_I2C_Status+27
  4666  03C4                     i1l2572:
  4667                           
  4668                           ;mcc_generated_files/i2c_master.c: 339:     return I2C_RESET;
  4669  03C4  300E               	movlw	14
  4670  03C5                     i1l570:
  4671  03C5  0008               	return
  4672  03C6                     __end_of_I2C_DO_IDLE:
  4673                           
  4674                           	psect	text32
  4675  016E                     __ptext32:	
  4676 ;; *************** function _I2C_DO_TX_EMPTY *****************
  4677 ;; Defined at:
  4678 ;;		line 411 in file "mcc_generated_files/i2c_master.c"
  4679 ;; Parameters:    Size  Location     Type
  4680 ;;		None
  4681 ;; Auto vars:     Size  Location     Type
  4682 ;;		None
  4683 ;; Return value:  Size  Location     Type
  4684 ;;                  1    wreg      enum E3338
  4685 ;; Registers used:
  4686 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4687 ;; Tracked objects:
  4688 ;;		On entry : 0/0
  4689 ;;		On exit  : 0/0
  4690 ;;		Unchanged: 0/0
  4691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4694 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4695 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4696 ;;Total ram usage:        3 bytes
  4697 ;; Hardware stack levels used: 1
  4698 ;; Hardware stack levels required when called: 3
  4699 ;; This function calls:
  4700 ;;		Absolute function
  4701 ;;		_I2C_CallbackReturnReset
  4702 ;;		_I2C_CallbackReturnStop
  4703 ;;		_I2C_DO_SEND_RESTART
  4704 ;;		_I2C_DO_SEND_STOP
  4705 ;;		_I2C_MasterSetIrq
  4706 ;;		_rd1RegCompleteHandler
  4707 ;;		_rd2RegCompleteHandler
  4708 ;;		_rdBlkRegCompleteHandler
  4709 ;;		_wr1RegCompleteHandler
  4710 ;;		_wr2RegCompleteHandler
  4711 ;; This function is called by:
  4712 ;;		_I2C_MasterFsm
  4713 ;; This function uses a non-reentrant model
  4714 ;;
  4715                           
  4716                           
  4717                           ;psect for function _I2C_DO_TX_EMPTY
  4718  016E                     _I2C_DO_TX_EMPTY:
  4719  016E                     i1l2664:	
  4720                           ;incstack = 0
  4721                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4722                           
  4723                           
  4724                           ;mcc_generated_files/i2c_master.c: 413:     I2C_Status.bufferFree = 1;
  4725  016E  0020               	movlb	0	; select bank0
  4726  016F  15BC               	bsf	_I2C_Status+28,3
  4727                           
  4728                           ;mcc_generated_files/i2c_master.c: 414:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  4729  0170  297E               	goto	i1l2682
  4730  0171                     i1l2666:
  4731                           
  4732                           ;mcc_generated_files/i2c_master.c: 418:             return I2C_DO_SEND_RESTART();
  4733  0171  3183  23B2  3181   	fcall	_I2C_DO_SEND_RESTART
  4734  0174  299C               	goto	i1l613
  4735  0175                     i1l2670:
  4736                           
  4737                           ;mcc_generated_files/i2c_master.c: 420:             I2C_MasterSetIrq();
  4738  0175  3183  23E6  3181   	fcall	_I2C_MasterSetIrq
  4739  0178                     i1l2672:
  4740                           
  4741                           ;mcc_generated_files/i2c_master.c: 421:             return I2C_TX;
  4742  0178  3003               	movlw	3
  4743  0179  299C               	goto	i1l613
  4744  017A                     i1l2676:
  4745                           
  4746                           ;mcc_generated_files/i2c_master.c: 424:             return I2C_DO_SEND_STOP();
  4747  017A  3183  23AD  3181   	fcall	_I2C_DO_SEND_STOP
  4748  017D  299C               	goto	i1l613
  4749  017E                     i1l2682:
  4750  017E  082C               	movf	low ((_I2C_Status| 0+12)),w
  4751  017F  00FA               	movwf	??_I2C_DO_TX_EMPTY
  4752  0180  087A               	movf	??_I2C_DO_TX_EMPTY,w
  4753  0181  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  4754  0182  0821               	movf	_I2C_Status+1,w
  4755  0183  008A               	movwf	10
  4756  0184  0820               	movf	_I2C_Status,w
  4757  0185  000A               	callw
  4758  0186  3181               	pagesel	$
  4759  0187  00FB               	movwf	??_I2C_DO_TX_EMPTY+1
  4760  0188  01FC               	clrf	??_I2C_DO_TX_EMPTY+2
  4761                           
  4762                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4763                           ; Switch size 1, requested type "simple"
  4764                           ; Number of cases is 1, Range of values is 0 to 0
  4765                           ; switch strategies available:
  4766                           ; Name         Instructions Cycles
  4767                           ; simple_byte            4     3 (average)
  4768                           ; direct_byte            8     6 (fixed)
  4769                           ; jumptable            260     6 (fixed)
  4770                           ;	Chosen strategy is simple_byte
  4771  0189  087C               	movf	??_I2C_DO_TX_EMPTY+2,w
  4772  018A  3A00               	xorlw	0	; case 0
  4773  018B  1903               	skipnz
  4774  018C  298E               	goto	i1l3310
  4775  018D  297A               	goto	i1l2676
  4776  018E                     i1l3310:
  4777                           
  4778                           ; Switch size 1, requested type "simple"
  4779                           ; Number of cases is 4, Range of values is 1 to 4
  4780                           ; switch strategies available:
  4781                           ; Name         Instructions Cycles
  4782                           ; simple_byte           13     7 (average)
  4783                           ; direct_byte           17     9 (fixed)
  4784                           ; jumptable            263     9 (fixed)
  4785                           ;	Chosen strategy is simple_byte
  4786  018E  087B               	movf	??_I2C_DO_TX_EMPTY+1,w
  4787  018F  3A01               	xorlw	1	; case 1
  4788  0190  1903               	skipnz
  4789  0191  297A               	goto	i1l2676
  4790  0192  3A03               	xorlw	3	; case 2
  4791  0193  1903               	skipnz
  4792  0194  2971               	goto	i1l2666
  4793  0195  3A01               	xorlw	1	; case 3
  4794  0196  1903               	skipnz
  4795  0197  2971               	goto	i1l2666
  4796  0198  3A07               	xorlw	7	; case 4
  4797  0199  1903               	skipnz
  4798  019A  2975               	goto	i1l2670
  4799  019B  297A               	goto	i1l2676
  4800  019C                     i1l613:
  4801  019C  0008               	return
  4802  019D                     __end_of_I2C_DO_TX_EMPTY:
  4803                           
  4804                           	psect	text33
  4805  03E6                     __ptext33:	
  4806 ;; *************** function _I2C_MasterSetIrq *****************
  4807 ;; Defined at:
  4808 ;;		line 647 in file "mcc_generated_files/i2c_master.c"
  4809 ;; Parameters:    Size  Location     Type
  4810 ;;		None
  4811 ;; Auto vars:     Size  Location     Type
  4812 ;;		None
  4813 ;; Return value:  Size  Location     Type
  4814 ;;                  1    wreg      void 
  4815 ;; Registers used:
  4816 ;;		None
  4817 ;; Tracked objects:
  4818 ;;		On entry : 0/0
  4819 ;;		On exit  : 0/0
  4820 ;;		Unchanged: 0/0
  4821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4826 ;;Total ram usage:        0 bytes
  4827 ;; Hardware stack levels used: 1
  4828 ;; This function calls:
  4829 ;;		Nothing
  4830 ;; This function is called by:
  4831 ;;		_I2C_DO_TX_EMPTY
  4832 ;; This function uses a non-reentrant model
  4833 ;;
  4834                           
  4835                           
  4836                           ;psect for function _I2C_MasterSetIrq
  4837  03E6                     _I2C_MasterSetIrq:
  4838  03E6                     i1l2536:	
  4839                           ;incstack = 0
  4840                           ; Regs used in _I2C_MasterSetIrq: []
  4841                           
  4842                           
  4843                           ;mcc_generated_files/i2c_master.c: 649:     PIR1bits.SSPIF = 1;
  4844  03E6  0020               	movlb	0	; select bank0
  4845  03E7  1591               	bsf	17,3	;volatile
  4846  03E8                     i1l733:
  4847  03E8  0008               	return
  4848  03E9                     __end_of_I2C_MasterSetIrq:
  4849                           
  4850                           	psect	text34
  4851  0393                     __ptext34:	
  4852 ;; *************** function _I2C_MasterIsNack *****************
  4853 ;; Defined at:
  4854 ;;		line 599 in file "mcc_generated_files/i2c_master.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;		None
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;		None
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  1    wreg      _Bool 
  4861 ;; Registers used:
  4862 ;;		wreg, status,2, status,0
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4872 ;;Total ram usage:        0 bytes
  4873 ;; Hardware stack levels used: 1
  4874 ;; This function calls:
  4875 ;;		Nothing
  4876 ;; This function is called by:
  4877 ;;		_I2C_MasterFsm
  4878 ;;		_I2C_DO_TX
  4879 ;; This function uses a non-reentrant model
  4880 ;;
  4881                           
  4882                           
  4883                           ;psect for function _I2C_MasterIsNack
  4884  0393                     _I2C_MasterIsNack:
  4885  0393                     i1l2486:	
  4886                           ;incstack = 0
  4887                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
  4888                           
  4889                           
  4890                           ;mcc_generated_files/i2c_master.c: 601:     return SSPCON2bits.ACKSTAT;
  4891  0393  0024               	movlb	4	; select bank4
  4892  0394  0E16               	swapf	22,w	;volatile
  4893  0395  0C89               	rrf	9,f
  4894  0396  0C89               	rrf	9,f
  4895  0397  3901               	andlw	1
  4896  0398                     i1l706:
  4897  0398  0008               	return
  4898  0399                     __end_of_I2C_MasterIsNack:
  4899                           
  4900                           	psect	text35
  4901  03C6                     __ptext35:	
  4902 ;; *************** function _I2C_MasterSendTxData *****************
  4903 ;; Defined at:
  4904 ;;		line 569 in file "mcc_generated_files/i2c_master.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;  data            1    wreg     unsigned char 
  4907 ;; Auto vars:     Size  Location     Type
  4908 ;;  data            1    0[COMMON] unsigned char 
  4909 ;; Return value:  Size  Location     Type
  4910 ;;                  1    wreg      void 
  4911 ;; Registers used:
  4912 ;;		wreg
  4913 ;; Tracked objects:
  4914 ;;		On entry : 0/0
  4915 ;;		On exit  : 0/0
  4916 ;;		Unchanged: 0/0
  4917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4919 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4921 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4922 ;;Total ram usage:        1 bytes
  4923 ;; Hardware stack levels used: 1
  4924 ;; This function calls:
  4925 ;;		Nothing
  4926 ;; This function is called by:
  4927 ;;		_I2C_DO_SEND_ADR_READ
  4928 ;;		_I2C_DO_SEND_ADR_WRITE
  4929 ;;		_I2C_DO_TX
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933                           
  4934                           ;psect for function _I2C_MasterSendTxData
  4935  03C6                     _I2C_MasterSendTxData:
  4936                           
  4937                           ;incstack = 0
  4938                           ; Regs used in _I2C_MasterSendTxData: [wreg]
  4939                           ;I2C_MasterSendTxData@data stored from wreg
  4940  03C6  00F0               	movwf	I2C_MasterSendTxData@data
  4941  03C7                     i1l2490:
  4942                           
  4943                           ;mcc_generated_files/i2c_master.c: 569: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 570: {;mcc_generated_files/i2c_
      +                          master.c: 571:     SSPBUF = data;
  4944  03C7  0870               	movf	I2C_MasterSendTxData@data,w
  4945  03C8  0024               	movlb	4	; select bank4
  4946  03C9  0091               	movwf	17	;volatile
  4947  03CA                     i1l688:
  4948  03CA  0008               	return
  4949  03CB                     __end_of_I2C_MasterSendTxData:
  4950                           
  4951                           	psect	text36
  4952  03D3                     __ptext36:	
  4953 ;; *************** function _I2C_MasterSendAck *****************
  4954 ;; Defined at:
  4955 ;;		line 604 in file "mcc_generated_files/i2c_master.c"
  4956 ;; Parameters:    Size  Location     Type
  4957 ;;		None
  4958 ;; Auto vars:     Size  Location     Type
  4959 ;;		None
  4960 ;; Return value:  Size  Location     Type
  4961 ;;                  1    wreg      void 
  4962 ;; Registers used:
  4963 ;;		None
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4973 ;;Total ram usage:        0 bytes
  4974 ;; Hardware stack levels used: 1
  4975 ;; This function calls:
  4976 ;;		Nothing
  4977 ;; This function is called by:
  4978 ;;		_I2C_DO_RX
  4979 ;;		_I2C_DO_RX_ACK
  4980 ;; This function uses a non-reentrant model
  4981 ;;
  4982                           
  4983                           
  4984                           ;psect for function _I2C_MasterSendAck
  4985  03D3                     _I2C_MasterSendAck:
  4986  03D3                     i1l2514:	
  4987                           ;incstack = 0
  4988                           ; Regs used in _I2C_MasterSendAck: []
  4989                           
  4990                           
  4991                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKDT = 0;
  4992  03D3  0024               	movlb	4	; select bank4
  4993  03D4  1296               	bcf	22,5	;volatile
  4994                           
  4995                           ;mcc_generated_files/i2c_master.c: 607:     SSPCON2bits.ACKEN = 1;
  4996  03D5  1616               	bsf	22,4	;volatile
  4997  03D6                     i1l709:
  4998  03D6  0008               	return
  4999  03D7                     __end_of_I2C_MasterSendAck:
  5000                           
  5001                           	psect	text37
  5002  03E9                     __ptext37:	
  5003 ;; *************** function _I2C_MasterGetRxData *****************
  5004 ;; Defined at:
  5005 ;;		line 564 in file "mcc_generated_files/i2c_master.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;		None
  5008 ;; Auto vars:     Size  Location     Type
  5009 ;;		None
  5010 ;; Return value:  Size  Location     Type
  5011 ;;                  1    wreg      unsigned char 
  5012 ;; Registers used:
  5013 ;;		wreg
  5014 ;; Tracked objects:
  5015 ;;		On entry : 0/0
  5016 ;;		On exit  : 0/0
  5017 ;;		Unchanged: 0/0
  5018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5023 ;;Total ram usage:        0 bytes
  5024 ;; Hardware stack levels used: 1
  5025 ;; This function calls:
  5026 ;;		Nothing
  5027 ;; This function is called by:
  5028 ;;		_I2C_DO_RX
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032                           
  5033                           ;psect for function _I2C_MasterGetRxData
  5034  03E9                     _I2C_MasterGetRxData:
  5035  03E9                     i1l2510:	
  5036                           ;incstack = 0
  5037                           ; Regs used in _I2C_MasterGetRxData: [wreg]
  5038                           
  5039                           
  5040                           ;mcc_generated_files/i2c_master.c: 566:     return SSPBUF;
  5041  03E9  0024               	movlb	4	; select bank4
  5042  03EA  0811               	movf	17,w	;volatile
  5043  03EB                     i1l685:
  5044  03EB  0008               	return
  5045  03EC                     __end_of_I2C_MasterGetRxData:
  5046                           
  5047                           	psect	text38
  5048  03D7                     __ptext38:	
  5049 ;; *************** function _I2C_MasterSendNack *****************
  5050 ;; Defined at:
  5051 ;;		line 610 in file "mcc_generated_files/i2c_master.c"
  5052 ;; Parameters:    Size  Location     Type
  5053 ;;		None
  5054 ;; Auto vars:     Size  Location     Type
  5055 ;;		None
  5056 ;; Return value:  Size  Location     Type
  5057 ;;                  1    wreg      void 
  5058 ;; Registers used:
  5059 ;;		None
  5060 ;; Tracked objects:
  5061 ;;		On entry : 0/0
  5062 ;;		On exit  : 0/0
  5063 ;;		Unchanged: 0/0
  5064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5069 ;;Total ram usage:        0 bytes
  5070 ;; Hardware stack levels used: 1
  5071 ;; This function calls:
  5072 ;;		Nothing
  5073 ;; This function is called by:
  5074 ;;		_I2C_DO_RX_NACK_STOP
  5075 ;;		_I2C_DO_RX_NACK_RESTART
  5076 ;; This function uses a non-reentrant model
  5077 ;;
  5078                           
  5079                           
  5080                           ;psect for function _I2C_MasterSendNack
  5081  03D7                     _I2C_MasterSendNack:
  5082  03D7                     i1l2446:	
  5083                           ;incstack = 0
  5084                           ; Regs used in _I2C_MasterSendNack: []
  5085                           
  5086                           
  5087                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKDT = 1;
  5088  03D7  0024               	movlb	4	; select bank4
  5089  03D8  1696               	bsf	22,5	;volatile
  5090                           
  5091                           ;mcc_generated_files/i2c_master.c: 613:     SSPCON2bits.ACKEN = 1;
  5092  03D9  1616               	bsf	22,4	;volatile
  5093  03DA                     i1l712:
  5094  03DA  0008               	return
  5095  03DB                     __end_of_I2C_MasterSendNack:
  5096                           
  5097                           	psect	text39
  5098  03EC                     __ptext39:	
  5099 ;; *************** function _I2C_MasterStartRx *****************
  5100 ;; Defined at:
  5101 ;;		line 584 in file "mcc_generated_files/i2c_master.c"
  5102 ;; Parameters:    Size  Location     Type
  5103 ;;		None
  5104 ;; Auto vars:     Size  Location     Type
  5105 ;;		None
  5106 ;; Return value:  Size  Location     Type
  5107 ;;                  1    wreg      void 
  5108 ;; Registers used:
  5109 ;;		None
  5110 ;; Tracked objects:
  5111 ;;		On entry : 0/0
  5112 ;;		On exit  : 0/0
  5113 ;;		Unchanged: 0/0
  5114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5119 ;;Total ram usage:        0 bytes
  5120 ;; Hardware stack levels used: 1
  5121 ;; This function calls:
  5122 ;;		Nothing
  5123 ;; This function is called by:
  5124 ;;		_I2C_DO_RCEN
  5125 ;; This function uses a non-reentrant model
  5126 ;;
  5127                           
  5128                           
  5129                           ;psect for function _I2C_MasterStartRx
  5130  03EC                     _I2C_MasterStartRx:
  5131  03EC                     i1l2528:	
  5132                           ;incstack = 0
  5133                           ; Regs used in _I2C_MasterStartRx: []
  5134                           
  5135                           
  5136                           ;mcc_generated_files/i2c_master.c: 586:     SSPCON2bits.RCEN = 1;
  5137  03EC  0024               	movlb	4	; select bank4
  5138  03ED  1596               	bsf	22,3	;volatile
  5139  03EE                     i1l697:
  5140  03EE  0008               	return
  5141  03EF                     __end_of_I2C_MasterStartRx:
  5142                           
  5143                           	psect	text40
  5144  03F5                     __ptext40:	
  5145 ;; *************** function _I2C_CallbackReturnReset *****************
  5146 ;; Defined at:
  5147 ;;		line 526 in file "mcc_generated_files/i2c_master.c"
  5148 ;; Parameters:    Size  Location     Type
  5149 ;;  funPtr          1    9[COMMON] PTR void 
  5150 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5151 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  5152 ;; Auto vars:     Size  Location     Type
  5153 ;;		None
  5154 ;; Return value:  Size  Location     Type
  5155 ;;                  1    wreg      enum E360
  5156 ;; Registers used:
  5157 ;;		wreg
  5158 ;; Tracked objects:
  5159 ;;		On entry : 0/0
  5160 ;;		On exit  : 0/0
  5161 ;;		Unchanged: 0/0
  5162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5163 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5166 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5167 ;;Total ram usage:        1 bytes
  5168 ;; Hardware stack levels used: 1
  5169 ;; This function calls:
  5170 ;;		Nothing
  5171 ;; This function is called by:
  5172 ;;		_I2C_Open
  5173 ;;		_I2C_DO_TX
  5174 ;;		_I2C_DO_RX
  5175 ;;		_I2C_DO_TX_EMPTY
  5176 ;;		_I2C_DO_ADDRESS_NACK
  5177 ;;		_I2C_DO_RX_EMPTY
  5178 ;; This function uses a non-reentrant model
  5179 ;;
  5180                           
  5181                           
  5182                           ;psect for function _I2C_CallbackReturnReset
  5183  03F5                     _I2C_CallbackReturnReset:
  5184  03F5                     i1l2542:	
  5185                           ;incstack = 0
  5186                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
  5187                           
  5188                           
  5189                           ;mcc_generated_files/i2c_master.c: 526: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 527: {;mcc_generated_files/i2c_master.c: 528:  
      +                             return I2C_RESET_LINK;
  5190  03F5  3005               	movlw	5
  5191  03F6                     i1l669:
  5192  03F6  0008               	return
  5193  03F7                     __end_of_I2C_CallbackReturnReset:
  5194                           
  5195                           	psect	text41
  5196  03F7                     __ptext41:	
  5197 ;; *************** function _I2C_CallbackReturnStop *****************
  5198 ;; Defined at:
  5199 ;;		line 521 in file "mcc_generated_files/i2c_master.c"
  5200 ;; Parameters:    Size  Location     Type
  5201 ;;  funPtr          1    9[COMMON] PTR void 
  5202 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5203 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;		None
  5206 ;; Return value:  Size  Location     Type
  5207 ;;                  1    wreg      enum E360
  5208 ;; Registers used:
  5209 ;;		wreg
  5210 ;; Tracked objects:
  5211 ;;		On entry : 0/0
  5212 ;;		On exit  : 0/0
  5213 ;;		Unchanged: 0/0
  5214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5215 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5218 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5219 ;;Total ram usage:        1 bytes
  5220 ;; Hardware stack levels used: 1
  5221 ;; This function calls:
  5222 ;;		Nothing
  5223 ;; This function is called by:
  5224 ;;		_I2C_SetCallback
  5225 ;;		_I2C_Open
  5226 ;;		_I2C_DO_TX
  5227 ;;		_I2C_DO_RX
  5228 ;;		_I2C_DO_TX_EMPTY
  5229 ;;		_I2C_DO_ADDRESS_NACK
  5230 ;;		_I2C_DO_RX_EMPTY
  5231 ;; This function uses a non-reentrant model
  5232 ;;
  5233                           
  5234                           
  5235                           ;psect for function _I2C_CallbackReturnStop
  5236  03F7                     _I2C_CallbackReturnStop:
  5237  03F7                     i1l2538:	
  5238                           ;incstack = 0
  5239                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
  5240                           
  5241                           
  5242                           ;mcc_generated_files/i2c_master.c: 521: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 522: {;mcc_generated_files/i2c_master.c: 523:   
      +                            return I2C_STOP;
  5243  03F7  3001               	movlw	1
  5244  03F8                     i1l666:
  5245  03F8  0008               	return
  5246  03F9                     __end_of_I2C_CallbackReturnStop:
  5247                           
  5248                           	psect	text42
  5249  0296                     __ptext42:	
  5250 ;; *************** function _rdBlkRegCompleteHandler *****************
  5251 ;; Defined at:
  5252 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
  5253 ;; Parameters:    Size  Location     Type
  5254 ;;  ptr             1    9[COMMON] PTR void 
  5255 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5256 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  5257 ;; Auto vars:     Size  Location     Type
  5258 ;;		None
  5259 ;; Return value:  Size  Location     Type
  5260 ;;                  1    wreg      enum E360
  5261 ;; Registers used:
  5262 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5268 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5271 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5272 ;;Total ram usage:        1 bytes
  5273 ;; Hardware stack levels used: 1
  5274 ;; Hardware stack levels required when called: 2
  5275 ;; This function calls:
  5276 ;;		_I2C_SetBuffer
  5277 ;;		_I2C_SetDataCompleteCallback
  5278 ;; This function is called by:
  5279 ;;		_I2C_ReadDataBlock
  5280 ;;		_I2C_DO_TX
  5281 ;;		_I2C_DO_RX
  5282 ;;		_I2C_DO_TX_EMPTY
  5283 ;;		_I2C_DO_ADDRESS_NACK
  5284 ;;		_I2C_DO_RX_EMPTY
  5285 ;; This function uses a non-reentrant model
  5286 ;;
  5287                           
  5288                           
  5289                           ;psect for function _rdBlkRegCompleteHandler
  5290  0296                     _rdBlkRegCompleteHandler:
  5291  0296                     i1l2480:	
  5292                           ;incstack = 0
  5293                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  5294                           
  5295                           
  5296                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
  5297  0296  0879               	movf	rdBlkRegCompleteHandler@ptr,w
  5298  0297  0086               	movwf	6
  5299  0298  0187               	clrf	7
  5300  0299  3F40               	moviw [0]fsr1
  5301  029A  00F0               	movwf	I2C_SetBuffer@bufferSize
  5302  029B  3F41               	moviw [1]fsr1
  5303  029C  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  5304  029D  0879               	movf	rdBlkRegCompleteHandler@ptr,w
  5305  029E  3E02               	addlw	2
  5306  029F  0086               	movwf	6
  5307  02A0  0187               	clrf	7
  5308  02A1  0801               	movf	1,w
  5309  02A2  3183  2305  3182   	fcall	_I2C_SetBuffer
  5310                           
  5311                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  5312  02A5  3000               	movlw	0
  5313  02A6  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  5314  02A7  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  5315  02A8  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  5316  02A9  3183  2315  3182   	fcall	_I2C_SetDataCompleteCallback
  5317  02AC                     i1l2482:
  5318                           
  5319                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
  5320  02AC  3002               	movlw	2
  5321  02AD                     i1l104:
  5322  02AD  0008               	return
  5323  02AE                     __end_of_rdBlkRegCompleteHandler:
  5324                           
  5325                           	psect	text43
  5326  02C1                     __ptext43:	
  5327 ;; *************** function _wr1RegCompleteHandler *****************
  5328 ;; Defined at:
  5329 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
  5330 ;; Parameters:    Size  Location     Type
  5331 ;;  ptr             1    9[COMMON] PTR void 
  5332 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5333 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  5334 ;; Auto vars:     Size  Location     Type
  5335 ;;		None
  5336 ;; Return value:  Size  Location     Type
  5337 ;;                  1    wreg      enum E360
  5338 ;; Registers used:
  5339 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5340 ;; Tracked objects:
  5341 ;;		On entry : 0/0
  5342 ;;		On exit  : 0/0
  5343 ;;		Unchanged: 0/0
  5344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5345 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5348 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5349 ;;Total ram usage:        1 bytes
  5350 ;; Hardware stack levels used: 1
  5351 ;; Hardware stack levels required when called: 2
  5352 ;; This function calls:
  5353 ;;		_I2C_SetBuffer
  5354 ;;		_I2C_SetDataCompleteCallback
  5355 ;; This function is called by:
  5356 ;;		_I2C_Write1ByteRegister
  5357 ;;		_I2C_DO_TX
  5358 ;;		_I2C_DO_RX
  5359 ;;		_I2C_DO_TX_EMPTY
  5360 ;;		_I2C_DO_ADDRESS_NACK
  5361 ;;		_I2C_DO_RX_EMPTY
  5362 ;; This function uses a non-reentrant model
  5363 ;;
  5364                           
  5365                           
  5366                           ;psect for function _wr1RegCompleteHandler
  5367  02C1                     _wr1RegCompleteHandler:
  5368  02C1                     i1l2464:	
  5369                           ;incstack = 0
  5370                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  5371                           
  5372                           
  5373                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
  5374  02C1  3001               	movlw	1
  5375  02C2  00F0               	movwf	I2C_SetBuffer@bufferSize
  5376  02C3  3000               	movlw	0
  5377  02C4  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  5378  02C5  0879               	movf	wr1RegCompleteHandler@ptr,w
  5379  02C6  3183  2305  3182   	fcall	_I2C_SetBuffer
  5380  02C9                     i1l2466:
  5381                           
  5382                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  5383  02C9  3000               	movlw	0
  5384  02CA  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  5385  02CB  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  5386  02CC  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  5387  02CD  3183  2315  3182   	fcall	_I2C_SetDataCompleteCallback
  5388  02D0                     i1l2468:
  5389                           
  5390                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
  5391  02D0  3004               	movlw	4
  5392  02D1                     i1l98:
  5393  02D1  0008               	return
  5394  02D2                     __end_of_wr1RegCompleteHandler:
  5395                           
  5396                           	psect	text44
  5397  02D2                     __ptext44:	
  5398 ;; *************** function _rd2RegCompleteHandler *****************
  5399 ;; Defined at:
  5400 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
  5401 ;; Parameters:    Size  Location     Type
  5402 ;;  ptr             1    9[COMMON] PTR void 
  5403 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5404 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  5405 ;; Auto vars:     Size  Location     Type
  5406 ;;		None
  5407 ;; Return value:  Size  Location     Type
  5408 ;;                  1    wreg      enum E360
  5409 ;; Registers used:
  5410 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5411 ;; Tracked objects:
  5412 ;;		On entry : 0/0
  5413 ;;		On exit  : 0/0
  5414 ;;		Unchanged: 0/0
  5415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5416 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5419 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5420 ;;Total ram usage:        1 bytes
  5421 ;; Hardware stack levels used: 1
  5422 ;; Hardware stack levels required when called: 2
  5423 ;; This function calls:
  5424 ;;		_I2C_SetBuffer
  5425 ;;		_I2C_SetDataCompleteCallback
  5426 ;; This function is called by:
  5427 ;;		_I2C_Read2ByteRegister
  5428 ;;		_I2C_DO_TX
  5429 ;;		_I2C_DO_RX
  5430 ;;		_I2C_DO_TX_EMPTY
  5431 ;;		_I2C_DO_ADDRESS_NACK
  5432 ;;		_I2C_DO_RX_EMPTY
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435                           
  5436                           
  5437                           ;psect for function _rd2RegCompleteHandler
  5438  02D2                     _rd2RegCompleteHandler:
  5439  02D2                     i1l2456:	
  5440                           ;incstack = 0
  5441                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  5442                           
  5443                           
  5444                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
  5445  02D2  3002               	movlw	2
  5446  02D3  00F0               	movwf	I2C_SetBuffer@bufferSize
  5447  02D4  3000               	movlw	0
  5448  02D5  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  5449  02D6  0879               	movf	rd2RegCompleteHandler@ptr,w
  5450  02D7  3183  2305  3182   	fcall	_I2C_SetBuffer
  5451  02DA                     i1l2458:
  5452                           
  5453                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  5454  02DA  3000               	movlw	0
  5455  02DB  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  5456  02DC  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  5457  02DD  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  5458  02DE  3183  2315  3182   	fcall	_I2C_SetDataCompleteCallback
  5459  02E1                     i1l2460:
  5460                           
  5461                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
  5462  02E1  3002               	movlw	2
  5463  02E2                     i1l95:
  5464  02E2  0008               	return
  5465  02E3                     __end_of_rd2RegCompleteHandler:
  5466                           
  5467                           	psect	text45
  5468  02E3                     __ptext45:	
  5469 ;; *************** function _rd1RegCompleteHandler *****************
  5470 ;; Defined at:
  5471 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
  5472 ;; Parameters:    Size  Location     Type
  5473 ;;  ptr             1    9[COMMON] PTR void 
  5474 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5475 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;		None
  5478 ;; Return value:  Size  Location     Type
  5479 ;;                  1    wreg      enum E360
  5480 ;; Registers used:
  5481 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5482 ;; Tracked objects:
  5483 ;;		On entry : 0/0
  5484 ;;		On exit  : 0/0
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5487 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5490 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5491 ;;Total ram usage:        1 bytes
  5492 ;; Hardware stack levels used: 1
  5493 ;; Hardware stack levels required when called: 2
  5494 ;; This function calls:
  5495 ;;		_I2C_SetBuffer
  5496 ;;		_I2C_SetDataCompleteCallback
  5497 ;; This function is called by:
  5498 ;;		_I2C_Read1ByteRegister
  5499 ;;		_I2C_DO_TX
  5500 ;;		_I2C_DO_RX
  5501 ;;		_I2C_DO_TX_EMPTY
  5502 ;;		_I2C_DO_ADDRESS_NACK
  5503 ;;		_I2C_DO_RX_EMPTY
  5504 ;; This function uses a non-reentrant model
  5505 ;;
  5506                           
  5507                           
  5508                           ;psect for function _rd1RegCompleteHandler
  5509  02E3                     _rd1RegCompleteHandler:
  5510  02E3                     i1l2448:	
  5511                           ;incstack = 0
  5512                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  5513                           
  5514                           
  5515                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
  5516  02E3  3001               	movlw	1
  5517  02E4  00F0               	movwf	I2C_SetBuffer@bufferSize
  5518  02E5  3000               	movlw	0
  5519  02E6  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  5520  02E7  0879               	movf	rd1RegCompleteHandler@ptr,w
  5521  02E8  3183  2305  3182   	fcall	_I2C_SetBuffer
  5522  02EB                     i1l2450:
  5523                           
  5524                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  5525  02EB  3000               	movlw	0
  5526  02EC  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  5527  02ED  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  5528  02EE  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  5529  02EF  3183  2315  3182   	fcall	_I2C_SetDataCompleteCallback
  5530  02F2                     i1l2452:
  5531                           
  5532                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
  5533  02F2  3002               	movlw	2
  5534  02F3                     i1l92:
  5535  02F3  0008               	return
  5536  02F4                     __end_of_rd1RegCompleteHandler:
  5537                           
  5538                           	psect	text46
  5539  02F4                     __ptext46:	
  5540 ;; *************** function _wr2RegCompleteHandler *****************
  5541 ;; Defined at:
  5542 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;  ptr             1    9[COMMON] PTR void 
  5545 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5546 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;		None
  5549 ;; Return value:  Size  Location     Type
  5550 ;;                  1    wreg      enum E360
  5551 ;; Registers used:
  5552 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5553 ;; Tracked objects:
  5554 ;;		On entry : 0/0
  5555 ;;		On exit  : 0/0
  5556 ;;		Unchanged: 0/0
  5557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5558 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5561 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5562 ;;Total ram usage:        1 bytes
  5563 ;; Hardware stack levels used: 1
  5564 ;; Hardware stack levels required when called: 2
  5565 ;; This function calls:
  5566 ;;		_I2C_SetBuffer
  5567 ;;		_I2C_SetDataCompleteCallback
  5568 ;; This function is called by:
  5569 ;;		_I2C_Write2ByteRegister
  5570 ;;		_I2C_DO_TX
  5571 ;;		_I2C_DO_RX
  5572 ;;		_I2C_DO_TX_EMPTY
  5573 ;;		_I2C_DO_ADDRESS_NACK
  5574 ;;		_I2C_DO_RX_EMPTY
  5575 ;; This function uses a non-reentrant model
  5576 ;;
  5577                           
  5578                           
  5579                           ;psect for function _wr2RegCompleteHandler
  5580  02F4                     _wr2RegCompleteHandler:
  5581  02F4                     i1l2472:	
  5582                           ;incstack = 0
  5583                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  5584                           
  5585                           
  5586                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
  5587  02F4  3002               	movlw	2
  5588  02F5  00F0               	movwf	I2C_SetBuffer@bufferSize
  5589  02F6  3000               	movlw	0
  5590  02F7  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  5591  02F8  0879               	movf	wr2RegCompleteHandler@ptr,w
  5592  02F9  3183  2305  3182   	fcall	_I2C_SetBuffer
  5593  02FC                     i1l2474:
  5594                           
  5595                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  5596  02FC  3000               	movlw	0
  5597  02FD  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  5598  02FE  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  5599  02FF  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  5600  0300  3183  2315  3182   	fcall	_I2C_SetDataCompleteCallback
  5601  0303                     i1l2476:
  5602                           
  5603                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
  5604  0303  3004               	movlw	4
  5605  0304                     i1l101:
  5606  0304  0008               	return
  5607  0305                     __end_of_wr2RegCompleteHandler:
  5608                           
  5609                           	psect	text47
  5610  0315                     __ptext47:	
  5611 ;; *************** function _I2C_SetDataCompleteCallback *****************
  5612 ;; Defined at:
  5613 ;;		line 274 in file "mcc_generated_files/i2c_master.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
  5616 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  5617 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  5618 ;;  ptr             1    7[COMMON] PTR void 
  5619 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5620 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  5621 ;; Auto vars:     Size  Location     Type
  5622 ;;		None
  5623 ;; Return value:  Size  Location     Type
  5624 ;;                  1    wreg      void 
  5625 ;; Registers used:
  5626 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5627 ;; Tracked objects:
  5628 ;;		On entry : 0/0
  5629 ;;		On exit  : 0/0
  5630 ;;		Unchanged: 0/0
  5631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5632 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5634 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5635 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5636 ;;Total ram usage:        4 bytes
  5637 ;; Hardware stack levels used: 1
  5638 ;; Hardware stack levels required when called: 1
  5639 ;; This function calls:
  5640 ;;		_I2C_SetCallback
  5641 ;; This function is called by:
  5642 ;;		_rd1RegCompleteHandler
  5643 ;;		_rd2RegCompleteHandler
  5644 ;;		_wr1RegCompleteHandler
  5645 ;;		_wr2RegCompleteHandler
  5646 ;;		_rdBlkRegCompleteHandler
  5647 ;;		_I2C_Read1ByteRegister
  5648 ;;		_I2C_Read2ByteRegister
  5649 ;;		_I2C_Write1ByteRegister
  5650 ;;		_I2C_Write2ByteRegister
  5651 ;;		_I2C_ReadDataBlock
  5652 ;; This function uses a non-reentrant model
  5653 ;;
  5654                           
  5655                           
  5656                           ;psect for function _I2C_SetDataCompleteCallback
  5657  0315                     _I2C_SetDataCompleteCallback:
  5658  0315                     i1l2434:	
  5659                           ;incstack = 0
  5660                           ; Regs used in _I2C_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  5661                           
  5662                           
  5663                           ;mcc_generated_files/i2c_master.c: 274: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 275: {;mcc_generated_files/i2c_master.c
      +                          : 276:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  5664  0315  0876               	movf	I2C_SetDataCompleteCallback@cb+1,w
  5665  0316  00F1               	movwf	I2C_SetCallback@cb+1
  5666  0317  0875               	movf	I2C_SetDataCompleteCallback@cb,w
  5667  0318  00F0               	movwf	I2C_SetCallback@cb
  5668  0319  0877               	movf	I2C_SetDataCompleteCallback@ptr,w
  5669  031A  00F8               	movwf	??_I2C_SetDataCompleteCallback
  5670  031B  0878               	movf	??_I2C_SetDataCompleteCallback,w
  5671  031C  00F2               	movwf	I2C_SetCallback@ptr
  5672  031D  3000               	movlw	0
  5673  031E  3181  21F4  3183   	fcall	_I2C_SetCallback
  5674  0321                     i1l540:
  5675  0321  0008               	return
  5676  0322                     __end_of_I2C_SetDataCompleteCallback:
  5677                           
  5678                           	psect	text48
  5679  01F4                     __ptext48:	
  5680 ;; *************** function _I2C_SetCallback *****************
  5681 ;; Defined at:
  5682 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
  5683 ;; Parameters:    Size  Location     Type
  5684 ;;  idx             1    wreg     enum E3356
  5685 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
  5686 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  5687 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  5688 ;;  ptr             1    2[COMMON] PTR void 
  5689 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5690 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  5691 ;; Auto vars:     Size  Location     Type
  5692 ;;  idx             1    4[COMMON] enum E3356
  5693 ;; Return value:  Size  Location     Type
  5694 ;;                  1    wreg      void 
  5695 ;; Registers used:
  5696 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5697 ;; Tracked objects:
  5698 ;;		On entry : 0/0
  5699 ;;		On exit  : 0/0
  5700 ;;		Unchanged: 0/0
  5701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5702 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5703 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5704 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5705 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5706 ;;Total ram usage:        5 bytes
  5707 ;; Hardware stack levels used: 1
  5708 ;; This function calls:
  5709 ;;		Nothing
  5710 ;; This function is called by:
  5711 ;;		_I2C_SetDataCompleteCallback
  5712 ;;		_I2C_SetWriteCollisionCallback
  5713 ;;		_I2C_SetAddressNackCallback
  5714 ;;		_I2C_SetDataNackCallback
  5715 ;;		_I2C_SetTimeoutCallback
  5716 ;; This function uses a non-reentrant model
  5717 ;;
  5718                           
  5719                           
  5720                           ;psect for function _I2C_SetCallback
  5721  01F4                     _I2C_SetCallback:
  5722                           
  5723                           ;incstack = 0
  5724                           ; Regs used in _I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
  5725                           ;I2C_SetCallback@idx stored from wreg
  5726  01F4  00F4               	movwf	I2C_SetCallback@idx
  5727  01F5                     i1l2428:
  5728                           
  5729                           ;mcc_generated_files/i2c_master.c: 304: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 305: {;mcc_generate
      +                          d_files/i2c_master.c: 306:     if(cb)
  5730  01F5  0870               	movf	I2C_SetCallback@cb,w
  5731  01F6  0471               	iorwf	I2C_SetCallback@cb+1,w
  5732  01F7  1903               	btfsc	3,2
  5733  01F8  29FA               	goto	u57_21
  5734  01F9  29FB               	goto	u57_20
  5735  01FA                     u57_21:
  5736  01FA  2A0C               	goto	i1l2432
  5737  01FB                     u57_20:
  5738  01FB                     i1l2430:
  5739                           
  5740                           ;mcc_generated_files/i2c_master.c: 307:     {;mcc_generated_files/i2c_master.c: 308:    
      +                               I2C_Status.callbackTable[idx] = cb;
  5741  01FB  3574               	lslf	I2C_SetCallback@idx,w
  5742  01FC  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  5743  01FD  0086               	movwf	6
  5744  01FE  0187               	clrf	7
  5745  01FF  0870               	movf	I2C_SetCallback@cb,w
  5746  0200  3FC0               	movwi [0]fsr1
  5747  0201  0871               	movf	I2C_SetCallback@cb+1,w
  5748  0202  3FC1               	movwi [1]fsr1
  5749                           
  5750                           ;mcc_generated_files/i2c_master.c: 309:         I2C_Status.callbackPayload[idx] = ptr;
  5751  0203  0872               	movf	I2C_SetCallback@ptr,w
  5752  0204  00F3               	movwf	??_I2C_SetCallback
  5753  0205  0874               	movf	I2C_SetCallback@idx,w
  5754  0206  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  5755  0207  0086               	movwf	6
  5756  0208  0187               	clrf	7
  5757  0209  0873               	movf	??_I2C_SetCallback,w
  5758  020A  0081               	movwf	1
  5759                           
  5760                           ;mcc_generated_files/i2c_master.c: 310:     }
  5761  020B  2A19               	goto	i1l560
  5762  020C                     i1l2432:
  5763                           
  5764                           ;mcc_generated_files/i2c_master.c: 312:     {;mcc_generated_files/i2c_master.c: 313:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  5765  020C  3574               	lslf	I2C_SetCallback@idx,w
  5766  020D  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  5767  020E  0086               	movwf	6
  5768  020F  0187               	clrf	7
  5769  0210  30F7               	movlw	low _I2C_CallbackReturnStop
  5770  0211  3FC0               	movwi [0]fsr1
  5771  0212  3003               	movlw	high _I2C_CallbackReturnStop
  5772  0213  3FC1               	movwi [1]fsr1
  5773                           
  5774                           ;mcc_generated_files/i2c_master.c: 314:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  5775  0214  0874               	movf	I2C_SetCallback@idx,w
  5776  0215  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  5777  0216  0086               	movwf	6
  5778  0217  0187               	clrf	7
  5779  0218  0181               	clrf	1
  5780  0219                     i1l560:
  5781  0219  0008               	return
  5782  021A                     __end_of_I2C_SetCallback:
  5783                           
  5784                           	psect	text49
  5785  0305                     __ptext49:	
  5786 ;; *************** function _I2C_SetBuffer *****************
  5787 ;; Defined at:
  5788 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
  5789 ;; Parameters:    Size  Location     Type
  5790 ;;  buffer          1    wreg     PTR void 
  5791 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
  5792 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  5793 ;;		 -> NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
  5794 ;;  bufferSize      2    0[COMMON] unsigned int 
  5795 ;; Auto vars:     Size  Location     Type
  5796 ;;  buffer          1    3[COMMON] PTR void 
  5797 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
  5798 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  5799 ;;		 -> NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
  5800 ;; Return value:  Size  Location     Type
  5801 ;;                  1    wreg      void 
  5802 ;; Registers used:
  5803 ;;		wreg
  5804 ;; Tracked objects:
  5805 ;;		On entry : 0/0
  5806 ;;		On exit  : 0/0
  5807 ;;		Unchanged: 0/0
  5808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5809 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5810 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5811 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5812 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5813 ;;Total ram usage:        4 bytes
  5814 ;; Hardware stack levels used: 1
  5815 ;; This function calls:
  5816 ;;		Nothing
  5817 ;; This function is called by:
  5818 ;;		_rd1RegCompleteHandler
  5819 ;;		_rd2RegCompleteHandler
  5820 ;;		_wr1RegCompleteHandler
  5821 ;;		_wr2RegCompleteHandler
  5822 ;;		_rdBlkRegCompleteHandler
  5823 ;;		_I2C_Read1ByteRegister
  5824 ;;		_I2C_Read2ByteRegister
  5825 ;;		_I2C_Write1ByteRegister
  5826 ;;		_I2C_Write2ByteRegister
  5827 ;;		_I2C_WriteNBytes
  5828 ;;		_I2C_ReadNBytes
  5829 ;;		_I2C_ReadDataBlock
  5830 ;; This function uses a non-reentrant model
  5831 ;;
  5832                           
  5833                           
  5834                           ;psect for function _I2C_SetBuffer
  5835  0305                     _I2C_SetBuffer:
  5836                           
  5837                           ;incstack = 0
  5838                           ; Regs used in _I2C_SetBuffer: [wreg]
  5839                           ;I2C_SetBuffer@buffer stored from wreg
  5840  0305  00F3               	movwf	I2C_SetBuffer@buffer
  5841  0306                     i1l2436:
  5842                           
  5843                           ;mcc_generated_files/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 265: {;mcc_generated_files/i2c_master.c: 266:     
      +                          if(I2C_Status.bufferFree)
  5844  0306  0020               	movlb	0	; select bank0
  5845  0307  1DBC               	btfss	_I2C_Status+28,3
  5846  0308  2B0A               	goto	u58_21
  5847  0309  2B0B               	goto	u58_20
  5848  030A                     u58_21:
  5849  030A  2B14               	goto	i1l537
  5850  030B                     u58_20:
  5851  030B                     i1l2438:
  5852                           
  5853                           ;mcc_generated_files/i2c_master.c: 267:     {;mcc_generated_files/i2c_master.c: 268:    
      +                               I2C_Status.data_ptr = buffer;
  5854  030B  0873               	movf	I2C_SetBuffer@buffer,w
  5855  030C  00F2               	movwf	??_I2C_SetBuffer
  5856  030D  0872               	movf	??_I2C_SetBuffer,w
  5857  030E  00B7               	movwf	low ((_I2C_Status| 0+23))
  5858                           
  5859                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.data_length = bufferSize;
  5860  030F  0871               	movf	I2C_SetBuffer@bufferSize+1,w
  5861  0310  00B9               	movwf	_I2C_Status+25
  5862  0311  0870               	movf	I2C_SetBuffer@bufferSize,w
  5863  0312  00B8               	movwf	_I2C_Status+24
  5864  0313                     i1l2440:
  5865                           
  5866                           ;mcc_generated_files/i2c_master.c: 270:         I2C_Status.bufferFree = 0;
  5867  0313  11BC               	bcf	_I2C_Status+28,3
  5868  0314                     i1l537:
  5869  0314  0008               	return
  5870  0315                     __end_of_I2C_SetBuffer:
  5871                           
  5872                           	psect	text50
  5873  03EF                     __ptext50:	
  5874 ;; *************** function _I2C_MasterStop *****************
  5875 ;; Defined at:
  5876 ;;		line 594 in file "mcc_generated_files/i2c_master.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;		None
  5879 ;; Auto vars:     Size  Location     Type
  5880 ;;		None
  5881 ;; Return value:  Size  Location     Type
  5882 ;;                  1    wreg      void 
  5883 ;; Registers used:
  5884 ;;		None
  5885 ;; Tracked objects:
  5886 ;;		On entry : 0/0
  5887 ;;		On exit  : 0/0
  5888 ;;		Unchanged: 0/0
  5889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5894 ;;Total ram usage:        0 bytes
  5895 ;; Hardware stack levels used: 1
  5896 ;; This function calls:
  5897 ;;		Nothing
  5898 ;; This function is called by:
  5899 ;;		_I2C_DO_SEND_STOP
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902                           
  5903                           
  5904                           ;psect for function _I2C_MasterStop
  5905  03EF                     _I2C_MasterStop:
  5906  03EF                     i1l2444:	
  5907                           ;incstack = 0
  5908                           ; Regs used in _I2C_MasterStop: []
  5909                           
  5910                           
  5911                           ;mcc_generated_files/i2c_master.c: 596:     SSPCON2bits.PEN = 1;
  5912  03EF  0024               	movlb	4	; select bank4
  5913  03F0  1516               	bsf	22,2	;volatile
  5914  03F1                     i1l703:
  5915  03F1  0008               	return
  5916  03F2                     __end_of_I2C_MasterStop:
  5917                           
  5918                           	psect	text51
  5919  03F2                     __ptext51:	
  5920 ;; *************** function _I2C_MasterEnableRestart *****************
  5921 ;; Defined at:
  5922 ;;		line 574 in file "mcc_generated_files/i2c_master.c"
  5923 ;; Parameters:    Size  Location     Type
  5924 ;;		None
  5925 ;; Auto vars:     Size  Location     Type
  5926 ;;		None
  5927 ;; Return value:  Size  Location     Type
  5928 ;;                  1    wreg      void 
  5929 ;; Registers used:
  5930 ;;		None
  5931 ;; Tracked objects:
  5932 ;;		On entry : 0/0
  5933 ;;		On exit  : 0/0
  5934 ;;		Unchanged: 0/0
  5935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5940 ;;Total ram usage:        0 bytes
  5941 ;; Hardware stack levels used: 1
  5942 ;; This function calls:
  5943 ;;		Nothing
  5944 ;; This function is called by:
  5945 ;;		_I2C_DO_SEND_RESTART_READ
  5946 ;;		_I2C_DO_SEND_RESTART_WRITE
  5947 ;;		_I2C_DO_SEND_RESTART
  5948 ;;		_I2C_DO_RX_EMPTY
  5949 ;; This function uses a non-reentrant model
  5950 ;;
  5951                           
  5952                           
  5953                           ;psect for function _I2C_MasterEnableRestart
  5954  03F2                     _I2C_MasterEnableRestart:
  5955  03F2                     i1l2442:	
  5956                           ;incstack = 0
  5957                           ; Regs used in _I2C_MasterEnableRestart: []
  5958                           
  5959                           
  5960                           ;mcc_generated_files/i2c_master.c: 576:     SSPCON2bits.RSEN = 1;
  5961  03F2  0024               	movlb	4	; select bank4
  5962  03F3  1496               	bsf	22,1	;volatile
  5963  03F4                     i1l691:
  5964  03F4  0008               	return
  5965  03F5                     __end_of_I2C_MasterEnableRestart:
  5966                           
  5967                           	psect	text52
  5968  021A                     __ptext52:	
  5969 ;; *************** function _EUSART_Transmit_ISR *****************
  5970 ;; Defined at:
  5971 ;;		line 206 in file "mcc_generated_files/eusart.c"
  5972 ;; Parameters:    Size  Location     Type
  5973 ;;		None
  5974 ;; Auto vars:     Size  Location     Type
  5975 ;;		None
  5976 ;; Return value:  Size  Location     Type
  5977 ;;                  1    wreg      void 
  5978 ;; Registers used:
  5979 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5980 ;; Tracked objects:
  5981 ;;		On entry : 0/0
  5982 ;;		On exit  : 0/0
  5983 ;;		Unchanged: 0/0
  5984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5987 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5988 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5989 ;;Total ram usage:        1 bytes
  5990 ;; Hardware stack levels used: 1
  5991 ;; This function calls:
  5992 ;;		Nothing
  5993 ;; This function is called by:
  5994 ;;		_EUSART_Initialize
  5995 ;;		_INTERRUPT_InterruptManager
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           
  5999                           
  6000                           ;psect for function _EUSART_Transmit_ISR
  6001  021A                     _EUSART_Transmit_ISR:
  6002  021A                     i1l2848:	
  6003                           ;incstack = 0
  6004                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  6005                           
  6006                           
  6007                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  6008  021A  3008               	movlw	8
  6009  021B  0020               	movlb	0	; select bank0
  6010  021C  0266               	subwf	_eusartTxBufferRemaining,w	;volatile
  6011  021D  1803               	skipnc
  6012  021E  2A20               	goto	u71_21
  6013  021F  2A21               	goto	u71_20
  6014  0220                     u71_21:
  6015  0220  2A39               	goto	i1l332
  6016  0221                     u71_20:
  6017  0221                     i1l2850:
  6018                           
  6019                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  6020  0221  0867               	movf	_eusartTxTail,w
  6021  0222  3E4D               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  6022  0223  0086               	movwf	6
  6023  0224  0187               	clrf	7
  6024  0225  0801               	movf	1,w
  6025  0226  0023               	movlb	3	; select bank3
  6026  0227  009A               	movwf	26	;volatile
  6027  0228                     i1l2852:
  6028  0228  3001               	movlw	1
  6029  0229  00F0               	movwf	??_EUSART_Transmit_ISR
  6030  022A  0870               	movf	??_EUSART_Transmit_ISR,w
  6031  022B  0020               	movlb	0	; select bank0
  6032  022C  07E7               	addwf	_eusartTxTail,f	;volatile
  6033  022D                     i1l2854:
  6034                           
  6035                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  6036  022D  3008               	movlw	8
  6037  022E  0267               	subwf	_eusartTxTail,w	;volatile
  6038  022F  1C03               	skipc
  6039  0230  2A32               	goto	u72_21
  6040  0231  2A33               	goto	u72_20
  6041  0232                     u72_21:
  6042  0232  2A34               	goto	i1l2858
  6043  0233                     u72_20:
  6044  0233                     i1l2856:
  6045                           
  6046                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
  6047  0233  01E7               	clrf	_eusartTxTail	;volatile
  6048  0234                     i1l2858:
  6049                           
  6050                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
  6051  0234  3001               	movlw	1
  6052  0235  00F0               	movwf	??_EUSART_Transmit_ISR
  6053  0236  0870               	movf	??_EUSART_Transmit_ISR,w
  6054  0237  07E6               	addwf	_eusartTxBufferRemaining,f	;volatile
  6055                           
  6056                           ;mcc_generated_files/eusart.c: 218:     }
  6057  0238  2A3B               	goto	i1l335
  6058  0239                     i1l332:	
  6059                           ;mcc_generated_files/eusart.c: 219:     else
  6060                           
  6061                           
  6062                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TXIE = 0;
  6063  0239  0021               	movlb	1	; select bank1
  6064  023A  1211               	bcf	17,4	;volatile
  6065  023B                     i1l335:
  6066  023B  0008               	return
  6067  023C                     __end_of_EUSART_Transmit_ISR:
  6068                           
  6069                           	psect	text53
  6070  0134                     __ptext53:	
  6071 ;; *************** function _EUSART_Receive_ISR *****************
  6072 ;; Defined at:
  6073 ;;		line 225 in file "mcc_generated_files/eusart.c"
  6074 ;; Parameters:    Size  Location     Type
  6075 ;;		None
  6076 ;; Auto vars:     Size  Location     Type
  6077 ;;		None
  6078 ;; Return value:  Size  Location     Type
  6079 ;;                  1    wreg      void 
  6080 ;; Registers used:
  6081 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6082 ;; Tracked objects:
  6083 ;;		On entry : 0/0
  6084 ;;		On exit  : 0/0
  6085 ;;		Unchanged: 0/0
  6086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6091 ;;Total ram usage:        0 bytes
  6092 ;; Hardware stack levels used: 1
  6093 ;; Hardware stack levels required when called: 2
  6094 ;; This function calls:
  6095 ;;		Absolute function
  6096 ;;		_EUSART_DefaultErrorHandler
  6097 ;;		_EUSART_DefaultFramingErrorHandler
  6098 ;;		_EUSART_DefaultOverrunErrorHandler
  6099 ;;		_EUSART_RxDataHandler
  6100 ;; This function is called by:
  6101 ;;		_EUSART_Initialize
  6102 ;;		_INTERRUPT_InterruptManager
  6103 ;; This function uses a non-reentrant model
  6104 ;;
  6105                           
  6106                           
  6107                           ;psect for function _EUSART_Receive_ISR
  6108  0134                     _EUSART_Receive_ISR:
  6109  0134                     i1l2860:	
  6110                           ;incstack = 0
  6111                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6112                           
  6113                           
  6114                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  6115  0134  0020               	movlb	0	; select bank0
  6116  0135  0865               	movf	_eusartRxHead,w	;volatile
  6117  0136  3E3D               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6118  0137  0086               	movwf	6
  6119  0138  0187               	clrf	7
  6120  0139  0181               	clrf	1
  6121  013A                     i1l2862:
  6122                           
  6123                           ;mcc_generated_files/eusart.c: 230:     if(RCSTAbits.FERR){
  6124  013A  0023               	movlb	3	; select bank3
  6125  013B  1D1D               	btfss	29,2	;volatile
  6126  013C  293E               	goto	u73_21
  6127  013D  293F               	goto	u73_20
  6128  013E                     u73_21:
  6129  013E  294A               	goto	i1l2868
  6130  013F                     u73_20:
  6131  013F                     i1l2864:
  6132                           
  6133                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  6134  013F  0020               	movlb	0	; select bank0
  6135  0140  0865               	movf	_eusartRxHead,w	;volatile
  6136  0141  3E3D               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6137  0142  0086               	movwf	6
  6138  0143  0187               	clrf	7
  6139  0144  1481               	bsf	1,1
  6140  0145                     i1l2866:
  6141                           
  6142                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
  6143  0145  085A               	movf	_EUSART_FramingErrorHandler+1,w
  6144  0146  008A               	movwf	10
  6145  0147  0859               	movf	_EUSART_FramingErrorHandler,w
  6146  0148  000A               	callw
  6147  0149  3181               	pagesel	$
  6148  014A                     i1l2868:
  6149                           
  6150                           ;mcc_generated_files/eusart.c: 235:     if(RCSTAbits.OERR){
  6151  014A  0023               	movlb	3	; select bank3
  6152  014B  1C9D               	btfss	29,1	;volatile
  6153  014C  294E               	goto	u74_21
  6154  014D  294F               	goto	u74_20
  6155  014E                     u74_21:
  6156  014E  295A               	goto	i1l2874
  6157  014F                     u74_20:
  6158  014F                     i1l2870:
  6159                           
  6160                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  6161  014F  0020               	movlb	0	; select bank0
  6162  0150  0865               	movf	_eusartRxHead,w	;volatile
  6163  0151  3E3D               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6164  0152  0086               	movwf	6
  6165  0153  0187               	clrf	7
  6166  0154  1501               	bsf	1,2
  6167  0155                     i1l2872:
  6168                           
  6169                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
  6170  0155  0858               	movf	_EUSART_OverrunErrorHandler+1,w
  6171  0156  008A               	movwf	10
  6172  0157  0857               	movf	_EUSART_OverrunErrorHandler,w
  6173  0158  000A               	callw
  6174  0159  3181               	pagesel	$
  6175  015A                     i1l2874:
  6176                           
  6177                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
  6178  015A  0020               	movlb	0	; select bank0
  6179  015B  0865               	movf	_eusartRxHead,w	;volatile
  6180  015C  3E3D               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6181  015D  0086               	movwf	6
  6182  015E  0187               	clrf	7
  6183  015F  0801               	movf	1,w
  6184  0160  1903               	btfsc	3,2
  6185  0161  2963               	goto	u75_21
  6186  0162  2964               	goto	u75_20
  6187  0163                     u75_21:
  6188  0163  296A               	goto	i1l2878
  6189  0164                     u75_20:
  6190  0164                     i1l2876:
  6191                           
  6192                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
  6193  0164  0856               	movf	_EUSART_ErrorHandler+1,w
  6194  0165  008A               	movwf	10
  6195  0166  0855               	movf	_EUSART_ErrorHandler,w
  6196  0167  000A               	callw
  6197  0168  3181               	pagesel	$
  6198                           
  6199                           ;mcc_generated_files/eusart.c: 242:     } else {
  6200  0169  296D               	goto	i1l342
  6201  016A                     i1l2878:
  6202                           
  6203                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
  6204  016A  3182  227C  3181   	fcall	_EUSART_RxDataHandler
  6205  016D                     i1l342:
  6206  016D  0008               	return
  6207  016E                     __end_of_EUSART_Receive_ISR:
  6208                           
  6209                           	psect	text54
  6210  03DB                     __ptext54:	
  6211 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  6212 ;; Defined at:
  6213 ;;		line 261 in file "mcc_generated_files/eusart.c"
  6214 ;; Parameters:    Size  Location     Type
  6215 ;;		None
  6216 ;; Auto vars:     Size  Location     Type
  6217 ;;		None
  6218 ;; Return value:  Size  Location     Type
  6219 ;;                  1    wreg      void 
  6220 ;; Registers used:
  6221 ;;		None
  6222 ;; Tracked objects:
  6223 ;;		On entry : 0/0
  6224 ;;		On exit  : 0/0
  6225 ;;		Unchanged: 0/0
  6226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6231 ;;Total ram usage:        0 bytes
  6232 ;; Hardware stack levels used: 1
  6233 ;; This function calls:
  6234 ;;		Nothing
  6235 ;; This function is called by:
  6236 ;;		_EUSART_Initialize
  6237 ;;		_EUSART_Receive_ISR
  6238 ;; This function uses a non-reentrant model
  6239 ;;
  6240                           
  6241                           
  6242                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  6243  03DB                     _EUSART_DefaultOverrunErrorHandler:
  6244  03DB                     i1l2792:	
  6245                           ;incstack = 0
  6246                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  6247                           
  6248                           
  6249                           ;mcc_generated_files/eusart.c: 264:     RCSTAbits.CREN = 0;
  6250  03DB  0023               	movlb	3	; select bank3
  6251  03DC  121D               	bcf	29,4	;volatile
  6252                           
  6253                           ;mcc_generated_files/eusart.c: 265:     RCSTAbits.CREN = 1;
  6254  03DD  161D               	bsf	29,4	;volatile
  6255  03DE                     i1l352:
  6256  03DE  0008               	return
  6257  03DF                     __end_of_EUSART_DefaultOverrunErrorHandler:
  6258                           
  6259                           	psect	text55
  6260  03F9                     __ptext55:	
  6261 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  6262 ;; Defined at:
  6263 ;;		line 259 in file "mcc_generated_files/eusart.c"
  6264 ;; Parameters:    Size  Location     Type
  6265 ;;		None
  6266 ;; Auto vars:     Size  Location     Type
  6267 ;;		None
  6268 ;; Return value:  Size  Location     Type
  6269 ;;                  1    wreg      void 
  6270 ;; Registers used:
  6271 ;;		None
  6272 ;; Tracked objects:
  6273 ;;		On entry : 0/0
  6274 ;;		On exit  : 0/0
  6275 ;;		Unchanged: 0/0
  6276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6281 ;;Total ram usage:        0 bytes
  6282 ;; Hardware stack levels used: 1
  6283 ;; This function calls:
  6284 ;;		Nothing
  6285 ;; This function is called by:
  6286 ;;		_EUSART_Initialize
  6287 ;;		_EUSART_Receive_ISR
  6288 ;; This function uses a non-reentrant model
  6289 ;;
  6290                           
  6291                           
  6292                           ;psect for function _EUSART_DefaultFramingErrorHandler
  6293  03F9                     _EUSART_DefaultFramingErrorHandler:
  6294  03F9                     i1l349:	
  6295                           ;incstack = 0
  6296                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  6297                           
  6298  03F9  0008               	return
  6299  03FA                     __end_of_EUSART_DefaultFramingErrorHandler:
  6300                           
  6301                           	psect	text56
  6302  03DF                     __ptext56:	
  6303 ;; *************** function _EUSART_DefaultErrorHandler *****************
  6304 ;; Defined at:
  6305 ;;		line 269 in file "mcc_generated_files/eusart.c"
  6306 ;; Parameters:    Size  Location     Type
  6307 ;;		None
  6308 ;; Auto vars:     Size  Location     Type
  6309 ;;		None
  6310 ;; Return value:  Size  Location     Type
  6311 ;;                  1    wreg      void 
  6312 ;; Registers used:
  6313 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6314 ;; Tracked objects:
  6315 ;;		On entry : 0/0
  6316 ;;		On exit  : 0/0
  6317 ;;		Unchanged: 0/0
  6318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6323 ;;Total ram usage:        0 bytes
  6324 ;; Hardware stack levels used: 1
  6325 ;; Hardware stack levels required when called: 1
  6326 ;; This function calls:
  6327 ;;		_EUSART_RxDataHandler
  6328 ;; This function is called by:
  6329 ;;		_EUSART_Initialize
  6330 ;;		_EUSART_Receive_ISR
  6331 ;; This function uses a non-reentrant model
  6332 ;;
  6333                           
  6334                           
  6335                           ;psect for function _EUSART_DefaultErrorHandler
  6336  03DF                     _EUSART_DefaultErrorHandler:
  6337  03DF                     i1l2794:	
  6338                           ;incstack = 0
  6339                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6340                           
  6341                           
  6342                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
  6343  03DF  3182  227C  3183   	fcall	_EUSART_RxDataHandler
  6344  03E2                     i1l355:
  6345  03E2  0008               	return
  6346  03E3                     __end_of_EUSART_DefaultErrorHandler:
  6347                           
  6348                           	psect	text57
  6349  027C                     __ptext57:	
  6350 ;; *************** function _EUSART_RxDataHandler *****************
  6351 ;; Defined at:
  6352 ;;		line 249 in file "mcc_generated_files/eusart.c"
  6353 ;; Parameters:    Size  Location     Type
  6354 ;;		None
  6355 ;; Auto vars:     Size  Location     Type
  6356 ;;		None
  6357 ;; Return value:  Size  Location     Type
  6358 ;;                  1    wreg      void 
  6359 ;; Registers used:
  6360 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6361 ;; Tracked objects:
  6362 ;;		On entry : 0/0
  6363 ;;		On exit  : 0/0
  6364 ;;		Unchanged: 0/0
  6365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6368 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6369 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6370 ;;Total ram usage:        1 bytes
  6371 ;; Hardware stack levels used: 1
  6372 ;; This function calls:
  6373 ;;		Nothing
  6374 ;; This function is called by:
  6375 ;;		_EUSART_Receive_ISR
  6376 ;;		_EUSART_DefaultErrorHandler
  6377 ;; This function uses a non-reentrant model
  6378 ;;
  6379                           
  6380                           
  6381                           ;psect for function _EUSART_RxDataHandler
  6382  027C                     _EUSART_RxDataHandler:
  6383  027C                     i1l2556:	
  6384                           ;incstack = 0
  6385                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  6386                           
  6387                           
  6388                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RCREG;
  6389  027C  0023               	movlb	3	; select bank3
  6390  027D  0819               	movf	25,w	;volatile
  6391  027E  00F0               	movwf	??_EUSART_RxDataHandler
  6392  027F  0020               	movlb	0	; select bank0
  6393  0280  0865               	movf	_eusartRxHead,w
  6394  0281  3E45               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  6395  0282  0086               	movwf	6
  6396  0283  0187               	clrf	7
  6397  0284  0870               	movf	??_EUSART_RxDataHandler,w
  6398  0285  0081               	movwf	1
  6399  0286                     i1l2558:
  6400  0286  3001               	movlw	1
  6401  0287  00F0               	movwf	??_EUSART_RxDataHandler
  6402  0288  0870               	movf	??_EUSART_RxDataHandler,w
  6403  0289  07E5               	addwf	_eusartRxHead,f	;volatile
  6404  028A                     i1l2560:
  6405                           
  6406                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  6407  028A  3008               	movlw	8
  6408  028B  0265               	subwf	_eusartRxHead,w	;volatile
  6409  028C  1C03               	skipc
  6410  028D  2A8F               	goto	u59_21
  6411  028E  2A90               	goto	u59_20
  6412  028F                     u59_21:
  6413  028F  2A91               	goto	i1l2564
  6414  0290                     u59_20:
  6415  0290                     i1l2562:
  6416                           
  6417                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
  6418  0290  01E5               	clrf	_eusartRxHead	;volatile
  6419  0291                     i1l2564:
  6420                           
  6421                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
  6422  0291  3001               	movlw	1
  6423  0292  00F0               	movwf	??_EUSART_RxDataHandler
  6424  0293  0870               	movf	??_EUSART_RxDataHandler,w
  6425  0294  07E4               	addwf	_eusartRxCount,f	;volatile
  6426  0295                     i1l346:
  6427  0295  0008               	return
  6428  0296                     __end_of_EUSART_RxDataHandler:
  6429  007E                     btemp	set	126	;btemp
  6430  007E                     int$flags	set	126
  6431  007E                     wtemp0	set	126
  6432                           
  6433                           	psect	idloc
  6434                           
  6435                           ;Config register IDLOC0 @ 0x8000
  6436                           ;	unspecified, using default values
  6437  8000                     	org	32768
  6438  8000  3FFF               	dw	16383
  6439                           
  6440                           ;Config register IDLOC1 @ 0x8001
  6441                           ;	unspecified, using default values
  6442  8001                     	org	32769
  6443  8001  3FFF               	dw	16383
  6444                           
  6445                           ;Config register IDLOC2 @ 0x8002
  6446                           ;	unspecified, using default values
  6447  8002                     	org	32770
  6448  8002  3FFF               	dw	16383
  6449                           
  6450                           ;Config register IDLOC3 @ 0x8003
  6451                           ;	unspecified, using default values
  6452  8003                     	org	32771
  6453  8003  3FFF               	dw	16383
  6454                           
  6455                           	psect	config
  6456                           
  6457                           ;Config register CONFIG1 @ 0x8007
  6458                           ;	Oscillator Selection
  6459                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  6460                           ;	Watchdog Timer Enable
  6461                           ;	WDTE = OFF, WDT disabled
  6462                           ;	Power-up Timer Enable
  6463                           ;	PWRTE = OFF, PWRT disabled
  6464                           ;	MCLR Pin Function Select
  6465                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  6466                           ;	Flash Program Memory Code Protection
  6467                           ;	CP = OFF, Program memory code protection is disabled
  6468                           ;	Data Memory Code Protection
  6469                           ;	CPD = OFF, Data memory code protection is disabled
  6470                           ;	Brown-out Reset Enable
  6471                           ;	BOREN = ON, Brown-out Reset enabled
  6472                           ;	Clock Out Enable
  6473                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  6474                           ;	Internal/External Switchover
  6475                           ;	IESO = ON, Internal/External Switchover mode is enabled
  6476                           ;	Fail-Safe Clock Monitor Enable
  6477                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  6478  8007                     	org	32775
  6479  8007  3FE4               	dw	16356
  6480                           
  6481                           ;Config register CONFIG2 @ 0x8008
  6482                           ;	Flash Memory Self-Write Protection
  6483                           ;	WRT = OFF, Write protection off
  6484                           ;	Voltage Regulator Capacitor Enable
  6485                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  6486                           ;	PLL Enable
  6487                           ;	PLLEN = ON, 4x PLL enabled
  6488                           ;	Stack Overflow/Underflow Reset Enable
  6489                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  6490                           ;	Brown-out Reset Voltage Selection
  6491                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  6492                           ;	Low-Voltage Programming Enable
  6493                           ;	LVP = ON, Low-voltage programming enabled
  6494  8008                     	org	32776
  6495  8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    32
    Data        0
    BSS         74
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      4      77
    BANK1            80      2       2
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_DO_TX$2081$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$2086	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$2081	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2080	const PTR FTN()enum E3338 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S803$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S803$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S803$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S803$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c_fsmStateTable	const PTR FTN()enum E3338[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), Absolute function(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S95$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _SYSTEM_Initialize->_EUSART_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _I2C_MasterIsr->_I2C_MasterFsm

Critical Paths under _main in BANK1

    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     605
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     605
                     _ADC_Initialize
                  _EUSART_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     605
                                              3 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0   78254
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                      _I2C_MasterIsr *
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterIsr                                        0     0      0   78254
                      _I2C_MasterFsm
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterFsm                                        3     3      0   78254
                                              0 BANK0      3     3      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX_EMPTY                                      3     3      0   19547
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX                                            3     3      0   19569
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendTxData                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX                                            3     3      0   19547
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_ADDRESS_NACK                                  3     3      0   19547
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              1     0      1    3874
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _I2C_SetDataCompleteCallback                          4     1      3    2478
                                              5 COMMON     4     1      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (10) _I2C_SetCallback                                     5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (9) _I2C_SetBuffer                                        4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterEnableRestart                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnStop                               1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnReset                              1     0      1     265
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _I2C_MasterIsr *
     _I2C_MasterFsm
       _I2C_DO_ADDRESS_NACK *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
         _rd1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rd2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
         _rdBlkRegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
         _wr1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
         _wr2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
       _I2C_DO_IDLE *
       _I2C_DO_RCEN *
         _I2C_MasterStartRx
       _I2C_DO_RESET *
       _I2C_DO_RX *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_RX_NACK_RESTART *
           _I2C_MasterSendNack
         _I2C_DO_RX_NACK_STOP *
           _I2C_MasterSendNack
         _I2C_MasterGetRxData *
         _I2C_MasterSendAck *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_RX_ACK *
         _I2C_MasterSendAck
       _I2C_DO_RX_NACK_RESTART *
       _I2C_DO_RX_NACK_STOP *
       _I2C_DO_SEND_ADR_READ *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_ADR_WRITE *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_RESTART *
       _I2C_DO_SEND_RESTART_READ *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_WRITE *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_STOP *
       _I2C_DO_TX *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART_READ *
         _I2C_DO_SEND_RESTART_WRITE *
         _I2C_DO_SEND_STOP *
         _I2C_MasterIsNack *
         _I2C_MasterSendTxData *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_TX_EMPTY *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
         _I2C_DO_SEND_STOP *
         _I2C_MasterSetIrq *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_MasterClearIrq *
       _I2C_MasterIsNack *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4      4D       5       96.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      2       2       7        2.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      5D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      5D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Sep 26 16:09:29 2024

                ?_EUSART_SetRxInterruptHandler 00A0                         ??_I2C_DO_SEND_ADR_READ 0070  
                  __size_of_I2C_MasterSendNack 0004                        ??_I2C_DO_SEND_ADR_WRITE 0071  
                                  _SSPSTATbits 0214                          ??_I2C_DO_SEND_RESTART 0070  
                                          l143 027B                  __size_of_I2C_MasterSendTxData 0005  
                                          l173 02C0                                            l510 0337  
                                          l182 03CE                                            l176 0328  
                                          l361 0352                                            l370 0349  
                                          l179 032D                                            l364 0364  
                                          l358 035B                                            l199 037D  
                                          l367 0340                                            l295 0133  
                                          l801 0373                                            l802 0373  
                                          u630 032D                                            u631 032C  
                       ??_EUSART_RxDataHandler 0070                 ?_EUSART_SetFramingErrorHandler 00A0  
                                          wreg 0009                       ??_I2C_CallbackReturnStop 007A  
                                 _I2C_DO_RESET 0399                        ??_rd2RegCompleteHandler 007A  
                                         l3200 010E                                           l3210 0129  
                                         l3202 0116                                           l3212 012A  
                                         l3204 011E                                           l3220 0371  
                                         l3214 0131                                           l3206 0126  
                                         l3222 0372                                           l3208 0128  
                                         l3216 02AE                                           l3218 036E  
                                         l3180 034A                                           l3182 035C  
                                         l3174 0341                                           l3190 0103  
                                         l3176 0338                                           l3192 0106  
                                         l3184 00F1                                           l3178 0353  
                                         l3194 0108                                           l3186 00F3  
                                         l2730 026E                                           l2722 025C  
                                         l3196 010A                                           l3188 00FA  
                                         l2740 0333                                           l2732 0270  
                                         l2724 0262                                           l3198 010C  
                                         l2742 0334                                           l2750 0326  
                                         l2734 0272                                           l2726 0265  
                                         l2744 0336                                           l2736 0277  
                                         l2728 026C                                           l2752 03CB  
                                         l2754 0376                                           l2738 032E  
                                         l2746 0322                                           l2756 0379  
                                         l2748 0325                                           l2758 037A  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           _LATD 010F  
                                         _LATE 0110                                           i1l92 02F3  
                                         i1l95 02E2                                           i1l98 02D1  
                                         _PLLR 04D6                                           _WPUB 020D  
                                         _WPUE 0210                        ??_wr2RegCompleteHandler 007A  
                                         _main 036E                       ?_I2C_CallbackReturnReset 0079  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                           start 0047  
             __size_of_rdBlkRegCompleteHandler 0018                 __size_of_OSCILLATOR_Initialize 000C  
                                _I2C_DO_RX_ACK 03A8                  __end_of_OSCILLATOR_Initialize 032E  
                                        ?_main 0070                                          i1l101 0304  
                                        i1l104 02AD                                          i1l401 0045  
                                        i1l332 0239                                          i1l342 016D  
                                        i1l335 023B                                          i1l352 03DE  
                                        i1l346 0295                                          i1l355 03E2  
                                        i1l540 0321                                          i1l349 03F9  
                                        i1l613 019C                                          i1l703 03F1  
                                        i1l607 038C                                          i1l631 03C0  
                                        i1l560 0219                                          i1l712 03DA  
                                        i1l640 03B1                                          i1l392 001A  
                                        i1l537 0314                                          i1l706 0398  
                                        i1l570 03C5                                          i1l634 03BB  
                                        i1l730 03E5                                          i1l394 002A  
                                        i1l643 03AC                                          i1l563 03D2  
                                        i1l395 0045                                          i1l652 039D  
                                        i1l396 003A                                          i1l709 03D6  
                                        i1l733 03E8                                          i1l573 036D  
                                        i1l637 03B6                                          i1l582 00AA  
                                        i1l646 03A7                                          i1l567 01F3  
                                        i1l576 0385                                          i1l649 03A2  
                                        i1l666 03F8                                          i1l658 01C8  
                                        i1l691 03F4                                          i1l579 008E  
                                        i1l595 00C8                                          i1l596 00F0  
                                        i1l669 03F6                                          i1l685 03EB  
                                        i1l688 03CA                                          i1l697 03EE  
                                        _RCREG 0199                   __size_of_I2C_DO_RX_NACK_STOP 0005  
                                        _RCSTA 019D                                          u60_20 005E  
                                        u60_21 005D                                          u61_20 00A7  
                                        u61_21 00A6                                          u62_20 00C3  
                                        u62_21 00C2                                          u71_20 0221  
                                        u71_21 0220                                          u72_20 0233  
                                        u64_20 01D1                                          u72_21 0232  
                                        u64_21 01D0                                          u73_20 013F  
                                        u57_20 01FB                                          u65_20 01D9  
                            ??_I2C_DO_TX_EMPTY 007A                                          u73_21 013E  
                                        u57_21 01FA                                          u65_21 01D8  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _TRISD 008F  
                                        _TRISE 0090                                          u74_20 014F  
                                        u58_20 030B                                          u74_21 014E  
                                        u58_21 030A                                          u59_20 0290  
                                        u75_20 0164                                          u59_21 028F  
                                        u75_21 0163                                          u92_20 000A  
                                        u92_21 0009                                          u93_20 000F  
                                        u93_21 000E                                          u94_20 0014  
                                        u94_21 0013                                          u95_20 001F  
                                        u95_21 001E                                          u96_20 0024  
                                        u96_21 0023                                          u97_20 002F  
                                        u97_21 002E                                          _TXREG 019A  
                                        u98_20 0034                                          u98_21 0033  
                                        u99_20 003F                                          u99_21 003E  
                                        _TXSTA 019E                              __end_of_I2C_DO_RX 00F1  
                            __end_of_I2C_DO_TX 00AB                                 _WDT_Initialize 03CB  
                       __size_of_I2C_MasterFsm 002B                         __size_of_I2C_MasterIsr 0004  
                      _I2C_MasterEnableRestart 03F2                                          pclath 000A  
                             ?_I2C_SetCallback 0070                                          status 0003  
                                        wtemp0 007E                              ?_I2C_DO_SEND_STOP 0070  
                       __size_of_I2C_SetBuffer 0010                             ??_I2C_DO_SEND_STOP 0070  
                              __initialization 0049                                   __end_of_main 0376  
            __size_of_I2C_DO_SEND_RESTART_READ 0005                      ?_I2C_DO_SEND_RESTART_READ 0070  
                               ?_I2C_DO_RX_ACK 0070                    ?_INTERRUPT_InterruptManager 0070  
               ??_EUSART_SetRxInterruptHandler 006C                                         ??_main 006D  
                            ?_I2C_MasterIsNack 0070                              ?_I2C_MasterSetIrq 0070  
                           ??_I2C_MasterIsNack 0070                         __end_of_WDT_Initialize 03CF  
                           ??_I2C_MasterSetIrq 0070      __end_of_EUSART_DefaultFramingErrorHandler 03FA  
   __size_of_EUSART_DefaultFramingErrorHandler 0001            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 03F9  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 0057                __end_of_I2C_CallbackReturnReset 03F7  
                                       _ADRESH 009C                                         _EEADRH 0192  
                                       _ADRESL 009B                                         _EEADRL 0191  
                                       _EEDATH 0194                                         _EEDATL 0193  
                                       _EECON2 0196                __size_of_I2C_CallbackReturnStop 0002  
                                       _APFCON 011D                  I2C_SetDataCompleteCallback@cb 0075  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _ANSELD 018F                                         _ANSELE 0190  
                                       _BORCON 0116                                         u100_20 0044  
                                       u100_21 0043                                         i1l3040 000F  
                                       i1l3050 0034                                         i1l3042 0014  
                                       i1l2500 03BA                                         i1l3052 003F  
                                       i1l3044 001F                                         i1l3036 0006  
                                       i1l2430 01FB                                         i1l2510 03E9  
                                       i1l3310 018E                                         i1l3046 0024  
                                       i1l3038 000A                                         i1l2440 0313  
                                       i1l2432 020C                                         i1l2600 0063  
                                       i1l2504 03AD                                         i1l3304 01C0  
                                       i1l3048 002F                                         i1l2442 03F2  
                                       i1l2434 0315                                         i1l2450 02EB  
                                       i1l2514 03D3                                         i1l2610 006B  
                                       i1l3306 00E2                                         i1l2530 03B2  
                                       i1l2506 03B0                                         i1l2522 03A3  
                                       i1l2444 03EF                                         i1l2436 0306  
                                       i1l2428 01F5                                         i1l2452 02F2  
                                       i1l2460 02E1                                         i1l2612 0090  
                                       i1l3308 0080                                         i1l2604 0067  
                                       i1l2532 03B5                                         i1l2524 03A6  
                                       i1l2516 039E                                         i1l2438 030B  
                                       i1l2542 03F5                                         i1l2446 03D7  
                                       i1l2614 009C                                         i1l2630 00B9  
                                       i1l2518 03A1                                         i1l2710 01A8  
                                       i1l2702 019D                                         i1l2560 028A  
                                       i1l2472 02F4                                         i1l2448 02E3  
                                       i1l2456 02D2                                         i1l2464 02C1  
                                       i1l2480 0296                                         i1l2528 03EC  
                                       i1l2536 03E6                                         i1l2616 00A7  
                                       i1l2640 00CA                                         i1l2632 00C3  
                                       i1l2704 019F                                         i1l2800 01D1  
                                       i1l2562 0290                                         i1l2474 02FC  
                                       i1l2458 02DA                                         i1l2466 02C9  
                                       i1l2482 02AC                                         i1l2538 03F7  
                                       i1l2490 03C7                                         i1l2570 03C3  
                                       i1l2618 00A9                                         i1l2650 00D2  
                                       i1l2634 00C6                                         i1l2626 00AB  
                                       i1l2706 01A4                                         i1l2802 01D9  
                                       i1l2564 0291                                         i1l2556 027C  
                                       i1l2476 0303                                         i1l2468 02D0  
                                       i1l2572 03C4                                         i1l2580 036C  
                                       i1l2644 00CE                                         i1l2628 00B5  
                                       i1l2660 038B                                         i1l2492 03BC  
                                       i1l2716 01AC                                         i1l2804 01DE  
                                       i1l2558 0286                                         i1l2486 0393  
                                       i1l2670 0175                                         i1l2494 03BF  
                                       i1l2566 03E3                                         i1l2672 0178  
                                       i1l2664 016E                                         i1l2568 03C1  
                                       i1l2576 0365                                         i1l2584 037E  
                                       i1l2592 0056                                         i1l2656 0386  
                                       i1l2850 0221                                         i1l2666 0171  
                                       i1l2682 017E                                         i1l2578 0367  
                                       i1l2586 0380                                         i1l2658 0388  
                                       i1l2498 03B7                                         i1l2690 03AB  
                                       i1l2860 0134                                         i1l2852 0228  
                                       i1l2676 017A                                         i1l2588 0384  
                                       i1l2596 005F                                         i1l2870 014F  
                                       i1l2862 013A                                         i1l2854 022D  
                                       i1l2694 0399                                         i1l2792 03DB  
                                       i1l2872 0155                                         i1l2864 013F  
                                       i1l2856 0233                                         i1l2848 021A  
                                       i1l2688 03A8                                         i1l2696 039B  
                                       i1l2880 03CF                                         i1l2794 03DF  
                                       i1l2874 015A                                         i1l2866 0145  
                                       i1l2858 0234                                         i1l2698 039C  
                                       i1l2876 0164                                         i1l2868 014A  
                                       i1l2796 01C9                                         i1l2878 016A  
                                       i1l2798 01CC                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                                         _SSPADD 0212  
                                       _SSPBUF 0211                            _I2C_MasterGetRxData 03E9  
                                _I2C_MasterFsm 01C9                                  _I2C_MasterIsr 03CF  
                          _EUSART_Transmit_ISR 021A                              I2C_SetCallback@cb 0070  
                      __size_of_I2C_MasterStop 0003                        __size_of_I2C_Initialize 000A  
                                _I2C_SetBuffer 0305                            _I2C_DO_ADDRESS_NACK 019D  
                         ?_I2C_MasterGetRxData 0070                                ?_WDT_Initialize 0070  
                    ??_I2C_MasterEnableRestart 0070                           ?_EUSART_Transmit_ISR 0070  
                            _SYSTEM_Initialize 02AE                        __end_of__initialization 0052  
                           ?_SYSTEM_Initialize 0070                           ?_I2C_DO_ADDRESS_NACK 0070  
         __end_of_EUSART_SetTxInterruptHandler 0341          __size_of_EUSART_SetTxInterruptHandler 0009  
                 _EUSART_SetTxInterruptHandler 0338                        _rdBlkRegCompleteHandler 0296  
                               __pcstackCOMMON 0070                                 ?_I2C_MasterFsm 0070  
                               ?_I2C_MasterIsr 0070                                ??_I2C_DO_RX_ACK 0070  
                       _I2C_CallbackReturnStop 03F7                            ??_SYSTEM_Initialize 006D  
                               ?_I2C_SetBuffer 0070                 __size_of_I2C_DO_SEND_ADR_WRITE 0008  
           __size_of_I2C_DO_SEND_RESTART_WRITE 0005                  __end_of_I2C_DO_SEND_ADR_WRITE 0386  
                   ?_I2C_DO_SEND_RESTART_WRITE 0070                          ??_I2C_MasterGetRxData 0070  
                               _OPTION_REGbits 0095                           _eusartRxStatusBuffer 003D  
                   __end_of_I2C_MasterClearIrq 03E6                ??_EUSART_SetOverrunErrorHandler 006C  
                    __end_of_SYSTEM_Initialize 02C1                          ??_EUSART_Transmit_ISR 0070  
                            _I2C_MasterSendAck 03D3                                     __pbssBANK0 0020  
                                ??_I2C_DO_IDLE 0070                 __size_of_rd2RegCompleteHandler 0011  
                                ??_I2C_DO_RCEN 0070                  __end_of_rd2RegCompleteHandler 02E3  
                 __end_of_I2C_MasterSendTxData 03CB                             ?_I2C_MasterSendAck 0070  
                            _I2C_MasterStartRx 03EC                 __size_of_wr2RegCompleteHandler 0011  
                        ??_I2C_DO_ADDRESS_NACK 007A                  __end_of_wr2RegCompleteHandler 0305  
                  __size_of_EUSART_Receive_ISR 003A                            _I2C_DO_RX_NACK_STOP 03A3  
                        _rd1RegCompleteHandler 02E3                             ?_I2C_MasterStartRx 0070  
                   __end_of_I2C_MasterSendNack 03DB                          _wr1RegCompleteHandler 02C1  
                                   __pmaintext 036E                            ??_I2C_MasterSendAck 0070  
                     rd1RegCompleteHandler@ptr 0079                  ?_EUSART_SetTxInterruptHandler 00A0  
             _EUSART_TxDefaultInterruptHandler 005D                    __end_of_I2C_DO_SEND_RESTART 03B7  
                              _I2C_DO_TX_EMPTY 016E                            I2C_SetBuffer@buffer 0073  
                                   __pintentry 0004                            ??_I2C_MasterStartRx 0070  
                __size_of_I2C_DO_SEND_ADR_READ 0009                                        _BAUDCON 019F  
             __size_of_I2C_CallbackReturnReset 0002                   ??_EUSART_DefaultErrorHandler 0071  
               I2C_SetDataCompleteCallback@ptr 0077                        __size_of_ADC_Initialize 0008  
                     ??_I2C_DO_RX_NACK_RESTART 0070              __end_of_I2C_DO_SEND_RESTART_WRITE 03BC  
                         ?_I2C_DO_RX_NACK_STOP 0070                                  _eusartRxCount 0064  
                __size_of_EUSART_RxDataHandler 001A                      __end_of_I2C_MasterSendAck 03D7  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 006C  
                                      _SSPCON1 0215                                        _SSPCON2 0216  
                                      _SSPSTAT 0214                      __end_of_I2C_MasterStartRx 03EF  
                 ?_I2C_SetDataCompleteCallback 0075                                      _I2C_DO_RX 00AB  
                                    _I2C_DO_TX 0056               __end_of_I2C_DO_SEND_RESTART_READ 03C1  
                    ??_rdBlkRegCompleteHandler 007A                                ??_I2C_MasterFsm 0069  
                              ??_I2C_MasterIsr 007D                           _ADC_InterruptHandler 005F  
          __size_of_EUSART_DefaultErrorHandler 0004                            __end_of_I2C_DO_IDLE 03C6  
                          __end_of_I2C_DO_RCEN 038D                                ??_I2C_SetBuffer 0072  
                      I2C_SetBuffer@bufferSize 0070                                 _I2C_MasterStop 03EF  
                               _I2C_Initialize 032E                      __size_of_I2C_DO_SEND_STOP 0005  
                                      __ptext1 02AE                                        __ptext2 03CB  
                                      __ptext3 025C                                        __ptext4 0322  
                                      __ptext5 032E                                        __ptext6 00F1  
                                      __ptext7 0338                                        __ptext8 0341  
                                      __ptext9 034A                          ??_I2C_DO_RX_NACK_STOP 0070  
                        _OSCILLATOR_Initialize 0322                             I2C_SetCallback@idx 0074  
                     ??_PIN_MANAGER_Initialize 006C                  I2C_CallbackReturnReset@funPtr 0079  
                           I2C_SetCallback@ptr 0072                       wr1RegCompleteHandler@ptr 0079  
                   __size_of_SYSTEM_Initialize 0013                                        clrloop0 038E  
                         end_of_initialization 0052                                     ?_I2C_DO_RX 0070  
                                   ?_I2C_DO_TX 0070          __end_of_EUSART_SetOverrunErrorHandler 0353  
       __size_of_EUSART_SetOverrunErrorHandler 0009                  _EUSART_SetOverrunErrorHandler 034A  
                    __size_of_I2C_MasterIsNack 0006                         ?_rd1RegCompleteHandler 0079  
                      __end_of_I2C_DO_TX_EMPTY 019D                      __size_of_I2C_MasterSetIrq 0003  
                            _EUSART_Initialize 00F1                         ?_wr1RegCompleteHandler 0079  
                           ?_EUSART_Initialize 0070                       __size_of_I2C_SetCallback 0026  
                                    _RCSTAbits 019D                         __end_of_I2C_MasterStop 03F2  
                       __end_of_I2C_Initialize 0338                            ??_EUSART_Initialize 006C  
                             ??_WDT_Initialize 006C                 ??_EUSART_SetTxInterruptHandler 006C  
              __end_of_rdBlkRegCompleteHandler 02AE                           _I2C_MasterSendTxData 03C6  
              __size_of_I2C_DO_RX_NACK_RESTART 0005                     __size_of_I2C_MasterSendAck 0004  
              __size_of_EUSART_SetErrorHandler 0009                     __size_of_I2C_MasterStartRx 0003  
                    __end_of_EUSART_Initialize 0134                                    _I2C_DO_IDLE 03C1  
                                  _I2C_DO_RCEN 0386                     rdBlkRegCompleteHandler@ptr 0079  
                                    _TXSTAbits 019E                        ?_I2C_CallbackReturnStop 0079  
                     _I2C_DO_SEND_RESTART_READ 03BC                   I2C_CallbackReturnStop@funPtr 0079  
                              ?_I2C_MasterStop 0070                                ?_I2C_Initialize 0070  
                      _I2C_CallbackReturnReset 03F5             __end_of_EUSART_DefaultErrorHandler 03E3  
                   _EUSART_DefaultErrorHandler 03DF           __size_of_I2C_SetDataCompleteCallback 000D  
                               _ADC_Initialize 0376                          ?_I2C_MasterSendTxData 0070  
                       ?_OSCILLATOR_Initialize 0070                    ??_I2C_DO_SEND_RESTART_WRITE 0070  
                          start_initialization 0049                __size_of_PIN_MANAGER_Initialize 0020  
                                ?_I2C_DO_RESET 0070   EUSART_SetRxInterruptHandler@interruptHandler 00A0  
 EUSART_SetTxInterruptHandler@interruptHandler 00A0                                    ??_I2C_DO_RX 007A  
                                  ??_I2C_DO_TX 007A                 __end_of_I2C_CallbackReturnStop 03F9  
                       _I2C_DO_RX_NACK_RESTART 039E                               ?_I2C_DO_TX_EMPTY 0070  
                           _I2C_MasterClearIrq 03E3                 ?_EUSART_SetOverrunErrorHandler 00A0  
                   _EUSART_FramingErrorHandler 0059                         _EUSART_SetErrorHandler 035C  
                          ?_I2C_MasterClearIrq 0070                         __end_of_ADC_Initialize 037E  
                  __end_of_I2C_MasterGetRxData 03EC                          __end_of_I2C_DO_RX_ACK 03AD  
                             _I2C_DO_SEND_STOP 03AD                              ??_I2C_SetCallback 0073  
                           _I2C_MasterSendNack 03D7                       ?_I2C_MasterEnableRestart 0070  
                            _i2c_fsmStateTable 023C                    __end_of_EUSART_Transmit_ISR 023C  
                        _I2C_DO_SEND_ADR_WRITE 037E                                    __pbssCOMMON 007D  
                                    ___latbits 0003                                  __pcstackBANK0 0069  
                                __pcstackBANK1 00A0                                 ??_I2C_DO_RESET 0070  
                          ?_I2C_MasterSendNack 0070                   __end_of_I2C_DO_SEND_ADR_READ 036E  
                         ??_I2C_MasterClearIrq 0070                    __end_of_I2C_DO_ADDRESS_NACK 01C9  
                   __end_of_EUSART_Receive_ISR 016E                               _I2C_MasterIsNack 0393  
                   __size_of_EUSART_Initialize 0043                      _I2C_DO_SEND_RESTART_WRITE 03B7  
             _EUSART_RxDefaultInterruptHandler 005B                               _I2C_MasterSetIrq 03E6  
                        _rd2RegCompleteHandler 02D2                   __end_of_EUSART_RxDataHandler 0296  
                       _PIN_MANAGER_Initialize 025C                          _wr2RegCompleteHandler 02F4  
                    ??_I2C_CallbackReturnReset 007A                           ??_I2C_MasterSendNack 0070  
                     rd2RegCompleteHandler@ptr 0079                                ?_ADC_Initialize 0070  
                                 _eusartRxHead 0065                                   _eusartTxHead 0068  
                                 _eusartRxTail 007D                         ??_I2C_MasterSendTxData 0070  
                                 _eusartTxTail 0067                      __end_of_i2c_fsmStateTable 025C  
                 ??_INTERRUPT_InterruptManager 007D                        _eusartTxBufferRemaining 0066  
                 __size_of_I2C_DO_SEND_RESTART 0005                        ??_rd1RegCompleteHandler 007A  
                               _eusartRxBuffer 0045                        ??_wr1RegCompleteHandler 007A  
                               _eusartTxBuffer 004D         EUSART_SetErrorHandler@interruptHandler 00A0  
                                    clear_ram0 038D                                       _PIE1bits 0091  
                                     _PIE2bits 0092                              _eusartRxLastError 0063  
          __size_of_INTERRUPT_InterruptManager 0043                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 006C                                       _PIR2bits 0012  
                        __end_of_I2C_MasterFsm 01F4                          __end_of_I2C_MasterIsr 03D3  
                  __end_of_I2C_DO_RX_NACK_STOP 03A8      __end_of_EUSART_DefaultOverrunErrorHandler 03DF  
   __size_of_EUSART_DefaultOverrunErrorHandler 0004            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 03DB  
              __end_of_I2C_MasterEnableRestart 03F5                          __end_of_I2C_SetBuffer 0315  
                                   _ADCON0bits 009D                         ?_I2C_DO_SEND_ADR_WRITE 0070  
                     I2C_MasterSendTxData@data 0070                       wr2RegCompleteHandler@ptr 0079  
                   ??_I2C_DO_SEND_RESTART_READ 0070                       ?_rdBlkRegCompleteHandler 0079  
                                   _I2C_Status 0020                                   ?_I2C_DO_IDLE 0070  
                                 ?_I2C_DO_RCEN 0070                         ?_rd2RegCompleteHandler 0079  
                                   _EECON1bits 0195                         ?_wr2RegCompleteHandler 0079  
                             ??_I2C_MasterStop 0070                               ??_I2C_Initialize 006C  
                         __end_of_I2C_DO_RESET 039E                        ??_OSCILLATOR_Initialize 006C  
                          _EUSART_ErrorHandler 0055                           _I2C_DO_SEND_ADR_READ 0365  
                  ?_EUSART_DefaultErrorHandler 0070                           _EUSART_RxDataHandler 027C  
                                     __ptext10 0353                                       __ptext11 035C  
                                     __ptext20 03A3                                       __ptext12 0376  
                                     __ptext21 03A8                                       __ptext30 0365  
                                     __ptext22 03AD                                       __ptext14 03CF  
                                     __ptext31 03C1                                       __ptext23 03B2  
                                     __ptext15 01C9                                       __ptext40 03F5  
                                     __ptext32 016E                                       __ptext24 03B7  
                                     __ptext16 03E3                                       __ptext41 03F7  
                                     __ptext33 03E6                                       __ptext25 03BC  
                                     __ptext17 019D                                       __ptext50 03EF  
                                     __ptext42 0296                                       __ptext34 0393  
                                     __ptext26 0386                                       __ptext18 0399  
                                     __ptext51 03F2                                       __ptext43 02C1  
                                     __ptext35 03C6                                       __ptext27 00AB  
                                     __ptext19 039E                                       __ptext52 021A  
                                     __ptext44 02D2                                       __ptext36 03D3  
                                     __ptext28 0056                                       __ptext53 0134  
                                     __ptext45 02E3                                       __ptext37 03E9  
                                     __ptext29 037E                                       __ptext54 03DB  
                                     __ptext46 02F4                                       __ptext38 03D7  
                                     __ptext55 03F9                                       __ptext47 0315  
                                     __ptext39 03EC                                       __ptext56 03DF  
                                     __ptext48 01F4                                       __ptext57 027C  
                                     __ptext49 0305            __end_of_I2C_SetDataCompleteCallback 0322  
                  _I2C_SetDataCompleteCallback 0315                        ?_I2C_DO_RX_NACK_RESTART 0070  
                     __end_of_I2C_DO_SEND_STOP 03B2                                  __size_of_main 0008  
                      ?_EUSART_SetErrorHandler 00A0                                _I2C_SetCallback 01F4  
                ??_I2C_SetDataCompleteCallback 0078  EUSART_SetOverrunErrorHandler@interruptHandler 00A0  
                                     int$flags 007E                          ?_I2C_DO_SEND_ADR_READ 0070  
           __end_of_INTERRUPT_InterruptManager 0047                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 035C         __size_of_EUSART_SetFramingErrorHandler 0009  
                _EUSART_SetFramingErrorHandler 0353                       __end_of_I2C_MasterIsNack 0399  
                     __end_of_I2C_MasterSetIrq 03E9                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0070                 __end_of_I2C_DO_RX_NACK_RESTART 03A3  
                      __size_of_WDT_Initialize 0004                                       intlevel1 0000  
             __size_of_I2C_MasterEnableRestart 0003                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 0365                            _I2C_DO_SEND_RESTART 03B2  
                             ??_ADC_Initialize 006C           __end_of_EUSART_SetRxInterruptHandler 034A  
        __size_of_EUSART_SetRxInterruptHandler 0009                   _EUSART_SetRxInterruptHandler 0341  
                           _EUSART_Receive_ISR 0134  EUSART_SetFramingErrorHandler@interruptHandler 00A0  
                     __size_of_I2C_DO_TX_EMPTY 002F                                  __pstringtext1 023C  
                         ?_I2C_DO_SEND_RESTART 0070                            ?_EUSART_Receive_ISR 0070  
                 __size_of_I2C_MasterGetRxData 0003                                    _SSPCON1bits 0215  
                                  _SSPCON2bits 0216                    __size_of_I2C_MasterClearIrq 0003  
                 __size_of_EUSART_Transmit_ISR 0022                        __end_of_I2C_SetCallback 021A  
               __end_of_PIN_MANAGER_Initialize 027C                 __size_of_rd1RegCompleteHandler 0011  
                __end_of_rd1RegCompleteHandler 02F4                         __size_of_I2C_DO_RX_ACK 0005  
               __size_of_wr1RegCompleteHandler 0011                           ??_EUSART_Receive_ISR 0071  
                        __size_of_I2C_DO_RESET 0005                  __end_of_wr1RegCompleteHandler 02D2  
                        _MSSP_InterruptHandler 0061                   __size_of_I2C_DO_ADDRESS_NACK 002C  
                         __size_of_I2C_DO_IDLE 0005                           __size_of_I2C_DO_RCEN 0007  
                           __size_of_I2C_DO_RX 0046                             __size_of_I2C_DO_TX 0055  
