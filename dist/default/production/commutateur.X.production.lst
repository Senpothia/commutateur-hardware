

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Feb 19 16:32:18 2025

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1939
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    17                           	psect	cinit,global,class=CODE,merge=1,delta=2
    18                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    25                           	psect	text1,local,class=CODE,merge=1,delta=2
    26                           	psect	text2,local,class=CODE,merge=1,delta=2
    27                           	psect	text3,local,class=CODE,merge=1,delta=2
    28                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text8,local,class=CODE,merge=1,delta=2
    33                           	psect	text9,local,class=CODE,merge=1,delta=2
    34                           	psect	text10,local,class=CODE,merge=1,delta=2
    35                           	psect	text11,local,class=CODE,merge=1,delta=2
    36                           	psect	text12,local,class=CODE,merge=1,delta=2
    37                           	psect	text13,local,class=CODE,merge=1,delta=2
    38                           	psect	text14,local,class=CODE,merge=1,delta=2
    39                           	psect	text15,local,class=CODE,merge=1,delta=2
    40                           	psect	text16,local,class=CODE,merge=1,delta=2
    41                           	psect	text17,local,class=CODE,merge=1,delta=2
    42                           	psect	text18,local,class=CODE,merge=1,delta=2
    43                           	psect	text19,local,class=CODE,merge=1,delta=2
    44                           	psect	text20,local,class=CODE,merge=1,delta=2
    45                           	psect	text21,local,class=CODE,merge=1,delta=2
    46                           	psect	text22,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	text24,local,class=CODE,merge=1,delta=2
    49                           	psect	text25,local,class=CODE,merge=1,inline,delta=2
    50                           	psect	text26,local,class=CODE,merge=1,inline,delta=2
    51                           	psect	text27,local,class=CODE,merge=1,delta=2
    52                           	psect	text28,local,class=CODE,merge=1,delta=2
    53                           	psect	text29,local,class=CODE,merge=1,delta=2
    54                           	psect	text30,local,class=CODE,merge=1,delta=2
    55                           	psect	text31,local,class=CODE,merge=1,delta=2
    56                           	psect	text32,local,class=CODE,merge=1,delta=2
    57                           	psect	text33,local,class=CODE,merge=1,delta=2
    58                           	psect	text34,local,class=CODE,merge=1,delta=2
    59                           	psect	text35,local,class=CODE,merge=1,delta=2
    60                           	psect	text36,local,class=CODE,merge=1,delta=2
    61                           	psect	text37,local,class=CODE,merge=1,delta=2
    62                           	psect	text38,local,class=CODE,merge=1,delta=2
    63                           	psect	text39,local,class=CODE,merge=1,delta=2
    64                           	psect	text40,local,class=CODE,merge=1,delta=2
    65                           	psect	text41,local,class=CODE,merge=1,delta=2
    66                           	psect	text42,local,class=CODE,merge=1,delta=2
    67                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    68                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text45,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text46,local,class=CODE,merge=1,inline,delta=2
    71                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    72                           	psect	text48,local,class=CODE,merge=1,inline,delta=2
    73                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    74                           	psect	text50,local,class=CODE,merge=1,delta=2
    75                           	psect	text51,local,class=CODE,merge=1,delta=2
    76                           	psect	text52,local,class=CODE,merge=1,delta=2
    77                           	psect	text53,local,class=CODE,merge=1,delta=2
    78                           	psect	text54,local,class=CODE,merge=1,delta=2
    79                           	psect	text55,local,class=CODE,merge=1,delta=2
    80                           	psect	text56,local,class=CODE,merge=1,delta=2
    81                           	psect	text57,local,class=CODE,merge=1,delta=2
    82                           	psect	text58,local,class=CODE,merge=1,delta=2
    83                           	psect	text59,local,class=CODE,merge=1,delta=2
    84                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    85                           	psect	text61,local,class=CODE,merge=1,inline,delta=2
    86                           	psect	text62,local,class=CODE,merge=1,delta=2
    87                           	psect	text63,local,class=CODE,merge=1,delta=2
    88                           	psect	text64,local,class=CODE,merge=1,delta=2
    89                           	psect	text65,local,class=CODE,merge=1,delta=2
    90                           	psect	text66,local,class=CODE,merge=1,delta=2
    91                           	psect	text67,local,class=CODE,merge=1,delta=2
    92                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    93                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    94                           	dabs	1,0x7E,2
    95  0000                     
    96                           ; Version 2.32
    97                           ; Generated 02/02/2021 GMT
    98                           ; 
    99                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   100                           ; All rights reserved.
   101                           ; 
   102                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   103                           ; 
   104                           ; Redistribution and use in source and binary forms, with or without modification, are
   105                           ; permitted provided that the following conditions are met:
   106                           ; 
   107                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   108                           ;        conditions and the following disclaimer.
   109                           ; 
   110                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   111                           ;        of conditions and the following disclaimer in the documentation and/or other
   112                           ;        materials provided with the distribution. Publication is not required when
   113                           ;        this file is used in an embedded application.
   114                           ; 
   115                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   116                           ;        software without specific prior written permission.
   117                           ; 
   118                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   119                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   120                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   121                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   122                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   123                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   124                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   125                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   126                           ; 
   127                           ; 
   128                           ; Code-generator required, PIC16F1939 Definitions
   129                           ; 
   130                           ; SFR Addresses
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  008F                     	;# 
   166  0090                     	;# 
   167  0091                     	;# 
   168  0092                     	;# 
   169  0093                     	;# 
   170  0095                     	;# 
   171  0096                     	;# 
   172  0097                     	;# 
   173  0098                     	;# 
   174  0099                     	;# 
   175  009A                     	;# 
   176  009B                     	;# 
   177  009B                     	;# 
   178  009C                     	;# 
   179  009D                     	;# 
   180  009E                     	;# 
   181  010C                     	;# 
   182  010D                     	;# 
   183  010E                     	;# 
   184  010F                     	;# 
   185  0110                     	;# 
   186  0111                     	;# 
   187  0112                     	;# 
   188  0113                     	;# 
   189  0114                     	;# 
   190  0115                     	;# 
   191  0116                     	;# 
   192  0117                     	;# 
   193  0118                     	;# 
   194  0119                     	;# 
   195  011A                     	;# 
   196  011B                     	;# 
   197  011D                     	;# 
   198  018C                     	;# 
   199  018D                     	;# 
   200  018F                     	;# 
   201  0190                     	;# 
   202  0191                     	;# 
   203  0191                     	;# 
   204  0192                     	;# 
   205  0193                     	;# 
   206  0193                     	;# 
   207  0193                     	;# 
   208  0194                     	;# 
   209  0195                     	;# 
   210  0196                     	;# 
   211  0199                     	;# 
   212  019A                     	;# 
   213  019B                     	;# 
   214  019B                     	;# 
   215  019B                     	;# 
   216  019B                     	;# 
   217  019C                     	;# 
   218  019C                     	;# 
   219  019D                     	;# 
   220  019E                     	;# 
   221  019F                     	;# 
   222  020D                     	;# 
   223  0210                     	;# 
   224  0211                     	;# 
   225  0212                     	;# 
   226  0213                     	;# 
   227  0214                     	;# 
   228  0215                     	;# 
   229  0215                     	;# 
   230  0216                     	;# 
   231  0217                     	;# 
   232  0291                     	;# 
   233  0291                     	;# 
   234  0292                     	;# 
   235  0293                     	;# 
   236  0294                     	;# 
   237  0295                     	;# 
   238  0295                     	;# 
   239  0296                     	;# 
   240  0298                     	;# 
   241  0298                     	;# 
   242  0299                     	;# 
   243  029A                     	;# 
   244  029B                     	;# 
   245  029C                     	;# 
   246  029C                     	;# 
   247  029D                     	;# 
   248  029E                     	;# 
   249  029F                     	;# 
   250  0311                     	;# 
   251  0311                     	;# 
   252  0312                     	;# 
   253  0313                     	;# 
   254  0314                     	;# 
   255  0315                     	;# 
   256  0315                     	;# 
   257  0316                     	;# 
   258  0318                     	;# 
   259  0318                     	;# 
   260  0319                     	;# 
   261  031A                     	;# 
   262  031C                     	;# 
   263  031C                     	;# 
   264  031D                     	;# 
   265  031E                     	;# 
   266  0394                     	;# 
   267  0395                     	;# 
   268  0396                     	;# 
   269  0415                     	;# 
   270  0416                     	;# 
   271  0417                     	;# 
   272  041C                     	;# 
   273  041D                     	;# 
   274  041E                     	;# 
   275  0791                     	;# 
   276  0792                     	;# 
   277  0793                     	;# 
   278  0794                     	;# 
   279  0795                     	;# 
   280  0798                     	;# 
   281  0799                     	;# 
   282  079A                     	;# 
   283  07A0                     	;# 
   284  07A1                     	;# 
   285  07A2                     	;# 
   286  07A3                     	;# 
   287  07A4                     	;# 
   288  07A5                     	;# 
   289  07A6                     	;# 
   290  07A7                     	;# 
   291  07A8                     	;# 
   292  07A9                     	;# 
   293  07AA                     	;# 
   294  07AB                     	;# 
   295  0FE4                     	;# 
   296  0FE5                     	;# 
   297  0FE6                     	;# 
   298  0FE7                     	;# 
   299  0FE8                     	;# 
   300  0FE9                     	;# 
   301  0FEA                     	;# 
   302  0FEB                     	;# 
   303  0FED                     	;# 
   304  0FEE                     	;# 
   305  0FEF                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0008                     	;# 
   315  0009                     	;# 
   316  000A                     	;# 
   317  000B                     	;# 
   318  000C                     	;# 
   319  000D                     	;# 
   320  000E                     	;# 
   321  000F                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0015                     	;# 
   327  0016                     	;# 
   328  0016                     	;# 
   329  0017                     	;# 
   330  0018                     	;# 
   331  0019                     	;# 
   332  001A                     	;# 
   333  001B                     	;# 
   334  001C                     	;# 
   335  001E                     	;# 
   336  001F                     	;# 
   337  008C                     	;# 
   338  008D                     	;# 
   339  008E                     	;# 
   340  008F                     	;# 
   341  0090                     	;# 
   342  0091                     	;# 
   343  0092                     	;# 
   344  0093                     	;# 
   345  0095                     	;# 
   346  0096                     	;# 
   347  0097                     	;# 
   348  0098                     	;# 
   349  0099                     	;# 
   350  009A                     	;# 
   351  009B                     	;# 
   352  009B                     	;# 
   353  009C                     	;# 
   354  009D                     	;# 
   355  009E                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0110                     	;# 
   361  0111                     	;# 
   362  0112                     	;# 
   363  0113                     	;# 
   364  0114                     	;# 
   365  0115                     	;# 
   366  0116                     	;# 
   367  0117                     	;# 
   368  0118                     	;# 
   369  0119                     	;# 
   370  011A                     	;# 
   371  011B                     	;# 
   372  011D                     	;# 
   373  018C                     	;# 
   374  018D                     	;# 
   375  018F                     	;# 
   376  0190                     	;# 
   377  0191                     	;# 
   378  0191                     	;# 
   379  0192                     	;# 
   380  0193                     	;# 
   381  0193                     	;# 
   382  0193                     	;# 
   383  0194                     	;# 
   384  0195                     	;# 
   385  0196                     	;# 
   386  0199                     	;# 
   387  019A                     	;# 
   388  019B                     	;# 
   389  019B                     	;# 
   390  019B                     	;# 
   391  019B                     	;# 
   392  019C                     	;# 
   393  019C                     	;# 
   394  019D                     	;# 
   395  019E                     	;# 
   396  019F                     	;# 
   397  020D                     	;# 
   398  0210                     	;# 
   399  0211                     	;# 
   400  0212                     	;# 
   401  0213                     	;# 
   402  0214                     	;# 
   403  0215                     	;# 
   404  0215                     	;# 
   405  0216                     	;# 
   406  0217                     	;# 
   407  0291                     	;# 
   408  0291                     	;# 
   409  0292                     	;# 
   410  0293                     	;# 
   411  0294                     	;# 
   412  0295                     	;# 
   413  0295                     	;# 
   414  0296                     	;# 
   415  0298                     	;# 
   416  0298                     	;# 
   417  0299                     	;# 
   418  029A                     	;# 
   419  029B                     	;# 
   420  029C                     	;# 
   421  029C                     	;# 
   422  029D                     	;# 
   423  029E                     	;# 
   424  029F                     	;# 
   425  0311                     	;# 
   426  0311                     	;# 
   427  0312                     	;# 
   428  0313                     	;# 
   429  0314                     	;# 
   430  0315                     	;# 
   431  0315                     	;# 
   432  0316                     	;# 
   433  0318                     	;# 
   434  0318                     	;# 
   435  0319                     	;# 
   436  031A                     	;# 
   437  031C                     	;# 
   438  031C                     	;# 
   439  031D                     	;# 
   440  031E                     	;# 
   441  0394                     	;# 
   442  0395                     	;# 
   443  0396                     	;# 
   444  0415                     	;# 
   445  0416                     	;# 
   446  0417                     	;# 
   447  041C                     	;# 
   448  041D                     	;# 
   449  041E                     	;# 
   450  0791                     	;# 
   451  0792                     	;# 
   452  0793                     	;# 
   453  0794                     	;# 
   454  0795                     	;# 
   455  0798                     	;# 
   456  0799                     	;# 
   457  079A                     	;# 
   458  07A0                     	;# 
   459  07A1                     	;# 
   460  07A2                     	;# 
   461  07A3                     	;# 
   462  07A4                     	;# 
   463  07A5                     	;# 
   464  07A6                     	;# 
   465  07A7                     	;# 
   466  07A8                     	;# 
   467  07A9                     	;# 
   468  07AA                     	;# 
   469  07AB                     	;# 
   470  0FE4                     	;# 
   471  0FE5                     	;# 
   472  0FE6                     	;# 
   473  0FE7                     	;# 
   474  0FE8                     	;# 
   475  0FE9                     	;# 
   476  0FEA                     	;# 
   477  0FEB                     	;# 
   478  0FED                     	;# 
   479  0FEE                     	;# 
   480  0FEF                     	;# 
   481  0000                     	;# 
   482  0001                     	;# 
   483  0002                     	;# 
   484  0003                     	;# 
   485  0004                     	;# 
   486  0005                     	;# 
   487  0006                     	;# 
   488  0007                     	;# 
   489  0008                     	;# 
   490  0009                     	;# 
   491  000A                     	;# 
   492  000B                     	;# 
   493  000C                     	;# 
   494  000D                     	;# 
   495  000E                     	;# 
   496  000F                     	;# 
   497  0010                     	;# 
   498  0011                     	;# 
   499  0012                     	;# 
   500  0013                     	;# 
   501  0015                     	;# 
   502  0016                     	;# 
   503  0016                     	;# 
   504  0017                     	;# 
   505  0018                     	;# 
   506  0019                     	;# 
   507  001A                     	;# 
   508  001B                     	;# 
   509  001C                     	;# 
   510  001E                     	;# 
   511  001F                     	;# 
   512  008C                     	;# 
   513  008D                     	;# 
   514  008E                     	;# 
   515  008F                     	;# 
   516  0090                     	;# 
   517  0091                     	;# 
   518  0092                     	;# 
   519  0093                     	;# 
   520  0095                     	;# 
   521  0096                     	;# 
   522  0097                     	;# 
   523  0098                     	;# 
   524  0099                     	;# 
   525  009A                     	;# 
   526  009B                     	;# 
   527  009B                     	;# 
   528  009C                     	;# 
   529  009D                     	;# 
   530  009E                     	;# 
   531  010C                     	;# 
   532  010D                     	;# 
   533  010E                     	;# 
   534  010F                     	;# 
   535  0110                     	;# 
   536  0111                     	;# 
   537  0112                     	;# 
   538  0113                     	;# 
   539  0114                     	;# 
   540  0115                     	;# 
   541  0116                     	;# 
   542  0117                     	;# 
   543  0118                     	;# 
   544  0119                     	;# 
   545  011A                     	;# 
   546  011B                     	;# 
   547  011D                     	;# 
   548  018C                     	;# 
   549  018D                     	;# 
   550  018F                     	;# 
   551  0190                     	;# 
   552  0191                     	;# 
   553  0191                     	;# 
   554  0192                     	;# 
   555  0193                     	;# 
   556  0193                     	;# 
   557  0193                     	;# 
   558  0194                     	;# 
   559  0195                     	;# 
   560  0196                     	;# 
   561  0199                     	;# 
   562  019A                     	;# 
   563  019B                     	;# 
   564  019B                     	;# 
   565  019B                     	;# 
   566  019B                     	;# 
   567  019C                     	;# 
   568  019C                     	;# 
   569  019D                     	;# 
   570  019E                     	;# 
   571  019F                     	;# 
   572  020D                     	;# 
   573  0210                     	;# 
   574  0211                     	;# 
   575  0212                     	;# 
   576  0213                     	;# 
   577  0214                     	;# 
   578  0215                     	;# 
   579  0215                     	;# 
   580  0216                     	;# 
   581  0217                     	;# 
   582  0291                     	;# 
   583  0291                     	;# 
   584  0292                     	;# 
   585  0293                     	;# 
   586  0294                     	;# 
   587  0295                     	;# 
   588  0295                     	;# 
   589  0296                     	;# 
   590  0298                     	;# 
   591  0298                     	;# 
   592  0299                     	;# 
   593  029A                     	;# 
   594  029B                     	;# 
   595  029C                     	;# 
   596  029C                     	;# 
   597  029D                     	;# 
   598  029E                     	;# 
   599  029F                     	;# 
   600  0311                     	;# 
   601  0311                     	;# 
   602  0312                     	;# 
   603  0313                     	;# 
   604  0314                     	;# 
   605  0315                     	;# 
   606  0315                     	;# 
   607  0316                     	;# 
   608  0318                     	;# 
   609  0318                     	;# 
   610  0319                     	;# 
   611  031A                     	;# 
   612  031C                     	;# 
   613  031C                     	;# 
   614  031D                     	;# 
   615  031E                     	;# 
   616  0394                     	;# 
   617  0395                     	;# 
   618  0396                     	;# 
   619  0415                     	;# 
   620  0416                     	;# 
   621  0417                     	;# 
   622  041C                     	;# 
   623  041D                     	;# 
   624  041E                     	;# 
   625  0791                     	;# 
   626  0792                     	;# 
   627  0793                     	;# 
   628  0794                     	;# 
   629  0795                     	;# 
   630  0798                     	;# 
   631  0799                     	;# 
   632  079A                     	;# 
   633  07A0                     	;# 
   634  07A1                     	;# 
   635  07A2                     	;# 
   636  07A3                     	;# 
   637  07A4                     	;# 
   638  07A5                     	;# 
   639  07A6                     	;# 
   640  07A7                     	;# 
   641  07A8                     	;# 
   642  07A9                     	;# 
   643  07AA                     	;# 
   644  07AB                     	;# 
   645  0FE4                     	;# 
   646  0FE5                     	;# 
   647  0FE6                     	;# 
   648  0FE7                     	;# 
   649  0FE8                     	;# 
   650  0FE9                     	;# 
   651  0FEA                     	;# 
   652  0FEB                     	;# 
   653  0FED                     	;# 
   654  0FEE                     	;# 
   655  0FEF                     	;# 
   656  0000                     	;# 
   657  0001                     	;# 
   658  0002                     	;# 
   659  0003                     	;# 
   660  0004                     	;# 
   661  0005                     	;# 
   662  0006                     	;# 
   663  0007                     	;# 
   664  0008                     	;# 
   665  0009                     	;# 
   666  000A                     	;# 
   667  000B                     	;# 
   668  000C                     	;# 
   669  000D                     	;# 
   670  000E                     	;# 
   671  000F                     	;# 
   672  0010                     	;# 
   673  0011                     	;# 
   674  0012                     	;# 
   675  0013                     	;# 
   676  0015                     	;# 
   677  0016                     	;# 
   678  0016                     	;# 
   679  0017                     	;# 
   680  0018                     	;# 
   681  0019                     	;# 
   682  001A                     	;# 
   683  001B                     	;# 
   684  001C                     	;# 
   685  001E                     	;# 
   686  001F                     	;# 
   687  008C                     	;# 
   688  008D                     	;# 
   689  008E                     	;# 
   690  008F                     	;# 
   691  0090                     	;# 
   692  0091                     	;# 
   693  0092                     	;# 
   694  0093                     	;# 
   695  0095                     	;# 
   696  0096                     	;# 
   697  0097                     	;# 
   698  0098                     	;# 
   699  0099                     	;# 
   700  009A                     	;# 
   701  009B                     	;# 
   702  009B                     	;# 
   703  009C                     	;# 
   704  009D                     	;# 
   705  009E                     	;# 
   706  010C                     	;# 
   707  010D                     	;# 
   708  010E                     	;# 
   709  010F                     	;# 
   710  0110                     	;# 
   711  0111                     	;# 
   712  0112                     	;# 
   713  0113                     	;# 
   714  0114                     	;# 
   715  0115                     	;# 
   716  0116                     	;# 
   717  0117                     	;# 
   718  0118                     	;# 
   719  0119                     	;# 
   720  011A                     	;# 
   721  011B                     	;# 
   722  011D                     	;# 
   723  018C                     	;# 
   724  018D                     	;# 
   725  018F                     	;# 
   726  0190                     	;# 
   727  0191                     	;# 
   728  0191                     	;# 
   729  0192                     	;# 
   730  0193                     	;# 
   731  0193                     	;# 
   732  0193                     	;# 
   733  0194                     	;# 
   734  0195                     	;# 
   735  0196                     	;# 
   736  0199                     	;# 
   737  019A                     	;# 
   738  019B                     	;# 
   739  019B                     	;# 
   740  019B                     	;# 
   741  019B                     	;# 
   742  019C                     	;# 
   743  019C                     	;# 
   744  019D                     	;# 
   745  019E                     	;# 
   746  019F                     	;# 
   747  020D                     	;# 
   748  0210                     	;# 
   749  0211                     	;# 
   750  0212                     	;# 
   751  0213                     	;# 
   752  0214                     	;# 
   753  0215                     	;# 
   754  0215                     	;# 
   755  0216                     	;# 
   756  0217                     	;# 
   757  0291                     	;# 
   758  0291                     	;# 
   759  0292                     	;# 
   760  0293                     	;# 
   761  0294                     	;# 
   762  0295                     	;# 
   763  0295                     	;# 
   764  0296                     	;# 
   765  0298                     	;# 
   766  0298                     	;# 
   767  0299                     	;# 
   768  029A                     	;# 
   769  029B                     	;# 
   770  029C                     	;# 
   771  029C                     	;# 
   772  029D                     	;# 
   773  029E                     	;# 
   774  029F                     	;# 
   775  0311                     	;# 
   776  0311                     	;# 
   777  0312                     	;# 
   778  0313                     	;# 
   779  0314                     	;# 
   780  0315                     	;# 
   781  0315                     	;# 
   782  0316                     	;# 
   783  0318                     	;# 
   784  0318                     	;# 
   785  0319                     	;# 
   786  031A                     	;# 
   787  031C                     	;# 
   788  031C                     	;# 
   789  031D                     	;# 
   790  031E                     	;# 
   791  0394                     	;# 
   792  0395                     	;# 
   793  0396                     	;# 
   794  0415                     	;# 
   795  0416                     	;# 
   796  0417                     	;# 
   797  041C                     	;# 
   798  041D                     	;# 
   799  041E                     	;# 
   800  0791                     	;# 
   801  0792                     	;# 
   802  0793                     	;# 
   803  0794                     	;# 
   804  0795                     	;# 
   805  0798                     	;# 
   806  0799                     	;# 
   807  079A                     	;# 
   808  07A0                     	;# 
   809  07A1                     	;# 
   810  07A2                     	;# 
   811  07A3                     	;# 
   812  07A4                     	;# 
   813  07A5                     	;# 
   814  07A6                     	;# 
   815  07A7                     	;# 
   816  07A8                     	;# 
   817  07A9                     	;# 
   818  07AA                     	;# 
   819  07AB                     	;# 
   820  0FE4                     	;# 
   821  0FE5                     	;# 
   822  0FE6                     	;# 
   823  0FE7                     	;# 
   824  0FE8                     	;# 
   825  0FE9                     	;# 
   826  0FEA                     	;# 
   827  0FEB                     	;# 
   828  0FED                     	;# 
   829  0FEE                     	;# 
   830  0FEF                     	;# 
   831  0000                     	;# 
   832  0001                     	;# 
   833  0002                     	;# 
   834  0003                     	;# 
   835  0004                     	;# 
   836  0005                     	;# 
   837  0006                     	;# 
   838  0007                     	;# 
   839  0008                     	;# 
   840  0009                     	;# 
   841  000A                     	;# 
   842  000B                     	;# 
   843  000C                     	;# 
   844  000D                     	;# 
   845  000E                     	;# 
   846  000F                     	;# 
   847  0010                     	;# 
   848  0011                     	;# 
   849  0012                     	;# 
   850  0013                     	;# 
   851  0015                     	;# 
   852  0016                     	;# 
   853  0016                     	;# 
   854  0017                     	;# 
   855  0018                     	;# 
   856  0019                     	;# 
   857  001A                     	;# 
   858  001B                     	;# 
   859  001C                     	;# 
   860  001E                     	;# 
   861  001F                     	;# 
   862  008C                     	;# 
   863  008D                     	;# 
   864  008E                     	;# 
   865  008F                     	;# 
   866  0090                     	;# 
   867  0091                     	;# 
   868  0092                     	;# 
   869  0093                     	;# 
   870  0095                     	;# 
   871  0096                     	;# 
   872  0097                     	;# 
   873  0098                     	;# 
   874  0099                     	;# 
   875  009A                     	;# 
   876  009B                     	;# 
   877  009B                     	;# 
   878  009C                     	;# 
   879  009D                     	;# 
   880  009E                     	;# 
   881  010C                     	;# 
   882  010D                     	;# 
   883  010E                     	;# 
   884  010F                     	;# 
   885  0110                     	;# 
   886  0111                     	;# 
   887  0112                     	;# 
   888  0113                     	;# 
   889  0114                     	;# 
   890  0115                     	;# 
   891  0116                     	;# 
   892  0117                     	;# 
   893  0118                     	;# 
   894  0119                     	;# 
   895  011A                     	;# 
   896  011B                     	;# 
   897  011D                     	;# 
   898  018C                     	;# 
   899  018D                     	;# 
   900  018F                     	;# 
   901  0190                     	;# 
   902  0191                     	;# 
   903  0191                     	;# 
   904  0192                     	;# 
   905  0193                     	;# 
   906  0193                     	;# 
   907  0193                     	;# 
   908  0194                     	;# 
   909  0195                     	;# 
   910  0196                     	;# 
   911  0199                     	;# 
   912  019A                     	;# 
   913  019B                     	;# 
   914  019B                     	;# 
   915  019B                     	;# 
   916  019B                     	;# 
   917  019C                     	;# 
   918  019C                     	;# 
   919  019D                     	;# 
   920  019E                     	;# 
   921  019F                     	;# 
   922  020D                     	;# 
   923  0210                     	;# 
   924  0211                     	;# 
   925  0212                     	;# 
   926  0213                     	;# 
   927  0214                     	;# 
   928  0215                     	;# 
   929  0215                     	;# 
   930  0216                     	;# 
   931  0217                     	;# 
   932  0291                     	;# 
   933  0291                     	;# 
   934  0292                     	;# 
   935  0293                     	;# 
   936  0294                     	;# 
   937  0295                     	;# 
   938  0295                     	;# 
   939  0296                     	;# 
   940  0298                     	;# 
   941  0298                     	;# 
   942  0299                     	;# 
   943  029A                     	;# 
   944  029B                     	;# 
   945  029C                     	;# 
   946  029C                     	;# 
   947  029D                     	;# 
   948  029E                     	;# 
   949  029F                     	;# 
   950  0311                     	;# 
   951  0311                     	;# 
   952  0312                     	;# 
   953  0313                     	;# 
   954  0314                     	;# 
   955  0315                     	;# 
   956  0315                     	;# 
   957  0316                     	;# 
   958  0318                     	;# 
   959  0318                     	;# 
   960  0319                     	;# 
   961  031A                     	;# 
   962  031C                     	;# 
   963  031C                     	;# 
   964  031D                     	;# 
   965  031E                     	;# 
   966  0394                     	;# 
   967  0395                     	;# 
   968  0396                     	;# 
   969  0415                     	;# 
   970  0416                     	;# 
   971  0417                     	;# 
   972  041C                     	;# 
   973  041D                     	;# 
   974  041E                     	;# 
   975  0791                     	;# 
   976  0792                     	;# 
   977  0793                     	;# 
   978  0794                     	;# 
   979  0795                     	;# 
   980  0798                     	;# 
   981  0799                     	;# 
   982  079A                     	;# 
   983  07A0                     	;# 
   984  07A1                     	;# 
   985  07A2                     	;# 
   986  07A3                     	;# 
   987  07A4                     	;# 
   988  07A5                     	;# 
   989  07A6                     	;# 
   990  07A7                     	;# 
   991  07A8                     	;# 
   992  07A9                     	;# 
   993  07AA                     	;# 
   994  07AB                     	;# 
   995  0FE4                     	;# 
   996  0FE5                     	;# 
   997  0FE6                     	;# 
   998  0FE7                     	;# 
   999  0FE8                     	;# 
  1000  0FE9                     	;# 
  1001  0FEA                     	;# 
  1002  0FEB                     	;# 
  1003  0FED                     	;# 
  1004  0FEE                     	;# 
  1005  0FEF                     	;# 
  1006  0000                     	;# 
  1007  0001                     	;# 
  1008  0002                     	;# 
  1009  0003                     	;# 
  1010  0004                     	;# 
  1011  0005                     	;# 
  1012  0006                     	;# 
  1013  0007                     	;# 
  1014  0008                     	;# 
  1015  0009                     	;# 
  1016  000A                     	;# 
  1017  000B                     	;# 
  1018  000C                     	;# 
  1019  000D                     	;# 
  1020  000E                     	;# 
  1021  000F                     	;# 
  1022  0010                     	;# 
  1023  0011                     	;# 
  1024  0012                     	;# 
  1025  0013                     	;# 
  1026  0015                     	;# 
  1027  0016                     	;# 
  1028  0016                     	;# 
  1029  0017                     	;# 
  1030  0018                     	;# 
  1031  0019                     	;# 
  1032  001A                     	;# 
  1033  001B                     	;# 
  1034  001C                     	;# 
  1035  001E                     	;# 
  1036  001F                     	;# 
  1037  008C                     	;# 
  1038  008D                     	;# 
  1039  008E                     	;# 
  1040  008F                     	;# 
  1041  0090                     	;# 
  1042  0091                     	;# 
  1043  0092                     	;# 
  1044  0093                     	;# 
  1045  0095                     	;# 
  1046  0096                     	;# 
  1047  0097                     	;# 
  1048  0098                     	;# 
  1049  0099                     	;# 
  1050  009A                     	;# 
  1051  009B                     	;# 
  1052  009B                     	;# 
  1053  009C                     	;# 
  1054  009D                     	;# 
  1055  009E                     	;# 
  1056  010C                     	;# 
  1057  010D                     	;# 
  1058  010E                     	;# 
  1059  010F                     	;# 
  1060  0110                     	;# 
  1061  0111                     	;# 
  1062  0112                     	;# 
  1063  0113                     	;# 
  1064  0114                     	;# 
  1065  0115                     	;# 
  1066  0116                     	;# 
  1067  0117                     	;# 
  1068  0118                     	;# 
  1069  0119                     	;# 
  1070  011A                     	;# 
  1071  011B                     	;# 
  1072  011D                     	;# 
  1073  018C                     	;# 
  1074  018D                     	;# 
  1075  018F                     	;# 
  1076  0190                     	;# 
  1077  0191                     	;# 
  1078  0191                     	;# 
  1079  0192                     	;# 
  1080  0193                     	;# 
  1081  0193                     	;# 
  1082  0193                     	;# 
  1083  0194                     	;# 
  1084  0195                     	;# 
  1085  0196                     	;# 
  1086  0199                     	;# 
  1087  019A                     	;# 
  1088  019B                     	;# 
  1089  019B                     	;# 
  1090  019B                     	;# 
  1091  019B                     	;# 
  1092  019C                     	;# 
  1093  019C                     	;# 
  1094  019D                     	;# 
  1095  019E                     	;# 
  1096  019F                     	;# 
  1097  020D                     	;# 
  1098  0210                     	;# 
  1099  0211                     	;# 
  1100  0212                     	;# 
  1101  0213                     	;# 
  1102  0214                     	;# 
  1103  0215                     	;# 
  1104  0215                     	;# 
  1105  0216                     	;# 
  1106  0217                     	;# 
  1107  0291                     	;# 
  1108  0291                     	;# 
  1109  0292                     	;# 
  1110  0293                     	;# 
  1111  0294                     	;# 
  1112  0295                     	;# 
  1113  0295                     	;# 
  1114  0296                     	;# 
  1115  0298                     	;# 
  1116  0298                     	;# 
  1117  0299                     	;# 
  1118  029A                     	;# 
  1119  029B                     	;# 
  1120  029C                     	;# 
  1121  029C                     	;# 
  1122  029D                     	;# 
  1123  029E                     	;# 
  1124  029F                     	;# 
  1125  0311                     	;# 
  1126  0311                     	;# 
  1127  0312                     	;# 
  1128  0313                     	;# 
  1129  0314                     	;# 
  1130  0315                     	;# 
  1131  0315                     	;# 
  1132  0316                     	;# 
  1133  0318                     	;# 
  1134  0318                     	;# 
  1135  0319                     	;# 
  1136  031A                     	;# 
  1137  031C                     	;# 
  1138  031C                     	;# 
  1139  031D                     	;# 
  1140  031E                     	;# 
  1141  0394                     	;# 
  1142  0395                     	;# 
  1143  0396                     	;# 
  1144  0415                     	;# 
  1145  0416                     	;# 
  1146  0417                     	;# 
  1147  041C                     	;# 
  1148  041D                     	;# 
  1149  041E                     	;# 
  1150  0791                     	;# 
  1151  0792                     	;# 
  1152  0793                     	;# 
  1153  0794                     	;# 
  1154  0795                     	;# 
  1155  0798                     	;# 
  1156  0799                     	;# 
  1157  079A                     	;# 
  1158  07A0                     	;# 
  1159  07A1                     	;# 
  1160  07A2                     	;# 
  1161  07A3                     	;# 
  1162  07A4                     	;# 
  1163  07A5                     	;# 
  1164  07A6                     	;# 
  1165  07A7                     	;# 
  1166  07A8                     	;# 
  1167  07A9                     	;# 
  1168  07AA                     	;# 
  1169  07AB                     	;# 
  1170  0FE4                     	;# 
  1171  0FE5                     	;# 
  1172  0FE6                     	;# 
  1173  0FE7                     	;# 
  1174  0FE8                     	;# 
  1175  0FE9                     	;# 
  1176  0FEA                     	;# 
  1177  0FEB                     	;# 
  1178  0FED                     	;# 
  1179  0FEE                     	;# 
  1180  0FEF                     	;# 
  1181  0000                     	;# 
  1182  0001                     	;# 
  1183  0002                     	;# 
  1184  0003                     	;# 
  1185  0004                     	;# 
  1186  0005                     	;# 
  1187  0006                     	;# 
  1188  0007                     	;# 
  1189  0008                     	;# 
  1190  0009                     	;# 
  1191  000A                     	;# 
  1192  000B                     	;# 
  1193  000C                     	;# 
  1194  000D                     	;# 
  1195  000E                     	;# 
  1196  000F                     	;# 
  1197  0010                     	;# 
  1198  0011                     	;# 
  1199  0012                     	;# 
  1200  0013                     	;# 
  1201  0015                     	;# 
  1202  0016                     	;# 
  1203  0016                     	;# 
  1204  0017                     	;# 
  1205  0018                     	;# 
  1206  0019                     	;# 
  1207  001A                     	;# 
  1208  001B                     	;# 
  1209  001C                     	;# 
  1210  001E                     	;# 
  1211  001F                     	;# 
  1212  008C                     	;# 
  1213  008D                     	;# 
  1214  008E                     	;# 
  1215  008F                     	;# 
  1216  0090                     	;# 
  1217  0091                     	;# 
  1218  0092                     	;# 
  1219  0093                     	;# 
  1220  0095                     	;# 
  1221  0096                     	;# 
  1222  0097                     	;# 
  1223  0098                     	;# 
  1224  0099                     	;# 
  1225  009A                     	;# 
  1226  009B                     	;# 
  1227  009B                     	;# 
  1228  009C                     	;# 
  1229  009D                     	;# 
  1230  009E                     	;# 
  1231  010C                     	;# 
  1232  010D                     	;# 
  1233  010E                     	;# 
  1234  010F                     	;# 
  1235  0110                     	;# 
  1236  0111                     	;# 
  1237  0112                     	;# 
  1238  0113                     	;# 
  1239  0114                     	;# 
  1240  0115                     	;# 
  1241  0116                     	;# 
  1242  0117                     	;# 
  1243  0118                     	;# 
  1244  0119                     	;# 
  1245  011A                     	;# 
  1246  011B                     	;# 
  1247  011D                     	;# 
  1248  018C                     	;# 
  1249  018D                     	;# 
  1250  018F                     	;# 
  1251  0190                     	;# 
  1252  0191                     	;# 
  1253  0191                     	;# 
  1254  0192                     	;# 
  1255  0193                     	;# 
  1256  0193                     	;# 
  1257  0193                     	;# 
  1258  0194                     	;# 
  1259  0195                     	;# 
  1260  0196                     	;# 
  1261  0199                     	;# 
  1262  019A                     	;# 
  1263  019B                     	;# 
  1264  019B                     	;# 
  1265  019B                     	;# 
  1266  019B                     	;# 
  1267  019C                     	;# 
  1268  019C                     	;# 
  1269  019D                     	;# 
  1270  019E                     	;# 
  1271  019F                     	;# 
  1272  020D                     	;# 
  1273  0210                     	;# 
  1274  0211                     	;# 
  1275  0212                     	;# 
  1276  0213                     	;# 
  1277  0214                     	;# 
  1278  0215                     	;# 
  1279  0215                     	;# 
  1280  0216                     	;# 
  1281  0217                     	;# 
  1282  0291                     	;# 
  1283  0291                     	;# 
  1284  0292                     	;# 
  1285  0293                     	;# 
  1286  0294                     	;# 
  1287  0295                     	;# 
  1288  0295                     	;# 
  1289  0296                     	;# 
  1290  0298                     	;# 
  1291  0298                     	;# 
  1292  0299                     	;# 
  1293  029A                     	;# 
  1294  029B                     	;# 
  1295  029C                     	;# 
  1296  029C                     	;# 
  1297  029D                     	;# 
  1298  029E                     	;# 
  1299  029F                     	;# 
  1300  0311                     	;# 
  1301  0311                     	;# 
  1302  0312                     	;# 
  1303  0313                     	;# 
  1304  0314                     	;# 
  1305  0315                     	;# 
  1306  0315                     	;# 
  1307  0316                     	;# 
  1308  0318                     	;# 
  1309  0318                     	;# 
  1310  0319                     	;# 
  1311  031A                     	;# 
  1312  031C                     	;# 
  1313  031C                     	;# 
  1314  031D                     	;# 
  1315  031E                     	;# 
  1316  0394                     	;# 
  1317  0395                     	;# 
  1318  0396                     	;# 
  1319  0415                     	;# 
  1320  0416                     	;# 
  1321  0417                     	;# 
  1322  041C                     	;# 
  1323  041D                     	;# 
  1324  041E                     	;# 
  1325  0791                     	;# 
  1326  0792                     	;# 
  1327  0793                     	;# 
  1328  0794                     	;# 
  1329  0795                     	;# 
  1330  0798                     	;# 
  1331  0799                     	;# 
  1332  079A                     	;# 
  1333  07A0                     	;# 
  1334  07A1                     	;# 
  1335  07A2                     	;# 
  1336  07A3                     	;# 
  1337  07A4                     	;# 
  1338  07A5                     	;# 
  1339  07A6                     	;# 
  1340  07A7                     	;# 
  1341  07A8                     	;# 
  1342  07A9                     	;# 
  1343  07AA                     	;# 
  1344  07AB                     	;# 
  1345  0FE4                     	;# 
  1346  0FE5                     	;# 
  1347  0FE6                     	;# 
  1348  0FE7                     	;# 
  1349  0FE8                     	;# 
  1350  0FE9                     	;# 
  1351  0FEA                     	;# 
  1352  0FEB                     	;# 
  1353  0FED                     	;# 
  1354  0FEE                     	;# 
  1355  0FEF                     	;# 
  1356  0000                     	;# 
  1357  0001                     	;# 
  1358  0002                     	;# 
  1359  0003                     	;# 
  1360  0004                     	;# 
  1361  0005                     	;# 
  1362  0006                     	;# 
  1363  0007                     	;# 
  1364  0008                     	;# 
  1365  0009                     	;# 
  1366  000A                     	;# 
  1367  000B                     	;# 
  1368  000C                     	;# 
  1369  000D                     	;# 
  1370  000E                     	;# 
  1371  000F                     	;# 
  1372  0010                     	;# 
  1373  0011                     	;# 
  1374  0012                     	;# 
  1375  0013                     	;# 
  1376  0015                     	;# 
  1377  0016                     	;# 
  1378  0016                     	;# 
  1379  0017                     	;# 
  1380  0018                     	;# 
  1381  0019                     	;# 
  1382  001A                     	;# 
  1383  001B                     	;# 
  1384  001C                     	;# 
  1385  001E                     	;# 
  1386  001F                     	;# 
  1387  008C                     	;# 
  1388  008D                     	;# 
  1389  008E                     	;# 
  1390  008F                     	;# 
  1391  0090                     	;# 
  1392  0091                     	;# 
  1393  0092                     	;# 
  1394  0093                     	;# 
  1395  0095                     	;# 
  1396  0096                     	;# 
  1397  0097                     	;# 
  1398  0098                     	;# 
  1399  0099                     	;# 
  1400  009A                     	;# 
  1401  009B                     	;# 
  1402  009B                     	;# 
  1403  009C                     	;# 
  1404  009D                     	;# 
  1405  009E                     	;# 
  1406  010C                     	;# 
  1407  010D                     	;# 
  1408  010E                     	;# 
  1409  010F                     	;# 
  1410  0110                     	;# 
  1411  0111                     	;# 
  1412  0112                     	;# 
  1413  0113                     	;# 
  1414  0114                     	;# 
  1415  0115                     	;# 
  1416  0116                     	;# 
  1417  0117                     	;# 
  1418  0118                     	;# 
  1419  0119                     	;# 
  1420  011A                     	;# 
  1421  011B                     	;# 
  1422  011D                     	;# 
  1423  018C                     	;# 
  1424  018D                     	;# 
  1425  018F                     	;# 
  1426  0190                     	;# 
  1427  0191                     	;# 
  1428  0191                     	;# 
  1429  0192                     	;# 
  1430  0193                     	;# 
  1431  0193                     	;# 
  1432  0193                     	;# 
  1433  0194                     	;# 
  1434  0195                     	;# 
  1435  0196                     	;# 
  1436  0199                     	;# 
  1437  019A                     	;# 
  1438  019B                     	;# 
  1439  019B                     	;# 
  1440  019B                     	;# 
  1441  019B                     	;# 
  1442  019C                     	;# 
  1443  019C                     	;# 
  1444  019D                     	;# 
  1445  019E                     	;# 
  1446  019F                     	;# 
  1447  020D                     	;# 
  1448  0210                     	;# 
  1449  0211                     	;# 
  1450  0212                     	;# 
  1451  0213                     	;# 
  1452  0214                     	;# 
  1453  0215                     	;# 
  1454  0215                     	;# 
  1455  0216                     	;# 
  1456  0217                     	;# 
  1457  0291                     	;# 
  1458  0291                     	;# 
  1459  0292                     	;# 
  1460  0293                     	;# 
  1461  0294                     	;# 
  1462  0295                     	;# 
  1463  0295                     	;# 
  1464  0296                     	;# 
  1465  0298                     	;# 
  1466  0298                     	;# 
  1467  0299                     	;# 
  1468  029A                     	;# 
  1469  029B                     	;# 
  1470  029C                     	;# 
  1471  029C                     	;# 
  1472  029D                     	;# 
  1473  029E                     	;# 
  1474  029F                     	;# 
  1475  0311                     	;# 
  1476  0311                     	;# 
  1477  0312                     	;# 
  1478  0313                     	;# 
  1479  0314                     	;# 
  1480  0315                     	;# 
  1481  0315                     	;# 
  1482  0316                     	;# 
  1483  0318                     	;# 
  1484  0318                     	;# 
  1485  0319                     	;# 
  1486  031A                     	;# 
  1487  031C                     	;# 
  1488  031C                     	;# 
  1489  031D                     	;# 
  1490  031E                     	;# 
  1491  0394                     	;# 
  1492  0395                     	;# 
  1493  0396                     	;# 
  1494  0415                     	;# 
  1495  0416                     	;# 
  1496  0417                     	;# 
  1497  041C                     	;# 
  1498  041D                     	;# 
  1499  041E                     	;# 
  1500  0791                     	;# 
  1501  0792                     	;# 
  1502  0793                     	;# 
  1503  0794                     	;# 
  1504  0795                     	;# 
  1505  0798                     	;# 
  1506  0799                     	;# 
  1507  079A                     	;# 
  1508  07A0                     	;# 
  1509  07A1                     	;# 
  1510  07A2                     	;# 
  1511  07A3                     	;# 
  1512  07A4                     	;# 
  1513  07A5                     	;# 
  1514  07A6                     	;# 
  1515  07A7                     	;# 
  1516  07A8                     	;# 
  1517  07A9                     	;# 
  1518  07AA                     	;# 
  1519  07AB                     	;# 
  1520  0FE4                     	;# 
  1521  0FE5                     	;# 
  1522  0FE6                     	;# 
  1523  0FE7                     	;# 
  1524  0FE8                     	;# 
  1525  0FE9                     	;# 
  1526  0FEA                     	;# 
  1527  0FEB                     	;# 
  1528  0FED                     	;# 
  1529  0FEE                     	;# 
  1530  0FEF                     	;# 
  1531  0000                     	;# 
  1532  0001                     	;# 
  1533  0002                     	;# 
  1534  0003                     	;# 
  1535  0004                     	;# 
  1536  0005                     	;# 
  1537  0006                     	;# 
  1538  0007                     	;# 
  1539  0008                     	;# 
  1540  0009                     	;# 
  1541  000A                     	;# 
  1542  000B                     	;# 
  1543  000C                     	;# 
  1544  000D                     	;# 
  1545  000E                     	;# 
  1546  000F                     	;# 
  1547  0010                     	;# 
  1548  0011                     	;# 
  1549  0012                     	;# 
  1550  0013                     	;# 
  1551  0015                     	;# 
  1552  0016                     	;# 
  1553  0016                     	;# 
  1554  0017                     	;# 
  1555  0018                     	;# 
  1556  0019                     	;# 
  1557  001A                     	;# 
  1558  001B                     	;# 
  1559  001C                     	;# 
  1560  001E                     	;# 
  1561  001F                     	;# 
  1562  008C                     	;# 
  1563  008D                     	;# 
  1564  008E                     	;# 
  1565  008F                     	;# 
  1566  0090                     	;# 
  1567  0091                     	;# 
  1568  0092                     	;# 
  1569  0093                     	;# 
  1570  0095                     	;# 
  1571  0096                     	;# 
  1572  0097                     	;# 
  1573  0098                     	;# 
  1574  0099                     	;# 
  1575  009A                     	;# 
  1576  009B                     	;# 
  1577  009B                     	;# 
  1578  009C                     	;# 
  1579  009D                     	;# 
  1580  009E                     	;# 
  1581  010C                     	;# 
  1582  010D                     	;# 
  1583  010E                     	;# 
  1584  010F                     	;# 
  1585  0110                     	;# 
  1586  0111                     	;# 
  1587  0112                     	;# 
  1588  0113                     	;# 
  1589  0114                     	;# 
  1590  0115                     	;# 
  1591  0116                     	;# 
  1592  0117                     	;# 
  1593  0118                     	;# 
  1594  0119                     	;# 
  1595  011A                     	;# 
  1596  011B                     	;# 
  1597  011D                     	;# 
  1598  018C                     	;# 
  1599  018D                     	;# 
  1600  018F                     	;# 
  1601  0190                     	;# 
  1602  0191                     	;# 
  1603  0191                     	;# 
  1604  0192                     	;# 
  1605  0193                     	;# 
  1606  0193                     	;# 
  1607  0193                     	;# 
  1608  0194                     	;# 
  1609  0195                     	;# 
  1610  0196                     	;# 
  1611  0199                     	;# 
  1612  019A                     	;# 
  1613  019B                     	;# 
  1614  019B                     	;# 
  1615  019B                     	;# 
  1616  019B                     	;# 
  1617  019C                     	;# 
  1618  019C                     	;# 
  1619  019D                     	;# 
  1620  019E                     	;# 
  1621  019F                     	;# 
  1622  020D                     	;# 
  1623  0210                     	;# 
  1624  0211                     	;# 
  1625  0212                     	;# 
  1626  0213                     	;# 
  1627  0214                     	;# 
  1628  0215                     	;# 
  1629  0215                     	;# 
  1630  0216                     	;# 
  1631  0217                     	;# 
  1632  0291                     	;# 
  1633  0291                     	;# 
  1634  0292                     	;# 
  1635  0293                     	;# 
  1636  0294                     	;# 
  1637  0295                     	;# 
  1638  0295                     	;# 
  1639  0296                     	;# 
  1640  0298                     	;# 
  1641  0298                     	;# 
  1642  0299                     	;# 
  1643  029A                     	;# 
  1644  029B                     	;# 
  1645  029C                     	;# 
  1646  029C                     	;# 
  1647  029D                     	;# 
  1648  029E                     	;# 
  1649  029F                     	;# 
  1650  0311                     	;# 
  1651  0311                     	;# 
  1652  0312                     	;# 
  1653  0313                     	;# 
  1654  0314                     	;# 
  1655  0315                     	;# 
  1656  0315                     	;# 
  1657  0316                     	;# 
  1658  0318                     	;# 
  1659  0318                     	;# 
  1660  0319                     	;# 
  1661  031A                     	;# 
  1662  031C                     	;# 
  1663  031C                     	;# 
  1664  031D                     	;# 
  1665  031E                     	;# 
  1666  0394                     	;# 
  1667  0395                     	;# 
  1668  0396                     	;# 
  1669  0415                     	;# 
  1670  0416                     	;# 
  1671  0417                     	;# 
  1672  041C                     	;# 
  1673  041D                     	;# 
  1674  041E                     	;# 
  1675  0791                     	;# 
  1676  0792                     	;# 
  1677  0793                     	;# 
  1678  0794                     	;# 
  1679  0795                     	;# 
  1680  0798                     	;# 
  1681  0799                     	;# 
  1682  079A                     	;# 
  1683  07A0                     	;# 
  1684  07A1                     	;# 
  1685  07A2                     	;# 
  1686  07A3                     	;# 
  1687  07A4                     	;# 
  1688  07A5                     	;# 
  1689  07A6                     	;# 
  1690  07A7                     	;# 
  1691  07A8                     	;# 
  1692  07A9                     	;# 
  1693  07AA                     	;# 
  1694  07AB                     	;# 
  1695  0FE4                     	;# 
  1696  0FE5                     	;# 
  1697  0FE6                     	;# 
  1698  0FE7                     	;# 
  1699  0FE8                     	;# 
  1700  0FE9                     	;# 
  1701  0FEA                     	;# 
  1702  0FEB                     	;# 
  1703  0FED                     	;# 
  1704  0FEE                     	;# 
  1705  0FEF                     	;# 
  1706  0000                     	;# 
  1707  0001                     	;# 
  1708  0002                     	;# 
  1709  0003                     	;# 
  1710  0004                     	;# 
  1711  0005                     	;# 
  1712  0006                     	;# 
  1713  0007                     	;# 
  1714  0008                     	;# 
  1715  0009                     	;# 
  1716  000A                     	;# 
  1717  000B                     	;# 
  1718  000C                     	;# 
  1719  000D                     	;# 
  1720  000E                     	;# 
  1721  000F                     	;# 
  1722  0010                     	;# 
  1723  0011                     	;# 
  1724  0012                     	;# 
  1725  0013                     	;# 
  1726  0015                     	;# 
  1727  0016                     	;# 
  1728  0016                     	;# 
  1729  0017                     	;# 
  1730  0018                     	;# 
  1731  0019                     	;# 
  1732  001A                     	;# 
  1733  001B                     	;# 
  1734  001C                     	;# 
  1735  001E                     	;# 
  1736  001F                     	;# 
  1737  008C                     	;# 
  1738  008D                     	;# 
  1739  008E                     	;# 
  1740  008F                     	;# 
  1741  0090                     	;# 
  1742  0091                     	;# 
  1743  0092                     	;# 
  1744  0093                     	;# 
  1745  0095                     	;# 
  1746  0096                     	;# 
  1747  0097                     	;# 
  1748  0098                     	;# 
  1749  0099                     	;# 
  1750  009A                     	;# 
  1751  009B                     	;# 
  1752  009B                     	;# 
  1753  009C                     	;# 
  1754  009D                     	;# 
  1755  009E                     	;# 
  1756  010C                     	;# 
  1757  010D                     	;# 
  1758  010E                     	;# 
  1759  010F                     	;# 
  1760  0110                     	;# 
  1761  0111                     	;# 
  1762  0112                     	;# 
  1763  0113                     	;# 
  1764  0114                     	;# 
  1765  0115                     	;# 
  1766  0116                     	;# 
  1767  0117                     	;# 
  1768  0118                     	;# 
  1769  0119                     	;# 
  1770  011A                     	;# 
  1771  011B                     	;# 
  1772  011D                     	;# 
  1773  018C                     	;# 
  1774  018D                     	;# 
  1775  018F                     	;# 
  1776  0190                     	;# 
  1777  0191                     	;# 
  1778  0191                     	;# 
  1779  0192                     	;# 
  1780  0193                     	;# 
  1781  0193                     	;# 
  1782  0193                     	;# 
  1783  0194                     	;# 
  1784  0195                     	;# 
  1785  0196                     	;# 
  1786  0199                     	;# 
  1787  019A                     	;# 
  1788  019B                     	;# 
  1789  019B                     	;# 
  1790  019B                     	;# 
  1791  019B                     	;# 
  1792  019C                     	;# 
  1793  019C                     	;# 
  1794  019D                     	;# 
  1795  019E                     	;# 
  1796  019F                     	;# 
  1797  020D                     	;# 
  1798  0210                     	;# 
  1799  0211                     	;# 
  1800  0212                     	;# 
  1801  0213                     	;# 
  1802  0214                     	;# 
  1803  0215                     	;# 
  1804  0215                     	;# 
  1805  0216                     	;# 
  1806  0217                     	;# 
  1807  0291                     	;# 
  1808  0291                     	;# 
  1809  0292                     	;# 
  1810  0293                     	;# 
  1811  0294                     	;# 
  1812  0295                     	;# 
  1813  0295                     	;# 
  1814  0296                     	;# 
  1815  0298                     	;# 
  1816  0298                     	;# 
  1817  0299                     	;# 
  1818  029A                     	;# 
  1819  029B                     	;# 
  1820  029C                     	;# 
  1821  029C                     	;# 
  1822  029D                     	;# 
  1823  029E                     	;# 
  1824  029F                     	;# 
  1825  0311                     	;# 
  1826  0311                     	;# 
  1827  0312                     	;# 
  1828  0313                     	;# 
  1829  0314                     	;# 
  1830  0315                     	;# 
  1831  0315                     	;# 
  1832  0316                     	;# 
  1833  0318                     	;# 
  1834  0318                     	;# 
  1835  0319                     	;# 
  1836  031A                     	;# 
  1837  031C                     	;# 
  1838  031C                     	;# 
  1839  031D                     	;# 
  1840  031E                     	;# 
  1841  0394                     	;# 
  1842  0395                     	;# 
  1843  0396                     	;# 
  1844  0415                     	;# 
  1845  0416                     	;# 
  1846  0417                     	;# 
  1847  041C                     	;# 
  1848  041D                     	;# 
  1849  041E                     	;# 
  1850  0791                     	;# 
  1851  0792                     	;# 
  1852  0793                     	;# 
  1853  0794                     	;# 
  1854  0795                     	;# 
  1855  0798                     	;# 
  1856  0799                     	;# 
  1857  079A                     	;# 
  1858  07A0                     	;# 
  1859  07A1                     	;# 
  1860  07A2                     	;# 
  1861  07A3                     	;# 
  1862  07A4                     	;# 
  1863  07A5                     	;# 
  1864  07A6                     	;# 
  1865  07A7                     	;# 
  1866  07A8                     	;# 
  1867  07A9                     	;# 
  1868  07AA                     	;# 
  1869  07AB                     	;# 
  1870  0FE4                     	;# 
  1871  0FE5                     	;# 
  1872  0FE6                     	;# 
  1873  0FE7                     	;# 
  1874  0FE8                     	;# 
  1875  0FE9                     	;# 
  1876  0FEA                     	;# 
  1877  0FEB                     	;# 
  1878  0FED                     	;# 
  1879  0FEE                     	;# 
  1880  0FEF                     	;# 
  1881                           
  1882                           	psect	stringtext1
  1883  04AD                     __pstringtext1:
  1884  04AD                     _i2c_fsmStateTable:
  1885  04AD  348D               	retlw	low _I2C_DO_IDLE
  1886  04AE  3407               	retlw	high _I2C_DO_IDLE
  1887  04AF  3414               	retlw	low _I2C_DO_SEND_ADR_READ
  1888  04B0  3407               	retlw	high _I2C_DO_SEND_ADR_READ
  1889  04B1  3425               	retlw	low _I2C_DO_SEND_ADR_WRITE
  1890  04B2  3407               	retlw	high _I2C_DO_SEND_ADR_WRITE
  1891  04B3  34C9               	retlw	low _I2C_DO_TX
  1892  04B4  3402               	retlw	high _I2C_DO_TX
  1893  04B5  341E               	retlw	low _I2C_DO_RX
  1894  04B6  3403               	retlw	high _I2C_DO_RX
  1895  04B7  3434               	retlw	low _I2C_DO_RCEN
  1896  04B8  3407               	retlw	high _I2C_DO_RCEN
  1897  04B9  3424               	retlw	low _I2C_DO_TX_EMPTY
  1898  04BA  3404               	retlw	high _I2C_DO_TX_EMPTY
  1899  04BB  3488               	retlw	low _I2C_DO_SEND_RESTART_READ
  1900  04BC  3407               	retlw	high _I2C_DO_SEND_RESTART_READ
  1901  04BD  3483               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  1902  04BE  3407               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  1903  04BF  347E               	retlw	low _I2C_DO_SEND_RESTART
  1904  04C0  3407               	retlw	high _I2C_DO_SEND_RESTART
  1905  04C1  3479               	retlw	low _I2C_DO_SEND_STOP
  1906  04C2  3407               	retlw	high _I2C_DO_SEND_STOP
  1907  04C3  3474               	retlw	low _I2C_DO_RX_ACK
  1908  04C4  3407               	retlw	high _I2C_DO_RX_ACK
  1909  04C5  346F               	retlw	low _I2C_DO_RX_NACK_STOP
  1910  04C6  3407               	retlw	high _I2C_DO_RX_NACK_STOP
  1911  04C7  346A               	retlw	low _I2C_DO_RX_NACK_RESTART
  1912  04C8  3407               	retlw	high _I2C_DO_RX_NACK_RESTART
  1913  04C9  3465               	retlw	low _I2C_DO_RESET
  1914  04CA  3407               	retlw	high _I2C_DO_RESET
  1915  04CB  3481               	retlw	low _I2C_DO_ADDRESS_NACK
  1916  04CC  3404               	retlw	high _I2C_DO_ADDRESS_NACK
  1917  04CD                     __end_of_i2c_fsmStateTable:
  1918  000E                     _PORTCbits	set	14
  1919  0012                     _PIR2bits	set	18
  1920  0011                     _PIR1bits	set	17
  1921  000B                     _INTCONbits	set	11
  1922  0092                     _PIE2bits	set	146
  1923  0091                     _PIE1bits	set	145
  1924  009D                     _ADCON0bits	set	157
  1925  009D                     _ADCON0	set	157
  1926  009C                     _ADRESH	set	156
  1927  009B                     _ADRESL	set	155
  1928  009E                     _ADCON1	set	158
  1929  0097                     _WDTCON	set	151
  1930  0098                     _OSCTUNE	set	152
  1931  0099                     _OSCCON	set	153
  1932  0095                     _OPTION_REGbits	set	149
  1933  008F                     _TRISD	set	143
  1934  008E                     _TRISC	set	142
  1935  008D                     _TRISB	set	141
  1936  008C                     _TRISA	set	140
  1937  0090                     _TRISE	set	144
  1938  04D6                     _PLLR	set	1238
  1939  010D                     _LATBbits	set	269
  1940  010C                     _LATAbits	set	268
  1941  0116                     _BORCON	set	278
  1942  011D                     _APFCON	set	285
  1943  010E                     _LATC	set	270
  1944  010D                     _LATB	set	269
  1945  010C                     _LATA	set	268
  1946  010F                     _LATD	set	271
  1947  0110                     _LATE	set	272
  1948  0196                     _EECON2	set	406
  1949  0193                     _EEDATL	set	403
  1950  0194                     _EEDATH	set	404
  1951  0195                     _EECON1bits	set	405
  1952  0192                     _EEADRH	set	402
  1953  0191                     _EEADRL	set	401
  1954  0199                     _RCREG	set	409
  1955  019D                     _RCSTAbits	set	413
  1956  019A                     _TXREG	set	410
  1957  019E                     _TXSTAbits	set	414
  1958  019C                     _SPBRGH	set	412
  1959  019B                     _SPBRGL	set	411
  1960  019E                     _TXSTA	set	414
  1961  019D                     _RCSTA	set	413
  1962  019F                     _BAUDCON	set	415
  1963  018C                     _ANSELA	set	396
  1964  0190                     _ANSELE	set	400
  1965  018D                     _ANSELB	set	397
  1966  018F                     _ANSELD	set	399
  1967  0214                     _SSPSTATbits	set	532
  1968  0216                     _SSPCON2bits	set	534
  1969  0211                     _SSPBUF	set	529
  1970  0215                     _SSPCON1bits	set	533
  1971  0212                     _SSPADD	set	530
  1972  0216                     _SSPCON2	set	534
  1973  0215                     _SSPCON1	set	533
  1974  0214                     _SSPSTAT	set	532
  1975  020D                     _WPUB	set	525
  1976  0210                     _WPUE	set	528
  1977  04CD                     STR_1:
  1978  04CD  342D               	retlw	45	;'-'
  1979  04CE  343E               	retlw	62	;'>'
  1980  04CF  3447               	retlw	71	;'G'
  1981  04D0  3452               	retlw	82	;'R'
  1982  04D1  343A               	retlw	58	;':'
  1983  04D2  3478               	retlw	120	;'x'
  1984  04D3  343A               	retlw	58	;':'
  1985  04D4  344F               	retlw	79	;'O'
  1986  04D5  3446               	retlw	70	;'F'
  1987  04D6  3446               	retlw	70	;'F'
  1988  04D7  3400               	retlw	0
  1989                           
  1990                           	psect	stringtext2
  1991  069A                     __pstringtext2:
  1992  069A                     STR_11:
  1993  069A  342D               	retlw	45	;'-'
  1994  069B  343E               	retlw	62	;'>'
  1995  069C  3447               	retlw	71	;'G'
  1996  069D  3452               	retlw	82	;'R'
  1997  069E  343A               	retlw	58	;':'
  1998  069F  3431               	retlw	49	;'1'
  1999  06A0  3430               	retlw	48	;'0'
  2000  06A1  343A               	retlw	58	;':'
  2001  06A2  344F               	retlw	79	;'O'
  2002  06A3  344E               	retlw	78	;'N'
  2003  06A4  3400               	retlw	0
  2004                           
  2005                           	psect	stringtext3
  2006  06A5                     __pstringtext3:
  2007  06A5                     STR_12:
  2008  06A5  342D               	retlw	45	;'-'
  2009  06A6  343E               	retlw	62	;'>'
  2010  06A7  3447               	retlw	71	;'G'
  2011  06A8  3452               	retlw	82	;'R'
  2012  06A9  343A               	retlw	58	;':'
  2013  06AA  3431               	retlw	49	;'1'
  2014  06AB  3431               	retlw	49	;'1'
  2015  06AC  343A               	retlw	58	;':'
  2016  06AD  344F               	retlw	79	;'O'
  2017  06AE  344E               	retlw	78	;'N'
  2018  06AF  3400               	retlw	0
  2019                           
  2020                           	psect	stringtext4
  2021  06B0                     __pstringtext4:
  2022  06B0                     STR_2:
  2023  06B0  342D               	retlw	45	;'-'
  2024  06B1  343E               	retlw	62	;'>'
  2025  06B2  3447               	retlw	71	;'G'
  2026  06B3  3452               	retlw	82	;'R'
  2027  06B4  343A               	retlw	58	;':'
  2028  06B5  3431               	retlw	49	;'1'
  2029  06B6  343A               	retlw	58	;':'
  2030  06B7  344F               	retlw	79	;'O'
  2031  06B8  344E               	retlw	78	;'N'
  2032  06B9  3400               	retlw	0
  2033                           
  2034                           	psect	stringtext5
  2035  06BA                     __pstringtext5:
  2036  06BA                     STR_3:
  2037  06BA  342D               	retlw	45	;'-'
  2038  06BB  343E               	retlw	62	;'>'
  2039  06BC  3447               	retlw	71	;'G'
  2040  06BD  3452               	retlw	82	;'R'
  2041  06BE  343A               	retlw	58	;':'
  2042  06BF  3432               	retlw	50	;'2'
  2043  06C0  343A               	retlw	58	;':'
  2044  06C1  344F               	retlw	79	;'O'
  2045  06C2  344E               	retlw	78	;'N'
  2046  06C3  3400               	retlw	0
  2047                           
  2048                           	psect	stringtext6
  2049  06C4                     __pstringtext6:
  2050  06C4                     STR_4:
  2051  06C4  342D               	retlw	45	;'-'
  2052  06C5  343E               	retlw	62	;'>'
  2053  06C6  3447               	retlw	71	;'G'
  2054  06C7  3452               	retlw	82	;'R'
  2055  06C8  343A               	retlw	58	;':'
  2056  06C9  3433               	retlw	51	;'3'
  2057  06CA  343A               	retlw	58	;':'
  2058  06CB  344F               	retlw	79	;'O'
  2059  06CC  344E               	retlw	78	;'N'
  2060  06CD  3400               	retlw	0
  2061                           
  2062                           	psect	stringtext7
  2063  06CE                     __pstringtext7:
  2064  06CE                     STR_5:
  2065  06CE  342D               	retlw	45	;'-'
  2066  06CF  343E               	retlw	62	;'>'
  2067  06D0  3447               	retlw	71	;'G'
  2068  06D1  3452               	retlw	82	;'R'
  2069  06D2  343A               	retlw	58	;':'
  2070  06D3  3434               	retlw	52	;'4'
  2071  06D4  343A               	retlw	58	;':'
  2072  06D5  344F               	retlw	79	;'O'
  2073  06D6  344E               	retlw	78	;'N'
  2074  06D7  3400               	retlw	0
  2075                           
  2076                           	psect	stringtext8
  2077  06D8                     __pstringtext8:
  2078  06D8                     STR_6:
  2079  06D8  342D               	retlw	45	;'-'
  2080  06D9  343E               	retlw	62	;'>'
  2081  06DA  3447               	retlw	71	;'G'
  2082  06DB  3452               	retlw	82	;'R'
  2083  06DC  343A               	retlw	58	;':'
  2084  06DD  3435               	retlw	53	;'5'
  2085  06DE  343A               	retlw	58	;':'
  2086  06DF  344F               	retlw	79	;'O'
  2087  06E0  344E               	retlw	78	;'N'
  2088  06E1  3400               	retlw	0
  2089                           
  2090                           	psect	stringtext9
  2091  06E2                     __pstringtext9:
  2092  06E2                     STR_7:
  2093  06E2  342D               	retlw	45	;'-'
  2094  06E3  343E               	retlw	62	;'>'
  2095  06E4  3447               	retlw	71	;'G'
  2096  06E5  3452               	retlw	82	;'R'
  2097  06E6  343A               	retlw	58	;':'
  2098  06E7  3436               	retlw	54	;'6'
  2099  06E8  343A               	retlw	58	;':'
  2100  06E9  344F               	retlw	79	;'O'
  2101  06EA  344E               	retlw	78	;'N'
  2102  06EB  3400               	retlw	0
  2103                           
  2104                           	psect	stringtext10
  2105  06EC                     __pstringtext10:
  2106  06EC                     STR_8:
  2107  06EC  342D               	retlw	45	;'-'
  2108  06ED  343E               	retlw	62	;'>'
  2109  06EE  3447               	retlw	71	;'G'
  2110  06EF  3452               	retlw	82	;'R'
  2111  06F0  343A               	retlw	58	;':'
  2112  06F1  3437               	retlw	55	;'7'
  2113  06F2  343A               	retlw	58	;':'
  2114  06F3  344F               	retlw	79	;'O'
  2115  06F4  344E               	retlw	78	;'N'
  2116  06F5  3400               	retlw	0
  2117                           
  2118                           	psect	stringtext11
  2119  06F6                     __pstringtext11:
  2120  06F6                     STR_9:
  2121  06F6  342D               	retlw	45	;'-'
  2122  06F7  343E               	retlw	62	;'>'
  2123  06F8  3447               	retlw	71	;'G'
  2124  06F9  3452               	retlw	82	;'R'
  2125  06FA  343A               	retlw	58	;':'
  2126  06FB  3438               	retlw	56	;'8'
  2127  06FC  343A               	retlw	58	;':'
  2128  06FD  344F               	retlw	79	;'O'
  2129  06FE  344E               	retlw	78	;'N'
  2130  06FF  3400               	retlw	0
  2131                           
  2132                           	psect	stringtext12
  2133  0700                     __pstringtext12:
  2134  0700                     STR_10:
  2135  0700  342D               	retlw	45	;'-'
  2136  0701  343E               	retlw	62	;'>'
  2137  0702  3447               	retlw	71	;'G'
  2138  0703  3452               	retlw	82	;'R'
  2139  0704  343A               	retlw	58	;':'
  2140  0705  3439               	retlw	57	;'9'
  2141  0706  343A               	retlw	58	;':'
  2142  0707  344F               	retlw	79	;'O'
  2143  0708  344E               	retlw	78	;'N'
  2144  0709  3400               	retlw	0
  2145                           
  2146                           	psect	stringtext13
  2147  0000                     __pstringtext13:
  2148                           
  2149                           	psect	cinit
  2150  0049                     start_initialization:	
  2151                           ; #config settings
  2152                           
  2153  0049                     __initialization:
  2154                           
  2155                           ; Clear objects allocated to BANK0
  2156  0049  304D               	movlw	low __pbssBANK0
  2157  004A  0084               	movwf	4
  2158  004B  3000               	movlw	high __pbssBANK0
  2159  004C  0085               	movwf	5
  2160  004D  301D               	movlw	29
  2161  004E  3187  273B  3180   	fcall	clear_ram0
  2162                           
  2163                           ; Clear objects allocated to BANK1
  2164  0051  30A0               	movlw	low __pbssBANK1
  2165  0052  0084               	movwf	4
  2166  0053  3000               	movlw	high __pbssBANK1
  2167  0054  0085               	movwf	5
  2168  0055  3035               	movlw	53
  2169  0056  3187  273B  3180   	fcall	clear_ram0
  2170                           
  2171                           ; Clear objects allocated to BANK2
  2172  0059  3020               	movlw	low __pbssBANK2
  2173  005A  0084               	movwf	4
  2174  005B  3001               	movlw	high __pbssBANK2
  2175  005C  0085               	movwf	5
  2176  005D  3020               	movlw	32
  2177  005E  3187  273B  3180   	fcall	clear_ram0
  2178  0061                     end_of_initialization:	
  2179                           ;End of C runtime variable initialization code
  2180                           
  2181  0061                     __end_of__initialization:
  2182  0061  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2183  0062  0020               	movlb	0
  2184  0063  3182  2A5E         	ljmp	_main	;jump to C main() function
  2185                           
  2186                           	psect	bssBANK0
  2187  004D                     __pbssBANK0:
  2188  004D                     _nout:
  2189  004D                     	ds	2
  2190  004F                     _width:
  2191  004F                     	ds	2
  2192  0051                     _prec:
  2193  0051                     	ds	2
  2194  0053                     _flags:
  2195  0053                     	ds	2
  2196  0055                     _EUSART_ErrorHandler:
  2197  0055                     	ds	2
  2198  0057                     _EUSART_OverrunErrorHandler:
  2199  0057                     	ds	2
  2200  0059                     _EUSART_FramingErrorHandler:
  2201  0059                     	ds	2
  2202  005B                     _EUSART_RxDefaultInterruptHandler:
  2203  005B                     	ds	2
  2204  005D                     _EUSART_TxDefaultInterruptHandler:
  2205  005D                     	ds	2
  2206  005F                     _ADC_InterruptHandler:
  2207  005F                     	ds	2
  2208  0061                     _MSSP_InterruptHandler:
  2209  0061                     	ds	2
  2210  0063                     _eusartRxLastError:
  2211  0063                     	ds	1
  2212  0064                     _eusartRxCount:
  2213  0064                     	ds	1
  2214  0065                     _eusartRxTail:
  2215  0065                     	ds	1
  2216  0066                     _eusartRxHead:
  2217  0066                     	ds	1
  2218  0067                     _eusartTxBufferRemaining:
  2219  0067                     	ds	1
  2220  0068                     _eusartTxTail:
  2221  0068                     	ds	1
  2222  0069                     _eusartTxHead:
  2223  0069                     	ds	1
  2224                           
  2225                           	psect	bssBANK1
  2226  00A0                     __pbssBANK1:
  2227  00A0                     _I2C_Status:
  2228  00A0                     	ds	29
  2229  00BD                     _eusartRxStatusBuffer:
  2230  00BD                     	ds	8
  2231  00C5                     _eusartRxBuffer:
  2232  00C5                     	ds	8
  2233  00CD                     _eusartTxBuffer:
  2234  00CD                     	ds	8
  2235                           
  2236                           	psect	bssBANK2
  2237  0120                     __pbssBANK2:
  2238  0120                     _dbuf:
  2239  0120                     	ds	32
  2240                           
  2241                           	psect	clrtext
  2242  073B                     clear_ram0:	
  2243                           ;	Called with FSR0 containing the base address, and
  2244                           ;	WREG with the size to clear
  2245                           
  2246  073B  0064               	clrwdt	;clear the watchdog before getting into this loop
  2247  073C                     clrloop0:
  2248  073C  0180               	clrf	0	;clear RAM location pointed to by FSR
  2249  073D  3101               	addfsr 0,1
  2250  073E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2251  073F  2F3C               	goto	clrloop0	;have we reached the end yet?
  2252  0740  3400               	retlw	0	;all done for this memory range, return
  2253                           
  2254                           	psect	cstackCOMMON
  2255  0070                     __pcstackCOMMON:
  2256  0070                     ?_I2C_SetBuffer:
  2257  0070                     ?_I2C_Initialize:	
  2258                           ; 1 bytes @ 0x0
  2259                           
  2260  0070                     ?_OSCILLATOR_Initialize:	
  2261                           ; 1 bytes @ 0x0
  2262                           
  2263  0070                     ?_WDT_Initialize:	
  2264                           ; 1 bytes @ 0x0
  2265                           
  2266  0070                     ?_ADC_Initialize:	
  2267                           ; 1 bytes @ 0x0
  2268                           
  2269  0070                     ?_EUSART_Initialize:	
  2270                           ; 1 bytes @ 0x0
  2271                           
  2272  0070                     ?_EUSART_Receive_ISR:	
  2273                           ; 1 bytes @ 0x0
  2274                           
  2275  0070                     ?_EUSART_Transmit_ISR:	
  2276                           ; 1 bytes @ 0x0
  2277                           
  2278  0070                     ??_EUSART_Transmit_ISR:	
  2279                           ; 1 bytes @ 0x0
  2280                           
  2281  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  2282                           ; 1 bytes @ 0x0
  2283                           
  2284  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  2285                           ; 1 bytes @ 0x0
  2286                           
  2287  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  2288                           ; 1 bytes @ 0x0
  2289                           
  2290  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  2291                           ; 1 bytes @ 0x0
  2292                           
  2293  0070                     ?_EUSART_DefaultErrorHandler:	
  2294                           ; 1 bytes @ 0x0
  2295                           
  2296  0070                     ?_EUSART_RxDataHandler:	
  2297                           ; 1 bytes @ 0x0
  2298                           
  2299  0070                     ??_EUSART_RxDataHandler:	
  2300                           ; 1 bytes @ 0x0
  2301                           
  2302  0070                     ?_I2C_DO_IDLE:	
  2303                           ; 1 bytes @ 0x0
  2304                           
  2305  0070                     ??_I2C_DO_IDLE:	
  2306                           ; 1 bytes @ 0x0
  2307                           
  2308  0070                     ?_I2C_DO_SEND_ADR_READ:	
  2309                           ; 1 bytes @ 0x0
  2310                           
  2311  0070                     ??_I2C_DO_SEND_ADR_READ:	
  2312                           ; 1 bytes @ 0x0
  2313                           
  2314  0070                     ?_I2C_DO_SEND_ADR_WRITE:	
  2315                           ; 1 bytes @ 0x0
  2316                           
  2317  0070                     ?_I2C_DO_TX:	
  2318                           ; 1 bytes @ 0x0
  2319                           
  2320  0070                     ?_I2C_DO_RX:	
  2321                           ; 1 bytes @ 0x0
  2322                           
  2323  0070                     ?_I2C_DO_RCEN:	
  2324                           ; 1 bytes @ 0x0
  2325                           
  2326  0070                     ??_I2C_DO_RCEN:	
  2327                           ; 1 bytes @ 0x0
  2328                           
  2329  0070                     ?_I2C_DO_TX_EMPTY:	
  2330                           ; 1 bytes @ 0x0
  2331                           
  2332  0070                     ?_I2C_DO_SEND_RESTART_READ:	
  2333                           ; 1 bytes @ 0x0
  2334                           
  2335  0070                     ??_I2C_DO_SEND_RESTART_READ:	
  2336                           ; 1 bytes @ 0x0
  2337                           
  2338  0070                     ?_I2C_DO_SEND_RESTART_WRITE:	
  2339                           ; 1 bytes @ 0x0
  2340                           
  2341  0070                     ??_I2C_DO_SEND_RESTART_WRITE:	
  2342                           ; 1 bytes @ 0x0
  2343                           
  2344  0070                     ?_I2C_DO_SEND_RESTART:	
  2345                           ; 1 bytes @ 0x0
  2346                           
  2347  0070                     ??_I2C_DO_SEND_RESTART:	
  2348                           ; 1 bytes @ 0x0
  2349                           
  2350  0070                     ?_I2C_DO_SEND_STOP:	
  2351                           ; 1 bytes @ 0x0
  2352                           
  2353  0070                     ??_I2C_DO_SEND_STOP:	
  2354                           ; 1 bytes @ 0x0
  2355                           
  2356  0070                     ?_I2C_DO_RX_ACK:	
  2357                           ; 1 bytes @ 0x0
  2358                           
  2359  0070                     ??_I2C_DO_RX_ACK:	
  2360                           ; 1 bytes @ 0x0
  2361                           
  2362  0070                     ?_I2C_DO_RX_NACK_STOP:	
  2363                           ; 1 bytes @ 0x0
  2364                           
  2365  0070                     ??_I2C_DO_RX_NACK_STOP:	
  2366                           ; 1 bytes @ 0x0
  2367                           
  2368  0070                     ?_I2C_DO_RX_NACK_RESTART:	
  2369                           ; 1 bytes @ 0x0
  2370                           
  2371  0070                     ??_I2C_DO_RX_NACK_RESTART:	
  2372                           ; 1 bytes @ 0x0
  2373                           
  2374  0070                     ?_I2C_DO_RESET:	
  2375                           ; 1 bytes @ 0x0
  2376                           
  2377  0070                     ??_I2C_DO_RESET:	
  2378                           ; 1 bytes @ 0x0
  2379                           
  2380  0070                     ?_I2C_DO_ADDRESS_NACK:	
  2381                           ; 1 bytes @ 0x0
  2382                           
  2383  0070                     ?_I2C_MasterIsr:	
  2384                           ; 1 bytes @ 0x0
  2385                           
  2386  0070                     ?_I2C_MasterClearIrq:	
  2387                           ; 1 bytes @ 0x0
  2388                           
  2389  0070                     ??_I2C_MasterClearIrq:	
  2390                           ; 1 bytes @ 0x0
  2391                           
  2392  0070                     ?_I2C_SetCallback:	
  2393                           ; 1 bytes @ 0x0
  2394                           
  2395  0070                     ?_I2C_MasterFsm:	
  2396                           ; 1 bytes @ 0x0
  2397                           
  2398  0070                     ?_I2C_MasterIsNack:	
  2399                           ; 1 bytes @ 0x0
  2400                           
  2401  0070                     ??_I2C_MasterIsNack:	
  2402                           ; 1 bytes @ 0x0
  2403                           
  2404  0070                     ?_I2C_MasterSendTxData:	
  2405                           ; 1 bytes @ 0x0
  2406                           
  2407  0070                     ??_I2C_MasterSendTxData:	
  2408                           ; 1 bytes @ 0x0
  2409                           
  2410  0070                     ?_I2C_MasterGetRxData:	
  2411                           ; 1 bytes @ 0x0
  2412                           
  2413  0070                     ??_I2C_MasterGetRxData:	
  2414                           ; 1 bytes @ 0x0
  2415                           
  2416  0070                     ?_I2C_MasterSendAck:	
  2417                           ; 1 bytes @ 0x0
  2418                           
  2419  0070                     ??_I2C_MasterSendAck:	
  2420                           ; 1 bytes @ 0x0
  2421                           
  2422  0070                     ?_I2C_MasterStartRx:	
  2423                           ; 1 bytes @ 0x0
  2424                           
  2425  0070                     ??_I2C_MasterStartRx:	
  2426                           ; 1 bytes @ 0x0
  2427                           
  2428  0070                     ?_I2C_MasterSetIrq:	
  2429                           ; 1 bytes @ 0x0
  2430                           
  2431  0070                     ??_I2C_MasterSetIrq:	
  2432                           ; 1 bytes @ 0x0
  2433                           
  2434  0070                     ?_I2C_MasterEnableRestart:	
  2435                           ; 1 bytes @ 0x0
  2436                           
  2437  0070                     ??_I2C_MasterEnableRestart:	
  2438                           ; 1 bytes @ 0x0
  2439                           
  2440  0070                     ?_I2C_MasterStop:	
  2441                           ; 1 bytes @ 0x0
  2442                           
  2443  0070                     ??_I2C_MasterStop:	
  2444                           ; 1 bytes @ 0x0
  2445                           
  2446  0070                     ?_I2C_MasterSendNack:	
  2447                           ; 1 bytes @ 0x0
  2448                           
  2449  0070                     ??_I2C_MasterSendNack:	
  2450                           ; 1 bytes @ 0x0
  2451                           
  2452  0070                     ?_processActivation:	
  2453                           ; 1 bytes @ 0x0
  2454                           
  2455  0070                     ?_reset:	
  2456                           ; 1 bytes @ 0x0
  2457                           
  2458  0070                     ?_PIN_MANAGER_Initialize:	
  2459                           ; 1 bytes @ 0x0
  2460                           
  2461  0070                     ?_SYSTEM_Initialize:	
  2462                           ; 1 bytes @ 0x0
  2463                           
  2464  0070                     ?_EUSART_Read:	
  2465                           ; 1 bytes @ 0x0
  2466                           
  2467  0070                     ?_EUSART_Write:	
  2468                           ; 1 bytes @ 0x0
  2469                           
  2470  0070                     ?_putch:	
  2471                           ; 1 bytes @ 0x0
  2472                           
  2473  0070                     ?_INTERRUPT_InterruptManager:	
  2474                           ; 1 bytes @ 0x0
  2475                           
  2476  0070                     ?_main:	
  2477                           ; 1 bytes @ 0x0
  2478                           
  2479  0070                     ?_test:	
  2480                           ; 1 bytes @ 0x0
  2481                           
  2482  0070                     I2C_MasterSendTxData@data:	
  2483                           ; 1 bytes @ 0x0
  2484                           
  2485  0070                     I2C_SetBuffer@bufferSize:	
  2486                           ; 1 bytes @ 0x0
  2487                           
  2488  0070                     I2C_SetCallback@cb:	
  2489                           ; 2 bytes @ 0x0
  2490                           
  2491                           
  2492                           ; 2 bytes @ 0x0
  2493  0070                     	ds	1
  2494  0071                     ??_EUSART_Receive_ISR:
  2495  0071                     ??_EUSART_DefaultErrorHandler:	
  2496                           ; 1 bytes @ 0x1
  2497                           
  2498  0071                     ??_I2C_DO_SEND_ADR_WRITE:	
  2499                           ; 1 bytes @ 0x1
  2500                           
  2501                           
  2502                           ; 1 bytes @ 0x1
  2503  0071                     	ds	1
  2504  0072                     ??_I2C_SetBuffer:
  2505  0072                     I2C_SetCallback@ptr:	
  2506                           ; 1 bytes @ 0x2
  2507                           
  2508                           
  2509                           ; 1 bytes @ 0x2
  2510  0072                     	ds	1
  2511  0073                     ??_I2C_SetCallback:
  2512  0073                     I2C_SetBuffer@buffer:	
  2513                           ; 1 bytes @ 0x3
  2514                           
  2515                           
  2516                           ; 1 bytes @ 0x3
  2517  0073                     	ds	1
  2518  0074                     I2C_SetCallback@idx:
  2519                           
  2520                           ; 1 bytes @ 0x4
  2521  0074                     	ds	1
  2522  0075                     ?_I2C_SetDataCompleteCallback:
  2523  0075                     I2C_SetDataCompleteCallback@cb:	
  2524                           ; 1 bytes @ 0x5
  2525                           
  2526                           
  2527                           ; 2 bytes @ 0x5
  2528  0075                     	ds	2
  2529  0077                     I2C_SetDataCompleteCallback@ptr:
  2530                           
  2531                           ; 1 bytes @ 0x7
  2532  0077                     	ds	1
  2533  0078                     ??_I2C_SetDataCompleteCallback:
  2534                           
  2535                           ; 1 bytes @ 0x8
  2536  0078                     	ds	1
  2537  0079                     ?_rd1RegCompleteHandler:
  2538  0079                     ?_rd2RegCompleteHandler:	
  2539                           ; 1 bytes @ 0x9
  2540                           
  2541  0079                     ?_wr1RegCompleteHandler:	
  2542                           ; 1 bytes @ 0x9
  2543                           
  2544  0079                     ?_wr2RegCompleteHandler:	
  2545                           ; 1 bytes @ 0x9
  2546                           
  2547  0079                     ?_rdBlkRegCompleteHandler:	
  2548                           ; 1 bytes @ 0x9
  2549                           
  2550  0079                     ?_I2C_CallbackReturnStop:	
  2551                           ; 1 bytes @ 0x9
  2552                           
  2553  0079                     ?_I2C_CallbackReturnReset:	
  2554                           ; 1 bytes @ 0x9
  2555                           
  2556  0079                     rd1RegCompleteHandler@ptr:	
  2557                           ; 1 bytes @ 0x9
  2558                           
  2559  0079                     rd2RegCompleteHandler@ptr:	
  2560                           ; 1 bytes @ 0x9
  2561                           
  2562  0079                     wr1RegCompleteHandler@ptr:	
  2563                           ; 1 bytes @ 0x9
  2564                           
  2565  0079                     wr2RegCompleteHandler@ptr:	
  2566                           ; 1 bytes @ 0x9
  2567                           
  2568  0079                     rdBlkRegCompleteHandler@ptr:	
  2569                           ; 1 bytes @ 0x9
  2570                           
  2571  0079                     I2C_CallbackReturnStop@funPtr:	
  2572                           ; 1 bytes @ 0x9
  2573                           
  2574  0079                     I2C_CallbackReturnReset@funPtr:	
  2575                           ; 1 bytes @ 0x9
  2576                           
  2577                           
  2578                           ; 1 bytes @ 0x9
  2579  0079                     	ds	1
  2580  007A                     ??_rd1RegCompleteHandler:
  2581  007A                     ??_rd2RegCompleteHandler:	
  2582                           ; 1 bytes @ 0xA
  2583                           
  2584  007A                     ??_wr1RegCompleteHandler:	
  2585                           ; 1 bytes @ 0xA
  2586                           
  2587  007A                     ??_wr2RegCompleteHandler:	
  2588                           ; 1 bytes @ 0xA
  2589                           
  2590  007A                     ??_rdBlkRegCompleteHandler:	
  2591                           ; 1 bytes @ 0xA
  2592                           
  2593  007A                     ??_I2C_DO_TX:	
  2594                           ; 1 bytes @ 0xA
  2595                           
  2596  007A                     ??_I2C_DO_RX:	
  2597                           ; 1 bytes @ 0xA
  2598                           
  2599  007A                     ??_I2C_DO_TX_EMPTY:	
  2600                           ; 1 bytes @ 0xA
  2601                           
  2602  007A                     ??_I2C_DO_ADDRESS_NACK:	
  2603                           ; 1 bytes @ 0xA
  2604                           
  2605  007A                     ??_I2C_CallbackReturnStop:	
  2606                           ; 1 bytes @ 0xA
  2607                           
  2608  007A                     ??_I2C_CallbackReturnReset:	
  2609                           ; 1 bytes @ 0xA
  2610                           
  2611                           
  2612                           ; 1 bytes @ 0xA
  2613  007A                     	ds	3
  2614  007D                     ??_I2C_MasterIsr:
  2615  007D                     ??_INTERRUPT_InterruptManager:	
  2616                           ; 1 bytes @ 0xD
  2617                           
  2618                           
  2619                           	psect	cstackBANK0
  2620  0020                     __pcstackBANK0:	
  2621                           ; 1 bytes @ 0xD
  2622                           
  2623  0020                     ??_I2C_MasterFsm:
  2624                           
  2625                           ; 1 bytes @ 0x0
  2626  0020                     	ds	3
  2627  0023                     ??_I2C_Initialize:
  2628  0023                     ??_OSCILLATOR_Initialize:	
  2629                           ; 1 bytes @ 0x3
  2630                           
  2631  0023                     ??_WDT_Initialize:	
  2632                           ; 1 bytes @ 0x3
  2633                           
  2634  0023                     ??_ADC_Initialize:	
  2635                           ; 1 bytes @ 0x3
  2636                           
  2637  0023                     ?_EUSART_SetRxInterruptHandler:	
  2638                           ; 1 bytes @ 0x3
  2639                           
  2640  0023                     ?_EUSART_SetTxInterruptHandler:	
  2641                           ; 1 bytes @ 0x3
  2642                           
  2643  0023                     ?_EUSART_SetFramingErrorHandler:	
  2644                           ; 1 bytes @ 0x3
  2645                           
  2646  0023                     ?_EUSART_SetOverrunErrorHandler:	
  2647                           ; 1 bytes @ 0x3
  2648                           
  2649  0023                     ?_EUSART_SetErrorHandler:	
  2650                           ; 1 bytes @ 0x3
  2651                           
  2652  0023                     ??_reset:	
  2653                           ; 1 bytes @ 0x3
  2654                           
  2655  0023                     ??_PIN_MANAGER_Initialize:	
  2656                           ; 1 bytes @ 0x3
  2657                           
  2658  0023                     ??_EUSART_Read:	
  2659                           ; 1 bytes @ 0x3
  2660                           
  2661  0023                     ??_EUSART_Write:	
  2662                           ; 1 bytes @ 0x3
  2663                           
  2664  0023                     ??_test:	
  2665                           ; 1 bytes @ 0x3
  2666                           
  2667  0023                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2668                           ; 1 bytes @ 0x3
  2669                           
  2670  0023                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2671                           ; 2 bytes @ 0x3
  2672                           
  2673  0023                     EUSART_SetErrorHandler@interruptHandler:	
  2674                           ; 2 bytes @ 0x3
  2675                           
  2676  0023                     EUSART_SetTxInterruptHandler@interruptHandler:	
  2677                           ; 2 bytes @ 0x3
  2678                           
  2679  0023                     EUSART_SetRxInterruptHandler@interruptHandler:	
  2680                           ; 2 bytes @ 0x3
  2681                           
  2682                           
  2683                           ; 2 bytes @ 0x3
  2684  0023                     	ds	1
  2685  0024                     EUSART_Read@readValue:
  2686  0024                     EUSART_Write@txData:	
  2687                           ; 1 bytes @ 0x4
  2688                           
  2689                           
  2690                           ; 1 bytes @ 0x4
  2691  0024                     	ds	1
  2692  0025                     ??_EUSART_Initialize:
  2693  0025                     ??_EUSART_SetRxInterruptHandler:	
  2694                           ; 1 bytes @ 0x5
  2695                           
  2696  0025                     ??_EUSART_SetTxInterruptHandler:	
  2697                           ; 1 bytes @ 0x5
  2698                           
  2699  0025                     ??_EUSART_SetFramingErrorHandler:	
  2700                           ; 1 bytes @ 0x5
  2701                           
  2702  0025                     ??_EUSART_SetOverrunErrorHandler:	
  2703                           ; 1 bytes @ 0x5
  2704                           
  2705  0025                     ??_EUSART_SetErrorHandler:	
  2706                           ; 1 bytes @ 0x5
  2707                           
  2708  0025                     ??_putch:	
  2709                           ; 1 bytes @ 0x5
  2710                           
  2711  0025                     putch@txData:	
  2712                           ; 1 bytes @ 0x5
  2713                           
  2714                           
  2715                           ; 1 bytes @ 0x5
  2716  0025                     	ds	1
  2717  0026                     ??_SYSTEM_Initialize:
  2718  0026                     ?_fputc:	
  2719                           ; 1 bytes @ 0x6
  2720                           
  2721  0026                     fputc@c:	
  2722                           ; 2 bytes @ 0x6
  2723                           
  2724                           
  2725                           ; 2 bytes @ 0x6
  2726  0026                     	ds	2
  2727  0028                     fputc@fp:
  2728                           
  2729                           ; 1 bytes @ 0x8
  2730  0028                     	ds	1
  2731  0029                     ??_fputc:
  2732                           
  2733                           ; 1 bytes @ 0x9
  2734  0029                     	ds	5
  2735  002E                     ?_vfpfcnvrt:
  2736  002E                     vfpfcnvrt@fmt:	
  2737                           ; 2 bytes @ 0xE
  2738                           
  2739                           
  2740                           ; 1 bytes @ 0xE
  2741  002E                     	ds	1
  2742  002F                     vfpfcnvrt@ap:
  2743                           
  2744                           ; 1 bytes @ 0xF
  2745  002F                     	ds	1
  2746  0030                     ??_vfpfcnvrt:
  2747                           
  2748                           ; 1 bytes @ 0x10
  2749  0030                     	ds	5
  2750  0035                     vfpfcnvrt@fp:
  2751                           
  2752                           ; 1 bytes @ 0x15
  2753  0035                     	ds	1
  2754  0036                     ?_vfprintf:
  2755  0036                     vfprintf@fmt:	
  2756                           ; 2 bytes @ 0x16
  2757                           
  2758                           
  2759                           ; 2 bytes @ 0x16
  2760  0036                     	ds	2
  2761  0038                     vfprintf@ap:
  2762                           
  2763                           ; 1 bytes @ 0x18
  2764  0038                     	ds	1
  2765  0039                     ??_vfprintf:
  2766                           
  2767                           ; 1 bytes @ 0x19
  2768  0039                     	ds	2
  2769  003B                     vfprintf@fp:
  2770                           
  2771                           ; 1 bytes @ 0x1B
  2772  003B                     	ds	1
  2773  003C                     vfprintf@cfmt:
  2774                           
  2775                           ; 2 bytes @ 0x1C
  2776  003C                     	ds	2
  2777  003E                     ?_printf:
  2778  003E                     printf@fmt:	
  2779                           ; 2 bytes @ 0x1E
  2780                           
  2781                           
  2782                           ; 2 bytes @ 0x1E
  2783  003E                     	ds	2
  2784  0040                     ??_printf:
  2785                           
  2786                           ; 1 bytes @ 0x20
  2787  0040                     	ds	1
  2788  0041                     printf@ap:
  2789                           
  2790                           ; 1 bytes @ 0x21
  2791  0041                     	ds	1
  2792  0042                     ??_processActivation:
  2793                           
  2794                           ; 1 bytes @ 0x22
  2795  0042                     	ds	2
  2796  0044                     processActivation@ordre:
  2797                           
  2798                           ; 1 bytes @ 0x24
  2799  0044                     	ds	1
  2800  0045                     ??_main:
  2801                           
  2802                           ; 1 bytes @ 0x25
  2803  0045                     	ds	2
  2804  0047                     main@tempo:
  2805                           
  2806                           ; 4 bytes @ 0x27
  2807  0047                     	ds	4
  2808  004B                     main@reception:
  2809                           
  2810                           ; 1 bytes @ 0x2B
  2811  004B                     	ds	1
  2812  004C                     main@count:
  2813                           
  2814                           ; 1 bytes @ 0x2C
  2815  004C                     	ds	1
  2816                           
  2817                           	psect	maintext
  2818  025E                     __pmaintext:	
  2819 ;;
  2820 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2821 ;;
  2822 ;; *************** function _main *****************
  2823 ;; Defined at:
  2824 ;;		line 50 in file "main.c"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;		None
  2827 ;; Auto vars:     Size  Location     Type
  2828 ;;  tempo           4   39[BANK0 ] long 
  2829 ;;  count           1   44[BANK0 ] unsigned char 
  2830 ;;  reception       1   43[BANK0 ] unsigned char 
  2831 ;; Return value:  Size  Location     Type
  2832 ;;                  1    wreg      void 
  2833 ;; Registers used:
  2834 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2835 ;; Tracked objects:
  2836 ;;		On entry : B1F/0
  2837 ;;		On exit  : 0/0
  2838 ;;		Unchanged: 0/0
  2839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2841 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2842 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2843 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2844 ;;Total ram usage:        8 bytes
  2845 ;; Hardware stack levels required when called: 14
  2846 ;; This function calls:
  2847 ;;		_EUSART_Read
  2848 ;;		_SYSTEM_Initialize
  2849 ;;		_processActivation
  2850 ;;		_reset
  2851 ;; This function is called by:
  2852 ;;		Startup code after reset
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856                           
  2857                           ;psect for function _main
  2858  025E                     _main:
  2859  025E                     l3780:	
  2860                           ;incstack = 0
  2861                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2862                           
  2863                           
  2864                           ;main.c: 52:     SYSTEM_Initialize();
  2865  025E  3185  25EC  3182   	fcall	_SYSTEM_Initialize
  2866  0261                     l3782:
  2867                           
  2868                           ;main.c: 58:     (INTCONbits.GIE = 1);
  2869  0261  178B               	bsf	11,7	;volatile
  2870  0262                     l3784:
  2871                           
  2872                           ;main.c: 61:     (INTCONbits.PEIE = 1);
  2873  0262  170B               	bsf	11,6	;volatile
  2874  0263                     l3786:
  2875                           
  2876                           ;main.c: 69:     char reception;;main.c: 70:     char count = '0';
  2877  0263  3030               	movlw	48
  2878  0264  0020               	movlb	0	; select bank0
  2879  0265  00C5               	movwf	??_main
  2880  0266  0845               	movf	??_main,w
  2881  0267  00CC               	movwf	main@count
  2882  0268                     l3788:
  2883                           
  2884                           ;main.c: 75:         if (eusartRxCount != 0) {
  2885  0268  0020               	movlb	0	; select bank0
  2886  0269  0864               	movf	_eusartRxCount,w	;volatile
  2887  026A  1903               	btfsc	3,2
  2888  026B  2A6D               	goto	u1241
  2889  026C  2A6E               	goto	u1240
  2890  026D                     u1241:
  2891  026D  2A79               	goto	l3794
  2892  026E                     u1240:
  2893  026E                     l3790:
  2894                           
  2895                           ;main.c: 77:             reception = EUSART_Read();
  2896  026E  3185  2503  3182   	fcall	_EUSART_Read
  2897  0271  0020               	movlb	0	; select bank0
  2898  0272  00C5               	movwf	??_main
  2899  0273  0845               	movf	??_main,w
  2900  0274  00CB               	movwf	main@reception
  2901  0275                     l3792:
  2902                           
  2903                           ;main.c: 78:             processActivation(reception);
  2904  0275  084B               	movf	main@reception,w
  2905  0276  3180  2065  3182   	fcall	_processActivation
  2906  0279                     l3794:
  2907                           
  2908                           ;main.c: 82:         if (PORTCbits.RC0 == 0) {
  2909  0279  0020               	movlb	0	; select bank0
  2910  027A  180E               	btfsc	14,0	;volatile
  2911  027B  2A7D               	goto	u1251
  2912  027C  2A7E               	goto	u1250
  2913  027D                     u1251:
  2914  027D  2A68               	goto	l3788
  2915  027E                     u1250:
  2916  027E                     l3796:
  2917                           
  2918                           ;main.c: 84:             long tempo = 0;
  2919  027E  3000               	movlw	0
  2920  027F  00CA               	movwf	main@tempo+3
  2921  0280  3000               	movlw	0
  2922  0281  00C9               	movwf	main@tempo+2
  2923  0282  3000               	movlw	0
  2924  0283  00C8               	movwf	main@tempo+1
  2925  0284  3000               	movlw	0
  2926  0285  00C7               	movwf	main@tempo
  2927                           
  2928                           ;main.c: 86:             while (PORTCbits.RC0 == 0) {
  2929  0286  2AAF               	goto	l816
  2930  0287                     l3798:
  2931                           
  2932                           ;main.c: 88:                 tempo++;
  2933  0287  3001               	movlw	1
  2934  0288  07C7               	addwf	main@tempo,f
  2935  0289  3000               	movlw	0
  2936  028A  3DC8               	addwfc	main@tempo+1,f
  2937  028B  3000               	movlw	0
  2938  028C  3DC9               	addwfc	main@tempo+2,f
  2939  028D  3000               	movlw	0
  2940  028E  3DCA               	addwfc	main@tempo+3,f
  2941  028F                     l3800:
  2942                           
  2943                           ;main.c: 89:                 if (tempo > 100000) {
  2944  028F  1BCA               	btfsc	main@tempo+3,7
  2945  0290  2A9D               	goto	u1261
  2946  0291  084A               	movf	main@tempo+3,w
  2947  0292  1D03               	btfss	3,2
  2948  0293  2A9E               	goto	u1260
  2949  0294  30A1               	movlw	161
  2950  0295  0247               	subwf	main@tempo,w
  2951  0296  3086               	movlw	134
  2952  0297  3B48               	subwfb	main@tempo+1,w
  2953  0298  3001               	movlw	1
  2954  0299  3B49               	subwfb	main@tempo+2,w
  2955  029A  1C03               	btfss	3,0
  2956  029B  2A9D               	goto	u1261
  2957  029C  2A9E               	goto	u1260
  2958  029D                     u1261:
  2959  029D  2AAF               	goto	l816
  2960  029E                     u1260:
  2961  029E                     l3802:
  2962  029E                     l3804:
  2963                           
  2964                           ;main.c: 92:                     reset();
  2965  029E  3186  2673  3182   	fcall	_reset
  2966  02A1                     l3806:
  2967                           
  2968                           ;main.c: 93:                     _delay((unsigned long)((3000)*(32000000/4000.0)));
  2969  02A1  307A               	movlw	122
  2970  02A2  0020               	movlb	0	; select bank0
  2971  02A3  00C6               	movwf	??_main+1
  2972  02A4  30C1               	movlw	193
  2973  02A5  00C5               	movwf	??_main
  2974  02A6  3081               	movlw	129
  2975  02A7                     u1297:
  2976  02A7  0B89               	decfsz	9,f
  2977  02A8  2AA7               	goto	u1297
  2978  02A9  0BC5               	decfsz	??_main,f
  2979  02AA  2AA7               	goto	u1297
  2980  02AB  0BC6               	decfsz	??_main+1,f
  2981  02AC  2AA7               	goto	u1297
  2982  02AD  3200               	nop2
  2983  02AE  2AC7               	goto	l819
  2984  02AF                     l816:	
  2985                           ;main.c: 96:             }
  2986                           
  2987                           
  2988                           ;main.c: 86:             while (PORTCbits.RC0 == 0) {
  2989  02AF  0020               	movlb	0	; select bank0
  2990  02B0  1C0E               	btfss	14,0	;volatile
  2991  02B1  2AB3               	goto	u1271
  2992  02B2  2AB4               	goto	u1270
  2993  02B3                     u1271:
  2994  02B3  2A87               	goto	l3798
  2995  02B4                     u1270:
  2996  02B4                     l3810:
  2997                           
  2998                           ;main.c: 98:             count++;
  2999  02B4  3001               	movlw	1
  3000  02B5  00C5               	movwf	??_main
  3001  02B6  0845               	movf	??_main,w
  3002  02B7  07CC               	addwf	main@count,f
  3003  02B8                     l3812:
  3004                           
  3005                           ;main.c: 99:             if (count < '=') {
  3006  02B8  303D               	movlw	61
  3007  02B9  024C               	subwf	main@count,w
  3008  02BA  1803               	skipnc
  3009  02BB  2ABD               	goto	u1281
  3010  02BC  2ABE               	goto	u1280
  3011  02BD                     u1281:
  3012  02BD  2AC3               	goto	l3816
  3013  02BE                     u1280:
  3014  02BE                     l3814:
  3015                           
  3016                           ;main.c: 100:                 processActivation(count);
  3017  02BE  084C               	movf	main@count,w
  3018  02BF  3180  2065  3182   	fcall	_processActivation
  3019                           
  3020                           ;main.c: 102:             } else {
  3021  02C2  2A68               	goto	l3788
  3022  02C3                     l3816:
  3023                           
  3024                           ;main.c: 104:                 reset();
  3025  02C3  3186  2673  3182   	fcall	_reset
  3026  02C6  2A63               	goto	l3786
  3027  02C7                     l819:
  3028  02C7  3180  2847         	ljmp	start
  3029  02C9                     __end_of_main:
  3030                           
  3031                           	psect	text1
  3032  0065                     __ptext1:	
  3033 ;; *************** function _processActivation *****************
  3034 ;; Defined at:
  3035 ;;		line 40 in file "commande.c"
  3036 ;; Parameters:    Size  Location     Type
  3037 ;;  ordre           1    wreg     unsigned char 
  3038 ;; Auto vars:     Size  Location     Type
  3039 ;;  ordre           1   36[BANK0 ] unsigned char 
  3040 ;; Return value:  Size  Location     Type
  3041 ;;                  1    wreg      void 
  3042 ;; Registers used:
  3043 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3044 ;; Tracked objects:
  3045 ;;		On entry : 0/0
  3046 ;;		On exit  : 0/0
  3047 ;;		Unchanged: 0/0
  3048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3050 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3051 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3052 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3053 ;;Total ram usage:        3 bytes
  3054 ;; Hardware stack levels used: 1
  3055 ;; Hardware stack levels required when called: 13
  3056 ;; This function calls:
  3057 ;;		_printf
  3058 ;;		_reset
  3059 ;;		_test
  3060 ;; This function is called by:
  3061 ;;		_main
  3062 ;; This function uses a non-reentrant model
  3063 ;;
  3064                           
  3065                           
  3066                           ;psect for function _processActivation
  3067  0065                     _processActivation:
  3068                           
  3069                           ;incstack = 0
  3070                           ; Regs used in _processActivation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3071                           ;processActivation@ordre stored from wreg
  3072  0065  0020               	movlb	0	; select bank0
  3073  0066  00C4               	movwf	processActivation@ordre
  3074  0067                     l3428:
  3075                           
  3076                           ;commande.c: 42:     switch (ordre)
  3077  0067  29AA               	goto	l3532
  3078  0068                     l3430:
  3079                           
  3080                           ;commande.c: 46:         {;commande.c: 47:             reset();
  3081  0068  3186  2673  3180   	fcall	_reset
  3082  006B                     l3432:
  3083  006B  0022               	movlb	2	; select bank2
  3084  006C  140C               	bsf	12,0	;volatile
  3085  006D                     l3434:
  3086                           
  3087                           ;commande.c: 49:             _delay((unsigned long)((100)*(32000000/4000.0)));
  3088  006D  3005               	movlw	5
  3089  006E  0020               	movlb	0	; select bank0
  3090  006F  00C3               	movwf	??_processActivation+1
  3091  0070  300F               	movlw	15
  3092  0071  00C2               	movwf	??_processActivation
  3093  0072  30F1               	movlw	241
  3094  0073                     u1307:
  3095  0073  0B89               	decfsz	9,f
  3096  0074  2873               	goto	u1307
  3097  0075  0BC2               	decfsz	??_processActivation,f
  3098  0076  2873               	goto	u1307
  3099  0077  0BC3               	decfsz	??_processActivation+1,f
  3100  0078  2873               	goto	u1307
  3101  0079                     l3436:
  3102                           
  3103                           ;commande.c: 50:             printf("->GR:x:OFF");
  3104  0079  30CD               	movlw	low (STR_1| (0+32768))
  3105  007A  0020               	movlb	0	; select bank0
  3106  007B  00BE               	movwf	printf@fmt
  3107  007C  3084               	movlw	high (STR_1| (0+32768))
  3108  007D  00BF               	movwf	printf@fmt+1
  3109  007E  3185  25FF  3180   	fcall	_printf
  3110                           
  3111                           ;commande.c: 51:             break;
  3112  0081  29E1               	goto	l932
  3113  0082                     l3438:
  3114                           
  3115                           ;commande.c: 55:         {;commande.c: 56:             reset();
  3116  0082  3186  2673  3180   	fcall	_reset
  3117  0085                     l3440:
  3118  0085  0022               	movlb	2	; select bank2
  3119  0086  148C               	bsf	12,1	;volatile
  3120  0087                     l3442:
  3121                           
  3122                           ;commande.c: 58:             _delay((unsigned long)((100)*(32000000/4000.0)));
  3123  0087  3005               	movlw	5
  3124  0088  0020               	movlb	0	; select bank0
  3125  0089  00C3               	movwf	??_processActivation+1
  3126  008A  300F               	movlw	15
  3127  008B  00C2               	movwf	??_processActivation
  3128  008C  30F1               	movlw	241
  3129  008D                     u1317:
  3130  008D  0B89               	decfsz	9,f
  3131  008E  288D               	goto	u1317
  3132  008F  0BC2               	decfsz	??_processActivation,f
  3133  0090  288D               	goto	u1317
  3134  0091  0BC3               	decfsz	??_processActivation+1,f
  3135  0092  288D               	goto	u1317
  3136  0093                     l3444:
  3137                           
  3138                           ;commande.c: 59:             printf("->GR:1:ON");
  3139  0093  30B0               	movlw	low (STR_2| (0+32768))
  3140  0094  0020               	movlb	0	; select bank0
  3141  0095  00BE               	movwf	printf@fmt
  3142  0096  3086               	movlw	high (STR_2| (0+32768))
  3143  0097  00BF               	movwf	printf@fmt+1
  3144  0098  3185  25FF  3180   	fcall	_printf
  3145                           
  3146                           ;commande.c: 60:             break;
  3147  009B  29E1               	goto	l932
  3148  009C                     l3446:
  3149                           
  3150                           ;commande.c: 64:         {;commande.c: 65:             reset();
  3151  009C  3186  2673  3180   	fcall	_reset
  3152  009F                     l3448:
  3153  009F  0022               	movlb	2	; select bank2
  3154  00A0  150C               	bsf	12,2	;volatile
  3155  00A1                     l3450:
  3156                           
  3157                           ;commande.c: 67:             _delay((unsigned long)((100)*(32000000/4000.0)));
  3158  00A1  3005               	movlw	5
  3159  00A2  0020               	movlb	0	; select bank0
  3160  00A3  00C3               	movwf	??_processActivation+1
  3161  00A4  300F               	movlw	15
  3162  00A5  00C2               	movwf	??_processActivation
  3163  00A6  30F1               	movlw	241
  3164  00A7                     u1327:
  3165  00A7  0B89               	decfsz	9,f
  3166  00A8  28A7               	goto	u1327
  3167  00A9  0BC2               	decfsz	??_processActivation,f
  3168  00AA  28A7               	goto	u1327
  3169  00AB  0BC3               	decfsz	??_processActivation+1,f
  3170  00AC  28A7               	goto	u1327
  3171  00AD                     l3452:
  3172                           
  3173                           ;commande.c: 68:             printf("->GR:2:ON");
  3174  00AD  30BA               	movlw	low (STR_3| (0+32768))
  3175  00AE  0020               	movlb	0	; select bank0
  3176  00AF  00BE               	movwf	printf@fmt
  3177  00B0  3086               	movlw	high (STR_3| (0+32768))
  3178  00B1  00BF               	movwf	printf@fmt+1
  3179  00B2  3185  25FF  3180   	fcall	_printf
  3180                           
  3181                           ;commande.c: 69:             break;
  3182  00B5  29E1               	goto	l932
  3183  00B6                     l3454:
  3184                           
  3185                           ;commande.c: 73:         {;commande.c: 74:             reset();
  3186  00B6  3186  2673  3180   	fcall	_reset
  3187  00B9                     l3456:
  3188  00B9  0022               	movlb	2	; select bank2
  3189  00BA  158C               	bsf	12,3	;volatile
  3190  00BB                     l3458:
  3191                           
  3192                           ;commande.c: 76:             _delay((unsigned long)((100)*(32000000/4000.0)));
  3193  00BB  3005               	movlw	5
  3194  00BC  0020               	movlb	0	; select bank0
  3195  00BD  00C3               	movwf	??_processActivation+1
  3196  00BE  300F               	movlw	15
  3197  00BF  00C2               	movwf	??_processActivation
  3198  00C0  30F1               	movlw	241
  3199  00C1                     u1337:
  3200  00C1  0B89               	decfsz	9,f
  3201  00C2  28C1               	goto	u1337
  3202  00C3  0BC2               	decfsz	??_processActivation,f
  3203  00C4  28C1               	goto	u1337
  3204  00C5  0BC3               	decfsz	??_processActivation+1,f
  3205  00C6  28C1               	goto	u1337
  3206  00C7                     l3460:
  3207                           
  3208                           ;commande.c: 77:             printf("->GR:3:ON");
  3209  00C7  30C4               	movlw	low (STR_4| (0+32768))
  3210  00C8  0020               	movlb	0	; select bank0
  3211  00C9  00BE               	movwf	printf@fmt
  3212  00CA  3086               	movlw	high (STR_4| (0+32768))
  3213  00CB  00BF               	movwf	printf@fmt+1
  3214  00CC  3185  25FF  3180   	fcall	_printf
  3215                           
  3216                           ;commande.c: 78:             break;
  3217  00CF  29E1               	goto	l932
  3218  00D0                     l3462:
  3219                           
  3220                           ;commande.c: 82:         {;commande.c: 83:             reset();
  3221  00D0  3186  2673  3180   	fcall	_reset
  3222  00D3                     l3464:
  3223  00D3  0022               	movlb	2	; select bank2
  3224  00D4  160C               	bsf	12,4	;volatile
  3225  00D5                     l3466:
  3226                           
  3227                           ;commande.c: 85:             _delay((unsigned long)((100)*(32000000/4000.0)));
  3228  00D5  3005               	movlw	5
  3229  00D6  0020               	movlb	0	; select bank0
  3230  00D7  00C3               	movwf	??_processActivation+1
  3231  00D8  300F               	movlw	15
  3232  00D9  00C2               	movwf	??_processActivation
  3233  00DA  30F1               	movlw	241
  3234  00DB                     u1347:
  3235  00DB  0B89               	decfsz	9,f
  3236  00DC  28DB               	goto	u1347
  3237  00DD  0BC2               	decfsz	??_processActivation,f
  3238  00DE  28DB               	goto	u1347
  3239  00DF  0BC3               	decfsz	??_processActivation+1,f
  3240  00E0  28DB               	goto	u1347
  3241  00E1                     l3468:
  3242                           
  3243                           ;commande.c: 86:             printf("->GR:4:ON");
  3244  00E1  30CE               	movlw	low (STR_5| (0+32768))
  3245  00E2  0020               	movlb	0	; select bank0
  3246  00E3  00BE               	movwf	printf@fmt
  3247  00E4  3086               	movlw	high (STR_5| (0+32768))
  3248  00E5  00BF               	movwf	printf@fmt+1
  3249  00E6  3185  25FF  3180   	fcall	_printf
  3250                           
  3251                           ;commande.c: 87:             break;
  3252  00E9  29E1               	goto	l932
  3253  00EA                     l3470:
  3254                           
  3255                           ;commande.c: 91:         {;commande.c: 92:             reset();
  3256  00EA  3186  2673  3180   	fcall	_reset
  3257  00ED                     l3472:
  3258  00ED  0022               	movlb	2	; select bank2
  3259  00EE  168C               	bsf	12,5	;volatile
  3260  00EF                     l3474:
  3261                           
  3262                           ;commande.c: 94:             _delay((unsigned long)((100)*(32000000/4000.0)));
  3263  00EF  3005               	movlw	5
  3264  00F0  0020               	movlb	0	; select bank0
  3265  00F1  00C3               	movwf	??_processActivation+1
  3266  00F2  300F               	movlw	15
  3267  00F3  00C2               	movwf	??_processActivation
  3268  00F4  30F1               	movlw	241
  3269  00F5                     u1357:
  3270  00F5  0B89               	decfsz	9,f
  3271  00F6  28F5               	goto	u1357
  3272  00F7  0BC2               	decfsz	??_processActivation,f
  3273  00F8  28F5               	goto	u1357
  3274  00F9  0BC3               	decfsz	??_processActivation+1,f
  3275  00FA  28F5               	goto	u1357
  3276  00FB                     l3476:
  3277                           
  3278                           ;commande.c: 95:             printf("->GR:5:ON");
  3279  00FB  30D8               	movlw	low (STR_6| (0+32768))
  3280  00FC  0020               	movlb	0	; select bank0
  3281  00FD  00BE               	movwf	printf@fmt
  3282  00FE  3086               	movlw	high (STR_6| (0+32768))
  3283  00FF  00BF               	movwf	printf@fmt+1
  3284  0100  3185  25FF  3180   	fcall	_printf
  3285                           
  3286                           ;commande.c: 96:             break;
  3287  0103  29E1               	goto	l932
  3288  0104                     l3478:
  3289                           
  3290                           ;commande.c: 100:         {;commande.c: 101:             reset();
  3291  0104  3186  2673  3180   	fcall	_reset
  3292  0107                     l3480:
  3293  0107  0022               	movlb	2	; select bank2
  3294  0108  170C               	bsf	12,6	;volatile
  3295  0109                     l3482:
  3296                           
  3297                           ;commande.c: 103:             _delay((unsigned long)((100)*(32000000/4000.0)));
  3298  0109  3005               	movlw	5
  3299  010A  0020               	movlb	0	; select bank0
  3300  010B  00C3               	movwf	??_processActivation+1
  3301  010C  300F               	movlw	15
  3302  010D  00C2               	movwf	??_processActivation
  3303  010E  30F1               	movlw	241
  3304  010F                     u1367:
  3305  010F  0B89               	decfsz	9,f
  3306  0110  290F               	goto	u1367
  3307  0111  0BC2               	decfsz	??_processActivation,f
  3308  0112  290F               	goto	u1367
  3309  0113  0BC3               	decfsz	??_processActivation+1,f
  3310  0114  290F               	goto	u1367
  3311  0115                     l3484:
  3312                           
  3313                           ;commande.c: 104:             printf("->GR:6:ON");
  3314  0115  30E2               	movlw	low (STR_7| (0+32768))
  3315  0116  0020               	movlb	0	; select bank0
  3316  0117  00BE               	movwf	printf@fmt
  3317  0118  3086               	movlw	high (STR_7| (0+32768))
  3318  0119  00BF               	movwf	printf@fmt+1
  3319  011A  3185  25FF  3180   	fcall	_printf
  3320                           
  3321                           ;commande.c: 105:             break;
  3322  011D  29E1               	goto	l932
  3323  011E                     l3486:
  3324                           
  3325                           ;commande.c: 109:         {;commande.c: 110:             reset();
  3326  011E  3186  2673  3180   	fcall	_reset
  3327  0121                     l3488:
  3328  0121  0022               	movlb	2	; select bank2
  3329  0122  178C               	bsf	12,7	;volatile
  3330  0123                     l3490:
  3331                           
  3332                           ;commande.c: 112:             _delay((unsigned long)((100)*(32000000/4000.0)));
  3333  0123  3005               	movlw	5
  3334  0124  0020               	movlb	0	; select bank0
  3335  0125  00C3               	movwf	??_processActivation+1
  3336  0126  300F               	movlw	15
  3337  0127  00C2               	movwf	??_processActivation
  3338  0128  30F1               	movlw	241
  3339  0129                     u1377:
  3340  0129  0B89               	decfsz	9,f
  3341  012A  2929               	goto	u1377
  3342  012B  0BC2               	decfsz	??_processActivation,f
  3343  012C  2929               	goto	u1377
  3344  012D  0BC3               	decfsz	??_processActivation+1,f
  3345  012E  2929               	goto	u1377
  3346  012F                     l3492:
  3347                           
  3348                           ;commande.c: 113:             printf("->GR:7:ON");
  3349  012F  30EC               	movlw	low (STR_8| (0+32768))
  3350  0130  0020               	movlb	0	; select bank0
  3351  0131  00BE               	movwf	printf@fmt
  3352  0132  3086               	movlw	high (STR_8| (0+32768))
  3353  0133  00BF               	movwf	printf@fmt+1
  3354  0134  3185  25FF  3180   	fcall	_printf
  3355                           
  3356                           ;commande.c: 114:             break;
  3357  0137  29E1               	goto	l932
  3358  0138                     l3494:
  3359                           
  3360                           ;commande.c: 118:         {;commande.c: 119:             reset();
  3361  0138  3186  2673  3180   	fcall	_reset
  3362  013B                     l3496:
  3363  013B  0022               	movlb	2	; select bank2
  3364  013C  140D               	bsf	13,0	;volatile
  3365  013D                     l3498:
  3366                           
  3367                           ;commande.c: 121:             _delay((unsigned long)((100)*(32000000/4000.0)));
  3368  013D  3005               	movlw	5
  3369  013E  0020               	movlb	0	; select bank0
  3370  013F  00C3               	movwf	??_processActivation+1
  3371  0140  300F               	movlw	15
  3372  0141  00C2               	movwf	??_processActivation
  3373  0142  30F1               	movlw	241
  3374  0143                     u1387:
  3375  0143  0B89               	decfsz	9,f
  3376  0144  2943               	goto	u1387
  3377  0145  0BC2               	decfsz	??_processActivation,f
  3378  0146  2943               	goto	u1387
  3379  0147  0BC3               	decfsz	??_processActivation+1,f
  3380  0148  2943               	goto	u1387
  3381  0149                     l3500:
  3382                           
  3383                           ;commande.c: 122:             printf("->GR:8:ON");
  3384  0149  30F6               	movlw	low (STR_9| (0+32768))
  3385  014A  0020               	movlb	0	; select bank0
  3386  014B  00BE               	movwf	printf@fmt
  3387  014C  3086               	movlw	high (STR_9| (0+32768))
  3388  014D  00BF               	movwf	printf@fmt+1
  3389  014E  3185  25FF  3180   	fcall	_printf
  3390                           
  3391                           ;commande.c: 123:             break;
  3392  0151  29E1               	goto	l932
  3393  0152                     l3502:
  3394                           
  3395                           ;commande.c: 127:         {;commande.c: 128:             reset();
  3396  0152  3186  2673  3180   	fcall	_reset
  3397  0155                     l3504:
  3398  0155  0022               	movlb	2	; select bank2
  3399  0156  148D               	bsf	13,1	;volatile
  3400  0157                     l3506:
  3401                           
  3402                           ;commande.c: 130:             _delay((unsigned long)((100)*(32000000/4000.0)));
  3403  0157  3005               	movlw	5
  3404  0158  0020               	movlb	0	; select bank0
  3405  0159  00C3               	movwf	??_processActivation+1
  3406  015A  300F               	movlw	15
  3407  015B  00C2               	movwf	??_processActivation
  3408  015C  30F1               	movlw	241
  3409  015D                     u1397:
  3410  015D  0B89               	decfsz	9,f
  3411  015E  295D               	goto	u1397
  3412  015F  0BC2               	decfsz	??_processActivation,f
  3413  0160  295D               	goto	u1397
  3414  0161  0BC3               	decfsz	??_processActivation+1,f
  3415  0162  295D               	goto	u1397
  3416  0163                     l3508:
  3417                           
  3418                           ;commande.c: 131:             printf("->GR:9:ON");
  3419  0163  3000               	movlw	low (STR_10| (0+32768))
  3420  0164  0020               	movlb	0	; select bank0
  3421  0165  00BE               	movwf	printf@fmt
  3422  0166  3087               	movlw	high (STR_10| (0+32768))
  3423  0167  00BF               	movwf	printf@fmt+1
  3424  0168  3185  25FF  3180   	fcall	_printf
  3425                           
  3426                           ;commande.c: 132:             break;
  3427  016B  29E1               	goto	l932
  3428  016C                     l3510:
  3429                           
  3430                           ;commande.c: 136:         {;commande.c: 137:             reset();
  3431  016C  3186  2673  3180   	fcall	_reset
  3432  016F                     l3512:
  3433  016F  0022               	movlb	2	; select bank2
  3434  0170  150D               	bsf	13,2	;volatile
  3435  0171                     l3514:
  3436                           
  3437                           ;commande.c: 139:             _delay((unsigned long)((100)*(32000000/4000.0)));
  3438  0171  3005               	movlw	5
  3439  0172  0020               	movlb	0	; select bank0
  3440  0173  00C3               	movwf	??_processActivation+1
  3441  0174  300F               	movlw	15
  3442  0175  00C2               	movwf	??_processActivation
  3443  0176  30F1               	movlw	241
  3444  0177                     u1407:
  3445  0177  0B89               	decfsz	9,f
  3446  0178  2977               	goto	u1407
  3447  0179  0BC2               	decfsz	??_processActivation,f
  3448  017A  2977               	goto	u1407
  3449  017B  0BC3               	decfsz	??_processActivation+1,f
  3450  017C  2977               	goto	u1407
  3451  017D                     l3516:
  3452                           
  3453                           ;commande.c: 140:             printf("->GR:10:ON");
  3454  017D  309A               	movlw	low (STR_11| (0+32768))
  3455  017E  0020               	movlb	0	; select bank0
  3456  017F  00BE               	movwf	printf@fmt
  3457  0180  3086               	movlw	high (STR_11| (0+32768))
  3458  0181  00BF               	movwf	printf@fmt+1
  3459  0182  3185  25FF  3180   	fcall	_printf
  3460                           
  3461                           ;commande.c: 141:             break;
  3462  0185  29E1               	goto	l932
  3463  0186                     l3518:
  3464                           
  3465                           ;commande.c: 145:         {;commande.c: 146:             reset();
  3466  0186  3186  2673  3180   	fcall	_reset
  3467  0189                     l3520:
  3468  0189  0022               	movlb	2	; select bank2
  3469  018A  158D               	bsf	13,3	;volatile
  3470  018B                     l3522:
  3471                           
  3472                           ;commande.c: 148:             _delay((unsigned long)((100)*(32000000/4000.0)));
  3473  018B  3005               	movlw	5
  3474  018C  0020               	movlb	0	; select bank0
  3475  018D  00C3               	movwf	??_processActivation+1
  3476  018E  300F               	movlw	15
  3477  018F  00C2               	movwf	??_processActivation
  3478  0190  30F1               	movlw	241
  3479  0191                     u1417:
  3480  0191  0B89               	decfsz	9,f
  3481  0192  2991               	goto	u1417
  3482  0193  0BC2               	decfsz	??_processActivation,f
  3483  0194  2991               	goto	u1417
  3484  0195  0BC3               	decfsz	??_processActivation+1,f
  3485  0196  2991               	goto	u1417
  3486  0197                     l3524:
  3487                           
  3488                           ;commande.c: 149:             printf("->GR:11:ON");
  3489  0197  30A5               	movlw	low (STR_12| (0+32768))
  3490  0198  0020               	movlb	0	; select bank0
  3491  0199  00BE               	movwf	printf@fmt
  3492  019A  3086               	movlw	high (STR_12| (0+32768))
  3493  019B  00BF               	movwf	printf@fmt+1
  3494  019C  3185  25FF  3180   	fcall	_printf
  3495                           
  3496                           ;commande.c: 150:             break;
  3497  019F  29E1               	goto	l932
  3498  01A0                     l929:	
  3499                           ;commande.c: 151:         };commande.c: 153:         case 'Z':
  3500                           
  3501  01A0  0001               	reset	;# 
  3502                           
  3503                           ;commande.c: 156:             break;
  3504  01A1  29E1               	goto	l932
  3505  01A2                     l3526:
  3506                           
  3507                           ;commande.c: 160:         {;commande.c: 161:             test();
  3508  01A2  3186  2665  3180   	fcall	_test
  3509                           
  3510                           ;commande.c: 162:             break;
  3511  01A5  29E1               	goto	l932
  3512  01A6                     l3528:
  3513                           
  3514                           ;commande.c: 166:         {;commande.c: 167:             reset();
  3515  01A6  3186  2673  3180   	fcall	_reset
  3516                           
  3517                           ;commande.c: 168:             break;
  3518  01A9  29E1               	goto	l932
  3519  01AA                     l3532:
  3520  01AA  0844               	movf	processActivation@ordre,w
  3521  01AB  00C2               	movwf	??_processActivation
  3522  01AC  01C3               	clrf	??_processActivation+1
  3523                           
  3524                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3525                           ; Switch size 1, requested type "simple"
  3526                           ; Number of cases is 1, Range of values is 0 to 0
  3527                           ; switch strategies available:
  3528                           ; Name         Instructions Cycles
  3529                           ; simple_byte            4     3 (average)
  3530                           ; direct_byte            8     6 (fixed)
  3531                           ; jumptable            260     6 (fixed)
  3532                           ;	Chosen strategy is simple_byte
  3533  01AD  0843               	movf	??_processActivation+1,w
  3534  01AE  3A00               	xorlw	0	; case 0
  3535  01AF  1903               	skipnz
  3536  01B0  29B2               	goto	l3960
  3537  01B1  29E1               	goto	l932
  3538  01B2                     l3960:
  3539                           
  3540                           ; Switch size 1, requested type "simple"
  3541                           ; Number of cases is 15, Range of values is 49 to 116
  3542                           ; switch strategies available:
  3543                           ; Name         Instructions Cycles
  3544                           ; simple_byte           46    24 (average)
  3545                           ; direct_byte          145     9 (fixed)
  3546                           ; jumptable            263     9 (fixed)
  3547                           ;	Chosen strategy is simple_byte
  3548  01B2  0842               	movf	??_processActivation,w
  3549  01B3  3A31               	xorlw	49	; case 49
  3550  01B4  1903               	skipnz
  3551  01B5  2868               	goto	l3430
  3552  01B6  3A03               	xorlw	3	; case 50
  3553  01B7  1903               	skipnz
  3554  01B8  2882               	goto	l3438
  3555  01B9  3A01               	xorlw	1	; case 51
  3556  01BA  1903               	skipnz
  3557  01BB  289C               	goto	l3446
  3558  01BC  3A07               	xorlw	7	; case 52
  3559  01BD  1903               	skipnz
  3560  01BE  28B6               	goto	l3454
  3561  01BF  3A01               	xorlw	1	; case 53
  3562  01C0  1903               	skipnz
  3563  01C1  28D0               	goto	l3462
  3564  01C2  3A03               	xorlw	3	; case 54
  3565  01C3  1903               	skipnz
  3566  01C4  28EA               	goto	l3470
  3567  01C5  3A01               	xorlw	1	; case 55
  3568  01C6  1903               	skipnz
  3569  01C7  2904               	goto	l3478
  3570  01C8  3A0F               	xorlw	15	; case 56
  3571  01C9  1903               	skipnz
  3572  01CA  291E               	goto	l3486
  3573  01CB  3A01               	xorlw	1	; case 57
  3574  01CC  1903               	skipnz
  3575  01CD  2938               	goto	l3494
  3576  01CE  3A03               	xorlw	3	; case 58
  3577  01CF  1903               	skipnz
  3578  01D0  2952               	goto	l3502
  3579  01D1  3A01               	xorlw	1	; case 59
  3580  01D2  1903               	skipnz
  3581  01D3  296C               	goto	l3510
  3582  01D4  3A07               	xorlw	7	; case 60
  3583  01D5  1903               	skipnz
  3584  01D6  2986               	goto	l3518
  3585  01D7  3A68               	xorlw	104	; case 84
  3586  01D8  1903               	skipnz
  3587  01D9  29A2               	goto	l3526
  3588  01DA  3A0E               	xorlw	14	; case 90
  3589  01DB  1903               	skipnz
  3590  01DC  29A0               	goto	l929
  3591  01DD  3A2E               	xorlw	46	; case 116
  3592  01DE  1903               	skipnz
  3593  01DF  29A6               	goto	l3528
  3594  01E0  29E1               	goto	l932
  3595  01E1                     l932:
  3596  01E1  0008               	return
  3597  01E2                     __end_of_processActivation:
  3598                           
  3599                           	psect	text2
  3600  0665                     __ptext2:	
  3601 ;; *************** function _test *****************
  3602 ;; Defined at:
  3603 ;;		line 23 in file "commande.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;		None
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;		None
  3608 ;; Return value:  Size  Location     Type
  3609 ;;                  1    wreg      void 
  3610 ;; Registers used:
  3611 ;;		None
  3612 ;; Tracked objects:
  3613 ;;		On entry : 0/0
  3614 ;;		On exit  : 0/0
  3615 ;;		Unchanged: 0/0
  3616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3621 ;;Total ram usage:        0 bytes
  3622 ;; Hardware stack levels used: 1
  3623 ;; Hardware stack levels required when called: 7
  3624 ;; This function calls:
  3625 ;;		Nothing
  3626 ;; This function is called by:
  3627 ;;		_processActivation
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           
  3632                           ;psect for function _test
  3633  0665                     _test:
  3634  0665                     l864:	
  3635                           ;incstack = 0
  3636                           ; Regs used in _test: []
  3637                           ;commande.c: 25:     do { LATAbits.LATA0 = 1; } while(0);
  3638                           
  3639  0665  0022               	movlb	2	; select bank2
  3640  0666  140C               	bsf	12,0	;volatile
  3641  0667                     l866:	
  3642                           ;commande.c: 26:     do { LATAbits.LATA1 = 1; } while(0);
  3643                           
  3644  0667  148C               	bsf	12,1	;volatile
  3645  0668                     l868:	
  3646                           ;commande.c: 27:     do { LATAbits.LATA2 = 1; } while(0);
  3647                           
  3648  0668  150C               	bsf	12,2	;volatile
  3649  0669                     l870:	
  3650                           ;commande.c: 28:     do { LATAbits.LATA3 = 1; } while(0);
  3651                           
  3652  0669  158C               	bsf	12,3	;volatile
  3653  066A                     l872:	
  3654                           ;commande.c: 29:     do { LATAbits.LATA4 = 1; } while(0);
  3655                           
  3656  066A  160C               	bsf	12,4	;volatile
  3657  066B                     l874:	
  3658                           ;commande.c: 30:     do { LATAbits.LATA5 = 1; } while(0);
  3659                           
  3660  066B  168C               	bsf	12,5	;volatile
  3661  066C                     l876:	
  3662                           ;commande.c: 31:     do { LATAbits.LATA6 = 1; } while(0);
  3663                           
  3664  066C  170C               	bsf	12,6	;volatile
  3665  066D                     l878:	
  3666                           ;commande.c: 32:     do { LATAbits.LATA7 = 1; } while(0);
  3667                           
  3668  066D  178C               	bsf	12,7	;volatile
  3669  066E                     l880:	
  3670                           ;commande.c: 33:     do { LATBbits.LATB0 = 1; } while(0);
  3671                           
  3672  066E  140D               	bsf	13,0	;volatile
  3673  066F                     l882:	
  3674                           ;commande.c: 34:     do { LATBbits.LATB1 = 1; } while(0);
  3675                           
  3676  066F  148D               	bsf	13,1	;volatile
  3677  0670                     l884:	
  3678                           ;commande.c: 35:     do { LATBbits.LATB2 = 1; } while(0);
  3679                           
  3680  0670  150D               	bsf	13,2	;volatile
  3681  0671                     l886:	
  3682                           ;commande.c: 36:     do { LATBbits.LATB3 = 1; } while(0);
  3683                           
  3684  0671  158D               	bsf	13,3	;volatile
  3685  0672                     l888:
  3686  0672  0008               	return
  3687  0673                     __end_of_test:
  3688                           
  3689                           	psect	text3
  3690  0673                     __ptext3:	
  3691 ;; *************** function _reset *****************
  3692 ;; Defined at:
  3693 ;;		line 6 in file "commande.c"
  3694 ;; Parameters:    Size  Location     Type
  3695 ;;		None
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;		None
  3698 ;; Return value:  Size  Location     Type
  3699 ;;                  1    wreg      void 
  3700 ;; Registers used:
  3701 ;;		None
  3702 ;; Tracked objects:
  3703 ;;		On entry : 0/0
  3704 ;;		On exit  : 0/0
  3705 ;;		Unchanged: 0/0
  3706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3711 ;;Total ram usage:        0 bytes
  3712 ;; Hardware stack levels used: 1
  3713 ;; Hardware stack levels required when called: 7
  3714 ;; This function calls:
  3715 ;;		Nothing
  3716 ;; This function is called by:
  3717 ;;		_main
  3718 ;;		_processActivation
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           
  3723                           ;psect for function _reset
  3724  0673                     _reset:
  3725  0673                     l837:	
  3726                           ;incstack = 0
  3727                           ; Regs used in _reset: []
  3728                           ;commande.c: 8:     do { LATAbits.LATA0 = 0; } while(0);
  3729                           
  3730  0673  0022               	movlb	2	; select bank2
  3731  0674  100C               	bcf	12,0	;volatile
  3732  0675                     l839:	
  3733                           ;commande.c: 9:     do { LATAbits.LATA1 = 0; } while(0);
  3734                           
  3735  0675  108C               	bcf	12,1	;volatile
  3736  0676                     l841:	
  3737                           ;commande.c: 10:     do { LATAbits.LATA2 = 0; } while(0);
  3738                           
  3739  0676  110C               	bcf	12,2	;volatile
  3740  0677                     l843:	
  3741                           ;commande.c: 11:     do { LATAbits.LATA3 = 0; } while(0);
  3742                           
  3743  0677  118C               	bcf	12,3	;volatile
  3744  0678                     l845:	
  3745                           ;commande.c: 12:     do { LATAbits.LATA4 = 0; } while(0);
  3746                           
  3747  0678  120C               	bcf	12,4	;volatile
  3748  0679                     l847:	
  3749                           ;commande.c: 13:     do { LATAbits.LATA5 = 0; } while(0);
  3750                           
  3751  0679  128C               	bcf	12,5	;volatile
  3752  067A                     l849:	
  3753                           ;commande.c: 14:     do { LATAbits.LATA6 = 0; } while(0);
  3754                           
  3755  067A  130C               	bcf	12,6	;volatile
  3756  067B                     l851:	
  3757                           ;commande.c: 15:     do { LATAbits.LATA7 = 0; } while(0);
  3758                           
  3759  067B  138C               	bcf	12,7	;volatile
  3760  067C                     l853:	
  3761                           ;commande.c: 16:     do { LATBbits.LATB0 = 0; } while(0);
  3762                           
  3763  067C  100D               	bcf	13,0	;volatile
  3764  067D                     l855:	
  3765                           ;commande.c: 17:     do { LATBbits.LATB1 = 0; } while(0);
  3766                           
  3767  067D  108D               	bcf	13,1	;volatile
  3768  067E                     l857:	
  3769                           ;commande.c: 18:     do { LATBbits.LATB2 = 0; } while(0);
  3770                           
  3771  067E  110D               	bcf	13,2	;volatile
  3772  067F                     l859:	
  3773                           ;commande.c: 19:     do { LATBbits.LATB3 = 0; } while(0);
  3774                           
  3775  067F  118D               	bcf	13,3	;volatile
  3776  0680                     l861:
  3777  0680  0008               	return
  3778  0681                     __end_of_reset:
  3779                           
  3780                           	psect	text4
  3781  05FF                     __ptext4:	
  3782 ;; *************** function _printf *****************
  3783 ;; Defined at:
  3784 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  3785 ;; Parameters:    Size  Location     Type
  3786 ;;  fmt             2   30[BANK0 ] PTR const unsigned char 
  3787 ;;		 -> STR_12(11), STR_11(11), STR_10(10), STR_9(10), 
  3788 ;;		 -> STR_8(10), STR_7(10), STR_6(10), STR_5(10), 
  3789 ;;		 -> STR_4(10), STR_3(10), STR_2(10), STR_1(11), 
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;  ret             2    0        int 
  3792 ;;  ap              1   33[BANK0 ] PTR void [1]
  3793 ;;		 -> ?_printf(2), 
  3794 ;; Return value:  Size  Location     Type
  3795 ;;                  2   30[BANK0 ] int 
  3796 ;; Registers used:
  3797 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3798 ;; Tracked objects:
  3799 ;;		On entry : 0/0
  3800 ;;		On exit  : 0/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3803 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3804 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3805 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3806 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3807 ;;Total ram usage:        4 bytes
  3808 ;; Hardware stack levels used: 1
  3809 ;; Hardware stack levels required when called: 12
  3810 ;; This function calls:
  3811 ;;		_vfprintf
  3812 ;; This function is called by:
  3813 ;;		_processActivation
  3814 ;; This function uses a non-reentrant model
  3815 ;;
  3816                           
  3817                           
  3818                           ;psect for function _printf
  3819  05FF                     _printf:
  3820  05FF                     l3346:	
  3821                           ;incstack = 0
  3822                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3823                           
  3824  05FF  3040               	movlw	(low ((?_printf| 0+2)))& (0+255)
  3825  0600  0020               	movlb	0	; select bank0
  3826  0601  00C0               	movwf	??_printf
  3827  0602  0840               	movf	??_printf,w
  3828  0603  00C1               	movwf	printf@ap
  3829  0604                     l3348:
  3830  0604  083F               	movf	printf@fmt+1,w
  3831  0605  00B7               	movwf	vfprintf@fmt+1
  3832  0606  083E               	movf	printf@fmt,w
  3833  0607  00B6               	movwf	vfprintf@fmt
  3834  0608  3041               	movlw	(low (printf@ap| 0))& (0+255)
  3835  0609  00C0               	movwf	??_printf
  3836  060A  0840               	movf	??_printf,w
  3837  060B  00B8               	movwf	vfprintf@ap
  3838  060C  3000               	movlw	0
  3839  060D  3185  252E  3185   	fcall	_vfprintf
  3840  0610                     l1545:
  3841  0610  0008               	return
  3842  0611                     __end_of_printf:
  3843                           
  3844                           	psect	text5
  3845  052E                     __ptext5:	
  3846 ;; *************** function _vfprintf *****************
  3847 ;; Defined at:
  3848 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;  fp              1    wreg     PTR struct _IO_FILE
  3851 ;;		 -> NULL(0), 
  3852 ;;  fmt             2   22[BANK0 ] PTR const unsigned char 
  3853 ;;		 -> STR_12(11), STR_11(11), STR_10(10), STR_9(10), 
  3854 ;;		 -> STR_8(10), STR_7(10), STR_6(10), STR_5(10), 
  3855 ;;		 -> STR_4(10), STR_3(10), STR_2(10), STR_1(11), 
  3856 ;;  ap              1   24[BANK0 ] PTR PTR void 
  3857 ;;		 -> printf@ap(1), 
  3858 ;; Auto vars:     Size  Location     Type
  3859 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
  3860 ;;		 -> NULL(0), 
  3861 ;;  cfmt            2   28[BANK0 ] PTR unsigned char 
  3862 ;;		 -> STR_12(11), STR_11(11), STR_10(10), STR_9(10), 
  3863 ;;		 -> STR_8(10), STR_7(10), STR_6(10), STR_5(10), 
  3864 ;;		 -> STR_4(10), STR_3(10), STR_2(10), STR_1(11), 
  3865 ;; Return value:  Size  Location     Type
  3866 ;;                  2   22[BANK0 ] int 
  3867 ;; Registers used:
  3868 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3869 ;; Tracked objects:
  3870 ;;		On entry : 0/0
  3871 ;;		On exit  : 0/0
  3872 ;;		Unchanged: 0/0
  3873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3874 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3875 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3876 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3877 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3878 ;;Total ram usage:        8 bytes
  3879 ;; Hardware stack levels used: 1
  3880 ;; Hardware stack levels required when called: 11
  3881 ;; This function calls:
  3882 ;;		_vfpfcnvrt
  3883 ;; This function is called by:
  3884 ;;		_printf
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           
  3889                           ;psect for function _vfprintf
  3890  052E                     _vfprintf:
  3891                           
  3892                           ;incstack = 0
  3893                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3894                           ;vfprintf@fp stored from wreg
  3895  052E  0020               	movlb	0	; select bank0
  3896  052F  00BB               	movwf	vfprintf@fp
  3897  0530                     l3242:
  3898                           
  3899                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3900  0530  0837               	movf	vfprintf@fmt+1,w
  3901  0531  00BD               	movwf	vfprintf@cfmt+1
  3902  0532  0836               	movf	vfprintf@fmt,w
  3903  0533  00BC               	movwf	vfprintf@cfmt
  3904  0534                     l3244:
  3905                           
  3906                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3907  0534  01CD               	clrf	_nout
  3908  0535  01CE               	clrf	_nout+1
  3909                           
  3910                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3911  0536  2D48               	goto	l3248
  3912  0537                     l3246:
  3913                           
  3914                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3915  0537  303C               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3916  0538  00B9               	movwf	??_vfprintf
  3917  0539  0839               	movf	??_vfprintf,w
  3918  053A  00AE               	movwf	vfpfcnvrt@fmt
  3919  053B  0838               	movf	vfprintf@ap,w
  3920  053C  00BA               	movwf	??_vfprintf+1
  3921  053D  083A               	movf	??_vfprintf+1,w
  3922  053E  00AF               	movwf	vfpfcnvrt@ap
  3923  053F  083B               	movf	vfprintf@fp,w
  3924  0540  3181  21E2  3185   	fcall	_vfpfcnvrt
  3925  0543  0020               	movlb	0	; select bank0
  3926  0544  082E               	movf	?_vfpfcnvrt,w
  3927  0545  07CD               	addwf	_nout,f
  3928  0546  082F               	movf	?_vfpfcnvrt+1,w
  3929  0547  3DCE               	addwfc	_nout+1,f
  3930  0548                     l3248:
  3931                           
  3932                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3933  0548  083C               	movf	vfprintf@cfmt,w
  3934  0549  0084               	movwf	4
  3935  054A  083D               	movf	vfprintf@cfmt+1,w
  3936  054B  0085               	movwf	5
  3937  054C  0012               	moviw fsr0++
  3938  054D  1D03               	btfss	3,2
  3939  054E  2D50               	goto	u841
  3940  054F  2D51               	goto	u840
  3941  0550                     u841:
  3942  0550  2D37               	goto	l3246
  3943  0551                     u840:
  3944  0551                     l3250:
  3945                           
  3946                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3947  0551  084E               	movf	_nout+1,w
  3948  0552  00B7               	movwf	?_vfprintf+1
  3949  0553  084D               	movf	_nout,w
  3950  0554  00B6               	movwf	?_vfprintf
  3951  0555                     l1584:
  3952  0555  0008               	return
  3953  0556                     __end_of_vfprintf:
  3954                           
  3955                           	psect	text6
  3956  01E2                     __ptext6:	
  3957 ;; *************** function _vfpfcnvrt *****************
  3958 ;; Defined at:
  3959 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;  fp              1    wreg     PTR struct _IO_FILE
  3962 ;;		 -> NULL(0), 
  3963 ;;  fmt             1   14[BANK0 ] PTR PTR unsigned char 
  3964 ;;		 -> vfprintf@cfmt(2), 
  3965 ;;  ap              1   15[BANK0 ] PTR PTR void 
  3966 ;;		 -> printf@ap(1), 
  3967 ;; Auto vars:     Size  Location     Type
  3968 ;;  fp              1   21[BANK0 ] PTR struct _IO_FILE
  3969 ;;		 -> NULL(0), 
  3970 ;;  llu             8    0        unsigned long long 
  3971 ;;  ll              8    0        long long 
  3972 ;;  f               4    0        long long 
  3973 ;;  ct              3    0        unsigned char [3]
  3974 ;;  vp              2    0        PTR void 
  3975 ;;  i               2    0        int 
  3976 ;;  done            2    0        int 
  3977 ;;  cp              2    0        PTR unsigned char 
  3978 ;;  c               1    0        unsigned char 
  3979 ;; Return value:  Size  Location     Type
  3980 ;;                  2   14[BANK0 ] int 
  3981 ;; Registers used:
  3982 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3983 ;; Tracked objects:
  3984 ;;		On entry : 0/0
  3985 ;;		On exit  : 0/0
  3986 ;;		Unchanged: 0/0
  3987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3988 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3989 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3990 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3991 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3992 ;;Total ram usage:        8 bytes
  3993 ;; Hardware stack levels used: 1
  3994 ;; Hardware stack levels required when called: 10
  3995 ;; This function calls:
  3996 ;;		_fputc
  3997 ;; This function is called by:
  3998 ;;		_vfprintf
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002                           
  4003                           ;psect for function _vfpfcnvrt
  4004  01E2                     _vfpfcnvrt:
  4005                           
  4006                           ;incstack = 0
  4007                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4008                           ;vfpfcnvrt@fp stored from wreg
  4009  01E2  0020               	movlb	0	; select bank0
  4010  01E3  00B5               	movwf	vfpfcnvrt@fp
  4011  01E4                     l3028:
  4012                           
  4013                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4014  01E4  082E               	movf	vfpfcnvrt@fmt,w
  4015  01E5  0086               	movwf	6
  4016  01E6  0187               	clrf	7
  4017  01E7  3F40               	moviw [0]fsr1
  4018  01E8  00B0               	movwf	??_vfpfcnvrt
  4019  01E9  3F41               	moviw [1]fsr1
  4020  01EA  00B1               	movwf	??_vfpfcnvrt+1
  4021  01EB  0830               	movf	??_vfpfcnvrt,w
  4022  01EC  0084               	movwf	4
  4023  01ED  0831               	movf	??_vfpfcnvrt+1,w
  4024  01EE  0085               	movwf	5
  4025  01EF  0012               	moviw fsr0++
  4026  01F0  3A25               	xorlw	37
  4027  01F1  1D03               	btfss	3,2
  4028  01F2  29F4               	goto	u781
  4029  01F3  29F5               	goto	u780
  4030  01F4                     u781:
  4031  01F4  2A3A               	goto	l3052
  4032  01F5                     u780:
  4033  01F5                     l3030:
  4034                           
  4035                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4036  01F5  082E               	movf	vfpfcnvrt@fmt,w
  4037  01F6  0086               	movwf	6
  4038  01F7  0187               	clrf	7
  4039  01F8  3001               	movlw	1
  4040  01F9  0781               	addwf	1,f
  4041  01FA  3141               	addfsr 1,1
  4042  01FB  1803               	skipnc
  4043  01FC  0A81               	incf	1,f
  4044  01FD                     l3032:
  4045                           
  4046                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4047  01FD  01CF               	clrf	_width
  4048  01FE  01D0               	clrf	_width+1
  4049  01FF  01D3               	clrf	_flags
  4050  0200  01D4               	clrf	_flags+1
  4051  0201                     l3034:
  4052                           
  4053                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4054  0201  30FF               	movlw	255
  4055  0202  00D1               	movwf	_prec
  4056  0203  30FF               	movlw	255
  4057  0204  00D2               	movwf	_prec+1
  4058  0205                     l3036:
  4059                           
  4060                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  4061  0205  082E               	movf	vfpfcnvrt@fmt,w
  4062  0206  0086               	movwf	6
  4063  0207  0187               	clrf	7
  4064  0208  3F40               	moviw [0]fsr1
  4065  0209  00B0               	movwf	??_vfpfcnvrt
  4066  020A  3F41               	moviw [1]fsr1
  4067  020B  00B1               	movwf	??_vfpfcnvrt+1
  4068  020C  0830               	movf	??_vfpfcnvrt,w
  4069  020D  0084               	movwf	4
  4070  020E  0831               	movf	??_vfpfcnvrt+1,w
  4071  020F  0085               	movwf	5
  4072  0210  0012               	moviw fsr0++
  4073  0211  3A25               	xorlw	37
  4074  0212  1D03               	btfss	3,2
  4075  0213  2A15               	goto	u791
  4076  0214  2A16               	goto	u790
  4077  0215                     u791:
  4078  0215  2A2F               	goto	l3046
  4079  0216                     u790:
  4080  0216                     l3038:
  4081                           
  4082                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  4083  0216  082E               	movf	vfpfcnvrt@fmt,w
  4084  0217  0086               	movwf	6
  4085  0218  0187               	clrf	7
  4086  0219  3001               	movlw	1
  4087  021A  0781               	addwf	1,f
  4088  021B  3141               	addfsr 1,1
  4089  021C  1803               	skipnc
  4090  021D  0A81               	incf	1,f
  4091  021E                     l3040:
  4092                           
  4093                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  4094  021E  3025               	movlw	37
  4095  021F  00A6               	movwf	fputc@c
  4096  0220  3000               	movlw	0
  4097  0221  00A7               	movwf	fputc@c+1
  4098  0222  0835               	movf	vfpfcnvrt@fp,w
  4099  0223  00B0               	movwf	??_vfpfcnvrt
  4100  0224  0830               	movf	??_vfpfcnvrt,w
  4101  0225  00A8               	movwf	fputc@fp
  4102  0226  3183  23A9  3181   	fcall	_fputc
  4103  0229                     l3042:
  4104                           
  4105                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  4106  0229  3001               	movlw	1
  4107  022A  0020               	movlb	0	; select bank0
  4108  022B  00AE               	movwf	?_vfpfcnvrt
  4109  022C  3000               	movlw	0
  4110  022D  00AF               	movwf	?_vfpfcnvrt+1
  4111  022E  2A5D               	goto	l1578
  4112  022F                     l3046:
  4113                           
  4114                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  4115  022F  082E               	movf	vfpfcnvrt@fmt,w
  4116  0230  0086               	movwf	6
  4117  0231  0187               	clrf	7
  4118  0232  3001               	movlw	1
  4119  0233  0781               	addwf	1,f
  4120  0234  3141               	addfsr 1,1
  4121  0235  1803               	skipnc
  4122  0236  0A81               	incf	1,f
  4123  0237                     l3048:
  4124                           
  4125                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  4126  0237  01AE               	clrf	?_vfpfcnvrt
  4127  0238  01AF               	clrf	?_vfpfcnvrt+1
  4128  0239  2A5D               	goto	l1578
  4129  023A                     l3052:
  4130                           
  4131                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  4132  023A  082E               	movf	vfpfcnvrt@fmt,w
  4133  023B  0086               	movwf	6
  4134  023C  0187               	clrf	7
  4135  023D  3F40               	moviw [0]fsr1
  4136  023E  00B0               	movwf	??_vfpfcnvrt
  4137  023F  3F41               	moviw [1]fsr1
  4138  0240  00B1               	movwf	??_vfpfcnvrt+1
  4139  0241  0830               	movf	??_vfpfcnvrt,w
  4140  0242  0084               	movwf	4
  4141  0243  0831               	movf	??_vfpfcnvrt+1,w
  4142  0244  0085               	movwf	5
  4143  0245  0800               	movf	0,w	;code access
  4144  0246  00B2               	movwf	??_vfpfcnvrt+2
  4145  0247  01B3               	clrf	??_vfpfcnvrt+3
  4146  0248  0832               	movf	??_vfpfcnvrt+2,w
  4147  0249  00A6               	movwf	fputc@c
  4148  024A  0833               	movf	??_vfpfcnvrt+3,w
  4149  024B  00A7               	movwf	fputc@c+1
  4150  024C  0835               	movf	vfpfcnvrt@fp,w
  4151  024D  00B4               	movwf	??_vfpfcnvrt+4
  4152  024E  0834               	movf	??_vfpfcnvrt+4,w
  4153  024F  00A8               	movwf	fputc@fp
  4154  0250  3183  23A9  3181   	fcall	_fputc
  4155  0253                     l3054:
  4156                           
  4157                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4158  0253  0020               	movlb	0	; select bank0
  4159  0254  082E               	movf	vfpfcnvrt@fmt,w
  4160  0255  0086               	movwf	6
  4161  0256  0187               	clrf	7
  4162  0257  3001               	movlw	1
  4163  0258  0781               	addwf	1,f
  4164  0259  3141               	addfsr 1,1
  4165  025A  1803               	skipnc
  4166  025B  0A81               	incf	1,f
  4167  025C  2A29               	goto	l3042
  4168  025D                     l1578:
  4169  025D  0008               	return
  4170  025E                     __end_of_vfpfcnvrt:
  4171                           
  4172                           	psect	text7
  4173  03A9                     __ptext7:	
  4174 ;; *************** function _fputc *****************
  4175 ;; Defined at:
  4176 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;  c               2    6[BANK0 ] int 
  4179 ;;  fp              1    8[BANK0 ] PTR struct _IO_FILE
  4180 ;;		 -> NULL(0), 
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;		None
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  2    6[BANK0 ] int 
  4185 ;; Registers used:
  4186 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4192 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4194 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4195 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4196 ;;Total ram usage:        8 bytes
  4197 ;; Hardware stack levels used: 1
  4198 ;; Hardware stack levels required when called: 9
  4199 ;; This function calls:
  4200 ;;		_putch
  4201 ;; This function is called by:
  4202 ;;		_vfpfcnvrt
  4203 ;; This function uses a non-reentrant model
  4204 ;;
  4205                           
  4206                           
  4207                           ;psect for function _fputc
  4208  03A9                     _fputc:
  4209  03A9                     l2916:	
  4210                           ;incstack = 0
  4211                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4212                           
  4213  03A9  0020               	movlb	0	; select bank0
  4214  03AA  0828               	movf	fputc@fp,w
  4215  03AB  1903               	btfsc	3,2
  4216  03AC  2BAE               	goto	u741
  4217  03AD  2BAF               	goto	u740
  4218  03AE                     u741:
  4219  03AE  2BB4               	goto	l2920
  4220  03AF                     u740:
  4221  03AF                     l2918:
  4222  03AF  0828               	movf	fputc@fp,w
  4223  03B0  1D03               	btfss	3,2
  4224  03B1  2BB3               	goto	u751
  4225  03B2  2BB4               	goto	u750
  4226  03B3                     u751:
  4227  03B3  2BB9               	goto	l2922
  4228  03B4                     u750:
  4229  03B4                     l2920:
  4230  03B4  0826               	movf	fputc@c,w
  4231  03B5  3187  272D  3183   	fcall	_putch
  4232  03B8  2BE9               	goto	l1596
  4233  03B9                     l2922:
  4234  03B9  0828               	movf	fputc@fp,w
  4235  03BA  3E03               	addlw	3
  4236  03BB  0086               	movwf	6
  4237  03BC  0187               	clrf	7
  4238  03BD  0016               	moviw fsr1++
  4239  03BE  0401               	iorwf	1,w
  4240  03BF  1903               	btfsc	3,2
  4241  03C0  2BC2               	goto	u761
  4242  03C1  2BC3               	goto	u760
  4243  03C2                     u761:
  4244  03C2  2BE0               	goto	l2926
  4245  03C3                     u760:
  4246  03C3                     l2924:
  4247  03C3  0828               	movf	fputc@fp,w
  4248  03C4  3E03               	addlw	3
  4249  03C5  0086               	movwf	6
  4250  03C6  0187               	clrf	7
  4251  03C7  3F40               	moviw [0]fsr1
  4252  03C8  00A9               	movwf	??_fputc
  4253  03C9  3F41               	moviw [1]fsr1
  4254  03CA  00AA               	movwf	??_fputc+1
  4255  03CB  0A28               	incf	fputc@fp,w
  4256  03CC  0086               	movwf	6
  4257  03CD  0187               	clrf	7
  4258  03CE  3F40               	moviw [0]fsr1
  4259  03CF  00AB               	movwf	??_fputc+2
  4260  03D0  3F41               	moviw [1]fsr1
  4261  03D1  00AC               	movwf	??_fputc+3
  4262  03D2  082C               	movf	??_fputc+3,w
  4263  03D3  3A80               	xorlw	128
  4264  03D4  00AD               	movwf	??_fputc+4
  4265  03D5  082A               	movf	??_fputc+1,w
  4266  03D6  3A80               	xorlw	128
  4267  03D7  022D               	subwf	??_fputc+4,w
  4268  03D8  1D03               	skipz
  4269  03D9  2BDC               	goto	u775
  4270  03DA  0829               	movf	??_fputc,w
  4271  03DB  022B               	subwf	??_fputc+2,w
  4272  03DC                     u775:
  4273  03DC  1803               	skipnc
  4274  03DD  2BDF               	goto	u771
  4275  03DE  2BE0               	goto	u770
  4276  03DF                     u771:
  4277  03DF  2BE9               	goto	l1596
  4278  03E0                     u770:
  4279  03E0                     l2926:
  4280  03E0  0020               	movlb	0	; select bank0
  4281  03E1  0A28               	incf	fputc@fp,w
  4282  03E2  0086               	movwf	6
  4283  03E3  0187               	clrf	7
  4284  03E4  3001               	movlw	1
  4285  03E5  0781               	addwf	1,f
  4286  03E6  3141               	addfsr 1,1
  4287  03E7  1803               	skipnc
  4288  03E8  0A81               	incf	1,f
  4289  03E9                     l1596:
  4290  03E9  0008               	return
  4291  03EA                     __end_of_fputc:
  4292                           
  4293                           	psect	text8
  4294  072D                     __ptext8:	
  4295 ;; *************** function _putch *****************
  4296 ;; Defined at:
  4297 ;;		line 201 in file "mcc_generated_files/eusart.c"
  4298 ;; Parameters:    Size  Location     Type
  4299 ;;  txData          1    wreg     unsigned char 
  4300 ;; Auto vars:     Size  Location     Type
  4301 ;;  txData          1    5[BANK0 ] unsigned char 
  4302 ;; Return value:  Size  Location     Type
  4303 ;;                  1    wreg      void 
  4304 ;; Registers used:
  4305 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4306 ;; Tracked objects:
  4307 ;;		On entry : 0/0
  4308 ;;		On exit  : 0/0
  4309 ;;		Unchanged: 0/0
  4310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4312 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4314 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4315 ;;Total ram usage:        1 bytes
  4316 ;; Hardware stack levels used: 1
  4317 ;; Hardware stack levels required when called: 8
  4318 ;; This function calls:
  4319 ;;		_EUSART_Write
  4320 ;; This function is called by:
  4321 ;;		_fputc
  4322 ;; This function uses a non-reentrant model
  4323 ;;
  4324                           
  4325                           
  4326                           ;psect for function _putch
  4327  072D                     _putch:
  4328                           
  4329                           ;incstack = 0
  4330                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4331                           ;putch@txData stored from wreg
  4332  072D  0020               	movlb	0	; select bank0
  4333  072E  00A5               	movwf	putch@txData
  4334  072F                     l2894:
  4335                           
  4336                           ;mcc_generated_files/eusart.c: 201: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 202: {;mcc_generated_files/eusart.c: 203:     EUSART_Write(txData);
  4337  072F  0825               	movf	putch@txData,w
  4338  0730  3184  24D8  3187   	fcall	_EUSART_Write
  4339  0733                     l329:
  4340  0733  0008               	return
  4341  0734                     __end_of_putch:
  4342                           
  4343                           	psect	text9
  4344  04D8                     __ptext9:	
  4345 ;; *************** function _EUSART_Write *****************
  4346 ;; Defined at:
  4347 ;;		line 173 in file "mcc_generated_files/eusart.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;  txData          1    wreg     unsigned char 
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;  txData          1    4[BANK0 ] unsigned char 
  4352 ;; Return value:  Size  Location     Type
  4353 ;;                  1    wreg      void 
  4354 ;; Registers used:
  4355 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4356 ;; Tracked objects:
  4357 ;;		On entry : 0/0
  4358 ;;		On exit  : 0/0
  4359 ;;		Unchanged: 0/0
  4360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4362 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4363 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4364 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4365 ;;Total ram usage:        2 bytes
  4366 ;; Hardware stack levels used: 1
  4367 ;; Hardware stack levels required when called: 7
  4368 ;; This function calls:
  4369 ;;		Nothing
  4370 ;; This function is called by:
  4371 ;;		_putch
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           
  4375                           
  4376                           ;psect for function _EUSART_Write
  4377  04D8                     _EUSART_Write:
  4378                           
  4379                           ;incstack = 0
  4380                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  4381                           ;EUSART_Write@txData stored from wreg
  4382  04D8  0020               	movlb	0	; select bank0
  4383  04D9  00A4               	movwf	EUSART_Write@txData
  4384  04DA                     l2876:
  4385  04DA                     l2878:	
  4386                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
  4387                           
  4388                           
  4389                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  4390  04DA  0867               	movf	_eusartTxBufferRemaining,w	;volatile
  4391  04DB  1903               	btfsc	3,2
  4392  04DC  2CDE               	goto	u691
  4393  04DD  2CDF               	goto	u690
  4394  04DE                     u691:
  4395  04DE  2CDA               	goto	l2878
  4396  04DF                     u690:
  4397  04DF                     l319:
  4398                           
  4399                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TXIE)
  4400  04DF  0021               	movlb	1	; select bank1
  4401  04E0  1A11               	btfsc	17,4	;volatile
  4402  04E1  2CE3               	goto	u701
  4403  04E2  2CE4               	goto	u700
  4404  04E3                     u701:
  4405  04E3  2CE9               	goto	l320
  4406  04E4                     u700:
  4407  04E4                     l2880:
  4408                           
  4409                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
  4410  04E4  0020               	movlb	0	; select bank0
  4411  04E5  0824               	movf	EUSART_Write@txData,w
  4412  04E6  0023               	movlb	3	; select bank3
  4413  04E7  009A               	movwf	26	;volatile
  4414                           
  4415                           ;mcc_generated_files/eusart.c: 182:     }
  4416  04E8  2D00               	goto	l2892
  4417  04E9                     l320:	
  4418                           ;mcc_generated_files/eusart.c: 183:     else
  4419                           
  4420                           
  4421                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TXIE = 0;
  4422  04E9  1211               	bcf	17,4	;volatile
  4423  04EA                     l2882:
  4424                           
  4425                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  4426  04EA  0020               	movlb	0	; select bank0
  4427  04EB  0824               	movf	EUSART_Write@txData,w
  4428  04EC  00A3               	movwf	??_EUSART_Write
  4429  04ED  0869               	movf	_eusartTxHead,w
  4430  04EE  3ECD               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4431  04EF  0086               	movwf	6
  4432  04F0  0187               	clrf	7
  4433  04F1  0823               	movf	??_EUSART_Write,w
  4434  04F2  0081               	movwf	1
  4435  04F3                     l2884:
  4436  04F3  3001               	movlw	1
  4437  04F4  00A3               	movwf	??_EUSART_Write
  4438  04F5  0823               	movf	??_EUSART_Write,w
  4439  04F6  07E9               	addwf	_eusartTxHead,f	;volatile
  4440  04F7                     l2886:
  4441                           
  4442                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  4443  04F7  3008               	movlw	8
  4444  04F8  0269               	subwf	_eusartTxHead,w	;volatile
  4445  04F9  1C03               	skipc
  4446  04FA  2CFC               	goto	u711
  4447  04FB  2CFD               	goto	u710
  4448  04FC                     u711:
  4449  04FC  2CFE               	goto	l2890
  4450  04FD                     u710:
  4451  04FD                     l2888:
  4452                           
  4453                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  4454  04FD  01E9               	clrf	_eusartTxHead	;volatile
  4455  04FE                     l2890:
  4456                           
  4457                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  4458  04FE  3001               	movlw	1
  4459  04FF  02E7               	subwf	_eusartTxBufferRemaining,f	;volatile
  4460  0500                     l2892:
  4461                           
  4462                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TXIE = 1;
  4463  0500  0021               	movlb	1	; select bank1
  4464  0501  1611               	bsf	17,4	;volatile
  4465  0502                     l323:
  4466  0502  0008               	return
  4467  0503                     __end_of_EUSART_Write:
  4468                           
  4469                           	psect	text10
  4470  05EC                     __ptext10:	
  4471 ;; *************** function _SYSTEM_Initialize *****************
  4472 ;; Defined at:
  4473 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4474 ;; Parameters:    Size  Location     Type
  4475 ;;		None
  4476 ;; Auto vars:     Size  Location     Type
  4477 ;;		None
  4478 ;; Return value:  Size  Location     Type
  4479 ;;                  1    wreg      void 
  4480 ;; Registers used:
  4481 ;;		wreg, status,2, status,0, pclath, cstack
  4482 ;; Tracked objects:
  4483 ;;		On entry : 0/0
  4484 ;;		On exit  : 0/0
  4485 ;;		Unchanged: 0/0
  4486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4491 ;;Total ram usage:        0 bytes
  4492 ;; Hardware stack levels used: 1
  4493 ;; Hardware stack levels required when called: 9
  4494 ;; This function calls:
  4495 ;;		_ADC_Initialize
  4496 ;;		_EUSART_Initialize
  4497 ;;		_I2C_Initialize
  4498 ;;		_OSCILLATOR_Initialize
  4499 ;;		_PIN_MANAGER_Initialize
  4500 ;;		_WDT_Initialize
  4501 ;; This function is called by:
  4502 ;;		_main
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505                           
  4506                           
  4507                           ;psect for function _SYSTEM_Initialize
  4508  05EC                     _SYSTEM_Initialize:
  4509  05EC                     l3352:	
  4510                           ;incstack = 0
  4511                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4512                           
  4513                           
  4514                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  4515  05EC  3187  270A  3185   	fcall	_I2C_Initialize
  4516                           
  4517                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4518  05EF  3185  259E  3185   	fcall	_PIN_MANAGER_Initialize
  4519                           
  4520                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4521  05F2  3186  268E  3185   	fcall	_OSCILLATOR_Initialize
  4522                           
  4523                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  4524  05F5  3187  2797  3185   	fcall	_WDT_Initialize
  4525                           
  4526                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  4527  05F8  3187  271D  3185   	fcall	_ADC_Initialize
  4528                           
  4529                           ;mcc_generated_files/mcc.c: 58:     EUSART_Initialize();
  4530  05FB  3183  2364  3185   	fcall	_EUSART_Initialize
  4531  05FE                     l173:
  4532  05FE  0008               	return
  4533  05FF                     __end_of_SYSTEM_Initialize:
  4534                           
  4535                           	psect	text11
  4536  0797                     __ptext11:	
  4537 ;; *************** function _WDT_Initialize *****************
  4538 ;; Defined at:
  4539 ;;		line 75 in file "mcc_generated_files/mcc.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;		None
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;		None
  4544 ;; Return value:  Size  Location     Type
  4545 ;;                  1    wreg      void 
  4546 ;; Registers used:
  4547 ;;		wreg
  4548 ;; Tracked objects:
  4549 ;;		On entry : 0/0
  4550 ;;		On exit  : 0/0
  4551 ;;		Unchanged: 0/0
  4552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4557 ;;Total ram usage:        0 bytes
  4558 ;; Hardware stack levels used: 1
  4559 ;; Hardware stack levels required when called: 7
  4560 ;; This function calls:
  4561 ;;		Nothing
  4562 ;; This function is called by:
  4563 ;;		_SYSTEM_Initialize
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           
  4567                           
  4568                           ;psect for function _WDT_Initialize
  4569  0797                     _WDT_Initialize:
  4570  0797                     l3292:	
  4571                           ;incstack = 0
  4572                           ; Regs used in _WDT_Initialize: [wreg]
  4573                           
  4574                           
  4575                           ;mcc_generated_files/mcc.c: 78:     WDTCON = 0x16;
  4576  0797  3016               	movlw	22
  4577  0798  0021               	movlb	1	; select bank1
  4578  0799  0097               	movwf	23	;volatile
  4579  079A                     l182:
  4580  079A  0008               	return
  4581  079B                     __end_of_WDT_Initialize:
  4582                           
  4583                           	psect	text12
  4584  059E                     __ptext12:	
  4585 ;; *************** function _PIN_MANAGER_Initialize *****************
  4586 ;; Defined at:
  4587 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4588 ;; Parameters:    Size  Location     Type
  4589 ;;		None
  4590 ;; Auto vars:     Size  Location     Type
  4591 ;;		None
  4592 ;; Return value:  Size  Location     Type
  4593 ;;                  1    wreg      void 
  4594 ;; Registers used:
  4595 ;;		wreg, status,2
  4596 ;; Tracked objects:
  4597 ;;		On entry : 0/0
  4598 ;;		On exit  : 0/0
  4599 ;;		Unchanged: 0/0
  4600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4605 ;;Total ram usage:        0 bytes
  4606 ;; Hardware stack levels used: 1
  4607 ;; Hardware stack levels required when called: 7
  4608 ;; This function calls:
  4609 ;;		Nothing
  4610 ;; This function is called by:
  4611 ;;		_SYSTEM_Initialize
  4612 ;; This function uses a non-reentrant model
  4613 ;;
  4614                           
  4615                           
  4616                           ;psect for function _PIN_MANAGER_Initialize
  4617  059E                     _PIN_MANAGER_Initialize:
  4618  059E                     l3254:	
  4619                           ;incstack = 0
  4620                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4621                           
  4622                           
  4623                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  4624  059E  0022               	movlb	2	; select bank2
  4625  059F  0190               	clrf	16	;volatile
  4626                           
  4627                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  4628  05A0  018F               	clrf	15	;volatile
  4629                           
  4630                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  4631  05A1  018C               	clrf	12	;volatile
  4632                           
  4633                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  4634  05A2  018D               	clrf	13	;volatile
  4635                           
  4636                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  4637  05A3  018E               	clrf	14	;volatile
  4638  05A4                     l3256:
  4639                           
  4640                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x08;
  4641  05A4  3008               	movlw	8
  4642  05A5  0021               	movlb	1	; select bank1
  4643  05A6  0090               	movwf	16	;volatile
  4644  05A7                     l3258:
  4645                           
  4646                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x00;
  4647  05A7  018C               	clrf	12	;volatile
  4648                           
  4649                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xC0;
  4650  05A8  30C0               	movlw	192
  4651  05A9  008D               	movwf	13	;volatile
  4652                           
  4653                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x99;
  4654  05AA  3099               	movlw	153
  4655  05AB  008E               	movwf	14	;volatile
  4656  05AC                     l3260:
  4657                           
  4658                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x00;
  4659  05AC  018F               	clrf	15	;volatile
  4660  05AD                     l3262:
  4661                           
  4662                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
  4663  05AD  0023               	movlb	3	; select bank3
  4664  05AE  018F               	clrf	15	;volatile
  4665  05AF                     l3264:
  4666                           
  4667                           ;mcc_generated_files/pin_manager.c: 79:     ANSELB = 0x00;
  4668  05AF  018D               	clrf	13	;volatile
  4669  05B0                     l3266:
  4670                           
  4671                           ;mcc_generated_files/pin_manager.c: 80:     ANSELE = 0x00;
  4672  05B0  0190               	clrf	16	;volatile
  4673  05B1                     l3268:
  4674                           
  4675                           ;mcc_generated_files/pin_manager.c: 81:     ANSELA = 0x00;
  4676  05B1  018C               	clrf	12	;volatile
  4677  05B2                     l3270:
  4678                           
  4679                           ;mcc_generated_files/pin_manager.c: 86:     WPUE = 0x00;
  4680  05B2  0024               	movlb	4	; select bank4
  4681  05B3  0190               	clrf	16	;volatile
  4682  05B4                     l3272:
  4683                           
  4684                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  4685  05B4  018D               	clrf	13	;volatile
  4686  05B5                     l3274:
  4687                           
  4688                           ;mcc_generated_files/pin_manager.c: 88:     OPTION_REGbits.nWPUEN = 1;
  4689  05B5  0021               	movlb	1	; select bank1
  4690  05B6  1795               	bsf	21,7	;volatile
  4691  05B7                     l3276:
  4692                           
  4693                           ;mcc_generated_files/pin_manager.c: 94:     APFCON = 0x00;
  4694  05B7  0022               	movlb	2	; select bank2
  4695  05B8  019D               	clrf	29	;volatile
  4696  05B9                     l143:
  4697  05B9  0008               	return
  4698  05BA                     __end_of_PIN_MANAGER_Initialize:
  4699                           
  4700                           	psect	text13
  4701  068E                     __ptext13:	
  4702 ;; *************** function _OSCILLATOR_Initialize *****************
  4703 ;; Defined at:
  4704 ;;		line 61 in file "mcc_generated_files/mcc.c"
  4705 ;; Parameters:    Size  Location     Type
  4706 ;;		None
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;		None
  4709 ;; Return value:  Size  Location     Type
  4710 ;;                  1    wreg      void 
  4711 ;; Registers used:
  4712 ;;		wreg, status,2
  4713 ;; Tracked objects:
  4714 ;;		On entry : 0/0
  4715 ;;		On exit  : 0/0
  4716 ;;		Unchanged: 0/0
  4717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4722 ;;Total ram usage:        0 bytes
  4723 ;; Hardware stack levels used: 1
  4724 ;; Hardware stack levels required when called: 7
  4725 ;; This function calls:
  4726 ;;		Nothing
  4727 ;; This function is called by:
  4728 ;;		_SYSTEM_Initialize
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732                           
  4733                           ;psect for function _OSCILLATOR_Initialize
  4734  068E                     _OSCILLATOR_Initialize:
  4735  068E                     l3286:	
  4736                           ;incstack = 0
  4737                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4738                           
  4739                           
  4740                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  4741  068E  3070               	movlw	112
  4742  068F  0021               	movlb	1	; select bank1
  4743  0690  0099               	movwf	25	;volatile
  4744  0691                     l3288:
  4745                           
  4746                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  4747  0691  0198               	clrf	24	;volatile
  4748  0692                     l3290:
  4749                           
  4750                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  4751  0692  0022               	movlb	2	; select bank2
  4752  0693  0196               	clrf	22	;volatile
  4753  0694                     l176:	
  4754                           ;mcc_generated_files/mcc.c: 71:     {;mcc_generated_files/mcc.c: 72:     }
  4755                           
  4756                           
  4757                           ;mcc_generated_files/mcc.c: 70:     while(PLLR == 0)
  4758  0694  0021               	movlb	1	; select bank1
  4759  0695  1F1A               	btfss	26,6	;volatile
  4760  0696  2E98               	goto	u851
  4761  0697  2E99               	goto	u850
  4762  0698                     u851:
  4763  0698  2E94               	goto	l176
  4764  0699                     u850:
  4765  0699                     l179:
  4766  0699  0008               	return
  4767  069A                     __end_of_OSCILLATOR_Initialize:
  4768                           
  4769                           	psect	text14
  4770  070A                     __ptext14:	
  4771 ;; *************** function _I2C_Initialize *****************
  4772 ;; Defined at:
  4773 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  4774 ;; Parameters:    Size  Location     Type
  4775 ;;		None
  4776 ;; Auto vars:     Size  Location     Type
  4777 ;;		None
  4778 ;; Return value:  Size  Location     Type
  4779 ;;                  1    wreg      void 
  4780 ;; Registers used:
  4781 ;;		wreg, status,2
  4782 ;; Tracked objects:
  4783 ;;		On entry : 0/0
  4784 ;;		On exit  : 0/0
  4785 ;;		Unchanged: 0/0
  4786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4791 ;;Total ram usage:        0 bytes
  4792 ;; Hardware stack levels used: 1
  4793 ;; Hardware stack levels required when called: 7
  4794 ;; This function calls:
  4795 ;;		Nothing
  4796 ;; This function is called by:
  4797 ;;		_SYSTEM_Initialize
  4798 ;; This function uses a non-reentrant model
  4799 ;;
  4800                           
  4801                           
  4802                           ;psect for function _I2C_Initialize
  4803  070A                     _I2C_Initialize:
  4804  070A                     l3278:	
  4805                           ;incstack = 0
  4806                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  4807                           
  4808                           
  4809                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0xC0;
  4810  070A  30C0               	movlw	192
  4811  070B  0024               	movlb	4	; select bank4
  4812  070C  0094               	movwf	20	;volatile
  4813                           
  4814                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  4815  070D  3008               	movlw	8
  4816  070E  0095               	movwf	21	;volatile
  4817  070F                     l3280:
  4818                           
  4819                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  4820  070F  0196               	clrf	22	;volatile
  4821  0710                     l3282:
  4822                           
  4823                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x4F;
  4824  0710  304F               	movlw	79
  4825  0711  0092               	movwf	18	;volatile
  4826  0712                     l3284:
  4827                           
  4828                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  4829  0712  1295               	bcf	21,5	;volatile
  4830  0713                     l510:
  4831  0713  0008               	return
  4832  0714                     __end_of_I2C_Initialize:
  4833                           
  4834                           	psect	text15
  4835  0364                     __ptext15:	
  4836 ;; *************** function _EUSART_Initialize *****************
  4837 ;; Defined at:
  4838 ;;		line 88 in file "mcc_generated_files/eusart.c"
  4839 ;; Parameters:    Size  Location     Type
  4840 ;;		None
  4841 ;; Auto vars:     Size  Location     Type
  4842 ;;		None
  4843 ;; Return value:  Size  Location     Type
  4844 ;;                  1    wreg      void 
  4845 ;; Registers used:
  4846 ;;		wreg, status,2, status,0, pclath, cstack
  4847 ;; Tracked objects:
  4848 ;;		On entry : 0/0
  4849 ;;		On exit  : 0/0
  4850 ;;		Unchanged: 0/0
  4851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4854 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4855 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4856 ;;Total ram usage:        1 bytes
  4857 ;; Hardware stack levels used: 1
  4858 ;; Hardware stack levels required when called: 8
  4859 ;; This function calls:
  4860 ;;		_EUSART_SetErrorHandler
  4861 ;;		_EUSART_SetFramingErrorHandler
  4862 ;;		_EUSART_SetOverrunErrorHandler
  4863 ;;		_EUSART_SetRxInterruptHandler
  4864 ;;		_EUSART_SetTxInterruptHandler
  4865 ;; This function is called by:
  4866 ;;		_SYSTEM_Initialize
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870                           
  4871                           ;psect for function _EUSART_Initialize
  4872  0364                     _EUSART_Initialize:
  4873  0364                     l3300:	
  4874                           ;incstack = 0
  4875                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4876                           
  4877                           
  4878                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  4879  0364  0021               	movlb	1	; select bank1
  4880  0365  1291               	bcf	17,5	;volatile
  4881  0366                     l3302:
  4882                           
  4883                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  4884  0366  30EA               	movlw	low _EUSART_Receive_ISR
  4885  0367  0020               	movlb	0	; select bank0
  4886  0368  00A3               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  4887  0369  3003               	movlw	high _EUSART_Receive_ISR
  4888  036A  00A4               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  4889  036B  3187  2747  3183   	fcall	_EUSART_SetRxInterruptHandler
  4890  036E                     l3304:
  4891                           
  4892                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  4893  036E  0021               	movlb	1	; select bank1
  4894  036F  1211               	bcf	17,4	;volatile
  4895                           
  4896                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  4897  0370  307C               	movlw	low _EUSART_Transmit_ISR
  4898  0371  0020               	movlb	0	; select bank0
  4899  0372  00A3               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  4900  0373  3005               	movlw	high _EUSART_Transmit_ISR
  4901  0374  00A4               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  4902  0375  3187  2741  3183   	fcall	_EUSART_SetTxInterruptHandler
  4903  0378                     l3306:
  4904                           
  4905                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  4906  0378  3008               	movlw	8
  4907  0379  0023               	movlb	3	; select bank3
  4908  037A  009F               	movwf	31	;volatile
  4909  037B                     l3308:
  4910                           
  4911                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  4912  037B  3090               	movlw	144
  4913  037C  009D               	movwf	29	;volatile
  4914  037D                     l3310:
  4915                           
  4916                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  4917  037D  3024               	movlw	36
  4918  037E  009E               	movwf	30	;volatile
  4919  037F                     l3312:
  4920                           
  4921                           ;mcc_generated_files/eusart.c: 107:     SPBRGL = 0x40;
  4922  037F  3040               	movlw	64
  4923  0380  009B               	movwf	27	;volatile
  4924  0381                     l3314:
  4925                           
  4926                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x03;
  4927  0381  3003               	movlw	3
  4928  0382  009C               	movwf	28	;volatile
  4929  0383                     l3316:
  4930                           
  4931                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  4932  0383  30C5               	movlw	low _EUSART_DefaultFramingErrorHandler
  4933  0384  0020               	movlb	0	; select bank0
  4934  0385  00A3               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  4935  0386  3007               	movlw	high _EUSART_DefaultFramingErrorHandler
  4936  0387  00A4               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  4937  0388  3187  2753  3183   	fcall	_EUSART_SetFramingErrorHandler
  4938  038B                     l3318:
  4939                           
  4940                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  4941  038B  30A7               	movlw	low _EUSART_DefaultOverrunErrorHandler
  4942  038C  0020               	movlb	0	; select bank0
  4943  038D  00A3               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  4944  038E  3007               	movlw	high _EUSART_DefaultOverrunErrorHandler
  4945  038F  00A4               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  4946  0390  3187  274D  3183   	fcall	_EUSART_SetOverrunErrorHandler
  4947  0393                     l3320:
  4948                           
  4949                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  4950  0393  30AB               	movlw	low _EUSART_DefaultErrorHandler
  4951  0394  0020               	movlb	0	; select bank0
  4952  0395  00A3               	movwf	EUSART_SetErrorHandler@interruptHandler
  4953  0396  3007               	movlw	high _EUSART_DefaultErrorHandler
  4954  0397  00A4               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  4955  0398  3187  2759  3183   	fcall	_EUSART_SetErrorHandler
  4956  039B                     l3322:
  4957                           
  4958                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  4959  039B  0020               	movlb	0	; select bank0
  4960  039C  01E3               	clrf	_eusartRxLastError	;volatile
  4961  039D                     l3324:
  4962                           
  4963                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  4964  039D  01E9               	clrf	_eusartTxHead	;volatile
  4965  039E                     l3326:
  4966                           
  4967                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  4968  039E  01E8               	clrf	_eusartTxTail	;volatile
  4969  039F                     l3328:
  4970                           
  4971                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  4972  039F  3008               	movlw	8
  4973  03A0  00A5               	movwf	??_EUSART_Initialize
  4974  03A1  0825               	movf	??_EUSART_Initialize,w
  4975  03A2  00E7               	movwf	_eusartTxBufferRemaining	;volatile
  4976                           
  4977                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  4978  03A3  01E6               	clrf	_eusartRxHead	;volatile
  4979                           
  4980                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  4981  03A4  01E5               	clrf	_eusartRxTail	;volatile
  4982                           
  4983                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  4984  03A5  01E4               	clrf	_eusartRxCount	;volatile
  4985  03A6                     l3330:
  4986                           
  4987                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  4988  03A6  0021               	movlb	1	; select bank1
  4989  03A7  1691               	bsf	17,5	;volatile
  4990  03A8                     l295:
  4991  03A8  0008               	return
  4992  03A9                     __end_of_EUSART_Initialize:
  4993                           
  4994                           	psect	text16
  4995  0741                     __ptext16:	
  4996 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  4997 ;; Defined at:
  4998 ;;		line 285 in file "mcc_generated_files/eusart.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;  interruptHan    2    3[BANK0 ] PTR FTN()void 
  5001 ;;		 -> EUSART_Transmit_ISR(1), 
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;		None
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  1    wreg      void 
  5006 ;; Registers used:
  5007 ;;		wreg
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/0
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5013 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5016 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5017 ;;Total ram usage:        2 bytes
  5018 ;; Hardware stack levels used: 1
  5019 ;; Hardware stack levels required when called: 7
  5020 ;; This function calls:
  5021 ;;		Nothing
  5022 ;; This function is called by:
  5023 ;;		_EUSART_Initialize
  5024 ;; This function uses a non-reentrant model
  5025 ;;
  5026                           
  5027                           
  5028                           ;psect for function _EUSART_SetTxInterruptHandler
  5029  0741                     _EUSART_SetTxInterruptHandler:
  5030  0741                     l3062:	
  5031                           ;incstack = 0
  5032                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  5033                           
  5034                           
  5035                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  5036  0741  0020               	movlb	0	; select bank0
  5037  0742  0824               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  5038  0743  00DE               	movwf	_EUSART_TxDefaultInterruptHandler+1
  5039  0744  0823               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  5040  0745  00DD               	movwf	_EUSART_TxDefaultInterruptHandler
  5041  0746                     l367:
  5042  0746  0008               	return
  5043  0747                     __end_of_EUSART_SetTxInterruptHandler:
  5044                           
  5045                           	psect	text17
  5046  0747                     __ptext17:	
  5047 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  5048 ;; Defined at:
  5049 ;;		line 289 in file "mcc_generated_files/eusart.c"
  5050 ;; Parameters:    Size  Location     Type
  5051 ;;  interruptHan    2    3[BANK0 ] PTR FTN()void 
  5052 ;;		 -> EUSART_Receive_ISR(1), 
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;		None
  5055 ;; Return value:  Size  Location     Type
  5056 ;;                  1    wreg      void 
  5057 ;; Registers used:
  5058 ;;		wreg
  5059 ;; Tracked objects:
  5060 ;;		On entry : 0/0
  5061 ;;		On exit  : 0/0
  5062 ;;		Unchanged: 0/0
  5063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5064 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5067 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5068 ;;Total ram usage:        2 bytes
  5069 ;; Hardware stack levels used: 1
  5070 ;; Hardware stack levels required when called: 7
  5071 ;; This function calls:
  5072 ;;		Nothing
  5073 ;; This function is called by:
  5074 ;;		_EUSART_Initialize
  5075 ;; This function uses a non-reentrant model
  5076 ;;
  5077                           
  5078                           
  5079                           ;psect for function _EUSART_SetRxInterruptHandler
  5080  0747                     _EUSART_SetRxInterruptHandler:
  5081  0747                     l3060:	
  5082                           ;incstack = 0
  5083                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  5084                           
  5085                           
  5086                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  5087  0747  0020               	movlb	0	; select bank0
  5088  0748  0824               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  5089  0749  00DC               	movwf	_EUSART_RxDefaultInterruptHandler+1
  5090  074A  0823               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  5091  074B  00DB               	movwf	_EUSART_RxDefaultInterruptHandler
  5092  074C                     l370:
  5093  074C  0008               	return
  5094  074D                     __end_of_EUSART_SetRxInterruptHandler:
  5095                           
  5096                           	psect	text18
  5097  074D                     __ptext18:	
  5098 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  5099 ;; Defined at:
  5100 ;;		line 277 in file "mcc_generated_files/eusart.c"
  5101 ;; Parameters:    Size  Location     Type
  5102 ;;  interruptHan    2    3[BANK0 ] PTR FTN()void 
  5103 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  5104 ;; Auto vars:     Size  Location     Type
  5105 ;;		None
  5106 ;; Return value:  Size  Location     Type
  5107 ;;                  1    wreg      void 
  5108 ;; Registers used:
  5109 ;;		wreg
  5110 ;; Tracked objects:
  5111 ;;		On entry : 0/0
  5112 ;;		On exit  : 0/0
  5113 ;;		Unchanged: 0/0
  5114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5115 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5118 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5119 ;;Total ram usage:        2 bytes
  5120 ;; Hardware stack levels used: 1
  5121 ;; Hardware stack levels required when called: 7
  5122 ;; This function calls:
  5123 ;;		Nothing
  5124 ;; This function is called by:
  5125 ;;		_EUSART_Initialize
  5126 ;; This function uses a non-reentrant model
  5127 ;;
  5128                           
  5129                           
  5130                           ;psect for function _EUSART_SetOverrunErrorHandler
  5131  074D                     _EUSART_SetOverrunErrorHandler:
  5132  074D                     l3066:	
  5133                           ;incstack = 0
  5134                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  5135                           
  5136                           
  5137                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
  5138  074D  0020               	movlb	0	; select bank0
  5139  074E  0824               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  5140  074F  00D8               	movwf	_EUSART_OverrunErrorHandler+1
  5141  0750  0823               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  5142  0751  00D7               	movwf	_EUSART_OverrunErrorHandler
  5143  0752                     l361:
  5144  0752  0008               	return
  5145  0753                     __end_of_EUSART_SetOverrunErrorHandler:
  5146                           
  5147                           	psect	text19
  5148  0753                     __ptext19:	
  5149 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  5150 ;; Defined at:
  5151 ;;		line 273 in file "mcc_generated_files/eusart.c"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;  interruptHan    2    3[BANK0 ] PTR FTN()void 
  5154 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;		None
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  1    wreg      void 
  5159 ;; Registers used:
  5160 ;;		wreg
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5166 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5169 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5170 ;;Total ram usage:        2 bytes
  5171 ;; Hardware stack levels used: 1
  5172 ;; Hardware stack levels required when called: 7
  5173 ;; This function calls:
  5174 ;;		Nothing
  5175 ;; This function is called by:
  5176 ;;		_EUSART_Initialize
  5177 ;; This function uses a non-reentrant model
  5178 ;;
  5179                           
  5180                           
  5181                           ;psect for function _EUSART_SetFramingErrorHandler
  5182  0753                     _EUSART_SetFramingErrorHandler:
  5183  0753                     l3064:	
  5184                           ;incstack = 0
  5185                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  5186                           
  5187                           
  5188                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
  5189  0753  0020               	movlb	0	; select bank0
  5190  0754  0824               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  5191  0755  00DA               	movwf	_EUSART_FramingErrorHandler+1
  5192  0756  0823               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  5193  0757  00D9               	movwf	_EUSART_FramingErrorHandler
  5194  0758                     l358:
  5195  0758  0008               	return
  5196  0759                     __end_of_EUSART_SetFramingErrorHandler:
  5197                           
  5198                           	psect	text20
  5199  0759                     __ptext20:	
  5200 ;; *************** function _EUSART_SetErrorHandler *****************
  5201 ;; Defined at:
  5202 ;;		line 281 in file "mcc_generated_files/eusart.c"
  5203 ;; Parameters:    Size  Location     Type
  5204 ;;  interruptHan    2    3[BANK0 ] PTR FTN()void 
  5205 ;;		 -> EUSART_DefaultErrorHandler(1), 
  5206 ;; Auto vars:     Size  Location     Type
  5207 ;;		None
  5208 ;; Return value:  Size  Location     Type
  5209 ;;                  1    wreg      void 
  5210 ;; Registers used:
  5211 ;;		wreg
  5212 ;; Tracked objects:
  5213 ;;		On entry : 0/0
  5214 ;;		On exit  : 0/0
  5215 ;;		Unchanged: 0/0
  5216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5217 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5220 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5221 ;;Total ram usage:        2 bytes
  5222 ;; Hardware stack levels used: 1
  5223 ;; Hardware stack levels required when called: 7
  5224 ;; This function calls:
  5225 ;;		Nothing
  5226 ;; This function is called by:
  5227 ;;		_EUSART_Initialize
  5228 ;; This function uses a non-reentrant model
  5229 ;;
  5230                           
  5231                           
  5232                           ;psect for function _EUSART_SetErrorHandler
  5233  0759                     _EUSART_SetErrorHandler:
  5234  0759                     l3068:	
  5235                           ;incstack = 0
  5236                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  5237                           
  5238                           
  5239                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
  5240  0759  0020               	movlb	0	; select bank0
  5241  075A  0824               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  5242  075B  00D6               	movwf	_EUSART_ErrorHandler+1
  5243  075C  0823               	movf	EUSART_SetErrorHandler@interruptHandler,w
  5244  075D  00D5               	movwf	_EUSART_ErrorHandler
  5245  075E                     l364:
  5246  075E  0008               	return
  5247  075F                     __end_of_EUSART_SetErrorHandler:
  5248                           
  5249                           	psect	text21
  5250  071D                     __ptext21:	
  5251 ;; *************** function _ADC_Initialize *****************
  5252 ;; Defined at:
  5253 ;;		line 67 in file "mcc_generated_files/adc.c"
  5254 ;; Parameters:    Size  Location     Type
  5255 ;;		None
  5256 ;; Auto vars:     Size  Location     Type
  5257 ;;		None
  5258 ;; Return value:  Size  Location     Type
  5259 ;;                  1    wreg      void 
  5260 ;; Registers used:
  5261 ;;		wreg, status,2
  5262 ;; Tracked objects:
  5263 ;;		On entry : 0/0
  5264 ;;		On exit  : 0/0
  5265 ;;		Unchanged: 0/0
  5266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5271 ;;Total ram usage:        0 bytes
  5272 ;; Hardware stack levels used: 1
  5273 ;; Hardware stack levels required when called: 7
  5274 ;; This function calls:
  5275 ;;		Nothing
  5276 ;; This function is called by:
  5277 ;;		_SYSTEM_Initialize
  5278 ;; This function uses a non-reentrant model
  5279 ;;
  5280                           
  5281                           
  5282                           ;psect for function _ADC_Initialize
  5283  071D                     _ADC_Initialize:
  5284  071D                     l3294:	
  5285                           ;incstack = 0
  5286                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  5287                           
  5288                           
  5289                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xF0;
  5290  071D  30F0               	movlw	240
  5291  071E  0021               	movlb	1	; select bank1
  5292  071F  009E               	movwf	30	;volatile
  5293  0720                     l3296:
  5294                           
  5295                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  5296  0720  019B               	clrf	27	;volatile
  5297  0721                     l3298:
  5298                           
  5299                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  5300  0721  019C               	clrf	28	;volatile
  5301                           
  5302                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  5303  0722  3001               	movlw	1
  5304  0723  009D               	movwf	29	;volatile
  5305  0724                     l199:
  5306  0724  0008               	return
  5307  0725                     __end_of_ADC_Initialize:
  5308                           
  5309                           	psect	text22
  5310  0503                     __ptext22:	
  5311 ;; *************** function _EUSART_Read *****************
  5312 ;; Defined at:
  5313 ;;		line 151 in file "mcc_generated_files/eusart.c"
  5314 ;; Parameters:    Size  Location     Type
  5315 ;;		None
  5316 ;; Auto vars:     Size  Location     Type
  5317 ;;  readValue       1    4[BANK0 ] unsigned char 
  5318 ;; Return value:  Size  Location     Type
  5319 ;;                  1    wreg      unsigned char 
  5320 ;; Registers used:
  5321 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5322 ;; Tracked objects:
  5323 ;;		On entry : 0/0
  5324 ;;		On exit  : 0/0
  5325 ;;		Unchanged: 0/0
  5326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5328 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5329 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5330 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5331 ;;Total ram usage:        2 bytes
  5332 ;; Hardware stack levels used: 1
  5333 ;; Hardware stack levels required when called: 7
  5334 ;; This function calls:
  5335 ;;		Nothing
  5336 ;; This function is called by:
  5337 ;;		_main
  5338 ;;		_getch
  5339 ;; This function uses a non-reentrant model
  5340 ;;
  5341                           
  5342                           
  5343                           ;psect for function _EUSART_Read
  5344  0503                     _EUSART_Read:
  5345  0503                     l3354:	
  5346                           ;incstack = 0
  5347                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  5348                           
  5349  0503                     l3356:	
  5350                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  5351                           
  5352                           
  5353                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  5354  0503  0020               	movlb	0	; select bank0
  5355  0504  0864               	movf	_eusartRxCount,w	;volatile
  5356  0505  1903               	btfsc	3,2
  5357  0506  2D08               	goto	u881
  5358  0507  2D09               	goto	u880
  5359  0508                     u881:
  5360  0508  2D03               	goto	l3356
  5361  0509                     u880:
  5362  0509                     l3358:
  5363                           
  5364                           ;mcc_generated_files/eusart.c: 159:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
  5365  0509  0865               	movf	_eusartRxTail,w	;volatile
  5366  050A  3EBD               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5367  050B  0086               	movwf	6
  5368  050C  0187               	clrf	7
  5369  050D  0801               	movf	1,w
  5370  050E  00A3               	movwf	??_EUSART_Read
  5371  050F  0823               	movf	??_EUSART_Read,w
  5372  0510  00E3               	movwf	_eusartRxLastError	;volatile
  5373                           
  5374                           ;mcc_generated_files/eusart.c: 161:     readValue = eusartRxBuffer[eusartRxTail++];
  5375  0511  0865               	movf	_eusartRxTail,w
  5376  0512  3EC5               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  5377  0513  0086               	movwf	6
  5378  0514  0187               	clrf	7
  5379  0515  0801               	movf	1,w
  5380  0516  00A3               	movwf	??_EUSART_Read
  5381  0517  0823               	movf	??_EUSART_Read,w
  5382  0518  00A4               	movwf	EUSART_Read@readValue
  5383  0519                     l3360:
  5384  0519  3001               	movlw	1
  5385  051A  00A3               	movwf	??_EUSART_Read
  5386  051B  0823               	movf	??_EUSART_Read,w
  5387  051C  07E5               	addwf	_eusartRxTail,f	;volatile
  5388  051D                     l3362:
  5389                           
  5390                           ;mcc_generated_files/eusart.c: 162:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
  5391  051D  3008               	movlw	8
  5392  051E  0265               	subwf	_eusartRxTail,w	;volatile
  5393  051F  1C03               	skipc
  5394  0520  2D22               	goto	u891
  5395  0521  2D23               	goto	u890
  5396  0522                     u891:
  5397  0522  2D24               	goto	l3366
  5398  0523                     u890:
  5399  0523                     l3364:
  5400                           
  5401                           ;mcc_generated_files/eusart.c: 163:     {;mcc_generated_files/eusart.c: 164:         eus
      +                          artRxTail = 0;
  5402  0523  01E5               	clrf	_eusartRxTail	;volatile
  5403  0524                     l3366:
  5404                           
  5405                           ;mcc_generated_files/eusart.c: 166:     PIE1bits.RCIE = 0;
  5406  0524  0021               	movlb	1	; select bank1
  5407  0525  1291               	bcf	17,5	;volatile
  5408  0526                     l3368:
  5409                           
  5410                           ;mcc_generated_files/eusart.c: 167:     eusartRxCount--;
  5411  0526  3001               	movlw	1
  5412  0527  0020               	movlb	0	; select bank0
  5413  0528  02E4               	subwf	_eusartRxCount,f	;volatile
  5414  0529                     l3370:
  5415                           
  5416                           ;mcc_generated_files/eusart.c: 168:     PIE1bits.RCIE = 1;
  5417  0529  0021               	movlb	1	; select bank1
  5418  052A  1691               	bsf	17,5	;volatile
  5419  052B                     l3372:
  5420                           
  5421                           ;mcc_generated_files/eusart.c: 170:     return readValue;
  5422  052B  0020               	movlb	0	; select bank0
  5423  052C  0824               	movf	EUSART_Read@readValue,w
  5424  052D                     l314:
  5425  052D  0008               	return
  5426  052E                     __end_of_EUSART_Read:
  5427                           
  5428                           	psect	intentry
  5429  0004                     __pintentry:	
  5430 ;; *************** function _INTERRUPT_InterruptManager *****************
  5431 ;; Defined at:
  5432 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5433 ;; Parameters:    Size  Location     Type
  5434 ;;		None
  5435 ;; Auto vars:     Size  Location     Type
  5436 ;;		None
  5437 ;; Return value:  Size  Location     Type
  5438 ;;                  1    wreg      void 
  5439 ;; Registers used:
  5440 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5441 ;; Tracked objects:
  5442 ;;		On entry : 0/0
  5443 ;;		On exit  : 0/0
  5444 ;;		Unchanged: 0/0
  5445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5450 ;;Total ram usage:        0 bytes
  5451 ;; Hardware stack levels used: 1
  5452 ;; Hardware stack levels required when called: 6
  5453 ;; This function calls:
  5454 ;;		Absolute function
  5455 ;;		_EUSART_Receive_ISR
  5456 ;;		_EUSART_Transmit_ISR
  5457 ;;		_I2C_MasterIsr
  5458 ;; This function is called by:
  5459 ;;		Interrupt level 1
  5460 ;; This function uses a non-reentrant model
  5461 ;;
  5462                           
  5463  0004                     _INTERRUPT_InterruptManager:
  5464                           
  5465                           ;incstack = 0
  5466  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5467                           
  5468                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5469  0005  3180               	pagesel	$
  5470  0006                     i1l3692:
  5471                           
  5472                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  5473  0006  1F0B               	btfss	11,6	;volatile
  5474  0007  2809               	goto	u113_21
  5475  0008  280A               	goto	u113_20
  5476  0009                     u113_21:
  5477  0009  2845               	goto	i1l401
  5478  000A                     u113_20:
  5479  000A                     i1l3694:
  5480                           
  5481                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  5482  000A  0021               	movlb	1	; select bank1
  5483  000B  1E11               	btfss	17,4	;volatile
  5484  000C  280E               	goto	u114_21
  5485  000D  280F               	goto	u114_20
  5486  000E                     u114_21:
  5487  000E  281A               	goto	i1l392
  5488  000F                     u114_20:
  5489  000F                     i1l3696:
  5490  000F  0020               	movlb	0	; select bank0
  5491  0010  1E11               	btfss	17,4	;volatile
  5492  0011  2813               	goto	u115_21
  5493  0012  2814               	goto	u115_20
  5494  0013                     u115_21:
  5495  0013  281A               	goto	i1l392
  5496  0014                     u115_20:
  5497  0014                     i1l3698:
  5498                           
  5499                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
  5500  0014  085E               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  5501  0015  008A               	movwf	10
  5502  0016  085D               	movf	_EUSART_TxDefaultInterruptHandler,w
  5503  0017  000A               	callw
  5504  0018  3180               	pagesel	$
  5505                           
  5506                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  5507  0019  2845               	goto	i1l401
  5508  001A                     i1l392:	
  5509                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  5510                           
  5511  001A  0021               	movlb	1	; select bank1
  5512  001B  1E91               	btfss	17,5	;volatile
  5513  001C  281E               	goto	u116_21
  5514  001D  281F               	goto	u116_20
  5515  001E                     u116_21:
  5516  001E  282A               	goto	i1l394
  5517  001F                     u116_20:
  5518  001F                     i1l3700:
  5519  001F  0020               	movlb	0	; select bank0
  5520  0020  1E91               	btfss	17,5	;volatile
  5521  0021  2823               	goto	u117_21
  5522  0022  2824               	goto	u117_20
  5523  0023                     u117_21:
  5524  0023  282A               	goto	i1l394
  5525  0024                     u117_20:
  5526  0024                     i1l3702:
  5527                           
  5528                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
  5529  0024  085C               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  5530  0025  008A               	movwf	10
  5531  0026  085B               	movf	_EUSART_RxDefaultInterruptHandler,w
  5532  0027  000A               	callw
  5533  0028  3180               	pagesel	$
  5534                           
  5535                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  5536  0029  2845               	goto	i1l401
  5537  002A                     i1l394:	
  5538                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE2bits.BCLIE == 1 && PIR
      +                          2bits.BCLIF == 1)
  5539                           
  5540  002A  0021               	movlb	1	; select bank1
  5541  002B  1D92               	btfss	18,3	;volatile
  5542  002C  282E               	goto	u118_21
  5543  002D  282F               	goto	u118_20
  5544  002E                     u118_21:
  5545  002E  283A               	goto	i1l396
  5546  002F                     u118_20:
  5547  002F                     i1l3704:
  5548  002F  0020               	movlb	0	; select bank0
  5549  0030  1D92               	btfss	18,3	;volatile
  5550  0031  2833               	goto	u119_21
  5551  0032  2834               	goto	u119_20
  5552  0033                     u119_21:
  5553  0033  283A               	goto	i1l396
  5554  0034                     u119_20:
  5555  0034                     i1l3706:
  5556                           
  5557                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             MSSP_InterruptHandler();
  5558  0034  0862               	movf	_MSSP_InterruptHandler+1,w
  5559  0035  008A               	movwf	10
  5560  0036  0861               	movf	_MSSP_InterruptHandler,w
  5561  0037  000A               	callw
  5562  0038  3180               	pagesel	$
  5563                           
  5564                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  5565  0039  2845               	goto	i1l401
  5566  003A                     i1l396:	
  5567                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.SSPIE == 1 && PIR
      +                          1bits.SSPIF == 1)
  5568                           
  5569  003A  0021               	movlb	1	; select bank1
  5570  003B  1D91               	btfss	17,3	;volatile
  5571  003C  283E               	goto	u120_21
  5572  003D  283F               	goto	u120_20
  5573  003E                     u120_21:
  5574  003E  2845               	goto	i1l395
  5575  003F                     u120_20:
  5576  003F                     i1l3708:
  5577  003F  0020               	movlb	0	; select bank0
  5578  0040  1D91               	btfss	17,3	;volatile
  5579  0041  2843               	goto	u121_21
  5580  0042  2844               	goto	u121_20
  5581  0043                     u121_21:
  5582  0043  2845               	goto	i1l395
  5583  0044                     u121_20:
  5584  0044  2834               	goto	i1l3706
  5585  0045                     i1l395:
  5586  0045                     i1l401:
  5587  0045  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5588  0046  0009               	retfie
  5589  0047                     __end_of_INTERRUPT_InterruptManager:
  5590                           
  5591                           	psect	text24
  5592  079B                     __ptext24:	
  5593 ;; *************** function _I2C_MasterIsr *****************
  5594 ;; Defined at:
  5595 ;;		line 318 in file "mcc_generated_files/i2c_master.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;		None
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;		None
  5600 ;; Return value:  Size  Location     Type
  5601 ;;                  1    wreg      void 
  5602 ;; Registers used:
  5603 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5604 ;; Tracked objects:
  5605 ;;		On entry : 0/0
  5606 ;;		On exit  : 0/0
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5613 ;;Total ram usage:        0 bytes
  5614 ;; Hardware stack levels used: 1
  5615 ;; Hardware stack levels required when called: 5
  5616 ;; This function calls:
  5617 ;;		_I2C_MasterFsm
  5618 ;; This function is called by:
  5619 ;;		_I2C_Open
  5620 ;;		_INTERRUPT_InterruptManager
  5621 ;; This function uses a non-reentrant model
  5622 ;;
  5623                           
  5624                           
  5625                           ;psect for function _I2C_MasterIsr
  5626  079B                     _I2C_MasterIsr:
  5627  079B                     i1l3426:	
  5628                           ;incstack = 0
  5629                           ; Regs used in _I2C_MasterIsr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5630                           
  5631                           
  5632                           ;mcc_generated_files/i2c_master.c: 320:     I2C_MasterFsm();
  5633  079B  3184  2453  3187   	fcall	_I2C_MasterFsm
  5634  079E                     i1l563:
  5635  079E  0008               	return
  5636  079F                     __end_of_I2C_MasterIsr:
  5637                           
  5638                           	psect	text25
  5639  0453                     __ptext25:	
  5640 ;; *************** function _I2C_MasterFsm *****************
  5641 ;; Defined at:
  5642 ;;		line 323 in file "mcc_generated_files/i2c_master.c"
  5643 ;; Parameters:    Size  Location     Type
  5644 ;;		None
  5645 ;; Auto vars:     Size  Location     Type
  5646 ;;		None
  5647 ;; Return value:  Size  Location     Type
  5648 ;;                  1    wreg      void 
  5649 ;; Registers used:
  5650 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5651 ;; Tracked objects:
  5652 ;;		On entry : 0/0
  5653 ;;		On exit  : 0/0
  5654 ;;		Unchanged: 0/0
  5655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5658 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5659 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5660 ;;Total ram usage:        3 bytes
  5661 ;; Hardware stack levels used: 1
  5662 ;; Hardware stack levels required when called: 4
  5663 ;; This function calls:
  5664 ;;		_I2C_DO_ADDRESS_NACK
  5665 ;;		_I2C_DO_IDLE
  5666 ;;		_I2C_DO_RCEN
  5667 ;;		_I2C_DO_RESET
  5668 ;;		_I2C_DO_RX
  5669 ;;		_I2C_DO_RX_ACK
  5670 ;;		_I2C_DO_RX_NACK_RESTART
  5671 ;;		_I2C_DO_RX_NACK_STOP
  5672 ;;		_I2C_DO_SEND_ADR_READ
  5673 ;;		_I2C_DO_SEND_ADR_WRITE
  5674 ;;		_I2C_DO_SEND_RESTART
  5675 ;;		_I2C_DO_SEND_RESTART_READ
  5676 ;;		_I2C_DO_SEND_RESTART_WRITE
  5677 ;;		_I2C_DO_SEND_STOP
  5678 ;;		_I2C_DO_TX
  5679 ;;		_I2C_DO_TX_EMPTY
  5680 ;;		_I2C_MasterClearIrq
  5681 ;;		_I2C_MasterIsNack
  5682 ;; This function is called by:
  5683 ;;		_I2C_MasterIsr
  5684 ;; This function uses a non-reentrant model
  5685 ;;
  5686                           
  5687                           
  5688                           ;psect for function _I2C_MasterFsm
  5689  0453                     _I2C_MasterFsm:
  5690  0453                     i1l3336:	
  5691                           ;incstack = 0
  5692                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5693                           
  5694                           
  5695                           ;mcc_generated_files/i2c_master.c: 325:     I2C_MasterClearIrq();
  5696  0453  3187  27AF  3184   	fcall	_I2C_MasterClearIrq
  5697  0456                     i1l3338:
  5698                           
  5699                           ;mcc_generated_files/i2c_master.c: 327:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  5700  0456  0021               	movlb	1	; select bank1
  5701  0457  1C3C               	btfss	(_I2C_Status^(0+128)+28),0
  5702  0458  2C5A               	goto	u86_21
  5703  0459  2C5B               	goto	u86_20
  5704  045A                     u86_21:
  5705  045A  2C69               	goto	i1l3344
  5706  045B                     u86_20:
  5707  045B                     i1l3340:
  5708  045B  3187  275F  3184   	fcall	_I2C_MasterIsNack
  5709  045E  3A00               	xorlw	0
  5710  045F  1903               	skipnz
  5711  0460  2C62               	goto	u87_21
  5712  0461  2C63               	goto	u87_20
  5713  0462                     u87_21:
  5714  0462  2C69               	goto	i1l3344
  5715  0463                     u87_20:
  5716  0463                     i1l3342:
  5717                           
  5718                           ;mcc_generated_files/i2c_master.c: 328:     {;mcc_generated_files/i2c_master.c: 329:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  5719  0463  300F               	movlw	15
  5720  0464  0020               	movlb	0	; select bank0
  5721  0465  00A0               	movwf	??_I2C_MasterFsm
  5722  0466  0820               	movf	??_I2C_MasterFsm,w
  5723  0467  0021               	movlb	1	; select bank1
  5724  0468  00BA               	movwf	(_I2C_Status^(0+128)+26)
  5725  0469                     i1l3344:
  5726                           
  5727                           ;mcc_generated_files/i2c_master.c: 331:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
  5728  0469  0021               	movlb	1	; select bank1
  5729  046A  083A               	movf	(_I2C_Status^(0+128)+26),w
  5730  046B  0020               	movlb	0	; select bank0
  5731  046C  00A0               	movwf	??_I2C_MasterFsm
  5732  046D  01A1               	clrf	??_I2C_MasterFsm+1
  5733  046E  35A0               	lslf	??_I2C_MasterFsm,f
  5734  046F  0DA1               	rlf	??_I2C_MasterFsm+1,f
  5735  0470  30AD               	movlw	low (_i2c_fsmStateTable| (0+32768))
  5736  0471  0720               	addwf	??_I2C_MasterFsm,w
  5737  0472  0084               	movwf	4
  5738  0473  3084               	movlw	high (_i2c_fsmStateTable| (0+32768))
  5739  0474  3D21               	addwfc	??_I2C_MasterFsm+1,w
  5740  0475  0085               	movwf	5
  5741  0476  3F01               	moviw [1]fsr0
  5742  0477  008A               	movwf	10
  5743  0478  3F00               	moviw [0]fsr0
  5744  0479  000A               	callw
  5745  047A  3184               	pagesel	$
  5746  047B  0020               	movlb	0	; select bank0
  5747  047C  00A2               	movwf	??_I2C_MasterFsm+2
  5748  047D  0822               	movf	??_I2C_MasterFsm+2,w
  5749  047E  0021               	movlb	1	; select bank1
  5750  047F  00BA               	movwf	(_I2C_Status^(0+128)+26)
  5751  0480                     i1l567:
  5752  0480  0008               	return
  5753  0481                     __end_of_I2C_MasterFsm:
  5754                           
  5755                           	psect	text26
  5756  07AF                     __ptext26:	
  5757 ;; *************** function _I2C_MasterClearIrq *****************
  5758 ;; Defined at:
  5759 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
  5760 ;; Parameters:    Size  Location     Type
  5761 ;;		None
  5762 ;; Auto vars:     Size  Location     Type
  5763 ;;		None
  5764 ;; Return value:  Size  Location     Type
  5765 ;;                  1    wreg      void 
  5766 ;; Registers used:
  5767 ;;		None
  5768 ;; Tracked objects:
  5769 ;;		On entry : 0/0
  5770 ;;		On exit  : 0/0
  5771 ;;		Unchanged: 0/0
  5772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5777 ;;Total ram usage:        0 bytes
  5778 ;; Hardware stack levels used: 1
  5779 ;; This function calls:
  5780 ;;		Nothing
  5781 ;; This function is called by:
  5782 ;;		_I2C_MasterFsm
  5783 ;;		_I2C_Open
  5784 ;;		_I2C_Close
  5785 ;; This function uses a non-reentrant model
  5786 ;;
  5787                           
  5788                           
  5789                           ;psect for function _I2C_MasterClearIrq
  5790  07AF                     _I2C_MasterClearIrq:
  5791  07AF                     i1l3080:	
  5792                           ;incstack = 0
  5793                           ; Regs used in _I2C_MasterClearIrq: []
  5794                           
  5795                           
  5796                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
  5797  07AF  0020               	movlb	0	; select bank0
  5798  07B0  1191               	bcf	17,3	;volatile
  5799  07B1                     i1l730:
  5800  07B1  0008               	return
  5801  07B2                     __end_of_I2C_MasterClearIrq:
  5802                           
  5803                           	psect	text27
  5804  0481                     __ptext27:	
  5805 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  5806 ;; Defined at:
  5807 ;;		line 501 in file "mcc_generated_files/i2c_master.c"
  5808 ;; Parameters:    Size  Location     Type
  5809 ;;		None
  5810 ;; Auto vars:     Size  Location     Type
  5811 ;;		None
  5812 ;; Return value:  Size  Location     Type
  5813 ;;                  1    wreg      enum E3338
  5814 ;; Registers used:
  5815 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5816 ;; Tracked objects:
  5817 ;;		On entry : 0/0
  5818 ;;		On exit  : 0/0
  5819 ;;		Unchanged: 0/0
  5820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5823 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5824 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5825 ;;Total ram usage:        3 bytes
  5826 ;; Hardware stack levels used: 1
  5827 ;; Hardware stack levels required when called: 3
  5828 ;; This function calls:
  5829 ;;		Absolute function
  5830 ;;		_I2C_CallbackReturnReset
  5831 ;;		_I2C_CallbackReturnStop
  5832 ;;		_I2C_DO_SEND_RESTART
  5833 ;;		_I2C_DO_SEND_STOP
  5834 ;;		_rd1RegCompleteHandler
  5835 ;;		_rd2RegCompleteHandler
  5836 ;;		_rdBlkRegCompleteHandler
  5837 ;;		_wr1RegCompleteHandler
  5838 ;;		_wr2RegCompleteHandler
  5839 ;; This function is called by:
  5840 ;;		_I2C_MasterFsm
  5841 ;; This function uses a non-reentrant model
  5842 ;;
  5843                           
  5844                           
  5845                           ;psect for function _I2C_DO_ADDRESS_NACK
  5846  0481                     _I2C_DO_ADDRESS_NACK:
  5847  0481                     i1l3220:	
  5848                           ;incstack = 0
  5849                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5850                           
  5851                           
  5852                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.addressNackCheck = 0;
  5853  0481  0021               	movlb	1	; select bank1
  5854  0482  103C               	bcf	(_I2C_Status^(0+128)+28),0
  5855  0483                     i1l3222:
  5856                           
  5857                           ;mcc_generated_files/i2c_master.c: 504:     I2C_Status.error = I2C_FAIL;
  5858  0483  3002               	movlw	2
  5859  0484  00FA               	movwf	??_I2C_DO_ADDRESS_NACK
  5860  0485  087A               	movf	??_I2C_DO_ADDRESS_NACK,w
  5861  0486  00BB               	movwf	(_I2C_Status^(0+128)+27)
  5862                           
  5863                           ;mcc_generated_files/i2c_master.c: 505:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  5864  0487  2C90               	goto	i1l3234
  5865  0488                     i1l3224:
  5866                           
  5867                           ;mcc_generated_files/i2c_master.c: 509:             return I2C_DO_SEND_RESTART();
  5868  0488  3187  277E  3184   	fcall	_I2C_DO_SEND_RESTART
  5869  048B  2CAC               	goto	i1l658
  5870  048C                     i1l3228:
  5871                           
  5872                           ;mcc_generated_files/i2c_master.c: 511:             return I2C_DO_SEND_STOP();
  5873  048C  3187  2779  3184   	fcall	_I2C_DO_SEND_STOP
  5874  048F  2CAC               	goto	i1l658
  5875  0490                     i1l3234:
  5876  0490  082E               	movf	(low ((_I2C_Status| 0+14)))^(0+128),w
  5877  0491  00FA               	movwf	??_I2C_DO_ADDRESS_NACK
  5878  0492  087A               	movf	??_I2C_DO_ADDRESS_NACK,w
  5879  0493  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  5880  0494  3004               	movlw	4
  5881  0495  3EA0               	addlw	(low (_I2C_Status| 0))& (0+255)
  5882  0496  0086               	movwf	6
  5883  0497  0187               	clrf	7
  5884  0498  3F41               	moviw [1]fsr1
  5885  0499  008A               	movwf	10
  5886  049A  3F40               	moviw [0]fsr1
  5887  049B  000A               	callw
  5888  049C  3184               	pagesel	$
  5889  049D  00FB               	movwf	??_I2C_DO_ADDRESS_NACK+1
  5890  049E  01FC               	clrf	??_I2C_DO_ADDRESS_NACK+2
  5891                           
  5892                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5893                           ; Switch size 1, requested type "simple"
  5894                           ; Number of cases is 1, Range of values is 0 to 0
  5895                           ; switch strategies available:
  5896                           ; Name         Instructions Cycles
  5897                           ; simple_byte            4     3 (average)
  5898                           ; direct_byte            8     6 (fixed)
  5899                           ; jumptable            260     6 (fixed)
  5900                           ;	Chosen strategy is simple_byte
  5901  049F  087C               	movf	??_I2C_DO_ADDRESS_NACK+2,w
  5902  04A0  3A00               	xorlw	0	; case 0
  5903  04A1  1903               	skipnz
  5904  04A2  2CA4               	goto	i1l3962
  5905  04A3  2C8C               	goto	i1l3228
  5906  04A4                     i1l3962:
  5907                           
  5908                           ; Switch size 1, requested type "simple"
  5909                           ; Number of cases is 2, Range of values is 2 to 3
  5910                           ; switch strategies available:
  5911                           ; Name         Instructions Cycles
  5912                           ; simple_byte            7     4 (average)
  5913                           ; direct_byte           13     9 (fixed)
  5914                           ; jumptable            263     9 (fixed)
  5915                           ;	Chosen strategy is simple_byte
  5916  04A4  087B               	movf	??_I2C_DO_ADDRESS_NACK+1,w
  5917  04A5  3A02               	xorlw	2	; case 2
  5918  04A6  1903               	skipnz
  5919  04A7  2C88               	goto	i1l3224
  5920  04A8  3A01               	xorlw	1	; case 3
  5921  04A9  1903               	skipnz
  5922  04AA  2C88               	goto	i1l3224
  5923  04AB  2C8C               	goto	i1l3228
  5924  04AC                     i1l658:
  5925  04AC  0008               	return
  5926  04AD                     __end_of_I2C_DO_ADDRESS_NACK:
  5927                           
  5928                           	psect	text28
  5929  0765                     __ptext28:	
  5930 ;; *************** function _I2C_DO_RESET *****************
  5931 ;; Defined at:
  5932 ;;		line 495 in file "mcc_generated_files/i2c_master.c"
  5933 ;; Parameters:    Size  Location     Type
  5934 ;;		None
  5935 ;; Auto vars:     Size  Location     Type
  5936 ;;		None
  5937 ;; Return value:  Size  Location     Type
  5938 ;;                  1    wreg      enum E3338
  5939 ;; Registers used:
  5940 ;;		wreg, status,2
  5941 ;; Tracked objects:
  5942 ;;		On entry : 0/0
  5943 ;;		On exit  : 0/0
  5944 ;;		Unchanged: 0/0
  5945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5950 ;;Total ram usage:        0 bytes
  5951 ;; Hardware stack levels used: 1
  5952 ;; This function calls:
  5953 ;;		Nothing
  5954 ;; This function is called by:
  5955 ;;		_I2C_MasterFsm
  5956 ;; This function uses a non-reentrant model
  5957 ;;
  5958                           
  5959                           
  5960                           ;psect for function _I2C_DO_RESET
  5961  0765                     _I2C_DO_RESET:
  5962  0765                     i1l3212:	
  5963                           ;incstack = 0
  5964                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
  5965                           
  5966                           
  5967                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.busy = 0;
  5968  0765  0021               	movlb	1	; select bank1
  5969  0766  10BC               	bcf	(_I2C_Status^(0+128)+28),1
  5970  0767                     i1l3214:
  5971                           
  5972                           ;mcc_generated_files/i2c_master.c: 498:     I2C_Status.error = I2C_NOERR;
  5973  0767  01BB               	clrf	(_I2C_Status^(0+128)+27)
  5974  0768                     i1l3216:
  5975                           
  5976                           ;mcc_generated_files/i2c_master.c: 499:     return I2C_RESET;
  5977  0768  300E               	movlw	14
  5978  0769                     i1l652:
  5979  0769  0008               	return
  5980  076A                     __end_of_I2C_DO_RESET:
  5981                           
  5982                           	psect	text29
  5983  076A                     __ptext29:	
  5984 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  5985 ;; Defined at:
  5986 ;;		line 489 in file "mcc_generated_files/i2c_master.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;		None
  5989 ;; Auto vars:     Size  Location     Type
  5990 ;;		None
  5991 ;; Return value:  Size  Location     Type
  5992 ;;                  1    wreg      enum E3338
  5993 ;; Registers used:
  5994 ;;		wreg, status,2, status,0, pclath, cstack
  5995 ;; Tracked objects:
  5996 ;;		On entry : 0/0
  5997 ;;		On exit  : 0/0
  5998 ;;		Unchanged: 0/0
  5999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6004 ;;Total ram usage:        0 bytes
  6005 ;; Hardware stack levels used: 1
  6006 ;; Hardware stack levels required when called: 1
  6007 ;; This function calls:
  6008 ;;		_I2C_MasterSendNack
  6009 ;; This function is called by:
  6010 ;;		_I2C_DO_RX
  6011 ;;		_I2C_MasterFsm
  6012 ;; This function uses a non-reentrant model
  6013 ;;
  6014                           
  6015                           
  6016                           ;psect for function _I2C_DO_RX_NACK_RESTART
  6017  076A                     _I2C_DO_RX_NACK_RESTART:
  6018  076A                     i1l2998:	
  6019                           ;incstack = 0
  6020                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  6021                           
  6022                           
  6023                           ;mcc_generated_files/i2c_master.c: 491:     I2C_MasterSendNack();
  6024  076A  3187  27A3  3187   	fcall	_I2C_MasterSendNack
  6025  076D                     i1l3000:
  6026                           
  6027                           ;mcc_generated_files/i2c_master.c: 492:     return I2C_SEND_RESTART;
  6028  076D  3009               	movlw	9
  6029  076E                     i1l649:
  6030  076E  0008               	return
  6031  076F                     __end_of_I2C_DO_RX_NACK_RESTART:
  6032                           
  6033                           	psect	text30
  6034  076F                     __ptext30:	
  6035 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  6036 ;; Defined at:
  6037 ;;		line 483 in file "mcc_generated_files/i2c_master.c"
  6038 ;; Parameters:    Size  Location     Type
  6039 ;;		None
  6040 ;; Auto vars:     Size  Location     Type
  6041 ;;		None
  6042 ;; Return value:  Size  Location     Type
  6043 ;;                  1    wreg      enum E3338
  6044 ;; Registers used:
  6045 ;;		wreg, status,2, status,0, pclath, cstack
  6046 ;; Tracked objects:
  6047 ;;		On entry : 0/0
  6048 ;;		On exit  : 0/0
  6049 ;;		Unchanged: 0/0
  6050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6055 ;;Total ram usage:        0 bytes
  6056 ;; Hardware stack levels used: 1
  6057 ;; Hardware stack levels required when called: 1
  6058 ;; This function calls:
  6059 ;;		_I2C_MasterSendNack
  6060 ;; This function is called by:
  6061 ;;		_I2C_DO_RX
  6062 ;;		_I2C_MasterFsm
  6063 ;; This function uses a non-reentrant model
  6064 ;;
  6065                           
  6066                           
  6067                           ;psect for function _I2C_DO_RX_NACK_STOP
  6068  076F                     _I2C_DO_RX_NACK_STOP:
  6069  076F                     i1l3004:	
  6070                           ;incstack = 0
  6071                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  6072                           
  6073                           
  6074                           ;mcc_generated_files/i2c_master.c: 485:     I2C_MasterSendNack();
  6075  076F  3187  27A3  3187   	fcall	_I2C_MasterSendNack
  6076  0772                     i1l3006:
  6077                           
  6078                           ;mcc_generated_files/i2c_master.c: 486:     return I2C_SEND_STOP;
  6079  0772  300A               	movlw	10
  6080  0773                     i1l646:
  6081  0773  0008               	return
  6082  0774                     __end_of_I2C_DO_RX_NACK_STOP:
  6083                           
  6084                           	psect	text31
  6085  0774                     __ptext31:	
  6086 ;; *************** function _I2C_DO_RX_ACK *****************
  6087 ;; Defined at:
  6088 ;;		line 476 in file "mcc_generated_files/i2c_master.c"
  6089 ;; Parameters:    Size  Location     Type
  6090 ;;		None
  6091 ;; Auto vars:     Size  Location     Type
  6092 ;;		None
  6093 ;; Return value:  Size  Location     Type
  6094 ;;                  1    wreg      enum E3338
  6095 ;; Registers used:
  6096 ;;		wreg, status,2, status,0, pclath, cstack
  6097 ;; Tracked objects:
  6098 ;;		On entry : 0/0
  6099 ;;		On exit  : 0/0
  6100 ;;		Unchanged: 0/0
  6101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6106 ;;Total ram usage:        0 bytes
  6107 ;; Hardware stack levels used: 1
  6108 ;; Hardware stack levels required when called: 1
  6109 ;; This function calls:
  6110 ;;		_I2C_MasterSendAck
  6111 ;; This function is called by:
  6112 ;;		_I2C_MasterFsm
  6113 ;; This function uses a non-reentrant model
  6114 ;;
  6115                           
  6116                           
  6117                           ;psect for function _I2C_DO_RX_ACK
  6118  0774                     _I2C_DO_RX_ACK:
  6119  0774                     i1l3206:	
  6120                           ;incstack = 0
  6121                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
  6122                           
  6123                           
  6124                           ;mcc_generated_files/i2c_master.c: 478:     I2C_MasterSendAck();
  6125  0774  3187  279F  3187   	fcall	_I2C_MasterSendAck
  6126  0777                     i1l3208:
  6127                           
  6128                           ;mcc_generated_files/i2c_master.c: 479:     return I2C_RCEN;
  6129  0777  3005               	movlw	5
  6130  0778                     i1l643:
  6131  0778  0008               	return
  6132  0779                     __end_of_I2C_DO_RX_ACK:
  6133                           
  6134                           	psect	text32
  6135  0779                     __ptext32:	
  6136 ;; *************** function _I2C_DO_SEND_STOP *****************
  6137 ;; Defined at:
  6138 ;;		line 470 in file "mcc_generated_files/i2c_master.c"
  6139 ;; Parameters:    Size  Location     Type
  6140 ;;		None
  6141 ;; Auto vars:     Size  Location     Type
  6142 ;;		None
  6143 ;; Return value:  Size  Location     Type
  6144 ;;                  1    wreg      enum E3338
  6145 ;; Registers used:
  6146 ;;		wreg, status,2, status,0, pclath, cstack
  6147 ;; Tracked objects:
  6148 ;;		On entry : 0/0
  6149 ;;		On exit  : 0/0
  6150 ;;		Unchanged: 0/0
  6151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6156 ;;Total ram usage:        0 bytes
  6157 ;; Hardware stack levels used: 1
  6158 ;; Hardware stack levels required when called: 1
  6159 ;; This function calls:
  6160 ;;		_I2C_MasterStop
  6161 ;; This function is called by:
  6162 ;;		_I2C_DO_TX
  6163 ;;		_I2C_DO_TX_EMPTY
  6164 ;;		_I2C_DO_ADDRESS_NACK
  6165 ;;		_I2C_MasterFsm
  6166 ;; This function uses a non-reentrant model
  6167 ;;
  6168                           
  6169                           
  6170                           ;psect for function _I2C_DO_SEND_STOP
  6171  0779                     _I2C_DO_SEND_STOP:
  6172  0779                     i1l2986:	
  6173                           ;incstack = 0
  6174                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  6175                           
  6176                           
  6177                           ;mcc_generated_files/i2c_master.c: 472:     I2C_MasterStop();
  6178  0779  3187  27BB  3187   	fcall	_I2C_MasterStop
  6179  077C                     i1l2988:
  6180                           
  6181                           ;mcc_generated_files/i2c_master.c: 473:     return I2C_IDLE;
  6182  077C  3000               	movlw	0
  6183  077D                     i1l640:
  6184  077D  0008               	return
  6185  077E                     __end_of_I2C_DO_SEND_STOP:
  6186                           
  6187                           	psect	text33
  6188  077E                     __ptext33:	
  6189 ;; *************** function _I2C_DO_SEND_RESTART *****************
  6190 ;; Defined at:
  6191 ;;		line 464 in file "mcc_generated_files/i2c_master.c"
  6192 ;; Parameters:    Size  Location     Type
  6193 ;;		None
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;		None
  6196 ;; Return value:  Size  Location     Type
  6197 ;;                  1    wreg      enum E3338
  6198 ;; Registers used:
  6199 ;;		wreg, status,2, status,0, pclath, cstack
  6200 ;; Tracked objects:
  6201 ;;		On entry : 0/0
  6202 ;;		On exit  : 0/0
  6203 ;;		Unchanged: 0/0
  6204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6209 ;;Total ram usage:        0 bytes
  6210 ;; Hardware stack levels used: 1
  6211 ;; Hardware stack levels required when called: 1
  6212 ;; This function calls:
  6213 ;;		_I2C_MasterEnableRestart
  6214 ;; This function is called by:
  6215 ;;		_I2C_DO_TX_EMPTY
  6216 ;;		_I2C_DO_ADDRESS_NACK
  6217 ;;		_I2C_MasterFsm
  6218 ;; This function uses a non-reentrant model
  6219 ;;
  6220                           
  6221                           
  6222                           ;psect for function _I2C_DO_SEND_RESTART
  6223  077E                     _I2C_DO_SEND_RESTART:
  6224  077E                     i1l3012:	
  6225                           ;incstack = 0
  6226                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  6227                           
  6228                           
  6229                           ;mcc_generated_files/i2c_master.c: 466:     I2C_MasterEnableRestart();
  6230  077E  3187  27BE  3187   	fcall	_I2C_MasterEnableRestart
  6231  0781                     i1l3014:
  6232                           
  6233                           ;mcc_generated_files/i2c_master.c: 467:     return I2C_SEND_ADR_READ;
  6234  0781  3001               	movlw	1
  6235  0782                     i1l637:
  6236  0782  0008               	return
  6237  0783                     __end_of_I2C_DO_SEND_RESTART:
  6238                           
  6239                           	psect	text34
  6240  0783                     __ptext34:	
  6241 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  6242 ;; Defined at:
  6243 ;;		line 457 in file "mcc_generated_files/i2c_master.c"
  6244 ;; Parameters:    Size  Location     Type
  6245 ;;		None
  6246 ;; Auto vars:     Size  Location     Type
  6247 ;;		None
  6248 ;; Return value:  Size  Location     Type
  6249 ;;                  1    wreg      enum E3338
  6250 ;; Registers used:
  6251 ;;		wreg, status,2, status,0, pclath, cstack
  6252 ;; Tracked objects:
  6253 ;;		On entry : 0/0
  6254 ;;		On exit  : 0/0
  6255 ;;		Unchanged: 0/0
  6256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6261 ;;Total ram usage:        0 bytes
  6262 ;; Hardware stack levels used: 1
  6263 ;; Hardware stack levels required when called: 1
  6264 ;; This function calls:
  6265 ;;		_I2C_MasterEnableRestart
  6266 ;; This function is called by:
  6267 ;;		_I2C_DO_TX
  6268 ;;		_I2C_MasterFsm
  6269 ;; This function uses a non-reentrant model
  6270 ;;
  6271                           
  6272                           
  6273                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
  6274  0783                     _I2C_DO_SEND_RESTART_WRITE:
  6275  0783                     i1l2980:	
  6276                           ;incstack = 0
  6277                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  6278                           
  6279                           
  6280                           ;mcc_generated_files/i2c_master.c: 459:     I2C_MasterEnableRestart();
  6281  0783  3187  27BE  3187   	fcall	_I2C_MasterEnableRestart
  6282  0786                     i1l2982:
  6283                           
  6284                           ;mcc_generated_files/i2c_master.c: 460:     return I2C_SEND_ADR_WRITE;
  6285  0786  3002               	movlw	2
  6286  0787                     i1l634:
  6287  0787  0008               	return
  6288  0788                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  6289                           
  6290                           	psect	text35
  6291  0788                     __ptext35:	
  6292 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  6293 ;; Defined at:
  6294 ;;		line 451 in file "mcc_generated_files/i2c_master.c"
  6295 ;; Parameters:    Size  Location     Type
  6296 ;;		None
  6297 ;; Auto vars:     Size  Location     Type
  6298 ;;		None
  6299 ;; Return value:  Size  Location     Type
  6300 ;;                  1    wreg      enum E3338
  6301 ;; Registers used:
  6302 ;;		wreg, status,2, status,0, pclath, cstack
  6303 ;; Tracked objects:
  6304 ;;		On entry : 0/0
  6305 ;;		On exit  : 0/0
  6306 ;;		Unchanged: 0/0
  6307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6312 ;;Total ram usage:        0 bytes
  6313 ;; Hardware stack levels used: 1
  6314 ;; Hardware stack levels required when called: 1
  6315 ;; This function calls:
  6316 ;;		_I2C_MasterEnableRestart
  6317 ;; This function is called by:
  6318 ;;		_I2C_DO_TX
  6319 ;;		_I2C_MasterFsm
  6320 ;; This function uses a non-reentrant model
  6321 ;;
  6322                           
  6323                           
  6324                           ;psect for function _I2C_DO_SEND_RESTART_READ
  6325  0788                     _I2C_DO_SEND_RESTART_READ:
  6326  0788                     i1l2974:	
  6327                           ;incstack = 0
  6328                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  6329                           
  6330                           
  6331                           ;mcc_generated_files/i2c_master.c: 453:     I2C_MasterEnableRestart();
  6332  0788  3187  27BE  3187   	fcall	_I2C_MasterEnableRestart
  6333  078B                     i1l2976:
  6334                           
  6335                           ;mcc_generated_files/i2c_master.c: 454:     return I2C_SEND_ADR_READ;
  6336  078B  3001               	movlw	1
  6337  078C                     i1l631:
  6338  078C  0008               	return
  6339  078D                     __end_of_I2C_DO_SEND_RESTART_READ:
  6340                           
  6341                           	psect	text36
  6342  0734                     __ptext36:	
  6343 ;; *************** function _I2C_DO_RCEN *****************
  6344 ;; Defined at:
  6345 ;;		line 404 in file "mcc_generated_files/i2c_master.c"
  6346 ;; Parameters:    Size  Location     Type
  6347 ;;		None
  6348 ;; Auto vars:     Size  Location     Type
  6349 ;;		None
  6350 ;; Return value:  Size  Location     Type
  6351 ;;                  1    wreg      enum E3338
  6352 ;; Registers used:
  6353 ;;		wreg, status,2, status,0, pclath, cstack
  6354 ;; Tracked objects:
  6355 ;;		On entry : 0/0
  6356 ;;		On exit  : 0/0
  6357 ;;		Unchanged: 0/0
  6358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6363 ;;Total ram usage:        0 bytes
  6364 ;; Hardware stack levels used: 1
  6365 ;; Hardware stack levels required when called: 1
  6366 ;; This function calls:
  6367 ;;		_I2C_MasterStartRx
  6368 ;; This function is called by:
  6369 ;;		_I2C_MasterFsm
  6370 ;; This function uses a non-reentrant model
  6371 ;;
  6372                           
  6373                           
  6374                           ;psect for function _I2C_DO_RCEN
  6375  0734                     _I2C_DO_RCEN:
  6376  0734                     i1l3172:	
  6377                           ;incstack = 0
  6378                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
  6379                           
  6380                           
  6381                           ;mcc_generated_files/i2c_master.c: 406:     I2C_Status.addressNackCheck = 0;
  6382  0734  0021               	movlb	1	; select bank1
  6383  0735  103C               	bcf	(_I2C_Status^(0+128)+28),0
  6384  0736                     i1l3174:
  6385                           
  6386                           ;mcc_generated_files/i2c_master.c: 407:     I2C_MasterStartRx();
  6387  0736  3187  27B8  3187   	fcall	_I2C_MasterStartRx
  6388  0739                     i1l3176:
  6389                           
  6390                           ;mcc_generated_files/i2c_master.c: 408:     return I2C_RX;
  6391  0739  3004               	movlw	4
  6392  073A                     i1l607:
  6393  073A  0008               	return
  6394  073B                     __end_of_I2C_DO_RCEN:
  6395                           
  6396                           	psect	text37
  6397  031E                     __ptext37:	
  6398 ;; *************** function _I2C_DO_RX *****************
  6399 ;; Defined at:
  6400 ;;		line 380 in file "mcc_generated_files/i2c_master.c"
  6401 ;; Parameters:    Size  Location     Type
  6402 ;;		None
  6403 ;; Auto vars:     Size  Location     Type
  6404 ;;		None
  6405 ;; Return value:  Size  Location     Type
  6406 ;;                  1    wreg      enum E3338
  6407 ;; Registers used:
  6408 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6409 ;; Tracked objects:
  6410 ;;		On entry : 0/0
  6411 ;;		On exit  : 0/0
  6412 ;;		Unchanged: 0/0
  6413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6416 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6417 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6418 ;;Total ram usage:        3 bytes
  6419 ;; Hardware stack levels used: 1
  6420 ;; Hardware stack levels required when called: 3
  6421 ;; This function calls:
  6422 ;;		Absolute function
  6423 ;;		_I2C_CallbackReturnReset
  6424 ;;		_I2C_CallbackReturnStop
  6425 ;;		_I2C_DO_RX_NACK_RESTART
  6426 ;;		_I2C_DO_RX_NACK_STOP
  6427 ;;		_I2C_MasterGetRxData
  6428 ;;		_I2C_MasterSendAck
  6429 ;;		_rd1RegCompleteHandler
  6430 ;;		_rd2RegCompleteHandler
  6431 ;;		_rdBlkRegCompleteHandler
  6432 ;;		_wr1RegCompleteHandler
  6433 ;;		_wr2RegCompleteHandler
  6434 ;; This function is called by:
  6435 ;;		_I2C_MasterFsm
  6436 ;; This function uses a non-reentrant model
  6437 ;;
  6438                           
  6439                           
  6440                           ;psect for function _I2C_DO_RX
  6441  031E                     _I2C_DO_RX:
  6442  031E                     i1l3140:	
  6443                           ;incstack = 0
  6444                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6445                           
  6446                           
  6447                           ;mcc_generated_files/i2c_master.c: 382:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  6448  031E  3187  27B5  3183   	fcall	_I2C_MasterGetRxData
  6449  0321  00FA               	movwf	??_I2C_DO_RX
  6450  0322  0021               	movlb	1	; select bank1
  6451  0323  0837               	movf	(low ((_I2C_Status| 0+23)))^(0+128),w
  6452  0324  0086               	movwf	6
  6453  0325  0187               	clrf	7
  6454  0326  087A               	movf	??_I2C_DO_RX,w
  6455  0327  0081               	movwf	1
  6456  0328                     i1l3142:
  6457  0328  3001               	movlw	1
  6458  0329  00FA               	movwf	??_I2C_DO_RX
  6459  032A  087A               	movf	??_I2C_DO_RX,w
  6460  032B  07B7               	addwf	(low ((_I2C_Status| 0+23)))^(0+128),f
  6461  032C                     i1l3144:
  6462                           
  6463                           ;mcc_generated_files/i2c_master.c: 383:     if(--I2C_Status.data_length)
  6464  032C  3001               	movlw	1
  6465  032D  02B8               	subwf	(_I2C_Status^(0+128)+24),f
  6466  032E  3000               	movlw	0
  6467  032F  3BB9               	subwfb	((_I2C_Status+1)^(0+128)+24),f
  6468  0330  0838               	movf	(_I2C_Status^(0+128)+24),w
  6469  0331  0439               	iorwf	((_I2C_Status+1)^(0+128)+24),w
  6470  0332  1903               	btfsc	3,2
  6471  0333  2B35               	goto	u83_21
  6472  0334  2B36               	goto	u83_20
  6473  0335                     u83_21:
  6474  0335  2B3B               	goto	i1l595
  6475  0336                     u83_20:
  6476  0336                     i1l3146:
  6477                           
  6478                           ;mcc_generated_files/i2c_master.c: 384:     {;mcc_generated_files/i2c_master.c: 385:    
      +                               I2C_MasterSendAck();
  6479  0336  3187  279F  3183   	fcall	_I2C_MasterSendAck
  6480  0339                     i1l3148:
  6481                           
  6482                           ;mcc_generated_files/i2c_master.c: 386:         return I2C_RCEN;
  6483  0339  3005               	movlw	5
  6484  033A  2B63               	goto	i1l596
  6485  033B                     i1l595:	
  6486                           ;mcc_generated_files/i2c_master.c: 388:     else
  6487                           
  6488                           
  6489                           ;mcc_generated_files/i2c_master.c: 389:     {;mcc_generated_files/i2c_master.c: 390:    
      +                               I2C_Status.bufferFree = 1;
  6490  033B  15BC               	bsf	(_I2C_Status^(0+128)+28),3
  6491                           
  6492                           ;mcc_generated_files/i2c_master.c: 391:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  6493  033C  2B45               	goto	i1l3164
  6494  033D                     i1l3154:
  6495                           
  6496                           ;mcc_generated_files/i2c_master.c: 395:                 return I2C_DO_RX_NACK_RESTART();
  6497  033D  3187  276A  3183   	fcall	_I2C_DO_RX_NACK_RESTART
  6498  0340  2B63               	goto	i1l596
  6499  0341                     i1l3158:
  6500                           
  6501                           ;mcc_generated_files/i2c_master.c: 399:                 return I2C_DO_RX_NACK_STOP();
  6502  0341  3187  276F  3183   	fcall	_I2C_DO_RX_NACK_STOP
  6503  0344  2B63               	goto	i1l596
  6504  0345                     i1l3164:
  6505  0345  082C               	movf	(low ((_I2C_Status| 0+12)))^(0+128),w
  6506  0346  00FA               	movwf	??_I2C_DO_RX
  6507  0347  087A               	movf	??_I2C_DO_RX,w
  6508  0348  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  6509  0349  0821               	movf	(_I2C_Status+1)^(0+128),w
  6510  034A  008A               	movwf	10
  6511  034B  0820               	movf	_I2C_Status^(0+128),w
  6512  034C  000A               	callw
  6513  034D  3183               	pagesel	$
  6514  034E  00FB               	movwf	??_I2C_DO_RX+1
  6515  034F  01FC               	clrf	??_I2C_DO_RX+2
  6516                           
  6517                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6518                           ; Switch size 1, requested type "simple"
  6519                           ; Number of cases is 1, Range of values is 0 to 0
  6520                           ; switch strategies available:
  6521                           ; Name         Instructions Cycles
  6522                           ; simple_byte            4     3 (average)
  6523                           ; direct_byte            8     6 (fixed)
  6524                           ; jumptable            260     6 (fixed)
  6525                           ;	Chosen strategy is simple_byte
  6526  0350  087C               	movf	??_I2C_DO_RX+2,w
  6527  0351  3A00               	xorlw	0	; case 0
  6528  0352  1903               	skipnz
  6529  0353  2B55               	goto	i1l3964
  6530  0354  2B41               	goto	i1l3158
  6531  0355                     i1l3964:
  6532                           
  6533                           ; Switch size 1, requested type "simple"
  6534                           ; Number of cases is 4, Range of values is 1 to 4
  6535                           ; switch strategies available:
  6536                           ; Name         Instructions Cycles
  6537                           ; simple_byte           13     7 (average)
  6538                           ; direct_byte           17     9 (fixed)
  6539                           ; jumptable            263     9 (fixed)
  6540                           ;	Chosen strategy is simple_byte
  6541  0355  087B               	movf	??_I2C_DO_RX+1,w
  6542  0356  3A01               	xorlw	1	; case 1
  6543  0357  1903               	skipnz
  6544  0358  2B41               	goto	i1l3158
  6545  0359  3A03               	xorlw	3	; case 2
  6546  035A  1903               	skipnz
  6547  035B  2B3D               	goto	i1l3154
  6548  035C  3A01               	xorlw	1	; case 3
  6549  035D  1903               	skipnz
  6550  035E  2B3D               	goto	i1l3154
  6551  035F  3A07               	xorlw	7	; case 4
  6552  0360  1903               	skipnz
  6553  0361  2B41               	goto	i1l3158
  6554  0362  2B41               	goto	i1l3158
  6555  0363                     i1l596:
  6556  0363  0008               	return
  6557  0364                     __end_of_I2C_DO_RX:
  6558                           
  6559                           	psect	text38
  6560  02C9                     __ptext38:	
  6561 ;; *************** function _I2C_DO_TX *****************
  6562 ;; Defined at:
  6563 ;;		line 356 in file "mcc_generated_files/i2c_master.c"
  6564 ;; Parameters:    Size  Location     Type
  6565 ;;		None
  6566 ;; Auto vars:     Size  Location     Type
  6567 ;;		None
  6568 ;; Return value:  Size  Location     Type
  6569 ;;                  1    wreg      enum E3338
  6570 ;; Registers used:
  6571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6572 ;; Tracked objects:
  6573 ;;		On entry : 0/0
  6574 ;;		On exit  : 0/0
  6575 ;;		Unchanged: 0/0
  6576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6579 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6580 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6581 ;;Total ram usage:        3 bytes
  6582 ;; Hardware stack levels used: 1
  6583 ;; Hardware stack levels required when called: 3
  6584 ;; This function calls:
  6585 ;;		Absolute function
  6586 ;;		_I2C_CallbackReturnReset
  6587 ;;		_I2C_CallbackReturnStop
  6588 ;;		_I2C_DO_SEND_RESTART_READ
  6589 ;;		_I2C_DO_SEND_RESTART_WRITE
  6590 ;;		_I2C_DO_SEND_STOP
  6591 ;;		_I2C_MasterIsNack
  6592 ;;		_I2C_MasterSendTxData
  6593 ;;		_rd1RegCompleteHandler
  6594 ;;		_rd2RegCompleteHandler
  6595 ;;		_rdBlkRegCompleteHandler
  6596 ;;		_wr1RegCompleteHandler
  6597 ;;		_wr2RegCompleteHandler
  6598 ;; This function is called by:
  6599 ;;		_I2C_MasterFsm
  6600 ;; This function uses a non-reentrant model
  6601 ;;
  6602                           
  6603                           
  6604                           ;psect for function _I2C_DO_TX
  6605  02C9                     _I2C_DO_TX:
  6606  02C9                     i1l3106:	
  6607                           ;incstack = 0
  6608                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6609                           
  6610                           
  6611                           ;mcc_generated_files/i2c_master.c: 358:     if(I2C_MasterIsNack())
  6612  02C9  3187  275F  3182   	fcall	_I2C_MasterIsNack
  6613  02CC  3A00               	xorlw	0
  6614  02CD  1903               	skipnz
  6615  02CE  2AD0               	goto	u81_21
  6616  02CF  2AD1               	goto	u81_20
  6617  02D0                     u81_21:
  6618  02D0  2B01               	goto	i1l579
  6619  02D1                     u81_20:
  6620  02D1  2ADE               	goto	i1l3124
  6621  02D2                     i1l3110:
  6622                           
  6623                           ;mcc_generated_files/i2c_master.c: 363:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  6624  02D2  3187  2788  3182   	fcall	_I2C_DO_SEND_RESTART_READ
  6625  02D5  2B1D               	goto	i1l582
  6626  02D6                     i1l3114:
  6627                           
  6628                           ;mcc_generated_files/i2c_master.c: 365:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  6629  02D6  3187  2783  3182   	fcall	_I2C_DO_SEND_RESTART_WRITE
  6630  02D9  2B1D               	goto	i1l582
  6631  02DA                     i1l3118:
  6632                           
  6633                           ;mcc_generated_files/i2c_master.c: 369:                 return I2C_DO_SEND_STOP();
  6634  02DA  3187  2779  3182   	fcall	_I2C_DO_SEND_STOP
  6635  02DD  2B1D               	goto	i1l582
  6636  02DE                     i1l3124:
  6637  02DE  0021               	movlb	1	; select bank1
  6638  02DF  082F               	movf	(low ((_I2C_Status| 0+15)))^(0+128),w
  6639  02E0  00FA               	movwf	??_I2C_DO_TX
  6640  02E1  087A               	movf	??_I2C_DO_TX,w
  6641  02E2  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  6642  02E3  3006               	movlw	6
  6643  02E4  3EA0               	addlw	(low (_I2C_Status| 0))& (0+255)
  6644  02E5  0086               	movwf	6
  6645  02E6  0187               	clrf	7
  6646  02E7  3F41               	moviw [1]fsr1
  6647  02E8  008A               	movwf	10
  6648  02E9  3F40               	moviw [0]fsr1
  6649  02EA  000A               	callw
  6650  02EB  3182               	pagesel	$
  6651  02EC  00FB               	movwf	??_I2C_DO_TX+1
  6652  02ED  01FC               	clrf	??_I2C_DO_TX+2
  6653                           
  6654                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6655                           ; Switch size 1, requested type "simple"
  6656                           ; Number of cases is 1, Range of values is 0 to 0
  6657                           ; switch strategies available:
  6658                           ; Name         Instructions Cycles
  6659                           ; simple_byte            4     3 (average)
  6660                           ; direct_byte            8     6 (fixed)
  6661                           ; jumptable            260     6 (fixed)
  6662                           ;	Chosen strategy is simple_byte
  6663  02EE  087C               	movf	??_I2C_DO_TX+2,w
  6664  02EF  3A00               	xorlw	0	; case 0
  6665  02F0  1903               	skipnz
  6666  02F1  2AF3               	goto	i1l3966
  6667  02F2  2ADA               	goto	i1l3118
  6668  02F3                     i1l3966:
  6669                           
  6670                           ; Switch size 1, requested type "simple"
  6671                           ; Number of cases is 4, Range of values is 1 to 4
  6672                           ; switch strategies available:
  6673                           ; Name         Instructions Cycles
  6674                           ; simple_byte           13     7 (average)
  6675                           ; direct_byte           17     9 (fixed)
  6676                           ; jumptable            263     9 (fixed)
  6677                           ;	Chosen strategy is simple_byte
  6678  02F3  087B               	movf	??_I2C_DO_TX+1,w
  6679  02F4  3A01               	xorlw	1	; case 1
  6680  02F5  1903               	skipnz
  6681  02F6  2ADA               	goto	i1l3118
  6682  02F7  3A03               	xorlw	3	; case 2
  6683  02F8  1903               	skipnz
  6684  02F9  2AD2               	goto	i1l3110
  6685  02FA  3A01               	xorlw	1	; case 3
  6686  02FB  1903               	skipnz
  6687  02FC  2AD6               	goto	i1l3114
  6688  02FD  3A07               	xorlw	7	; case 4
  6689  02FE  1903               	skipnz
  6690  02FF  2ADA               	goto	i1l3118
  6691  0300  2ADA               	goto	i1l3118
  6692  0301                     i1l579:	
  6693                           ;mcc_generated_files/i2c_master.c: 372:     else
  6694                           
  6695                           
  6696                           ;mcc_generated_files/i2c_master.c: 373:     {;mcc_generated_files/i2c_master.c: 374:    
      +                               I2C_Status.addressNackCheck = 0;
  6697  0301  0021               	movlb	1	; select bank1
  6698  0302  103C               	bcf	(_I2C_Status^(0+128)+28),0
  6699  0303                     i1l3126:
  6700                           
  6701                           ;mcc_generated_files/i2c_master.c: 375:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  6702  0303  3017               	movlw	23
  6703  0304  3EA0               	addlw	(low (_I2C_Status| 0))& (0+255)
  6704  0305  0086               	movwf	6
  6705  0306  0187               	clrf	7
  6706  0307  3F40               	moviw [0]fsr1
  6707  0308  0084               	movwf	4
  6708  0309  0185               	clrf	5
  6709  030A  0A81               	incf	1,f
  6710  030B  0800               	movf	0,w
  6711  030C  3187  2792  3182   	fcall	_I2C_MasterSendTxData
  6712  030F                     i1l3128:
  6713                           
  6714                           ;mcc_generated_files/i2c_master.c: 376:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  6715  030F  3001               	movlw	1
  6716  0310  0021               	movlb	1	; select bank1
  6717  0311  02B8               	subwf	(_I2C_Status^(0+128)+24),f
  6718  0312  3000               	movlw	0
  6719  0313  3BB9               	subwfb	((_I2C_Status+1)^(0+128)+24),f
  6720  0314  0838               	movf	(_I2C_Status^(0+128)+24),w
  6721  0315  0439               	iorwf	((_I2C_Status+1)^(0+128)+24),w
  6722  0316  1D03               	btfss	3,2
  6723  0317  2B19               	goto	u82_21
  6724  0318  2B1A               	goto	u82_20
  6725  0319                     u82_21:
  6726  0319  2B1C               	goto	i1l3132
  6727  031A                     u82_20:
  6728  031A                     i1l3130:
  6729  031A  3006               	movlw	6
  6730  031B  2B1D               	goto	i1l582
  6731  031C                     i1l3132:
  6732  031C  3003               	movlw	3
  6733  031D                     i1l582:
  6734  031D  0008               	return
  6735  031E                     __end_of_I2C_DO_TX:
  6736                           
  6737                           	psect	text39
  6738  0725                     __ptext39:	
  6739 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  6740 ;; Defined at:
  6741 ;;		line 349 in file "mcc_generated_files/i2c_master.c"
  6742 ;; Parameters:    Size  Location     Type
  6743 ;;		None
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;		None
  6746 ;; Return value:  Size  Location     Type
  6747 ;;                  1    wreg      enum E3338
  6748 ;; Registers used:
  6749 ;;		wreg, status,2, status,0, pclath, cstack
  6750 ;; Tracked objects:
  6751 ;;		On entry : 0/0
  6752 ;;		On exit  : 0/0
  6753 ;;		Unchanged: 0/0
  6754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6759 ;;Total ram usage:        0 bytes
  6760 ;; Hardware stack levels used: 1
  6761 ;; Hardware stack levels required when called: 1
  6762 ;; This function calls:
  6763 ;;		_I2C_MasterSendTxData
  6764 ;; This function is called by:
  6765 ;;		_I2C_MasterFsm
  6766 ;; This function uses a non-reentrant model
  6767 ;;
  6768                           
  6769                           
  6770                           ;psect for function _I2C_DO_SEND_ADR_WRITE
  6771  0725                     _I2C_DO_SEND_ADR_WRITE:
  6772  0725                     i1l3098:	
  6773                           ;incstack = 0
  6774                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  6775                           
  6776                           
  6777                           ;mcc_generated_files/i2c_master.c: 351:     I2C_Status.addressNackCheck = 1;
  6778  0725  0021               	movlb	1	; select bank1
  6779  0726  143C               	bsf	(_I2C_Status^(0+128)+28),0
  6780  0727                     i1l3100:
  6781                           
  6782                           ;mcc_generated_files/i2c_master.c: 352:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
  6783  0727  3536               	lslf	(_I2C_Status^(0+128)+22),w
  6784  0728  3187  2792  3187   	fcall	_I2C_MasterSendTxData
  6785  072B                     i1l3102:
  6786                           
  6787                           ;mcc_generated_files/i2c_master.c: 353:     return I2C_TX;
  6788  072B  3003               	movlw	3
  6789  072C                     i1l576:
  6790  072C  0008               	return
  6791  072D                     __end_of_I2C_DO_SEND_ADR_WRITE:
  6792                           
  6793                           	psect	text40
  6794  0714                     __ptext40:	
  6795 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  6796 ;; Defined at:
  6797 ;;		line 342 in file "mcc_generated_files/i2c_master.c"
  6798 ;; Parameters:    Size  Location     Type
  6799 ;;		None
  6800 ;; Auto vars:     Size  Location     Type
  6801 ;;		None
  6802 ;; Return value:  Size  Location     Type
  6803 ;;                  1    wreg      enum E3338
  6804 ;; Registers used:
  6805 ;;		wreg, status,2, status,0, pclath, cstack
  6806 ;; Tracked objects:
  6807 ;;		On entry : 0/0
  6808 ;;		On exit  : 0/0
  6809 ;;		Unchanged: 0/0
  6810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6815 ;;Total ram usage:        0 bytes
  6816 ;; Hardware stack levels used: 1
  6817 ;; Hardware stack levels required when called: 1
  6818 ;; This function calls:
  6819 ;;		_I2C_MasterSendTxData
  6820 ;; This function is called by:
  6821 ;;		_I2C_MasterFsm
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           
  6825                           
  6826                           ;psect for function _I2C_DO_SEND_ADR_READ
  6827  0714                     _I2C_DO_SEND_ADR_READ:
  6828  0714                     i1l3090:	
  6829                           ;incstack = 0
  6830                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  6831                           
  6832                           
  6833                           ;mcc_generated_files/i2c_master.c: 344:     I2C_Status.addressNackCheck = 1;
  6834  0714  0021               	movlb	1	; select bank1
  6835  0715  143C               	bsf	(_I2C_Status^(0+128)+28),0
  6836  0716                     i1l3092:
  6837                           
  6838                           ;mcc_generated_files/i2c_master.c: 345:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
  6839  0716  1403               	setc
  6840  0717  0D36               	rlf	(_I2C_Status^(0+128)+22),w
  6841  0718  3187  2792  3187   	fcall	_I2C_MasterSendTxData
  6842  071B                     i1l3094:
  6843                           
  6844                           ;mcc_generated_files/i2c_master.c: 346:     return I2C_RCEN;
  6845  071B  3005               	movlw	5
  6846  071C                     i1l573:
  6847  071C  0008               	return
  6848  071D                     __end_of_I2C_DO_SEND_ADR_READ:
  6849                           
  6850                           	psect	text41
  6851  078D                     __ptext41:	
  6852 ;; *************** function _I2C_DO_IDLE *****************
  6853 ;; Defined at:
  6854 ;;		line 335 in file "mcc_generated_files/i2c_master.c"
  6855 ;; Parameters:    Size  Location     Type
  6856 ;;		None
  6857 ;; Auto vars:     Size  Location     Type
  6858 ;;		None
  6859 ;; Return value:  Size  Location     Type
  6860 ;;                  1    wreg      enum E3338
  6861 ;; Registers used:
  6862 ;;		wreg, status,2
  6863 ;; Tracked objects:
  6864 ;;		On entry : 0/0
  6865 ;;		On exit  : 0/0
  6866 ;;		Unchanged: 0/0
  6867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6872 ;;Total ram usage:        0 bytes
  6873 ;; Hardware stack levels used: 1
  6874 ;; This function calls:
  6875 ;;		Nothing
  6876 ;; This function is called by:
  6877 ;;		_I2C_MasterFsm
  6878 ;; This function uses a non-reentrant model
  6879 ;;
  6880                           
  6881                           
  6882                           ;psect for function _I2C_DO_IDLE
  6883  078D                     _I2C_DO_IDLE:
  6884  078D                     i1l3082:	
  6885                           ;incstack = 0
  6886                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
  6887                           
  6888                           
  6889                           ;mcc_generated_files/i2c_master.c: 337:     I2C_Status.busy = 0;
  6890  078D  0021               	movlb	1	; select bank1
  6891  078E  10BC               	bcf	(_I2C_Status^(0+128)+28),1
  6892  078F                     i1l3084:
  6893                           
  6894                           ;mcc_generated_files/i2c_master.c: 338:     I2C_Status.error = I2C_NOERR;
  6895  078F  01BB               	clrf	(_I2C_Status^(0+128)+27)
  6896  0790                     i1l3086:
  6897                           
  6898                           ;mcc_generated_files/i2c_master.c: 339:     return I2C_RESET;
  6899  0790  300E               	movlw	14
  6900  0791                     i1l570:
  6901  0791  0008               	return
  6902  0792                     __end_of_I2C_DO_IDLE:
  6903                           
  6904                           	psect	text42
  6905  0424                     __ptext42:	
  6906 ;; *************** function _I2C_DO_TX_EMPTY *****************
  6907 ;; Defined at:
  6908 ;;		line 411 in file "mcc_generated_files/i2c_master.c"
  6909 ;; Parameters:    Size  Location     Type
  6910 ;;		None
  6911 ;; Auto vars:     Size  Location     Type
  6912 ;;		None
  6913 ;; Return value:  Size  Location     Type
  6914 ;;                  1    wreg      enum E3338
  6915 ;; Registers used:
  6916 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6917 ;; Tracked objects:
  6918 ;;		On entry : 0/0
  6919 ;;		On exit  : 0/0
  6920 ;;		Unchanged: 0/0
  6921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6924 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6925 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6926 ;;Total ram usage:        3 bytes
  6927 ;; Hardware stack levels used: 1
  6928 ;; Hardware stack levels required when called: 3
  6929 ;; This function calls:
  6930 ;;		Absolute function
  6931 ;;		_I2C_CallbackReturnReset
  6932 ;;		_I2C_CallbackReturnStop
  6933 ;;		_I2C_DO_SEND_RESTART
  6934 ;;		_I2C_DO_SEND_STOP
  6935 ;;		_I2C_MasterSetIrq
  6936 ;;		_rd1RegCompleteHandler
  6937 ;;		_rd2RegCompleteHandler
  6938 ;;		_rdBlkRegCompleteHandler
  6939 ;;		_wr1RegCompleteHandler
  6940 ;;		_wr2RegCompleteHandler
  6941 ;; This function is called by:
  6942 ;;		_I2C_MasterFsm
  6943 ;; This function uses a non-reentrant model
  6944 ;;
  6945                           
  6946                           
  6947                           ;psect for function _I2C_DO_TX_EMPTY
  6948  0424                     _I2C_DO_TX_EMPTY:
  6949  0424                     i1l3180:	
  6950                           ;incstack = 0
  6951                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6952                           
  6953                           
  6954                           ;mcc_generated_files/i2c_master.c: 413:     I2C_Status.bufferFree = 1;
  6955  0424  0021               	movlb	1	; select bank1
  6956  0425  15BC               	bsf	(_I2C_Status^(0+128)+28),3
  6957                           
  6958                           ;mcc_generated_files/i2c_master.c: 414:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  6959  0426  2C34               	goto	i1l3198
  6960  0427                     i1l3182:
  6961                           
  6962                           ;mcc_generated_files/i2c_master.c: 418:             return I2C_DO_SEND_RESTART();
  6963  0427  3187  277E  3184   	fcall	_I2C_DO_SEND_RESTART
  6964  042A  2C52               	goto	i1l613
  6965  042B                     i1l3186:
  6966                           
  6967                           ;mcc_generated_files/i2c_master.c: 420:             I2C_MasterSetIrq();
  6968  042B  3187  27B2  3184   	fcall	_I2C_MasterSetIrq
  6969  042E                     i1l3188:
  6970                           
  6971                           ;mcc_generated_files/i2c_master.c: 421:             return I2C_TX;
  6972  042E  3003               	movlw	3
  6973  042F  2C52               	goto	i1l613
  6974  0430                     i1l3192:
  6975                           
  6976                           ;mcc_generated_files/i2c_master.c: 424:             return I2C_DO_SEND_STOP();
  6977  0430  3187  2779  3184   	fcall	_I2C_DO_SEND_STOP
  6978  0433  2C52               	goto	i1l613
  6979  0434                     i1l3198:
  6980  0434  082C               	movf	(low ((_I2C_Status| 0+12)))^(0+128),w
  6981  0435  00FA               	movwf	??_I2C_DO_TX_EMPTY
  6982  0436  087A               	movf	??_I2C_DO_TX_EMPTY,w
  6983  0437  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  6984  0438  0821               	movf	(_I2C_Status+1)^(0+128),w
  6985  0439  008A               	movwf	10
  6986  043A  0820               	movf	_I2C_Status^(0+128),w
  6987  043B  000A               	callw
  6988  043C  3184               	pagesel	$
  6989  043D  00FB               	movwf	??_I2C_DO_TX_EMPTY+1
  6990  043E  01FC               	clrf	??_I2C_DO_TX_EMPTY+2
  6991                           
  6992                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6993                           ; Switch size 1, requested type "simple"
  6994                           ; Number of cases is 1, Range of values is 0 to 0
  6995                           ; switch strategies available:
  6996                           ; Name         Instructions Cycles
  6997                           ; simple_byte            4     3 (average)
  6998                           ; direct_byte            8     6 (fixed)
  6999                           ; jumptable            260     6 (fixed)
  7000                           ;	Chosen strategy is simple_byte
  7001  043F  087C               	movf	??_I2C_DO_TX_EMPTY+2,w
  7002  0440  3A00               	xorlw	0	; case 0
  7003  0441  1903               	skipnz
  7004  0442  2C44               	goto	i1l3968
  7005  0443  2C30               	goto	i1l3192
  7006  0444                     i1l3968:
  7007                           
  7008                           ; Switch size 1, requested type "simple"
  7009                           ; Number of cases is 4, Range of values is 1 to 4
  7010                           ; switch strategies available:
  7011                           ; Name         Instructions Cycles
  7012                           ; simple_byte           13     7 (average)
  7013                           ; direct_byte           17     9 (fixed)
  7014                           ; jumptable            263     9 (fixed)
  7015                           ;	Chosen strategy is simple_byte
  7016  0444  087B               	movf	??_I2C_DO_TX_EMPTY+1,w
  7017  0445  3A01               	xorlw	1	; case 1
  7018  0446  1903               	skipnz
  7019  0447  2C30               	goto	i1l3192
  7020  0448  3A03               	xorlw	3	; case 2
  7021  0449  1903               	skipnz
  7022  044A  2C27               	goto	i1l3182
  7023  044B  3A01               	xorlw	1	; case 3
  7024  044C  1903               	skipnz
  7025  044D  2C27               	goto	i1l3182
  7026  044E  3A07               	xorlw	7	; case 4
  7027  044F  1903               	skipnz
  7028  0450  2C2B               	goto	i1l3186
  7029  0451  2C30               	goto	i1l3192
  7030  0452                     i1l613:
  7031  0452  0008               	return
  7032  0453                     __end_of_I2C_DO_TX_EMPTY:
  7033                           
  7034                           	psect	text43
  7035  07B2                     __ptext43:	
  7036 ;; *************** function _I2C_MasterSetIrq *****************
  7037 ;; Defined at:
  7038 ;;		line 647 in file "mcc_generated_files/i2c_master.c"
  7039 ;; Parameters:    Size  Location     Type
  7040 ;;		None
  7041 ;; Auto vars:     Size  Location     Type
  7042 ;;		None
  7043 ;; Return value:  Size  Location     Type
  7044 ;;                  1    wreg      void 
  7045 ;; Registers used:
  7046 ;;		None
  7047 ;; Tracked objects:
  7048 ;;		On entry : 0/0
  7049 ;;		On exit  : 0/0
  7050 ;;		Unchanged: 0/0
  7051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7056 ;;Total ram usage:        0 bytes
  7057 ;; Hardware stack levels used: 1
  7058 ;; This function calls:
  7059 ;;		Nothing
  7060 ;; This function is called by:
  7061 ;;		_I2C_DO_TX_EMPTY
  7062 ;; This function uses a non-reentrant model
  7063 ;;
  7064                           
  7065                           
  7066                           ;psect for function _I2C_MasterSetIrq
  7067  07B2                     _I2C_MasterSetIrq:
  7068  07B2                     i1l3018:	
  7069                           ;incstack = 0
  7070                           ; Regs used in _I2C_MasterSetIrq: []
  7071                           
  7072                           
  7073                           ;mcc_generated_files/i2c_master.c: 649:     PIR1bits.SSPIF = 1;
  7074  07B2  0020               	movlb	0	; select bank0
  7075  07B3  1591               	bsf	17,3	;volatile
  7076  07B4                     i1l733:
  7077  07B4  0008               	return
  7078  07B5                     __end_of_I2C_MasterSetIrq:
  7079                           
  7080                           	psect	text44
  7081  075F                     __ptext44:	
  7082 ;; *************** function _I2C_MasterIsNack *****************
  7083 ;; Defined at:
  7084 ;;		line 599 in file "mcc_generated_files/i2c_master.c"
  7085 ;; Parameters:    Size  Location     Type
  7086 ;;		None
  7087 ;; Auto vars:     Size  Location     Type
  7088 ;;		None
  7089 ;; Return value:  Size  Location     Type
  7090 ;;                  1    wreg      _Bool 
  7091 ;; Registers used:
  7092 ;;		wreg, status,2, status,0
  7093 ;; Tracked objects:
  7094 ;;		On entry : 0/0
  7095 ;;		On exit  : 0/0
  7096 ;;		Unchanged: 0/0
  7097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7102 ;;Total ram usage:        0 bytes
  7103 ;; Hardware stack levels used: 1
  7104 ;; This function calls:
  7105 ;;		Nothing
  7106 ;; This function is called by:
  7107 ;;		_I2C_MasterFsm
  7108 ;;		_I2C_DO_TX
  7109 ;; This function uses a non-reentrant model
  7110 ;;
  7111                           
  7112                           
  7113                           ;psect for function _I2C_MasterIsNack
  7114  075F                     _I2C_MasterIsNack:
  7115  075F                     i1l2968:	
  7116                           ;incstack = 0
  7117                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
  7118                           
  7119                           
  7120                           ;mcc_generated_files/i2c_master.c: 601:     return SSPCON2bits.ACKSTAT;
  7121  075F  0024               	movlb	4	; select bank4
  7122  0760  0E16               	swapf	22,w	;volatile
  7123  0761  0C89               	rrf	9,f
  7124  0762  0C89               	rrf	9,f
  7125  0763  3901               	andlw	1
  7126  0764                     i1l706:
  7127  0764  0008               	return
  7128  0765                     __end_of_I2C_MasterIsNack:
  7129                           
  7130                           	psect	text45
  7131  0792                     __ptext45:	
  7132 ;; *************** function _I2C_MasterSendTxData *****************
  7133 ;; Defined at:
  7134 ;;		line 569 in file "mcc_generated_files/i2c_master.c"
  7135 ;; Parameters:    Size  Location     Type
  7136 ;;  data            1    wreg     unsigned char 
  7137 ;; Auto vars:     Size  Location     Type
  7138 ;;  data            1    0[COMMON] unsigned char 
  7139 ;; Return value:  Size  Location     Type
  7140 ;;                  1    wreg      void 
  7141 ;; Registers used:
  7142 ;;		wreg
  7143 ;; Tracked objects:
  7144 ;;		On entry : 0/0
  7145 ;;		On exit  : 0/0
  7146 ;;		Unchanged: 0/0
  7147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7149 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7151 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7152 ;;Total ram usage:        1 bytes
  7153 ;; Hardware stack levels used: 1
  7154 ;; This function calls:
  7155 ;;		Nothing
  7156 ;; This function is called by:
  7157 ;;		_I2C_DO_SEND_ADR_READ
  7158 ;;		_I2C_DO_SEND_ADR_WRITE
  7159 ;;		_I2C_DO_TX
  7160 ;; This function uses a non-reentrant model
  7161 ;;
  7162                           
  7163                           
  7164                           ;psect for function _I2C_MasterSendTxData
  7165  0792                     _I2C_MasterSendTxData:
  7166                           
  7167                           ;incstack = 0
  7168                           ; Regs used in _I2C_MasterSendTxData: [wreg]
  7169                           ;I2C_MasterSendTxData@data stored from wreg
  7170  0792  00F0               	movwf	I2C_MasterSendTxData@data
  7171  0793                     i1l2972:
  7172                           
  7173                           ;mcc_generated_files/i2c_master.c: 569: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 570: {;mcc_generated_files/i2c_
      +                          master.c: 571:     SSPBUF = data;
  7174  0793  0870               	movf	I2C_MasterSendTxData@data,w
  7175  0794  0024               	movlb	4	; select bank4
  7176  0795  0091               	movwf	17	;volatile
  7177  0796                     i1l688:
  7178  0796  0008               	return
  7179  0797                     __end_of_I2C_MasterSendTxData:
  7180                           
  7181                           	psect	text46
  7182  079F                     __ptext46:	
  7183 ;; *************** function _I2C_MasterSendAck *****************
  7184 ;; Defined at:
  7185 ;;		line 604 in file "mcc_generated_files/i2c_master.c"
  7186 ;; Parameters:    Size  Location     Type
  7187 ;;		None
  7188 ;; Auto vars:     Size  Location     Type
  7189 ;;		None
  7190 ;; Return value:  Size  Location     Type
  7191 ;;                  1    wreg      void 
  7192 ;; Registers used:
  7193 ;;		None
  7194 ;; Tracked objects:
  7195 ;;		On entry : 0/0
  7196 ;;		On exit  : 0/0
  7197 ;;		Unchanged: 0/0
  7198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7203 ;;Total ram usage:        0 bytes
  7204 ;; Hardware stack levels used: 1
  7205 ;; This function calls:
  7206 ;;		Nothing
  7207 ;; This function is called by:
  7208 ;;		_I2C_DO_RX
  7209 ;;		_I2C_DO_RX_ACK
  7210 ;; This function uses a non-reentrant model
  7211 ;;
  7212                           
  7213                           
  7214                           ;psect for function _I2C_MasterSendAck
  7215  079F                     _I2C_MasterSendAck:
  7216  079F                     i1l2996:	
  7217                           ;incstack = 0
  7218                           ; Regs used in _I2C_MasterSendAck: []
  7219                           
  7220                           
  7221                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKDT = 0;
  7222  079F  0024               	movlb	4	; select bank4
  7223  07A0  1296               	bcf	22,5	;volatile
  7224                           
  7225                           ;mcc_generated_files/i2c_master.c: 607:     SSPCON2bits.ACKEN = 1;
  7226  07A1  1616               	bsf	22,4	;volatile
  7227  07A2                     i1l709:
  7228  07A2  0008               	return
  7229  07A3                     __end_of_I2C_MasterSendAck:
  7230                           
  7231                           	psect	text47
  7232  07B5                     __ptext47:	
  7233 ;; *************** function _I2C_MasterGetRxData *****************
  7234 ;; Defined at:
  7235 ;;		line 564 in file "mcc_generated_files/i2c_master.c"
  7236 ;; Parameters:    Size  Location     Type
  7237 ;;		None
  7238 ;; Auto vars:     Size  Location     Type
  7239 ;;		None
  7240 ;; Return value:  Size  Location     Type
  7241 ;;                  1    wreg      unsigned char 
  7242 ;; Registers used:
  7243 ;;		wreg
  7244 ;; Tracked objects:
  7245 ;;		On entry : 0/0
  7246 ;;		On exit  : 0/0
  7247 ;;		Unchanged: 0/0
  7248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7253 ;;Total ram usage:        0 bytes
  7254 ;; Hardware stack levels used: 1
  7255 ;; This function calls:
  7256 ;;		Nothing
  7257 ;; This function is called by:
  7258 ;;		_I2C_DO_RX
  7259 ;; This function uses a non-reentrant model
  7260 ;;
  7261                           
  7262                           
  7263                           ;psect for function _I2C_MasterGetRxData
  7264  07B5                     _I2C_MasterGetRxData:
  7265  07B5                     i1l2992:	
  7266                           ;incstack = 0
  7267                           ; Regs used in _I2C_MasterGetRxData: [wreg]
  7268                           
  7269                           
  7270                           ;mcc_generated_files/i2c_master.c: 566:     return SSPBUF;
  7271  07B5  0024               	movlb	4	; select bank4
  7272  07B6  0811               	movf	17,w	;volatile
  7273  07B7                     i1l685:
  7274  07B7  0008               	return
  7275  07B8                     __end_of_I2C_MasterGetRxData:
  7276                           
  7277                           	psect	text48
  7278  07A3                     __ptext48:	
  7279 ;; *************** function _I2C_MasterSendNack *****************
  7280 ;; Defined at:
  7281 ;;		line 610 in file "mcc_generated_files/i2c_master.c"
  7282 ;; Parameters:    Size  Location     Type
  7283 ;;		None
  7284 ;; Auto vars:     Size  Location     Type
  7285 ;;		None
  7286 ;; Return value:  Size  Location     Type
  7287 ;;                  1    wreg      void 
  7288 ;; Registers used:
  7289 ;;		None
  7290 ;; Tracked objects:
  7291 ;;		On entry : 0/0
  7292 ;;		On exit  : 0/0
  7293 ;;		Unchanged: 0/0
  7294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7299 ;;Total ram usage:        0 bytes
  7300 ;; Hardware stack levels used: 1
  7301 ;; This function calls:
  7302 ;;		Nothing
  7303 ;; This function is called by:
  7304 ;;		_I2C_DO_RX_NACK_STOP
  7305 ;;		_I2C_DO_RX_NACK_RESTART
  7306 ;; This function uses a non-reentrant model
  7307 ;;
  7308                           
  7309                           
  7310                           ;psect for function _I2C_MasterSendNack
  7311  07A3                     _I2C_MasterSendNack:
  7312  07A3                     i1l2914:	
  7313                           ;incstack = 0
  7314                           ; Regs used in _I2C_MasterSendNack: []
  7315                           
  7316                           
  7317                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKDT = 1;
  7318  07A3  0024               	movlb	4	; select bank4
  7319  07A4  1696               	bsf	22,5	;volatile
  7320                           
  7321                           ;mcc_generated_files/i2c_master.c: 613:     SSPCON2bits.ACKEN = 1;
  7322  07A5  1616               	bsf	22,4	;volatile
  7323  07A6                     i1l712:
  7324  07A6  0008               	return
  7325  07A7                     __end_of_I2C_MasterSendNack:
  7326                           
  7327                           	psect	text49
  7328  07B8                     __ptext49:	
  7329 ;; *************** function _I2C_MasterStartRx *****************
  7330 ;; Defined at:
  7331 ;;		line 584 in file "mcc_generated_files/i2c_master.c"
  7332 ;; Parameters:    Size  Location     Type
  7333 ;;		None
  7334 ;; Auto vars:     Size  Location     Type
  7335 ;;		None
  7336 ;; Return value:  Size  Location     Type
  7337 ;;                  1    wreg      void 
  7338 ;; Registers used:
  7339 ;;		None
  7340 ;; Tracked objects:
  7341 ;;		On entry : 0/0
  7342 ;;		On exit  : 0/0
  7343 ;;		Unchanged: 0/0
  7344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7349 ;;Total ram usage:        0 bytes
  7350 ;; Hardware stack levels used: 1
  7351 ;; This function calls:
  7352 ;;		Nothing
  7353 ;; This function is called by:
  7354 ;;		_I2C_DO_RCEN
  7355 ;; This function uses a non-reentrant model
  7356 ;;
  7357                           
  7358                           
  7359                           ;psect for function _I2C_MasterStartRx
  7360  07B8                     _I2C_MasterStartRx:
  7361  07B8                     i1l3010:	
  7362                           ;incstack = 0
  7363                           ; Regs used in _I2C_MasterStartRx: []
  7364                           
  7365                           
  7366                           ;mcc_generated_files/i2c_master.c: 586:     SSPCON2bits.RCEN = 1;
  7367  07B8  0024               	movlb	4	; select bank4
  7368  07B9  1596               	bsf	22,3	;volatile
  7369  07BA                     i1l697:
  7370  07BA  0008               	return
  7371  07BB                     __end_of_I2C_MasterStartRx:
  7372                           
  7373                           	psect	text50
  7374  07C1                     __ptext50:	
  7375 ;; *************** function _I2C_CallbackReturnReset *****************
  7376 ;; Defined at:
  7377 ;;		line 526 in file "mcc_generated_files/i2c_master.c"
  7378 ;; Parameters:    Size  Location     Type
  7379 ;;  funPtr          1    9[COMMON] PTR void 
  7380 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7381 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7382 ;; Auto vars:     Size  Location     Type
  7383 ;;		None
  7384 ;; Return value:  Size  Location     Type
  7385 ;;                  1    wreg      enum E360
  7386 ;; Registers used:
  7387 ;;		wreg
  7388 ;; Tracked objects:
  7389 ;;		On entry : 0/0
  7390 ;;		On exit  : 0/0
  7391 ;;		Unchanged: 0/0
  7392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7393 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7396 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7397 ;;Total ram usage:        1 bytes
  7398 ;; Hardware stack levels used: 1
  7399 ;; This function calls:
  7400 ;;		Nothing
  7401 ;; This function is called by:
  7402 ;;		_I2C_Open
  7403 ;;		_I2C_DO_TX
  7404 ;;		_I2C_DO_RX
  7405 ;;		_I2C_DO_TX_EMPTY
  7406 ;;		_I2C_DO_ADDRESS_NACK
  7407 ;;		_I2C_DO_RX_EMPTY
  7408 ;; This function uses a non-reentrant model
  7409 ;;
  7410                           
  7411                           
  7412                           ;psect for function _I2C_CallbackReturnReset
  7413  07C1                     _I2C_CallbackReturnReset:
  7414  07C1                     i1l3024:	
  7415                           ;incstack = 0
  7416                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
  7417                           
  7418                           
  7419                           ;mcc_generated_files/i2c_master.c: 526: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 527: {;mcc_generated_files/i2c_master.c: 528:  
      +                             return I2C_RESET_LINK;
  7420  07C1  3005               	movlw	5
  7421  07C2                     i1l669:
  7422  07C2  0008               	return
  7423  07C3                     __end_of_I2C_CallbackReturnReset:
  7424                           
  7425                           	psect	text51
  7426  07C3                     __ptext51:	
  7427 ;; *************** function _I2C_CallbackReturnStop *****************
  7428 ;; Defined at:
  7429 ;;		line 521 in file "mcc_generated_files/i2c_master.c"
  7430 ;; Parameters:    Size  Location     Type
  7431 ;;  funPtr          1    9[COMMON] PTR void 
  7432 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7433 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7434 ;; Auto vars:     Size  Location     Type
  7435 ;;		None
  7436 ;; Return value:  Size  Location     Type
  7437 ;;                  1    wreg      enum E360
  7438 ;; Registers used:
  7439 ;;		wreg
  7440 ;; Tracked objects:
  7441 ;;		On entry : 0/0
  7442 ;;		On exit  : 0/0
  7443 ;;		Unchanged: 0/0
  7444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7445 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7448 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7449 ;;Total ram usage:        1 bytes
  7450 ;; Hardware stack levels used: 1
  7451 ;; This function calls:
  7452 ;;		Nothing
  7453 ;; This function is called by:
  7454 ;;		_I2C_SetCallback
  7455 ;;		_I2C_Open
  7456 ;;		_I2C_DO_TX
  7457 ;;		_I2C_DO_RX
  7458 ;;		_I2C_DO_TX_EMPTY
  7459 ;;		_I2C_DO_ADDRESS_NACK
  7460 ;;		_I2C_DO_RX_EMPTY
  7461 ;; This function uses a non-reentrant model
  7462 ;;
  7463                           
  7464                           
  7465                           ;psect for function _I2C_CallbackReturnStop
  7466  07C3                     _I2C_CallbackReturnStop:
  7467  07C3                     i1l3020:	
  7468                           ;incstack = 0
  7469                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
  7470                           
  7471                           
  7472                           ;mcc_generated_files/i2c_master.c: 521: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 522: {;mcc_generated_files/i2c_master.c: 523:   
      +                            return I2C_STOP;
  7473  07C3  3001               	movlw	1
  7474  07C4                     i1l666:
  7475  07C4  0008               	return
  7476  07C5                     __end_of_I2C_CallbackReturnStop:
  7477                           
  7478                           	psect	text52
  7479  05D4                     __ptext52:	
  7480 ;; *************** function _rdBlkRegCompleteHandler *****************
  7481 ;; Defined at:
  7482 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
  7483 ;; Parameters:    Size  Location     Type
  7484 ;;  ptr             1    9[COMMON] PTR void 
  7485 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7486 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7487 ;; Auto vars:     Size  Location     Type
  7488 ;;		None
  7489 ;; Return value:  Size  Location     Type
  7490 ;;                  1    wreg      enum E360
  7491 ;; Registers used:
  7492 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7493 ;; Tracked objects:
  7494 ;;		On entry : 0/0
  7495 ;;		On exit  : 0/0
  7496 ;;		Unchanged: 0/0
  7497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7498 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7501 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7502 ;;Total ram usage:        1 bytes
  7503 ;; Hardware stack levels used: 1
  7504 ;; Hardware stack levels required when called: 2
  7505 ;; This function calls:
  7506 ;;		_I2C_SetBuffer
  7507 ;;		_I2C_SetDataCompleteCallback
  7508 ;; This function is called by:
  7509 ;;		_I2C_ReadDataBlock
  7510 ;;		_I2C_DO_TX
  7511 ;;		_I2C_DO_RX
  7512 ;;		_I2C_DO_TX_EMPTY
  7513 ;;		_I2C_DO_ADDRESS_NACK
  7514 ;;		_I2C_DO_RX_EMPTY
  7515 ;; This function uses a non-reentrant model
  7516 ;;
  7517                           
  7518                           
  7519                           ;psect for function _rdBlkRegCompleteHandler
  7520  05D4                     _rdBlkRegCompleteHandler:
  7521  05D4                     i1l2962:	
  7522                           ;incstack = 0
  7523                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  7524                           
  7525                           
  7526                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
  7527  05D4  0879               	movf	rdBlkRegCompleteHandler@ptr,w
  7528  05D5  0086               	movwf	6
  7529  05D6  0187               	clrf	7
  7530  05D7  3F40               	moviw [0]fsr1
  7531  05D8  00F0               	movwf	I2C_SetBuffer@bufferSize
  7532  05D9  3F41               	moviw [1]fsr1
  7533  05DA  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7534  05DB  0879               	movf	rdBlkRegCompleteHandler@ptr,w
  7535  05DC  3E02               	addlw	2
  7536  05DD  0086               	movwf	6
  7537  05DE  0187               	clrf	7
  7538  05DF  0801               	movf	1,w
  7539  05E0  3186  2655  3185   	fcall	_I2C_SetBuffer
  7540                           
  7541                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7542  05E3  3000               	movlw	0
  7543  05E4  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7544  05E5  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7545  05E6  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7546  05E7  3186  2681  3185   	fcall	_I2C_SetDataCompleteCallback
  7547  05EA                     i1l2964:
  7548                           
  7549                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
  7550  05EA  3002               	movlw	2
  7551  05EB                     i1l104:
  7552  05EB  0008               	return
  7553  05EC                     __end_of_rdBlkRegCompleteHandler:
  7554                           
  7555                           	psect	text53
  7556  0611                     __ptext53:	
  7557 ;; *************** function _wr1RegCompleteHandler *****************
  7558 ;; Defined at:
  7559 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
  7560 ;; Parameters:    Size  Location     Type
  7561 ;;  ptr             1    9[COMMON] PTR void 
  7562 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7563 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7564 ;; Auto vars:     Size  Location     Type
  7565 ;;		None
  7566 ;; Return value:  Size  Location     Type
  7567 ;;                  1    wreg      enum E360
  7568 ;; Registers used:
  7569 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7570 ;; Tracked objects:
  7571 ;;		On entry : 0/0
  7572 ;;		On exit  : 0/0
  7573 ;;		Unchanged: 0/0
  7574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7575 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7578 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7579 ;;Total ram usage:        1 bytes
  7580 ;; Hardware stack levels used: 1
  7581 ;; Hardware stack levels required when called: 2
  7582 ;; This function calls:
  7583 ;;		_I2C_SetBuffer
  7584 ;;		_I2C_SetDataCompleteCallback
  7585 ;; This function is called by:
  7586 ;;		_I2C_Write1ByteRegister
  7587 ;;		_I2C_DO_TX
  7588 ;;		_I2C_DO_RX
  7589 ;;		_I2C_DO_TX_EMPTY
  7590 ;;		_I2C_DO_ADDRESS_NACK
  7591 ;;		_I2C_DO_RX_EMPTY
  7592 ;; This function uses a non-reentrant model
  7593 ;;
  7594                           
  7595                           
  7596                           ;psect for function _wr1RegCompleteHandler
  7597  0611                     _wr1RegCompleteHandler:
  7598  0611                     i1l2946:	
  7599                           ;incstack = 0
  7600                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7601                           
  7602                           
  7603                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
  7604  0611  3001               	movlw	1
  7605  0612  00F0               	movwf	I2C_SetBuffer@bufferSize
  7606  0613  3000               	movlw	0
  7607  0614  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7608  0615  0879               	movf	wr1RegCompleteHandler@ptr,w
  7609  0616  3186  2655  3186   	fcall	_I2C_SetBuffer
  7610  0619                     i1l2948:
  7611                           
  7612                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7613  0619  3000               	movlw	0
  7614  061A  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7615  061B  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7616  061C  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7617  061D  3186  2681  3186   	fcall	_I2C_SetDataCompleteCallback
  7618  0620                     i1l2950:
  7619                           
  7620                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
  7621  0620  3004               	movlw	4
  7622  0621                     i1l98:
  7623  0621  0008               	return
  7624  0622                     __end_of_wr1RegCompleteHandler:
  7625                           
  7626                           	psect	text54
  7627  0622                     __ptext54:	
  7628 ;; *************** function _rd2RegCompleteHandler *****************
  7629 ;; Defined at:
  7630 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
  7631 ;; Parameters:    Size  Location     Type
  7632 ;;  ptr             1    9[COMMON] PTR void 
  7633 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7634 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7635 ;; Auto vars:     Size  Location     Type
  7636 ;;		None
  7637 ;; Return value:  Size  Location     Type
  7638 ;;                  1    wreg      enum E360
  7639 ;; Registers used:
  7640 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7641 ;; Tracked objects:
  7642 ;;		On entry : 0/0
  7643 ;;		On exit  : 0/0
  7644 ;;		Unchanged: 0/0
  7645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7646 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7649 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7650 ;;Total ram usage:        1 bytes
  7651 ;; Hardware stack levels used: 1
  7652 ;; Hardware stack levels required when called: 2
  7653 ;; This function calls:
  7654 ;;		_I2C_SetBuffer
  7655 ;;		_I2C_SetDataCompleteCallback
  7656 ;; This function is called by:
  7657 ;;		_I2C_Read2ByteRegister
  7658 ;;		_I2C_DO_TX
  7659 ;;		_I2C_DO_RX
  7660 ;;		_I2C_DO_TX_EMPTY
  7661 ;;		_I2C_DO_ADDRESS_NACK
  7662 ;;		_I2C_DO_RX_EMPTY
  7663 ;; This function uses a non-reentrant model
  7664 ;;
  7665                           
  7666                           
  7667                           ;psect for function _rd2RegCompleteHandler
  7668  0622                     _rd2RegCompleteHandler:
  7669  0622                     i1l2938:	
  7670                           ;incstack = 0
  7671                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7672                           
  7673                           
  7674                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
  7675  0622  3002               	movlw	2
  7676  0623  00F0               	movwf	I2C_SetBuffer@bufferSize
  7677  0624  3000               	movlw	0
  7678  0625  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7679  0626  0879               	movf	rd2RegCompleteHandler@ptr,w
  7680  0627  3186  2655  3186   	fcall	_I2C_SetBuffer
  7681  062A                     i1l2940:
  7682                           
  7683                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7684  062A  3000               	movlw	0
  7685  062B  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7686  062C  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7687  062D  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7688  062E  3186  2681  3186   	fcall	_I2C_SetDataCompleteCallback
  7689  0631                     i1l2942:
  7690                           
  7691                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
  7692  0631  3002               	movlw	2
  7693  0632                     i1l95:
  7694  0632  0008               	return
  7695  0633                     __end_of_rd2RegCompleteHandler:
  7696                           
  7697                           	psect	text55
  7698  0633                     __ptext55:	
  7699 ;; *************** function _rd1RegCompleteHandler *****************
  7700 ;; Defined at:
  7701 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
  7702 ;; Parameters:    Size  Location     Type
  7703 ;;  ptr             1    9[COMMON] PTR void 
  7704 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7705 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7706 ;; Auto vars:     Size  Location     Type
  7707 ;;		None
  7708 ;; Return value:  Size  Location     Type
  7709 ;;                  1    wreg      enum E360
  7710 ;; Registers used:
  7711 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7712 ;; Tracked objects:
  7713 ;;		On entry : 0/0
  7714 ;;		On exit  : 0/0
  7715 ;;		Unchanged: 0/0
  7716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7717 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7720 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7721 ;;Total ram usage:        1 bytes
  7722 ;; Hardware stack levels used: 1
  7723 ;; Hardware stack levels required when called: 2
  7724 ;; This function calls:
  7725 ;;		_I2C_SetBuffer
  7726 ;;		_I2C_SetDataCompleteCallback
  7727 ;; This function is called by:
  7728 ;;		_I2C_Read1ByteRegister
  7729 ;;		_I2C_DO_TX
  7730 ;;		_I2C_DO_RX
  7731 ;;		_I2C_DO_TX_EMPTY
  7732 ;;		_I2C_DO_ADDRESS_NACK
  7733 ;;		_I2C_DO_RX_EMPTY
  7734 ;; This function uses a non-reentrant model
  7735 ;;
  7736                           
  7737                           
  7738                           ;psect for function _rd1RegCompleteHandler
  7739  0633                     _rd1RegCompleteHandler:
  7740  0633                     i1l2930:	
  7741                           ;incstack = 0
  7742                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7743                           
  7744                           
  7745                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
  7746  0633  3001               	movlw	1
  7747  0634  00F0               	movwf	I2C_SetBuffer@bufferSize
  7748  0635  3000               	movlw	0
  7749  0636  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7750  0637  0879               	movf	rd1RegCompleteHandler@ptr,w
  7751  0638  3186  2655  3186   	fcall	_I2C_SetBuffer
  7752  063B                     i1l2932:
  7753                           
  7754                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7755  063B  3000               	movlw	0
  7756  063C  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7757  063D  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7758  063E  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7759  063F  3186  2681  3186   	fcall	_I2C_SetDataCompleteCallback
  7760  0642                     i1l2934:
  7761                           
  7762                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
  7763  0642  3002               	movlw	2
  7764  0643                     i1l92:
  7765  0643  0008               	return
  7766  0644                     __end_of_rd1RegCompleteHandler:
  7767                           
  7768                           	psect	text56
  7769  0644                     __ptext56:	
  7770 ;; *************** function _wr2RegCompleteHandler *****************
  7771 ;; Defined at:
  7772 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
  7773 ;; Parameters:    Size  Location     Type
  7774 ;;  ptr             1    9[COMMON] PTR void 
  7775 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7776 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7777 ;; Auto vars:     Size  Location     Type
  7778 ;;		None
  7779 ;; Return value:  Size  Location     Type
  7780 ;;                  1    wreg      enum E360
  7781 ;; Registers used:
  7782 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7783 ;; Tracked objects:
  7784 ;;		On entry : 0/0
  7785 ;;		On exit  : 0/0
  7786 ;;		Unchanged: 0/0
  7787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7788 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7791 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7792 ;;Total ram usage:        1 bytes
  7793 ;; Hardware stack levels used: 1
  7794 ;; Hardware stack levels required when called: 2
  7795 ;; This function calls:
  7796 ;;		_I2C_SetBuffer
  7797 ;;		_I2C_SetDataCompleteCallback
  7798 ;; This function is called by:
  7799 ;;		_I2C_Write2ByteRegister
  7800 ;;		_I2C_DO_TX
  7801 ;;		_I2C_DO_RX
  7802 ;;		_I2C_DO_TX_EMPTY
  7803 ;;		_I2C_DO_ADDRESS_NACK
  7804 ;;		_I2C_DO_RX_EMPTY
  7805 ;; This function uses a non-reentrant model
  7806 ;;
  7807                           
  7808                           
  7809                           ;psect for function _wr2RegCompleteHandler
  7810  0644                     _wr2RegCompleteHandler:
  7811  0644                     i1l2954:	
  7812                           ;incstack = 0
  7813                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7814                           
  7815                           
  7816                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
  7817  0644  3002               	movlw	2
  7818  0645  00F0               	movwf	I2C_SetBuffer@bufferSize
  7819  0646  3000               	movlw	0
  7820  0647  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7821  0648  0879               	movf	wr2RegCompleteHandler@ptr,w
  7822  0649  3186  2655  3186   	fcall	_I2C_SetBuffer
  7823  064C                     i1l2956:
  7824                           
  7825                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7826  064C  3000               	movlw	0
  7827  064D  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7828  064E  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7829  064F  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7830  0650  3186  2681  3186   	fcall	_I2C_SetDataCompleteCallback
  7831  0653                     i1l2958:
  7832                           
  7833                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
  7834  0653  3004               	movlw	4
  7835  0654                     i1l101:
  7836  0654  0008               	return
  7837  0655                     __end_of_wr2RegCompleteHandler:
  7838                           
  7839                           	psect	text57
  7840  0681                     __ptext57:	
  7841 ;; *************** function _I2C_SetDataCompleteCallback *****************
  7842 ;; Defined at:
  7843 ;;		line 274 in file "mcc_generated_files/i2c_master.c"
  7844 ;; Parameters:    Size  Location     Type
  7845 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
  7846 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  7847 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  7848 ;;  ptr             1    7[COMMON] PTR void 
  7849 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7850 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7851 ;; Auto vars:     Size  Location     Type
  7852 ;;		None
  7853 ;; Return value:  Size  Location     Type
  7854 ;;                  1    wreg      void 
  7855 ;; Registers used:
  7856 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7857 ;; Tracked objects:
  7858 ;;		On entry : 0/0
  7859 ;;		On exit  : 0/0
  7860 ;;		Unchanged: 0/0
  7861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7862 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7864 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7865 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7866 ;;Total ram usage:        4 bytes
  7867 ;; Hardware stack levels used: 1
  7868 ;; Hardware stack levels required when called: 1
  7869 ;; This function calls:
  7870 ;;		_I2C_SetCallback
  7871 ;; This function is called by:
  7872 ;;		_rd1RegCompleteHandler
  7873 ;;		_rd2RegCompleteHandler
  7874 ;;		_wr1RegCompleteHandler
  7875 ;;		_wr2RegCompleteHandler
  7876 ;;		_rdBlkRegCompleteHandler
  7877 ;;		_I2C_Read1ByteRegister
  7878 ;;		_I2C_Read2ByteRegister
  7879 ;;		_I2C_Write1ByteRegister
  7880 ;;		_I2C_Write2ByteRegister
  7881 ;;		_I2C_ReadDataBlock
  7882 ;; This function uses a non-reentrant model
  7883 ;;
  7884                           
  7885                           
  7886                           ;psect for function _I2C_SetDataCompleteCallback
  7887  0681                     _I2C_SetDataCompleteCallback:
  7888  0681                     i1l2902:	
  7889                           ;incstack = 0
  7890                           ; Regs used in _I2C_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  7891                           
  7892                           
  7893                           ;mcc_generated_files/i2c_master.c: 274: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 275: {;mcc_generated_files/i2c_master.c
      +                          : 276:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  7894  0681  0876               	movf	I2C_SetDataCompleteCallback@cb+1,w
  7895  0682  00F1               	movwf	I2C_SetCallback@cb+1
  7896  0683  0875               	movf	I2C_SetDataCompleteCallback@cb,w
  7897  0684  00F0               	movwf	I2C_SetCallback@cb
  7898  0685  0877               	movf	I2C_SetDataCompleteCallback@ptr,w
  7899  0686  00F8               	movwf	??_I2C_SetDataCompleteCallback
  7900  0687  0878               	movf	??_I2C_SetDataCompleteCallback,w
  7901  0688  00F2               	movwf	I2C_SetCallback@ptr
  7902  0689  3000               	movlw	0
  7903  068A  3185  2556  3186   	fcall	_I2C_SetCallback
  7904  068D                     i1l540:
  7905  068D  0008               	return
  7906  068E                     __end_of_I2C_SetDataCompleteCallback:
  7907                           
  7908                           	psect	text58
  7909  0556                     __ptext58:	
  7910 ;; *************** function _I2C_SetCallback *****************
  7911 ;; Defined at:
  7912 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
  7913 ;; Parameters:    Size  Location     Type
  7914 ;;  idx             1    wreg     enum E3356
  7915 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
  7916 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  7917 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  7918 ;;  ptr             1    2[COMMON] PTR void 
  7919 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7920 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7921 ;; Auto vars:     Size  Location     Type
  7922 ;;  idx             1    4[COMMON] enum E3356
  7923 ;; Return value:  Size  Location     Type
  7924 ;;                  1    wreg      void 
  7925 ;; Registers used:
  7926 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7927 ;; Tracked objects:
  7928 ;;		On entry : 0/0
  7929 ;;		On exit  : 0/0
  7930 ;;		Unchanged: 0/0
  7931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7932 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7933 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7934 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7935 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7936 ;;Total ram usage:        5 bytes
  7937 ;; Hardware stack levels used: 1
  7938 ;; This function calls:
  7939 ;;		Nothing
  7940 ;; This function is called by:
  7941 ;;		_I2C_SetDataCompleteCallback
  7942 ;;		_I2C_SetWriteCollisionCallback
  7943 ;;		_I2C_SetAddressNackCallback
  7944 ;;		_I2C_SetDataNackCallback
  7945 ;;		_I2C_SetTimeoutCallback
  7946 ;; This function uses a non-reentrant model
  7947 ;;
  7948                           
  7949                           
  7950                           ;psect for function _I2C_SetCallback
  7951  0556                     _I2C_SetCallback:
  7952                           
  7953                           ;incstack = 0
  7954                           ; Regs used in _I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
  7955                           ;I2C_SetCallback@idx stored from wreg
  7956  0556  00F4               	movwf	I2C_SetCallback@idx
  7957  0557                     i1l2896:
  7958                           
  7959                           ;mcc_generated_files/i2c_master.c: 304: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 305: {;mcc_generate
      +                          d_files/i2c_master.c: 306:     if(cb)
  7960  0557  0870               	movf	I2C_SetCallback@cb,w
  7961  0558  0471               	iorwf	I2C_SetCallback@cb+1,w
  7962  0559  1903               	btfsc	3,2
  7963  055A  2D5C               	goto	u72_21
  7964  055B  2D5D               	goto	u72_20
  7965  055C                     u72_21:
  7966  055C  2D6E               	goto	i1l2900
  7967  055D                     u72_20:
  7968  055D                     i1l2898:
  7969                           
  7970                           ;mcc_generated_files/i2c_master.c: 307:     {;mcc_generated_files/i2c_master.c: 308:    
      +                               I2C_Status.callbackTable[idx] = cb;
  7971  055D  3574               	lslf	I2C_SetCallback@idx,w
  7972  055E  3EA0               	addlw	(low (_I2C_Status| 0))& (0+255)
  7973  055F  0086               	movwf	6
  7974  0560  0187               	clrf	7
  7975  0561  0870               	movf	I2C_SetCallback@cb,w
  7976  0562  3FC0               	movwi [0]fsr1
  7977  0563  0871               	movf	I2C_SetCallback@cb+1,w
  7978  0564  3FC1               	movwi [1]fsr1
  7979                           
  7980                           ;mcc_generated_files/i2c_master.c: 309:         I2C_Status.callbackPayload[idx] = ptr;
  7981  0565  0872               	movf	I2C_SetCallback@ptr,w
  7982  0566  00F3               	movwf	??_I2C_SetCallback
  7983  0567  0874               	movf	I2C_SetCallback@idx,w
  7984  0568  3EAC               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  7985  0569  0086               	movwf	6
  7986  056A  0187               	clrf	7
  7987  056B  0873               	movf	??_I2C_SetCallback,w
  7988  056C  0081               	movwf	1
  7989                           
  7990                           ;mcc_generated_files/i2c_master.c: 310:     }
  7991  056D  2D7B               	goto	i1l560
  7992  056E                     i1l2900:
  7993                           
  7994                           ;mcc_generated_files/i2c_master.c: 312:     {;mcc_generated_files/i2c_master.c: 313:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  7995  056E  3574               	lslf	I2C_SetCallback@idx,w
  7996  056F  3EA0               	addlw	(low (_I2C_Status| 0))& (0+255)
  7997  0570  0086               	movwf	6
  7998  0571  0187               	clrf	7
  7999  0572  30C3               	movlw	low _I2C_CallbackReturnStop
  8000  0573  3FC0               	movwi [0]fsr1
  8001  0574  3007               	movlw	high _I2C_CallbackReturnStop
  8002  0575  3FC1               	movwi [1]fsr1
  8003                           
  8004                           ;mcc_generated_files/i2c_master.c: 314:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  8005  0576  0874               	movf	I2C_SetCallback@idx,w
  8006  0577  3EAC               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  8007  0578  0086               	movwf	6
  8008  0579  0187               	clrf	7
  8009  057A  0181               	clrf	1
  8010  057B                     i1l560:
  8011  057B  0008               	return
  8012  057C                     __end_of_I2C_SetCallback:
  8013                           
  8014                           	psect	text59
  8015  0655                     __ptext59:	
  8016 ;; *************** function _I2C_SetBuffer *****************
  8017 ;; Defined at:
  8018 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
  8019 ;; Parameters:    Size  Location     Type
  8020 ;;  buffer          1    wreg     PTR void 
  8021 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
  8022 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  8023 ;;		 -> NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
  8024 ;;  bufferSize      2    0[COMMON] unsigned int 
  8025 ;; Auto vars:     Size  Location     Type
  8026 ;;  buffer          1    3[COMMON] PTR void 
  8027 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
  8028 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  8029 ;;		 -> NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
  8030 ;; Return value:  Size  Location     Type
  8031 ;;                  1    wreg      void 
  8032 ;; Registers used:
  8033 ;;		wreg
  8034 ;; Tracked objects:
  8035 ;;		On entry : 0/0
  8036 ;;		On exit  : 0/0
  8037 ;;		Unchanged: 0/0
  8038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8039 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8040 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8041 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8042 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8043 ;;Total ram usage:        4 bytes
  8044 ;; Hardware stack levels used: 1
  8045 ;; This function calls:
  8046 ;;		Nothing
  8047 ;; This function is called by:
  8048 ;;		_rd1RegCompleteHandler
  8049 ;;		_rd2RegCompleteHandler
  8050 ;;		_wr1RegCompleteHandler
  8051 ;;		_wr2RegCompleteHandler
  8052 ;;		_rdBlkRegCompleteHandler
  8053 ;;		_I2C_Read1ByteRegister
  8054 ;;		_I2C_Read2ByteRegister
  8055 ;;		_I2C_Write1ByteRegister
  8056 ;;		_I2C_Write2ByteRegister
  8057 ;;		_I2C_WriteNBytes
  8058 ;;		_I2C_ReadNBytes
  8059 ;;		_I2C_ReadDataBlock
  8060 ;; This function uses a non-reentrant model
  8061 ;;
  8062                           
  8063                           
  8064                           ;psect for function _I2C_SetBuffer
  8065  0655                     _I2C_SetBuffer:
  8066                           
  8067                           ;incstack = 0
  8068                           ; Regs used in _I2C_SetBuffer: [wreg]
  8069                           ;I2C_SetBuffer@buffer stored from wreg
  8070  0655  00F3               	movwf	I2C_SetBuffer@buffer
  8071  0656                     i1l2904:
  8072                           
  8073                           ;mcc_generated_files/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 265: {;mcc_generated_files/i2c_master.c: 266:     
      +                          if(I2C_Status.bufferFree)
  8074  0656  0021               	movlb	1	; select bank1
  8075  0657  1DBC               	btfss	(_I2C_Status^(0+128)+28),3
  8076  0658  2E5A               	goto	u73_21
  8077  0659  2E5B               	goto	u73_20
  8078  065A                     u73_21:
  8079  065A  2E64               	goto	i1l537
  8080  065B                     u73_20:
  8081  065B                     i1l2906:
  8082                           
  8083                           ;mcc_generated_files/i2c_master.c: 267:     {;mcc_generated_files/i2c_master.c: 268:    
      +                               I2C_Status.data_ptr = buffer;
  8084  065B  0873               	movf	I2C_SetBuffer@buffer,w
  8085  065C  00F2               	movwf	??_I2C_SetBuffer
  8086  065D  0872               	movf	??_I2C_SetBuffer,w
  8087  065E  00B7               	movwf	(low ((_I2C_Status| 0+23)))^(0+128)
  8088                           
  8089                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.data_length = bufferSize;
  8090  065F  0871               	movf	I2C_SetBuffer@bufferSize+1,w
  8091  0660  00B9               	movwf	((_I2C_Status+1)^(0+128)+24)
  8092  0661  0870               	movf	I2C_SetBuffer@bufferSize,w
  8093  0662  00B8               	movwf	(_I2C_Status^(0+128)+24)
  8094  0663                     i1l2908:
  8095                           
  8096                           ;mcc_generated_files/i2c_master.c: 270:         I2C_Status.bufferFree = 0;
  8097  0663  11BC               	bcf	(_I2C_Status^(0+128)+28),3
  8098  0664                     i1l537:
  8099  0664  0008               	return
  8100  0665                     __end_of_I2C_SetBuffer:
  8101                           
  8102                           	psect	text60
  8103  07BB                     __ptext60:	
  8104 ;; *************** function _I2C_MasterStop *****************
  8105 ;; Defined at:
  8106 ;;		line 594 in file "mcc_generated_files/i2c_master.c"
  8107 ;; Parameters:    Size  Location     Type
  8108 ;;		None
  8109 ;; Auto vars:     Size  Location     Type
  8110 ;;		None
  8111 ;; Return value:  Size  Location     Type
  8112 ;;                  1    wreg      void 
  8113 ;; Registers used:
  8114 ;;		None
  8115 ;; Tracked objects:
  8116 ;;		On entry : 0/0
  8117 ;;		On exit  : 0/0
  8118 ;;		Unchanged: 0/0
  8119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8124 ;;Total ram usage:        0 bytes
  8125 ;; Hardware stack levels used: 1
  8126 ;; This function calls:
  8127 ;;		Nothing
  8128 ;; This function is called by:
  8129 ;;		_I2C_DO_SEND_STOP
  8130 ;; This function uses a non-reentrant model
  8131 ;;
  8132                           
  8133                           
  8134                           ;psect for function _I2C_MasterStop
  8135  07BB                     _I2C_MasterStop:
  8136  07BB                     i1l2912:	
  8137                           ;incstack = 0
  8138                           ; Regs used in _I2C_MasterStop: []
  8139                           
  8140                           
  8141                           ;mcc_generated_files/i2c_master.c: 596:     SSPCON2bits.PEN = 1;
  8142  07BB  0024               	movlb	4	; select bank4
  8143  07BC  1516               	bsf	22,2	;volatile
  8144  07BD                     i1l703:
  8145  07BD  0008               	return
  8146  07BE                     __end_of_I2C_MasterStop:
  8147                           
  8148                           	psect	text61
  8149  07BE                     __ptext61:	
  8150 ;; *************** function _I2C_MasterEnableRestart *****************
  8151 ;; Defined at:
  8152 ;;		line 574 in file "mcc_generated_files/i2c_master.c"
  8153 ;; Parameters:    Size  Location     Type
  8154 ;;		None
  8155 ;; Auto vars:     Size  Location     Type
  8156 ;;		None
  8157 ;; Return value:  Size  Location     Type
  8158 ;;                  1    wreg      void 
  8159 ;; Registers used:
  8160 ;;		None
  8161 ;; Tracked objects:
  8162 ;;		On entry : 0/0
  8163 ;;		On exit  : 0/0
  8164 ;;		Unchanged: 0/0
  8165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8170 ;;Total ram usage:        0 bytes
  8171 ;; Hardware stack levels used: 1
  8172 ;; This function calls:
  8173 ;;		Nothing
  8174 ;; This function is called by:
  8175 ;;		_I2C_DO_SEND_RESTART_READ
  8176 ;;		_I2C_DO_SEND_RESTART_WRITE
  8177 ;;		_I2C_DO_SEND_RESTART
  8178 ;;		_I2C_DO_RX_EMPTY
  8179 ;; This function uses a non-reentrant model
  8180 ;;
  8181                           
  8182                           
  8183                           ;psect for function _I2C_MasterEnableRestart
  8184  07BE                     _I2C_MasterEnableRestart:
  8185  07BE                     i1l2910:	
  8186                           ;incstack = 0
  8187                           ; Regs used in _I2C_MasterEnableRestart: []
  8188                           
  8189                           
  8190                           ;mcc_generated_files/i2c_master.c: 576:     SSPCON2bits.RSEN = 1;
  8191  07BE  0024               	movlb	4	; select bank4
  8192  07BF  1496               	bsf	22,1	;volatile
  8193  07C0                     i1l691:
  8194  07C0  0008               	return
  8195  07C1                     __end_of_I2C_MasterEnableRestart:
  8196                           
  8197                           	psect	text62
  8198  057C                     __ptext62:	
  8199 ;; *************** function _EUSART_Transmit_ISR *****************
  8200 ;; Defined at:
  8201 ;;		line 206 in file "mcc_generated_files/eusart.c"
  8202 ;; Parameters:    Size  Location     Type
  8203 ;;		None
  8204 ;; Auto vars:     Size  Location     Type
  8205 ;;		None
  8206 ;; Return value:  Size  Location     Type
  8207 ;;                  1    wreg      void 
  8208 ;; Registers used:
  8209 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8210 ;; Tracked objects:
  8211 ;;		On entry : 0/0
  8212 ;;		On exit  : 0/0
  8213 ;;		Unchanged: 0/0
  8214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8217 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8218 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8219 ;;Total ram usage:        1 bytes
  8220 ;; Hardware stack levels used: 1
  8221 ;; This function calls:
  8222 ;;		Nothing
  8223 ;; This function is called by:
  8224 ;;		_EUSART_Initialize
  8225 ;;		_INTERRUPT_InterruptManager
  8226 ;; This function uses a non-reentrant model
  8227 ;;
  8228                           
  8229                           
  8230                           ;psect for function _EUSART_Transmit_ISR
  8231  057C                     _EUSART_Transmit_ISR:
  8232  057C                     i1l3376:	
  8233                           ;incstack = 0
  8234                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  8235                           
  8236                           
  8237                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  8238  057C  3008               	movlw	8
  8239  057D  0020               	movlb	0	; select bank0
  8240  057E  0267               	subwf	_eusartTxBufferRemaining,w	;volatile
  8241  057F  1803               	skipnc
  8242  0580  2D82               	goto	u90_21
  8243  0581  2D83               	goto	u90_20
  8244  0582                     u90_21:
  8245  0582  2D9B               	goto	i1l332
  8246  0583                     u90_20:
  8247  0583                     i1l3378:
  8248                           
  8249                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  8250  0583  0868               	movf	_eusartTxTail,w
  8251  0584  3ECD               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  8252  0585  0086               	movwf	6
  8253  0586  0187               	clrf	7
  8254  0587  0801               	movf	1,w
  8255  0588  0023               	movlb	3	; select bank3
  8256  0589  009A               	movwf	26	;volatile
  8257  058A                     i1l3380:
  8258  058A  3001               	movlw	1
  8259  058B  00F0               	movwf	??_EUSART_Transmit_ISR
  8260  058C  0870               	movf	??_EUSART_Transmit_ISR,w
  8261  058D  0020               	movlb	0	; select bank0
  8262  058E  07E8               	addwf	_eusartTxTail,f	;volatile
  8263  058F                     i1l3382:
  8264                           
  8265                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  8266  058F  3008               	movlw	8
  8267  0590  0268               	subwf	_eusartTxTail,w	;volatile
  8268  0591  1C03               	skipc
  8269  0592  2D94               	goto	u91_21
  8270  0593  2D95               	goto	u91_20
  8271  0594                     u91_21:
  8272  0594  2D96               	goto	i1l3386
  8273  0595                     u91_20:
  8274  0595                     i1l3384:
  8275                           
  8276                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
  8277  0595  01E8               	clrf	_eusartTxTail	;volatile
  8278  0596                     i1l3386:
  8279                           
  8280                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
  8281  0596  3001               	movlw	1
  8282  0597  00F0               	movwf	??_EUSART_Transmit_ISR
  8283  0598  0870               	movf	??_EUSART_Transmit_ISR,w
  8284  0599  07E7               	addwf	_eusartTxBufferRemaining,f	;volatile
  8285                           
  8286                           ;mcc_generated_files/eusart.c: 218:     }
  8287  059A  2D9D               	goto	i1l335
  8288  059B                     i1l332:	
  8289                           ;mcc_generated_files/eusart.c: 219:     else
  8290                           
  8291                           
  8292                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TXIE = 0;
  8293  059B  0021               	movlb	1	; select bank1
  8294  059C  1211               	bcf	17,4	;volatile
  8295  059D                     i1l335:
  8296  059D  0008               	return
  8297  059E                     __end_of_EUSART_Transmit_ISR:
  8298                           
  8299                           	psect	text63
  8300  03EA                     __ptext63:	
  8301 ;; *************** function _EUSART_Receive_ISR *****************
  8302 ;; Defined at:
  8303 ;;		line 225 in file "mcc_generated_files/eusart.c"
  8304 ;; Parameters:    Size  Location     Type
  8305 ;;		None
  8306 ;; Auto vars:     Size  Location     Type
  8307 ;;		None
  8308 ;; Return value:  Size  Location     Type
  8309 ;;                  1    wreg      void 
  8310 ;; Registers used:
  8311 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8312 ;; Tracked objects:
  8313 ;;		On entry : 0/0
  8314 ;;		On exit  : 0/0
  8315 ;;		Unchanged: 0/0
  8316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8321 ;;Total ram usage:        0 bytes
  8322 ;; Hardware stack levels used: 1
  8323 ;; Hardware stack levels required when called: 2
  8324 ;; This function calls:
  8325 ;;		Absolute function
  8326 ;;		_EUSART_DefaultErrorHandler
  8327 ;;		_EUSART_DefaultFramingErrorHandler
  8328 ;;		_EUSART_DefaultOverrunErrorHandler
  8329 ;;		_EUSART_RxDataHandler
  8330 ;; This function is called by:
  8331 ;;		_EUSART_Initialize
  8332 ;;		_INTERRUPT_InterruptManager
  8333 ;; This function uses a non-reentrant model
  8334 ;;
  8335                           
  8336                           
  8337                           ;psect for function _EUSART_Receive_ISR
  8338  03EA                     _EUSART_Receive_ISR:
  8339  03EA                     i1l3388:	
  8340                           ;incstack = 0
  8341                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8342                           
  8343                           
  8344                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  8345  03EA  0020               	movlb	0	; select bank0
  8346  03EB  0866               	movf	_eusartRxHead,w	;volatile
  8347  03EC  3EBD               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  8348  03ED  0086               	movwf	6
  8349  03EE  0187               	clrf	7
  8350  03EF  0181               	clrf	1
  8351  03F0                     i1l3390:
  8352                           
  8353                           ;mcc_generated_files/eusart.c: 230:     if(RCSTAbits.FERR){
  8354  03F0  0023               	movlb	3	; select bank3
  8355  03F1  1D1D               	btfss	29,2	;volatile
  8356  03F2  2BF4               	goto	u92_21
  8357  03F3  2BF5               	goto	u92_20
  8358  03F4                     u92_21:
  8359  03F4  2C00               	goto	i1l3396
  8360  03F5                     u92_20:
  8361  03F5                     i1l3392:
  8362                           
  8363                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  8364  03F5  0020               	movlb	0	; select bank0
  8365  03F6  0866               	movf	_eusartRxHead,w	;volatile
  8366  03F7  3EBD               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  8367  03F8  0086               	movwf	6
  8368  03F9  0187               	clrf	7
  8369  03FA  1481               	bsf	1,1
  8370  03FB                     i1l3394:
  8371                           
  8372                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
  8373  03FB  085A               	movf	_EUSART_FramingErrorHandler+1,w
  8374  03FC  008A               	movwf	10
  8375  03FD  0859               	movf	_EUSART_FramingErrorHandler,w
  8376  03FE  000A               	callw
  8377  03FF  3183               	pagesel	$
  8378  0400                     i1l3396:
  8379                           
  8380                           ;mcc_generated_files/eusart.c: 235:     if(RCSTAbits.OERR){
  8381  0400  0023               	movlb	3	; select bank3
  8382  0401  1C9D               	btfss	29,1	;volatile
  8383  0402  2C04               	goto	u93_21
  8384  0403  2C05               	goto	u93_20
  8385  0404                     u93_21:
  8386  0404  2C10               	goto	i1l3402
  8387  0405                     u93_20:
  8388  0405                     i1l3398:
  8389                           
  8390                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  8391  0405  0020               	movlb	0	; select bank0
  8392  0406  0866               	movf	_eusartRxHead,w	;volatile
  8393  0407  3EBD               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  8394  0408  0086               	movwf	6
  8395  0409  0187               	clrf	7
  8396  040A  1501               	bsf	1,2
  8397  040B                     i1l3400:
  8398                           
  8399                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
  8400  040B  0858               	movf	_EUSART_OverrunErrorHandler+1,w
  8401  040C  008A               	movwf	10
  8402  040D  0857               	movf	_EUSART_OverrunErrorHandler,w
  8403  040E  000A               	callw
  8404  040F  3183               	pagesel	$
  8405  0410                     i1l3402:
  8406                           
  8407                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
  8408  0410  0020               	movlb	0	; select bank0
  8409  0411  0866               	movf	_eusartRxHead,w	;volatile
  8410  0412  3EBD               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  8411  0413  0086               	movwf	6
  8412  0414  0187               	clrf	7
  8413  0415  0801               	movf	1,w
  8414  0416  1903               	btfsc	3,2
  8415  0417  2C19               	goto	u94_21
  8416  0418  2C1A               	goto	u94_20
  8417  0419                     u94_21:
  8418  0419  2C20               	goto	i1l3406
  8419  041A                     u94_20:
  8420  041A                     i1l3404:
  8421                           
  8422                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
  8423  041A  0856               	movf	_EUSART_ErrorHandler+1,w
  8424  041B  008A               	movwf	10
  8425  041C  0855               	movf	_EUSART_ErrorHandler,w
  8426  041D  000A               	callw
  8427  041E  3183               	pagesel	$
  8428                           
  8429                           ;mcc_generated_files/eusart.c: 242:     } else {
  8430  041F  2C23               	goto	i1l342
  8431  0420                     i1l3406:
  8432                           
  8433                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
  8434  0420  3185  25BA  3183   	fcall	_EUSART_RxDataHandler
  8435  0423                     i1l342:
  8436  0423  0008               	return
  8437  0424                     __end_of_EUSART_Receive_ISR:
  8438                           
  8439                           	psect	text64
  8440  07A7                     __ptext64:	
  8441 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  8442 ;; Defined at:
  8443 ;;		line 261 in file "mcc_generated_files/eusart.c"
  8444 ;; Parameters:    Size  Location     Type
  8445 ;;		None
  8446 ;; Auto vars:     Size  Location     Type
  8447 ;;		None
  8448 ;; Return value:  Size  Location     Type
  8449 ;;                  1    wreg      void 
  8450 ;; Registers used:
  8451 ;;		None
  8452 ;; Tracked objects:
  8453 ;;		On entry : 0/0
  8454 ;;		On exit  : 0/0
  8455 ;;		Unchanged: 0/0
  8456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8461 ;;Total ram usage:        0 bytes
  8462 ;; Hardware stack levels used: 1
  8463 ;; This function calls:
  8464 ;;		Nothing
  8465 ;; This function is called by:
  8466 ;;		_EUSART_Initialize
  8467 ;;		_EUSART_Receive_ISR
  8468 ;; This function uses a non-reentrant model
  8469 ;;
  8470                           
  8471                           
  8472                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  8473  07A7                     _EUSART_DefaultOverrunErrorHandler:
  8474  07A7                     i1l3332:	
  8475                           ;incstack = 0
  8476                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  8477                           
  8478                           
  8479                           ;mcc_generated_files/eusart.c: 264:     RCSTAbits.CREN = 0;
  8480  07A7  0023               	movlb	3	; select bank3
  8481  07A8  121D               	bcf	29,4	;volatile
  8482                           
  8483                           ;mcc_generated_files/eusart.c: 265:     RCSTAbits.CREN = 1;
  8484  07A9  161D               	bsf	29,4	;volatile
  8485  07AA                     i1l352:
  8486  07AA  0008               	return
  8487  07AB                     __end_of_EUSART_DefaultOverrunErrorHandler:
  8488                           
  8489                           	psect	text65
  8490  07C5                     __ptext65:	
  8491 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  8492 ;; Defined at:
  8493 ;;		line 259 in file "mcc_generated_files/eusart.c"
  8494 ;; Parameters:    Size  Location     Type
  8495 ;;		None
  8496 ;; Auto vars:     Size  Location     Type
  8497 ;;		None
  8498 ;; Return value:  Size  Location     Type
  8499 ;;                  1    wreg      void 
  8500 ;; Registers used:
  8501 ;;		None
  8502 ;; Tracked objects:
  8503 ;;		On entry : 0/0
  8504 ;;		On exit  : 0/0
  8505 ;;		Unchanged: 0/0
  8506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8511 ;;Total ram usage:        0 bytes
  8512 ;; Hardware stack levels used: 1
  8513 ;; This function calls:
  8514 ;;		Nothing
  8515 ;; This function is called by:
  8516 ;;		_EUSART_Initialize
  8517 ;;		_EUSART_Receive_ISR
  8518 ;; This function uses a non-reentrant model
  8519 ;;
  8520                           
  8521                           
  8522                           ;psect for function _EUSART_DefaultFramingErrorHandler
  8523  07C5                     _EUSART_DefaultFramingErrorHandler:
  8524  07C5                     i1l349:	
  8525                           ;incstack = 0
  8526                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  8527                           
  8528  07C5  0008               	return
  8529  07C6                     __end_of_EUSART_DefaultFramingErrorHandler:
  8530                           
  8531                           	psect	text66
  8532  07AB                     __ptext66:	
  8533 ;; *************** function _EUSART_DefaultErrorHandler *****************
  8534 ;; Defined at:
  8535 ;;		line 269 in file "mcc_generated_files/eusart.c"
  8536 ;; Parameters:    Size  Location     Type
  8537 ;;		None
  8538 ;; Auto vars:     Size  Location     Type
  8539 ;;		None
  8540 ;; Return value:  Size  Location     Type
  8541 ;;                  1    wreg      void 
  8542 ;; Registers used:
  8543 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8544 ;; Tracked objects:
  8545 ;;		On entry : 0/0
  8546 ;;		On exit  : 0/0
  8547 ;;		Unchanged: 0/0
  8548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8553 ;;Total ram usage:        0 bytes
  8554 ;; Hardware stack levels used: 1
  8555 ;; Hardware stack levels required when called: 1
  8556 ;; This function calls:
  8557 ;;		_EUSART_RxDataHandler
  8558 ;; This function is called by:
  8559 ;;		_EUSART_Initialize
  8560 ;;		_EUSART_Receive_ISR
  8561 ;; This function uses a non-reentrant model
  8562 ;;
  8563                           
  8564                           
  8565                           ;psect for function _EUSART_DefaultErrorHandler
  8566  07AB                     _EUSART_DefaultErrorHandler:
  8567  07AB                     i1l3334:	
  8568                           ;incstack = 0
  8569                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  8570                           
  8571                           
  8572                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
  8573  07AB  3185  25BA  3187   	fcall	_EUSART_RxDataHandler
  8574  07AE                     i1l355:
  8575  07AE  0008               	return
  8576  07AF                     __end_of_EUSART_DefaultErrorHandler:
  8577                           
  8578                           	psect	text67
  8579  05BA                     __ptext67:	
  8580 ;; *************** function _EUSART_RxDataHandler *****************
  8581 ;; Defined at:
  8582 ;;		line 249 in file "mcc_generated_files/eusart.c"
  8583 ;; Parameters:    Size  Location     Type
  8584 ;;		None
  8585 ;; Auto vars:     Size  Location     Type
  8586 ;;		None
  8587 ;; Return value:  Size  Location     Type
  8588 ;;                  1    wreg      void 
  8589 ;; Registers used:
  8590 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8591 ;; Tracked objects:
  8592 ;;		On entry : 0/0
  8593 ;;		On exit  : 0/0
  8594 ;;		Unchanged: 0/0
  8595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8598 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8599 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8600 ;;Total ram usage:        1 bytes
  8601 ;; Hardware stack levels used: 1
  8602 ;; This function calls:
  8603 ;;		Nothing
  8604 ;; This function is called by:
  8605 ;;		_EUSART_Receive_ISR
  8606 ;;		_EUSART_DefaultErrorHandler
  8607 ;; This function uses a non-reentrant model
  8608 ;;
  8609                           
  8610                           
  8611                           ;psect for function _EUSART_RxDataHandler
  8612  05BA                     _EUSART_RxDataHandler:
  8613  05BA                     i1l3070:	
  8614                           ;incstack = 0
  8615                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  8616                           
  8617                           
  8618                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RCREG;
  8619  05BA  0023               	movlb	3	; select bank3
  8620  05BB  0819               	movf	25,w	;volatile
  8621  05BC  00F0               	movwf	??_EUSART_RxDataHandler
  8622  05BD  0020               	movlb	0	; select bank0
  8623  05BE  0866               	movf	_eusartRxHead,w
  8624  05BF  3EC5               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  8625  05C0  0086               	movwf	6
  8626  05C1  0187               	clrf	7
  8627  05C2  0870               	movf	??_EUSART_RxDataHandler,w
  8628  05C3  0081               	movwf	1
  8629  05C4                     i1l3072:
  8630  05C4  3001               	movlw	1
  8631  05C5  00F0               	movwf	??_EUSART_RxDataHandler
  8632  05C6  0870               	movf	??_EUSART_RxDataHandler,w
  8633  05C7  07E6               	addwf	_eusartRxHead,f	;volatile
  8634  05C8                     i1l3074:
  8635                           
  8636                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  8637  05C8  3008               	movlw	8
  8638  05C9  0266               	subwf	_eusartRxHead,w	;volatile
  8639  05CA  1C03               	skipc
  8640  05CB  2DCD               	goto	u80_21
  8641  05CC  2DCE               	goto	u80_20
  8642  05CD                     u80_21:
  8643  05CD  2DCF               	goto	i1l3078
  8644  05CE                     u80_20:
  8645  05CE                     i1l3076:
  8646                           
  8647                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
  8648  05CE  01E6               	clrf	_eusartRxHead	;volatile
  8649  05CF                     i1l3078:
  8650                           
  8651                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
  8652  05CF  3001               	movlw	1
  8653  05D0  00F0               	movwf	??_EUSART_RxDataHandler
  8654  05D1  0870               	movf	??_EUSART_RxDataHandler,w
  8655  05D2  07E4               	addwf	_eusartRxCount,f	;volatile
  8656  05D3                     i1l346:
  8657  05D3  0008               	return
  8658  05D4                     __end_of_EUSART_RxDataHandler:
  8659  007E                     btemp	set	126	;btemp
  8660  007E                     int$flags	set	126
  8661  007E                     wtemp0	set	126
  8662                           
  8663                           	psect	idloc
  8664                           
  8665                           ;Config register IDLOC0 @ 0x8000
  8666                           ;	unspecified, using default values
  8667  8000                     	org	32768
  8668  8000  3FFF               	dw	16383
  8669                           
  8670                           ;Config register IDLOC1 @ 0x8001
  8671                           ;	unspecified, using default values
  8672  8001                     	org	32769
  8673  8001  3FFF               	dw	16383
  8674                           
  8675                           ;Config register IDLOC2 @ 0x8002
  8676                           ;	unspecified, using default values
  8677  8002                     	org	32770
  8678  8002  3FFF               	dw	16383
  8679                           
  8680                           ;Config register IDLOC3 @ 0x8003
  8681                           ;	unspecified, using default values
  8682  8003                     	org	32771
  8683  8003  3FFF               	dw	16383
  8684                           
  8685                           	psect	config
  8686                           
  8687                           ;Config register CONFIG1 @ 0x8007
  8688                           ;	Oscillator Selection
  8689                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  8690                           ;	Watchdog Timer Enable
  8691                           ;	WDTE = OFF, WDT disabled
  8692                           ;	Power-up Timer Enable
  8693                           ;	PWRTE = OFF, PWRT disabled
  8694                           ;	MCLR Pin Function Select
  8695                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  8696                           ;	Flash Program Memory Code Protection
  8697                           ;	CP = OFF, Program memory code protection is disabled
  8698                           ;	Data Memory Code Protection
  8699                           ;	CPD = OFF, Data memory code protection is disabled
  8700                           ;	Brown-out Reset Enable
  8701                           ;	BOREN = ON, Brown-out Reset enabled
  8702                           ;	Clock Out Enable
  8703                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  8704                           ;	Internal/External Switchover
  8705                           ;	IESO = ON, Internal/External Switchover mode is enabled
  8706                           ;	Fail-Safe Clock Monitor Enable
  8707                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  8708  8007                     	org	32775
  8709  8007  3FE4               	dw	16356
  8710                           
  8711                           ;Config register CONFIG2 @ 0x8008
  8712                           ;	Flash Memory Self-Write Protection
  8713                           ;	WRT = OFF, Write protection off
  8714                           ;	Voltage Regulator Capacitor Enable
  8715                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  8716                           ;	PLL Enable
  8717                           ;	PLLEN = ON, 4x PLL enabled
  8718                           ;	Stack Overflow/Underflow Reset Enable
  8719                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  8720                           ;	Brown-out Reset Voltage Selection
  8721                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  8722                           ;	Low-Voltage Programming Enable
  8723                           ;	LVP = ON, Low-voltage programming enabled
  8724  8008                     	org	32776
  8725  8008  3FFF               	dw	16383

Data Sizes:
    Strings     123
    Constant    32
    Data        0
    BSS         114
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     45      74
    BANK1            80      0      53
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_DO_TX$2305$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$2310	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$2305	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2304	const PTR FTN()enum E3338 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    S799$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S1933_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_12(CODE[11]), STR_11(CODE[11]), STR_10(CODE[10]), STR_9(CODE[10]), 
		 -> STR_8(CODE[10]), STR_7(CODE[10]), STR_6(CODE[10]), STR_5(CODE[10]), 
		 -> STR_4(CODE[10]), STR_3(CODE[10]), STR_2(CODE[10]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 11
		 -> STR_12(CODE[11]), STR_11(CODE[11]), STR_10(CODE[10]), STR_9(CODE[10]), 
		 -> STR_8(CODE[10]), STR_7(CODE[10]), STR_6(CODE[10]), STR_5(CODE[10]), 
		 -> STR_4(CODE[10]), STR_3(CODE[10]), STR_2(CODE[10]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_12(CODE[11]), STR_11(CODE[11]), STR_10(CODE[10]), STR_9(CODE[10]), 
		 -> STR_8(CODE[10]), STR_7(CODE[10]), STR_6(CODE[10]), STR_5(CODE[10]), 
		 -> STR_4(CODE[10]), STR_3(CODE[10]), STR_2(CODE[10]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    I2C_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S799$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S799$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S799$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c_fsmStateTable	const PTR FTN()enum E3338[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), Absolute function(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S95$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _main->_processActivation
    _processActivation->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _SYSTEM_Initialize->_EUSART_Initialize
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _I2C_MasterIsr->_I2C_MasterFsm

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    3101
                                             37 BANK0      8     8      0
                        _EUSART_Read
                  _SYSTEM_Initialize
                  _processActivation
                              _reset
 ---------------------------------------------------------------------------------
 (1) _processActivation                                    3     3      0    2492
                                             34 BANK0      3     3      0
                             _printf
                              _reset
                               _test
 ---------------------------------------------------------------------------------
 (2) _test                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _reset                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _printf                                               6     4      2    2470
                                             30 BANK0      4     2      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3    1506
                                             22 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           40    38      2    1182
                                             14 BANK0      8     6      2
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              6 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      66
                                              5 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (7) _EUSART_Write                                         2     2      0      44
                                              3 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                     _ADC_Initialize
                  _EUSART_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     490
                                              5 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          2     2      0      24
                                              3 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           0     0      0   78254
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                      _I2C_MasterIsr *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterIsr                                        0     0      0   78254
                      _I2C_MasterFsm
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterFsm                                       3     3      0   78254
                                              0 BANK0      3     3      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_TX_EMPTY                                     3     3      0   19547
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterSetIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_TX                                           3     3      0   19569
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_SEND_RESTART_WRITE                           0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_SEND_RESTART_READ                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_ADR_WRITE                               0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_ADR_READ                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterSendTxData                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RX_ACK                                       0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RX                                           3     3      0   19547
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterSendAck                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RX_NACK_STOP                                 0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RX_NACK_RESTART                              0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterSendNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RCEN                                         0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_ADDRESS_NACK                                 3     3      0   19547
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (12) _wr2RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (12) _wr1RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (12) _rdBlkRegCompleteHandler                             1     0      1    3874
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (12) _rd2RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (12) _rd1RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) _I2C_SetDataCompleteCallback                         4     1      3    2478
                                              5 COMMON     4     1      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (14) _I2C_SetCallback                                     5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (13) _I2C_SetBuffer                                       4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_SEND_STOP                                    0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (13) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_SEND_RESTART                                 0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (13) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_CallbackReturnStop                              1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (12) _I2C_CallbackReturnReset                             1     0      1     265
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (9) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _EUSART_Receive_ISR                                   0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _processActivation
     _printf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
               _EUSART_Write
     _reset
     _test
   _reset

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _I2C_MasterIsr *
     _I2C_MasterFsm
       _I2C_DO_ADDRESS_NACK *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
         _rd1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rd2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
         _rdBlkRegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
         _wr1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
         _wr2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
       _I2C_DO_IDLE *
       _I2C_DO_RCEN *
         _I2C_MasterStartRx
       _I2C_DO_RESET *
       _I2C_DO_RX *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_RX_NACK_RESTART *
           _I2C_MasterSendNack
         _I2C_DO_RX_NACK_STOP *
           _I2C_MasterSendNack
         _I2C_MasterGetRxData *
         _I2C_MasterSendAck *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_RX_ACK *
         _I2C_MasterSendAck
       _I2C_DO_RX_NACK_RESTART *
       _I2C_DO_RX_NACK_STOP *
       _I2C_DO_SEND_ADR_READ *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_ADR_WRITE *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_RESTART *
       _I2C_DO_SEND_RESTART_READ *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_WRITE *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_STOP *
       _I2C_DO_TX *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART_READ *
         _I2C_DO_SEND_RESTART_WRITE *
         _I2C_DO_SEND_STOP *
         _I2C_MasterIsNack *
         _I2C_MasterSendTxData *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_TX_EMPTY *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
         _I2C_DO_SEND_STOP *
         _I2C_MasterSetIrq *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_MasterClearIrq *
       _I2C_MasterIsNack *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2D      4A       5       92.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      35       7       66.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      AC      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      AC      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Feb 19 16:32:18 2025

                ?_EUSART_SetRxInterruptHandler 0023                         ??_I2C_DO_SEND_ADR_READ 0070  
                  __size_of_I2C_MasterSendNack 0004                        ??_I2C_DO_SEND_ADR_WRITE 0071  
                                  _SSPSTATbits 0214                          ??_I2C_DO_SEND_RESTART 0070  
                                          l143 05B9                                            l320 04E9  
                __size_of_I2C_MasterSendTxData 0005                                            l314 052D  
                                          l323 0502                                            l173 05FE  
                                          l510 0713                                            l182 079A  
                                          l319 04DF                                            l176 0694  
                                          l361 0752                                            l329 0733  
                                          l370 074C                                            l179 0699  
                                          l364 075E                                            l358 0758  
                                          l199 0724                                            l367 0746  
                                          l295 03A8                                            l816 02AF  
                                          l841 0676                                            l851 067B  
                                          l843 0677                                            l819 02C7  
                                          l932 01E1                                            l861 0680  
                                          l853 067C                                            l845 0678  
                                          l837 0673                                            l870 0669  
                                          l855 067D                                            l847 0679  
                                          l839 0675                                            l880 066E  
                                          l872 066A                                            l864 0665  
                                          l857 067E                                            l849 067A  
                                          l929 01A0                                            l882 066F  
                                          l874 066B                                            l866 0667  
                                          l859 067F                                            l884 0670  
                                          l876 066C                                            l868 0668  
                                          l886 0671                                            l878 066D  
                                          l888 0672                                            u700 04E4  
                                          u701 04E3                                            u710 04FD  
                                          u711 04FC                                            u740 03AF  
                                          u741 03AE                                            u750 03B4  
                                          u751 03B3                                            u760 03C3  
                                          u840 0551                                            u761 03C2  
                                          u841 0550                                            u850 0699  
                                          u690 04DF                                            u770 03E0  
                                          u851 0698                                            u691 04DE  
                                          u771 03DF                                            u780 01F5  
                                          u781 01F4                                            u790 0216  
                                          u775 03DC                                            u791 0215  
                                          u880 0509                                            u881 0508  
                                          u890 0523                                            u891 0522  
                       ??_EUSART_RxDataHandler 0070                 ?_EUSART_SetFramingErrorHandler 0023  
                                          wreg 0009                                   ?_EUSART_Read 0070  
                     ??_I2C_CallbackReturnStop 007A                                   _I2C_DO_RESET 0765  
                      ??_rd2RegCompleteHandler 007A                                           l3030 01F5  
                                         l3040 021E                                           l3032 01FD  
                                         l3042 0229                                           l3034 0201  
                                         l3060 0747                                           l3300 0364  
                                         l3036 0205                                           l3052 023A  
                                         l3028 01E4                                           l3062 0741  
                                         l3310 037D                                           l3302 0366  
                                         l3054 0253                                           l3038 0216  
                                         l3046 022F                                           l3064 0753  
                                         l3320 0393                                           l3312 037F  
                                         l3304 036E                                           l3048 0237  
                                         l1545 0610                                           l3066 074D  
                                         l3330 03A6                                           l3322 039B  
                                         l3314 0381                                           l3306 0378  
                                         l3250 0551                                           l3242 0530  
                                         l3068 0759                                           l3324 039D  
                                         l3316 0383                                           l3308 037B  
                                         l3260 05AC                                           l3244 0534  
                                         l3500 0149                                           l3326 039E  
                                         l3318 038B                                           l3270 05B2  
                                         l3262 05AD                                           l3254 059E  
                                         l3246 0537                                           l3510 016C  
                                         l3502 0152                                           l3430 0068  
                                         l3360 0519                                           l3328 039F  
                                         l3280 070F                                           l3272 05B4  
                                         l3264 05AF                                           l3256 05A4  
                                         l3352 05EC                                           l1584 0555  
                                         l3248 0548                                           l3520 0189  
                                         l3512 016F                                           l3504 0155  
                                         l3440 0085                                           l3432 006B  
                                         l3370 0529                                           l3362 051D  
                                         l3354 0503                                           l3282 0710  
                                         l3290 0692                                           l3274 05B5  
                                         l3266 05B0                                           l3258 05A7  
                                         l1578 025D                                           l3346 05FF  
                                         l3522 018B                                           l3514 0171  
                                         l3506 0157                                           l3450 00A1  
                                         l3442 0087                                           l3434 006D  
                                         l3372 052B                                           l3364 0523  
                                         l3356 0503                                           l3284 0712  
                                         l3276 05B7                                           l3268 05B1  
                                         l3292 0797                                           l1596 03E9  
                                         l3348 0604                                           l3524 0197  
                                         l3516 017D                                           l3508 0163  
                                         l3460 00C7                                           l3452 00AD  
                                         l3444 0093                                           l3436 0079  
                                         l3532 01AA                                           l3428 0067  
                                         l3366 0524                                           l3358 0509  
                                         l3294 071D                                           l3278 070A  
                                         l3286 068E                                           l3526 01A2  
                                         l3518 0186                                           l3470 00EA  
                                         l3462 00D0                                           l3454 00B6  
                                         l3446 009C                                           l3438 0082  
                                         l3368 0526                                           l3296 0720  
                                         l3288 0691                                           l2920 03B4  
                                         l3528 01A6                                           l3480 0107  
                                         l3472 00ED                                           l3464 00D3  
                                         l3456 00B9                                           l3448 009F  
                                         l3800 028F                                           l3298 0721  
                                         l2922 03B9                                           l3490 0123  
                                         l3482 0109                                           l3474 00EF  
                                         l3466 00D5                                           l3458 00BB  
                                         l3810 02B4                                           l3802 029E  
                                         l2924 03C3                                           l2916 03A9  
                                         l3492 012F                                           l3484 0115  
                                         l3476 00FB                                           l3468 00E1  
                                         l3812 02B8                                           l3804 029E  
                                         l2926 03E0                                           l2918 03AF  
                                         l3494 0138                                           l3486 011E  
                                         l3478 0104                                           l3814 02BE  
                                         l3806 02A1                                           l2880 04E4  
                                         l3496 013B                                           l3488 0121  
                                         l3816 02C3                                           l2890 04FE  
                                         l2882 04EA                                           l3498 013D  
                                         l2884 04F3                                           l2892 0500  
                                         l2876 04DA                                           l3780 025E  
                                         l2886 04F7                                           l2878 04DA  
                                         l2894 072F                                           l3790 026E  
                                         l3782 0261                                           l2888 04FD  
                                         l3960 01B2                                           l3792 0275  
                                         l3784 0262                                           l3794 0279  
                                         l3786 0263                                           l3796 027E  
                                         l3788 0268                                           l3798 0287  
                                         STR_1 04CD                                           STR_2 06B0  
                                         STR_3 06BA                                           STR_4 06C4  
                                         STR_5 06CE                                           STR_6 06D8  
                                         STR_7 06E2                                           STR_8 06EC  
                                         STR_9 06F6                                           u1240 026E  
                                         u1241 026D                                           u1250 027E  
                                         u1307 0073                                           u1251 027D  
                                         u1260 029E                                           u1317 008D  
                                         u1261 029D                                           _LATA 010C  
                                         u1270 02B4                                           _LATB 010D  
                                         u1407 0177                                           u1327 00A7  
                                         u1271 02B3                                           _LATC 010E  
                                         u1280 02BE                                           _LATD 010F  
                                         u1417 0191                                           u1337 00C1  
                                         u1281 02BD                                           _LATE 0110  
                                         u1347 00DB                                           u1357 00F5  
                                         u1367 010F                                           u1377 0129  
                                         u1297 02A7                                           u1387 0143  
                                         u1397 015D                                           i1l92 0643  
                                         i1l95 0632                                           i1l98 0621  
                                         _PLLR 04D6                                           _WPUB 020D  
                                         _WPUE 0210                        ??_wr2RegCompleteHandler 007A  
                                         _dbuf 0120                                           _main 025E  
                     ?_I2C_CallbackReturnReset 0079                                           _prec 0051  
                                         _nout 004D                                           _test 0665  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                           start 0047  
             __size_of_rdBlkRegCompleteHandler 0018                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 000C                                  _I2C_DO_RX_ACK 0774  
                __end_of_OSCILLATOR_Initialize 069A                                          ?_main 0070  
                                        STR_10 0700                                          STR_11 069A  
                                        STR_12 06A5                                          ?_test 0070  
                                        i1l101 0654                                          i1l104 05EB  
                                        i1l401 0045                                          i1l332 059B  
                                        i1l342 0423                                          i1l335 059D  
                                        i1l352 07AA                                          i1l346 05D3  
                                        i1l355 07AE                                          i1l540 068D  
                                        i1l349 07C5                                          i1l613 0452  
                                        i1l703 07BD                                          i1l607 073A  
                                        i1l631 078C                                          i1l560 057B  
                                        i1l712 07A6                                          i1l640 077D  
                                        i1l392 001A                                          i1l537 0664  
                                        i1l706 0764                                          i1l570 0791  
                                        i1l634 0787                                          i1l730 07B1  
                                        i1l394 002A                                          i1l643 0778  
                                        i1l563 079E                                          i1l395 0045  
                                        i1l652 0769                                          i1l396 003A  
                                        i1l709 07A2                                          i1l733 07B4  
                                        i1l573 071C                                          i1l637 0782  
                                        i1l582 031D                                          i1l646 0773  
                                        i1l567 0480                                          i1l576 072C  
                                        i1l649 076E                                          i1l666 07C4  
                                        i1l658 04AC                                          i1l691 07C0  
                                        i1l579 0301                                          i1l595 033B  
                                        i1l596 0363                                          i1l669 07C2  
                                        i1l685 07B7                                          i1l688 0796  
                                        i1l697 07BA                                          _RCREG 0199  
                 __size_of_I2C_DO_RX_NACK_STOP 0005                                          _RCSTA 019D  
                                 vfpfcnvrt@fmt 002E                                          u80_20 05CE  
                                        u72_20 055D                                          u80_21 05CD  
                                        u72_21 055C                                          u73_20 065B  
                                        u81_20 02D1                              ??_I2C_DO_TX_EMPTY 007A  
                                        u73_21 065A                                          u81_21 02D0  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _TRISD 008F  
                                        _TRISE 0090                                          u90_20 0583  
                                        u82_20 031A                                          u90_21 0582  
                                        u82_21 0319                                          u91_20 0595  
                                        u83_20 0336                                          u91_21 0594  
                                        u83_21 0335                                          u92_20 03F5  
                                        u92_21 03F4                                          u93_20 0405  
                                        u93_21 0404                                          u94_20 041A  
                                        u86_20 045B                                          u94_21 0419  
                                        u86_21 045A                                          u87_20 0463  
                                        u87_21 0462                                          _TXREG 019A  
                                        _TXSTA 019E                              __end_of_I2C_DO_RX 0364  
                            __end_of_I2C_DO_TX 031E                                          _flags 0053  
                               _WDT_Initialize 0797                                          _fputc 03A9  
                       __size_of_I2C_MasterFsm 002E                         __size_of_I2C_MasterIsr 0004  
                                        _reset 0673                                          _width 004F  
                                        _putch 072D                        _I2C_MasterEnableRestart 07BE  
                                        pclath 000A                               ?_I2C_SetCallback 0070  
                                        status 0003                                          wtemp0 007E  
                            ?_I2C_DO_SEND_STOP 0070                         __size_of_I2C_SetBuffer 0010  
                           ??_I2C_DO_SEND_STOP 0070                                __initialization 0049  
                                 __end_of_main 02C9                                   __end_of_test 0673  
            __size_of_I2C_DO_SEND_RESTART_READ 0005                      ?_I2C_DO_SEND_RESTART_READ 0070  
                               ??_EUSART_Write 0023                                 ?_I2C_DO_RX_ACK 0070  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 0025  
                                       ??_main 0045                              ?_I2C_MasterIsNack 0070  
                                       ??_test 0023                              ?_I2C_MasterSetIrq 0070  
                           ??_I2C_MasterIsNack 0070                         __end_of_WDT_Initialize 079B  
                           ??_I2C_MasterSetIrq 0070      __end_of_EUSART_DefaultFramingErrorHandler 07C6  
   __size_of_EUSART_DefaultFramingErrorHandler 0001            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 07C5  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 0057                __end_of_I2C_CallbackReturnReset 07C3  
                                       ?_fputc 0026                                         _ADRESH 009C  
                                       _EEADRH 0192                                         _ADRESL 009B  
                                       _EEADRL 0191                                         _EEDATH 0194  
                                       _EEDATL 0193                                         _EECON2 0196  
              __size_of_I2C_CallbackReturnStop 0002                                         ?_reset 0070  
                                       _APFCON 011D                  I2C_SetDataCompleteCallback@cb 0075  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELB 018D                                         _ANSELD 018F  
                                       _ANSELE 0190                                         _BORCON 0116  
                                       i1l3000 076D                                         i1l3010 07B8  
                                       i1l3020 07C3                                         i1l3100 0727  
                                       i1l3012 077E                                         i1l3004 076F  
                                       i1l3102 072B                                         i1l3110 02D2  
                                       i1l3014 0781                                         i1l3006 0772  
                                       i1l3024 07C1                                         u120_20 003F  
                                       u120_21 003E                                         i1l3018 07B2  
                                       i1l3130 031A                                         i1l3114 02D6  
                                       i1l3106 02C9                                         i1l3132 031C  
                                       i1l3124 02DE                                         i1l3140 031E  
                                       i1l3212 0765                                         i1l3220 0481  
                                       i1l3070 05BA                                         i1l3126 0303  
                                       i1l3118 02DA                                         i1l3142 0328  
                                       i1l3206 0774                                         i1l3214 0767  
                                       i1l3222 0483                                         i1l3072 05C4  
                                       i1l3400 040B                                         i1l3128 030F  
                                       i1l3144 032C                                         i1l3208 0777  
                                       i1l3216 0768                                         i1l3224 0488  
                                       i1l3080 07AF                                         u121_20 0044  
                                       u113_20 000A                                         u121_21 0043  
                                       u113_21 0009                                         i1l3074 05C8  
                                       i1l3402 0410                                         i1l3082 078D  
                                       i1l3090 0714                                         i1l3154 033D  
                                       i1l3146 0336                                         i1l3234 0490  
                                       i1l3076 05CE                                         i1l3332 07A7  
                                       i1l3404 041A                                         i1l3180 0424  
                                       i1l3084 078F                                         i1l3092 0716  
                                       i1l3164 0345                                         i1l3148 0339  
                                       i1l3172 0734                                         i1l3228 048C  
                                       i1l3340 045B                                         i1l3078 05CF  
                                       i1l3334 07AB                                         i1l3406 0420  
                                       i1l3182 0427                                         i1l3086 0790  
                                       i1l3094 071B                                         i1l3158 0341  
                                       i1l3174 0736                                         i1l3342 0463  
                                       i1l3192 0430                                         i1l3176 0739  
                                       i1l3344 0469                                         i1l3336 0453  
                                       u114_20 000F                                         u114_21 000E  
                                       i1l3186 042B                                         i1l3098 0725  
                                       i1l3338 0456                                         i1l3426 079B  
                                       i1l3380 058A                                         i1l2900 056E  
                                       i1l3188 042E                                         i1l3700 001F  
                                       i1l3390 03F0                                         i1l3382 058F  
                                       i1l2910 07BE                                         i1l2902 0681  
                                       i1l3198 0434                                         i1l3702 0024  
                                       i1l3392 03F5                                         i1l3384 0595  
                                       i1l3376 057C                                         i1l2912 07BB  
                                       i1l2904 0656                                         i1l3704 002F  
                                       u115_20 0014                                         u115_21 0013  
                                       i1l3394 03FB                                         i1l3386 0596  
                                       i1l3378 0583                                         i1l2906 065B  
                                       i1l2930 0633                                         i1l2914 07A3  
                                       i1l3706 0034                                         i1l3396 0400  
                                       i1l3388 03EA                                         i1l2908 0663  
                                       i1l2932 063B                                         i1l2940 062A  
                                       i1l3708 003F                                         i1l3398 0405  
                                       i1l2934 0642                                         i1l2942 0631  
                                       i1l2950 0620                                         u116_20 001F  
                                       u116_21 001E                                         i1l2954 0644  
                                       i1l2938 0622                                         i1l2946 0611  
                                       i1l2962 05D4                                         i1l2956 064C  
                                       i1l2948 0619                                         i1l2964 05EA  
                                       i1l2972 0793                                         i1l2980 0783  
                                       i1l3692 0006                                         i1l2958 0653  
                                       i1l2974 0788                                         i1l2982 0786  
                                       i1l3694 000A                                         i1l2896 0557  
                                       i1l2992 07B5                                         i1l2968 075F  
                                       i1l2976 078B                                         u117_20 0024  
                                       i1l3696 000F                                         u117_21 0023  
                                       i1l2898 055D                                         i1l2986 0779  
                                       i1l3962 04A4                                         i1l3698 0014  
                                       i1l2996 079F                                         i1l3964 0355  
                                       i1l2988 077C                                         i1l3966 02F3  
                                       i1l2998 076A                                         i1l3968 0444  
                                       u118_20 002F                                         u118_21 002E  
                                       u119_20 0034                                         u119_21 0033  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                                       _SSPADD 0212                                         _SSPBUF 0211  
                          _I2C_MasterGetRxData 07B5                                  main@reception 004B  
                                 vfprintf@cfmt 003C                                  _I2C_MasterFsm 0453  
                                _I2C_MasterIsr 079B                            _EUSART_Transmit_ISR 057C  
                            I2C_SetCallback@cb 0070                        __size_of_I2C_MasterStop 0003  
                      __size_of_I2C_Initialize 000A                                         _printf 05FF  
                                _I2C_SetBuffer 0655                                         fputc@c 0026  
                          _I2C_DO_ADDRESS_NACK 0481                           ?_I2C_MasterGetRxData 0070  
                              ?_WDT_Initialize 0070                      ??_I2C_MasterEnableRestart 0070  
                             __end_of_vfprintf 0556                           ?_EUSART_Transmit_ISR 0070  
                         __size_of_EUSART_Read 002B                              _SYSTEM_Initialize 05EC  
                      __end_of__initialization 0061                             ?_SYSTEM_Initialize 0070  
                         ?_I2C_DO_ADDRESS_NACK 0070           __end_of_EUSART_SetTxInterruptHandler 0747  
        __size_of_EUSART_SetTxInterruptHandler 0006                   _EUSART_SetTxInterruptHandler 0741  
                      _rdBlkRegCompleteHandler 05D4                                 __pcstackCOMMON 0070  
                               ?_I2C_MasterFsm 0070                                 ?_I2C_MasterIsr 0070  
                              ??_I2C_DO_RX_ACK 0070                         _I2C_CallbackReturnStop 07C3  
                          ??_SYSTEM_Initialize 0026                                  __end_of_fputc 03EA  
                                __end_of_reset 0681                                  __end_of_putch 0734  
                               ?_I2C_SetBuffer 0070                 __size_of_I2C_DO_SEND_ADR_WRITE 0008  
           __size_of_I2C_DO_SEND_RESTART_WRITE 0005                  __end_of_I2C_DO_SEND_ADR_WRITE 072D  
                   ?_I2C_DO_SEND_RESTART_WRITE 0070                          ??_I2C_MasterGetRxData 0070  
                               _OPTION_REGbits 0095                           _eusartRxStatusBuffer 00BD  
                   __end_of_I2C_MasterClearIrq 07B2                ??_EUSART_SetOverrunErrorHandler 0025  
                                      ??_fputc 0029                      __end_of_SYSTEM_Initialize 05FF  
                        ??_EUSART_Transmit_ISR 0070                                        ??_reset 0023  
                                      ??_putch 0025                              _I2C_MasterSendAck 079F  
                                   __pbssBANK0 004D                                     __pbssBANK1 00A0  
                                   __pbssBANK2 0120                           __end_of_EUSART_Write 0503  
                                ??_I2C_DO_IDLE 0070                 __size_of_rd2RegCompleteHandler 0011  
                                ??_I2C_DO_RCEN 0070                  __end_of_rd2RegCompleteHandler 0633  
                 __end_of_I2C_MasterSendTxData 0797                             ?_I2C_MasterSendAck 0070  
                            _I2C_MasterStartRx 07B8                 __size_of_wr2RegCompleteHandler 0011  
                        ??_I2C_DO_ADDRESS_NACK 007A                  __end_of_wr2RegCompleteHandler 0655  
                  __size_of_EUSART_Receive_ISR 003A                            _I2C_DO_RX_NACK_STOP 076F  
                        _rd1RegCompleteHandler 0633                             ?_I2C_MasterStartRx 0070  
                   __end_of_I2C_MasterSendNack 07A7                          _wr1RegCompleteHandler 0611  
                                   __pmaintext 025E                            ??_I2C_MasterSendAck 0070  
                     rd1RegCompleteHandler@ptr 0079                  ?_EUSART_SetTxInterruptHandler 0023  
             _EUSART_TxDefaultInterruptHandler 005D                    __end_of_I2C_DO_SEND_RESTART 0783  
                              _I2C_DO_TX_EMPTY 0424                            I2C_SetBuffer@buffer 0073  
                                   __pintentry 0004                            ??_I2C_MasterStartRx 0070  
                __size_of_I2C_DO_SEND_ADR_READ 0009                                        _BAUDCON 019F  
             __size_of_I2C_CallbackReturnReset 0002                   ??_EUSART_DefaultErrorHandler 0071  
                                      ?_printf 003E                 I2C_SetDataCompleteCallback@ptr 0077  
                      __size_of_ADC_Initialize 0008                       ??_I2C_DO_RX_NACK_RESTART 0070  
            __end_of_I2C_DO_SEND_RESTART_WRITE 0788                           ?_I2C_DO_RX_NACK_STOP 0070  
                                _eusartRxCount 0064                             __size_of_vfpfcnvrt 007C  
                __size_of_EUSART_RxDataHandler 001A                      __end_of_I2C_MasterSendAck 07A3  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 0025  
                                      _SSPCON1 0215                                        _SSPCON2 0216  
                                      _SSPSTAT 0214                      __end_of_I2C_MasterStartRx 07BB  
                 ?_I2C_SetDataCompleteCallback 0075                                      _I2C_DO_RX 031E  
                                    _I2C_DO_TX 02C9               __end_of_I2C_DO_SEND_RESTART_READ 078D  
                    ??_rdBlkRegCompleteHandler 007A                                ??_I2C_MasterFsm 0020  
                              ??_I2C_MasterIsr 007D                           _ADC_InterruptHandler 005F  
          __size_of_EUSART_DefaultErrorHandler 0004                            __end_of_I2C_DO_IDLE 0792  
                          __end_of_I2C_DO_RCEN 073B                                ??_I2C_SetBuffer 0072  
                                    ?_vfprintf 0036                        I2C_SetBuffer@bufferSize 0070  
                               _I2C_MasterStop 07BB                                 _I2C_Initialize 070A  
                    __size_of_I2C_DO_SEND_STOP 0005                                        __ptext1 0065  
                                      __ptext2 0665                                        __ptext3 0673  
                                      __ptext4 05FF                                        __ptext5 052E  
                                      __ptext6 01E2                                        __ptext7 03A9  
                                      __ptext8 072D                                        __ptext9 04D8  
                              __size_of_printf 0012                          ??_I2C_DO_RX_NACK_STOP 0070  
                        _OSCILLATOR_Initialize 068E                             I2C_SetCallback@idx 0074  
                     ??_PIN_MANAGER_Initialize 0023                  I2C_CallbackReturnReset@funPtr 0079  
                           I2C_SetCallback@ptr 0072                       wr1RegCompleteHandler@ptr 0079  
                   __size_of_SYSTEM_Initialize 0013                                        clrloop0 073C  
                         end_of_initialization 0061                                     ?_I2C_DO_RX 0070  
                                   ?_I2C_DO_TX 0070          __end_of_EUSART_SetOverrunErrorHandler 0753  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 074D  
                    __size_of_I2C_MasterIsNack 0006                                        fputc@fp 0028  
                       ?_rd1RegCompleteHandler 0079                        __end_of_I2C_DO_TX_EMPTY 0453  
                    __size_of_I2C_MasterSetIrq 0003                              _EUSART_Initialize 0364  
                       ?_wr1RegCompleteHandler 0079                             ?_EUSART_Initialize 0070  
                     __size_of_I2C_SetCallback 0026                              __end_of_vfpfcnvrt 025E  
                                    _RCSTAbits 019D                         __end_of_I2C_MasterStop 07BE  
                       __end_of_I2C_Initialize 0714                                     ??_vfprintf 0039  
                          ??_EUSART_Initialize 0025                               ??_WDT_Initialize 0023  
               ??_EUSART_SetTxInterruptHandler 0025                                      _PORTCbits 000E  
              __end_of_rdBlkRegCompleteHandler 05EC                           _I2C_MasterSendTxData 0792  
              __size_of_I2C_DO_RX_NACK_RESTART 0005                          __size_of_EUSART_Write 002B  
                   __size_of_I2C_MasterSendAck 0004                __size_of_EUSART_SetErrorHandler 0006  
                   __size_of_I2C_MasterStartRx 0003                      __end_of_EUSART_Initialize 03A9  
                                  _I2C_DO_IDLE 078D                                    _I2C_DO_RCEN 0734  
                   rdBlkRegCompleteHandler@ptr 0079                              _processActivation 0065  
                                    _TXSTAbits 019E                        ?_I2C_CallbackReturnStop 0079  
                           ?_processActivation 0070                       _I2C_DO_SEND_RESTART_READ 0788  
                 I2C_CallbackReturnStop@funPtr 0079                                ?_I2C_MasterStop 0070  
                              ?_I2C_Initialize 0070                        _I2C_CallbackReturnReset 07C1  
                          ??_processActivation 0042             __end_of_EUSART_DefaultErrorHandler 07AF  
                   _EUSART_DefaultErrorHandler 07AB                         processActivation@ordre 0044  
                                  vfpfcnvrt@ap 002F                                    vfpfcnvrt@fp 0035  
         __size_of_I2C_SetDataCompleteCallback 000D                                   _EUSART_Write 04D8  
                               _ADC_Initialize 071D                          ?_I2C_MasterSendTxData 0070  
                       ?_OSCILLATOR_Initialize 0070                    ??_I2C_DO_SEND_RESTART_WRITE 0070  
                               __end_of_printf 0611                            start_initialization 0049  
              __size_of_PIN_MANAGER_Initialize 001C                                  ??_EUSART_Read 0023  
                                ?_I2C_DO_RESET 0070   EUSART_SetRxInterruptHandler@interruptHandler 0023  
 EUSART_SetTxInterruptHandler@interruptHandler 0023                                    putch@txData 0025  
                    __end_of_processActivation 01E2                                    ??_I2C_DO_RX 007A  
                                  ??_I2C_DO_TX 007A                 __end_of_I2C_CallbackReturnStop 07C5  
                       _I2C_DO_RX_NACK_RESTART 076A                               ?_I2C_DO_TX_EMPTY 0070  
                           _I2C_MasterClearIrq 07AF                 ?_EUSART_SetOverrunErrorHandler 0023  
                                  vfprintf@fmt 0036                     _EUSART_FramingErrorHandler 0059  
                       _EUSART_SetErrorHandler 0759                            ?_I2C_MasterClearIrq 0070  
                       __end_of_ADC_Initialize 0725                    __end_of_I2C_MasterGetRxData 07B8  
                        __end_of_I2C_DO_RX_ACK 0779                               _I2C_DO_SEND_STOP 0779  
                            ??_I2C_SetCallback 0073                                       ??_printf 0040  
                           _I2C_MasterSendNack 07A3                       ?_I2C_MasterEnableRestart 0070  
                            _i2c_fsmStateTable 04AD                    __end_of_EUSART_Transmit_ISR 059E  
                        _I2C_DO_SEND_ADR_WRITE 0725                                      ___latbits 0003  
                                __pcstackBANK0 0020                                 ??_I2C_DO_RESET 0070  
                          ?_I2C_MasterSendNack 0070                   __end_of_I2C_DO_SEND_ADR_READ 071D  
                         ??_I2C_MasterClearIrq 0070                    __end_of_I2C_DO_ADDRESS_NACK 04AD  
                   __end_of_EUSART_Receive_ISR 0424                               _I2C_MasterIsNack 075F  
                   __size_of_EUSART_Initialize 0045                      _I2C_DO_SEND_RESTART_WRITE 0783  
             _EUSART_RxDefaultInterruptHandler 005B                            __end_of_EUSART_Read 052E  
                             _I2C_MasterSetIrq 07B2                          _rd2RegCompleteHandler 0622  
                 __end_of_EUSART_RxDataHandler 05D4                         _PIN_MANAGER_Initialize 059E  
                        _wr2RegCompleteHandler 0644                      ??_I2C_CallbackReturnReset 007A  
                         EUSART_Read@readValue 0024                           ??_I2C_MasterSendNack 0070  
                     rd2RegCompleteHandler@ptr 0079                                ?_ADC_Initialize 0070  
                                 _eusartRxHead 0066                                   _eusartTxHead 0069  
                                 _eusartRxTail 0065                         ??_I2C_MasterSendTxData 0070  
                                 _eusartTxTail 0068                      __end_of_i2c_fsmStateTable 04CD  
                 ??_INTERRUPT_InterruptManager 007D                              __size_of_vfprintf 0028  
                      _eusartTxBufferRemaining 0067                   __size_of_I2C_DO_SEND_RESTART 0005  
                               __size_of_fputc 0041                        ??_rd1RegCompleteHandler 007A  
                               __size_of_reset 000E                                 __size_of_putch 0007  
                   __size_of_processActivation 017D                                 _eusartRxBuffer 00C5  
                      ??_wr1RegCompleteHandler 007A                                 _eusartTxBuffer 00CD  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0023  
                                     _LATBbits 010D                                      clear_ram0 073B  
                                     _PIE1bits 0091                                       _PIE2bits 0092  
                            _eusartRxLastError 0063            __size_of_INTERRUPT_InterruptManager 0043  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0025  
                                     _PIR2bits 0012                          __end_of_I2C_MasterFsm 0481  
                        __end_of_I2C_MasterIsr 079F                    __end_of_I2C_DO_RX_NACK_STOP 0774  
    __end_of_EUSART_DefaultOverrunErrorHandler 07AB     __size_of_EUSART_DefaultOverrunErrorHandler 0004  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 07A7                __end_of_I2C_MasterEnableRestart 07C1  
                                    _vfpfcnvrt 01E2                          __end_of_I2C_SetBuffer 0665  
                                   _ADCON0bits 009D                         ?_I2C_DO_SEND_ADR_WRITE 0070  
                     I2C_MasterSendTxData@data 0070                                      main@count 004C  
                                    main@tempo 0047                       wr2RegCompleteHandler@ptr 0079  
                                  _EUSART_Read 0503                     ??_I2C_DO_SEND_RESTART_READ 0070  
                     ?_rdBlkRegCompleteHandler 0079                                     _I2C_Status 00A0  
                                 ?_I2C_DO_IDLE 0070                                   ?_I2C_DO_RCEN 0070  
                       ?_rd2RegCompleteHandler 0079                                     _EECON1bits 0195  
                       ?_wr2RegCompleteHandler 0079                               ??_I2C_MasterStop 0070  
                             ??_I2C_Initialize 0023                                     vfprintf@ap 0038  
                                   vfprintf@fp 003B                           __end_of_I2C_DO_RESET 076A  
                      ??_OSCILLATOR_Initialize 0023                            _EUSART_ErrorHandler 0055  
                         _I2C_DO_SEND_ADR_READ 0714                    ?_EUSART_DefaultErrorHandler 0070  
                                   ?_vfpfcnvrt 002E                           _EUSART_RxDataHandler 05BA  
                                     __ptext10 05EC                                       __ptext11 0797  
                                     __ptext20 0759                                       __ptext12 059E  
                                     __ptext21 071D                                       __ptext13 068E  
                                     __ptext30 076F                                       __ptext22 0503  
                                     __ptext14 070A                                       __ptext31 0774  
                                     __ptext15 0364                                       __ptext40 0714  
                                     __ptext32 0779                                       __ptext24 079B  
                                     __ptext16 0741                                       __ptext41 078D  
                                     __ptext33 077E                                       __ptext25 0453  
                                     __ptext17 0747                                       __ptext50 07C1  
                                     __ptext42 0424                                       __ptext34 0783  
                                     __ptext26 07AF                                       __ptext18 074D  
                                     __ptext51 07C3                                       __ptext43 07B2  
                                     __ptext35 0788                                       __ptext27 0481  
                                     __ptext19 0753                                       __ptext60 07BB  
                                     __ptext52 05D4                                       __ptext44 075F  
                                     __ptext36 0734                                       __ptext28 0765  
                                     __ptext61 07BE                                       __ptext53 0611  
                                     __ptext45 0792                                       __ptext37 031E  
                                     __ptext29 076A                                       __ptext62 057C  
                                     __ptext54 0622                                       __ptext46 079F  
                                     __ptext38 02C9                                       __ptext63 03EA  
                                     __ptext55 0633                                       __ptext47 07B5  
                                     __ptext39 0725                                       __ptext64 07A7  
                                     __ptext56 0644                                       __ptext48 07A3  
                                     __ptext65 07C5                                       __ptext57 0681  
                                     __ptext49 07B8                                       __ptext66 07AB  
                                     __ptext58 0556                                       __ptext67 05BA  
                                     __ptext59 0655            __end_of_I2C_SetDataCompleteCallback 068E  
                  _I2C_SetDataCompleteCallback 0681                        ?_I2C_DO_RX_NACK_RESTART 0070  
                     __end_of_I2C_DO_SEND_STOP 077E                                  __size_of_main 006B  
                                __size_of_test 000E                        ?_EUSART_SetErrorHandler 0023  
                              _I2C_SetCallback 0556                  ??_I2C_SetDataCompleteCallback 0078  
EUSART_SetOverrunErrorHandler@interruptHandler 0023                                       int$flags 007E  
                        ?_I2C_DO_SEND_ADR_READ 0070                                       _vfprintf 052E  
           __end_of_INTERRUPT_InterruptManager 0047                     _INTERRUPT_InterruptManager 0004  
                                    printf@fmt 003E          __end_of_EUSART_SetFramingErrorHandler 0759  
       __size_of_EUSART_SetFramingErrorHandler 0006                  _EUSART_SetFramingErrorHandler 0753  
                     __end_of_I2C_MasterIsNack 0765                       __end_of_I2C_MasterSetIrq 07B5  
                                   _INTCONbits 000B                          ?_EUSART_RxDataHandler 0070  
                               __pstringtext10 06EC                                 __pstringtext11 06F6  
                               __pstringtext12 0700                                 __pstringtext13 0000  
               __end_of_I2C_DO_RX_NACK_RESTART 076F                        __size_of_WDT_Initialize 0004  
                                     intlevel1 0000               __size_of_I2C_MasterEnableRestart 0003  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 075F  
                          _I2C_DO_SEND_RESTART 077E                               ??_ADC_Initialize 0023  
         __end_of_EUSART_SetRxInterruptHandler 074D          __size_of_EUSART_SetRxInterruptHandler 0006  
                 _EUSART_SetRxInterruptHandler 0747                                       printf@ap 0041  
                           _EUSART_Receive_ISR 03EA  EUSART_SetFramingErrorHandler@interruptHandler 0023  
                     __size_of_I2C_DO_TX_EMPTY 002F                                    ??_vfpfcnvrt 0030  
                                __pstringtext1 04AD                                  __pstringtext2 069A  
                                __pstringtext3 06A5                                  __pstringtext4 06B0  
                                __pstringtext5 06BA                                  __pstringtext6 06C4  
                                __pstringtext7 06CE                                  __pstringtext8 06D8  
                                __pstringtext9 06E2                           ?_I2C_DO_SEND_RESTART 0070  
                          ?_EUSART_Receive_ISR 0070                   __size_of_I2C_MasterGetRxData 0003  
                                  _SSPCON1bits 0215                                    _SSPCON2bits 0216  
                  __size_of_I2C_MasterClearIrq 0003                             EUSART_Write@txData 0024  
                 __size_of_EUSART_Transmit_ISR 0022                        __end_of_I2C_SetCallback 057C  
               __end_of_PIN_MANAGER_Initialize 05BA                 __size_of_rd1RegCompleteHandler 0011  
                __end_of_rd1RegCompleteHandler 0644                         __size_of_I2C_DO_RX_ACK 0005  
               __size_of_wr1RegCompleteHandler 0011                           ??_EUSART_Receive_ISR 0071  
                        __size_of_I2C_DO_RESET 0005                  __end_of_wr1RegCompleteHandler 0622  
                        _MSSP_InterruptHandler 0061                   __size_of_I2C_DO_ADDRESS_NACK 002C  
                         __size_of_I2C_DO_IDLE 0005                           __size_of_I2C_DO_RCEN 0007  
                           __size_of_I2C_DO_RX 0046                             __size_of_I2C_DO_TX 0055  
