

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Feb 06 15:31:12 2025

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1939
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    18                           	psect	cinit,global,class=CODE,merge=1,delta=2
    19                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    25                           	psect	text1,local,class=CODE,merge=1,delta=2
    26                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    30                           	psect	text6,local,class=CODE,merge=1,delta=2
    31                           	psect	text7,local,class=CODE,merge=1,delta=2
    32                           	psect	text8,local,class=CODE,merge=1,delta=2
    33                           	psect	text9,local,class=CODE,merge=1,delta=2
    34                           	psect	text10,local,class=CODE,merge=1,delta=2
    35                           	psect	text11,local,class=CODE,merge=1,delta=2
    36                           	psect	text12,local,class=CODE,merge=1,delta=2
    37                           	psect	text13,local,class=CODE,merge=1,delta=2
    38                           	psect	text14,local,class=CODE,merge=1,delta=2
    39                           	psect	text15,local,class=CODE,merge=1,delta=2
    40                           	psect	text16,local,class=CODE,merge=1,delta=2
    41                           	psect	text17,local,class=CODE,merge=1,delta=2
    42                           	psect	text18,local,class=CODE,merge=1,delta=2
    43                           	psect	text19,local,class=CODE,merge=1,delta=2
    44                           	psect	text20,local,class=CODE,merge=1,delta=2
    45                           	psect	intentry,global,class=CODE,delta=2
    46                           	psect	text22,local,class=CODE,merge=1,delta=2
    47                           	psect	text23,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text24,local,class=CODE,merge=1,inline,delta=2
    49                           	psect	text25,local,class=CODE,merge=1,delta=2
    50                           	psect	text26,local,class=CODE,merge=1,delta=2
    51                           	psect	text27,local,class=CODE,merge=1,delta=2
    52                           	psect	text28,local,class=CODE,merge=1,delta=2
    53                           	psect	text29,local,class=CODE,merge=1,delta=2
    54                           	psect	text30,local,class=CODE,merge=1,delta=2
    55                           	psect	text31,local,class=CODE,merge=1,delta=2
    56                           	psect	text32,local,class=CODE,merge=1,delta=2
    57                           	psect	text33,local,class=CODE,merge=1,delta=2
    58                           	psect	text34,local,class=CODE,merge=1,delta=2
    59                           	psect	text35,local,class=CODE,merge=1,delta=2
    60                           	psect	text36,local,class=CODE,merge=1,delta=2
    61                           	psect	text37,local,class=CODE,merge=1,delta=2
    62                           	psect	text38,local,class=CODE,merge=1,delta=2
    63                           	psect	text39,local,class=CODE,merge=1,delta=2
    64                           	psect	text40,local,class=CODE,merge=1,delta=2
    65                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    66                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    67                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    68                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text45,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text46,local,class=CODE,merge=1,inline,delta=2
    71                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    72                           	psect	text48,local,class=CODE,merge=1,delta=2
    73                           	psect	text49,local,class=CODE,merge=1,delta=2
    74                           	psect	text50,local,class=CODE,merge=1,delta=2
    75                           	psect	text51,local,class=CODE,merge=1,delta=2
    76                           	psect	text52,local,class=CODE,merge=1,delta=2
    77                           	psect	text53,local,class=CODE,merge=1,delta=2
    78                           	psect	text54,local,class=CODE,merge=1,delta=2
    79                           	psect	text55,local,class=CODE,merge=1,delta=2
    80                           	psect	text56,local,class=CODE,merge=1,delta=2
    81                           	psect	text57,local,class=CODE,merge=1,delta=2
    82                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    83                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    84                           	psect	text60,local,class=CODE,merge=1,delta=2
    85                           	psect	text61,local,class=CODE,merge=1,delta=2
    86                           	psect	text62,local,class=CODE,merge=1,delta=2
    87                           	psect	text63,local,class=CODE,merge=1,delta=2
    88                           	psect	text64,local,class=CODE,merge=1,delta=2
    89                           	psect	text65,local,class=CODE,merge=1,delta=2
    90                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    91                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    92                           	dabs	1,0x7E,2
    93  0000                     
    94                           ; Version 2.32
    95                           ; Generated 02/02/2021 GMT
    96                           ; 
    97                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    98                           ; All rights reserved.
    99                           ; 
   100                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   101                           ; 
   102                           ; Redistribution and use in source and binary forms, with or without modification, are
   103                           ; permitted provided that the following conditions are met:
   104                           ; 
   105                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   106                           ;        conditions and the following disclaimer.
   107                           ; 
   108                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   109                           ;        of conditions and the following disclaimer in the documentation and/or other
   110                           ;        materials provided with the distribution. Publication is not required when
   111                           ;        this file is used in an embedded application.
   112                           ; 
   113                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   114                           ;        software without specific prior written permission.
   115                           ; 
   116                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   117                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   118                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   119                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   120                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   121                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   122                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   123                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   124                           ; 
   125                           ; 
   126                           ; Code-generator required, PIC16F1939 Definitions
   127                           ; 
   128                           ; SFR Addresses
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  008C                     	;# 
   161  008D                     	;# 
   162  008E                     	;# 
   163  008F                     	;# 
   164  0090                     	;# 
   165  0091                     	;# 
   166  0092                     	;# 
   167  0093                     	;# 
   168  0095                     	;# 
   169  0096                     	;# 
   170  0097                     	;# 
   171  0098                     	;# 
   172  0099                     	;# 
   173  009A                     	;# 
   174  009B                     	;# 
   175  009B                     	;# 
   176  009C                     	;# 
   177  009D                     	;# 
   178  009E                     	;# 
   179  010C                     	;# 
   180  010D                     	;# 
   181  010E                     	;# 
   182  010F                     	;# 
   183  0110                     	;# 
   184  0111                     	;# 
   185  0112                     	;# 
   186  0113                     	;# 
   187  0114                     	;# 
   188  0115                     	;# 
   189  0116                     	;# 
   190  0117                     	;# 
   191  0118                     	;# 
   192  0119                     	;# 
   193  011A                     	;# 
   194  011B                     	;# 
   195  011D                     	;# 
   196  018C                     	;# 
   197  018D                     	;# 
   198  018F                     	;# 
   199  0190                     	;# 
   200  0191                     	;# 
   201  0191                     	;# 
   202  0192                     	;# 
   203  0193                     	;# 
   204  0193                     	;# 
   205  0193                     	;# 
   206  0194                     	;# 
   207  0195                     	;# 
   208  0196                     	;# 
   209  0199                     	;# 
   210  019A                     	;# 
   211  019B                     	;# 
   212  019B                     	;# 
   213  019B                     	;# 
   214  019B                     	;# 
   215  019C                     	;# 
   216  019C                     	;# 
   217  019D                     	;# 
   218  019E                     	;# 
   219  019F                     	;# 
   220  020D                     	;# 
   221  0210                     	;# 
   222  0211                     	;# 
   223  0212                     	;# 
   224  0213                     	;# 
   225  0214                     	;# 
   226  0215                     	;# 
   227  0215                     	;# 
   228  0216                     	;# 
   229  0217                     	;# 
   230  0291                     	;# 
   231  0291                     	;# 
   232  0292                     	;# 
   233  0293                     	;# 
   234  0294                     	;# 
   235  0295                     	;# 
   236  0295                     	;# 
   237  0296                     	;# 
   238  0298                     	;# 
   239  0298                     	;# 
   240  0299                     	;# 
   241  029A                     	;# 
   242  029B                     	;# 
   243  029C                     	;# 
   244  029C                     	;# 
   245  029D                     	;# 
   246  029E                     	;# 
   247  029F                     	;# 
   248  0311                     	;# 
   249  0311                     	;# 
   250  0312                     	;# 
   251  0313                     	;# 
   252  0314                     	;# 
   253  0315                     	;# 
   254  0315                     	;# 
   255  0316                     	;# 
   256  0318                     	;# 
   257  0318                     	;# 
   258  0319                     	;# 
   259  031A                     	;# 
   260  031C                     	;# 
   261  031C                     	;# 
   262  031D                     	;# 
   263  031E                     	;# 
   264  0394                     	;# 
   265  0395                     	;# 
   266  0396                     	;# 
   267  0415                     	;# 
   268  0416                     	;# 
   269  0417                     	;# 
   270  041C                     	;# 
   271  041D                     	;# 
   272  041E                     	;# 
   273  0791                     	;# 
   274  0792                     	;# 
   275  0793                     	;# 
   276  0794                     	;# 
   277  0795                     	;# 
   278  0798                     	;# 
   279  0799                     	;# 
   280  079A                     	;# 
   281  07A0                     	;# 
   282  07A1                     	;# 
   283  07A2                     	;# 
   284  07A3                     	;# 
   285  07A4                     	;# 
   286  07A5                     	;# 
   287  07A6                     	;# 
   288  07A7                     	;# 
   289  07A8                     	;# 
   290  07A9                     	;# 
   291  07AA                     	;# 
   292  07AB                     	;# 
   293  0FE4                     	;# 
   294  0FE5                     	;# 
   295  0FE6                     	;# 
   296  0FE7                     	;# 
   297  0FE8                     	;# 
   298  0FE9                     	;# 
   299  0FEA                     	;# 
   300  0FEB                     	;# 
   301  0FED                     	;# 
   302  0FEE                     	;# 
   303  0FEF                     	;# 
   304  0000                     	;# 
   305  0001                     	;# 
   306  0002                     	;# 
   307  0003                     	;# 
   308  0004                     	;# 
   309  0005                     	;# 
   310  0006                     	;# 
   311  0007                     	;# 
   312  0008                     	;# 
   313  0009                     	;# 
   314  000A                     	;# 
   315  000B                     	;# 
   316  000C                     	;# 
   317  000D                     	;# 
   318  000E                     	;# 
   319  000F                     	;# 
   320  0010                     	;# 
   321  0011                     	;# 
   322  0012                     	;# 
   323  0013                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0016                     	;# 
   327  0017                     	;# 
   328  0018                     	;# 
   329  0019                     	;# 
   330  001A                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  008C                     	;# 
   336  008D                     	;# 
   337  008E                     	;# 
   338  008F                     	;# 
   339  0090                     	;# 
   340  0091                     	;# 
   341  0092                     	;# 
   342  0093                     	;# 
   343  0095                     	;# 
   344  0096                     	;# 
   345  0097                     	;# 
   346  0098                     	;# 
   347  0099                     	;# 
   348  009A                     	;# 
   349  009B                     	;# 
   350  009B                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  010C                     	;# 
   355  010D                     	;# 
   356  010E                     	;# 
   357  010F                     	;# 
   358  0110                     	;# 
   359  0111                     	;# 
   360  0112                     	;# 
   361  0113                     	;# 
   362  0114                     	;# 
   363  0115                     	;# 
   364  0116                     	;# 
   365  0117                     	;# 
   366  0118                     	;# 
   367  0119                     	;# 
   368  011A                     	;# 
   369  011B                     	;# 
   370  011D                     	;# 
   371  018C                     	;# 
   372  018D                     	;# 
   373  018F                     	;# 
   374  0190                     	;# 
   375  0191                     	;# 
   376  0191                     	;# 
   377  0192                     	;# 
   378  0193                     	;# 
   379  0193                     	;# 
   380  0193                     	;# 
   381  0194                     	;# 
   382  0195                     	;# 
   383  0196                     	;# 
   384  0199                     	;# 
   385  019A                     	;# 
   386  019B                     	;# 
   387  019B                     	;# 
   388  019B                     	;# 
   389  019B                     	;# 
   390  019C                     	;# 
   391  019C                     	;# 
   392  019D                     	;# 
   393  019E                     	;# 
   394  019F                     	;# 
   395  020D                     	;# 
   396  0210                     	;# 
   397  0211                     	;# 
   398  0212                     	;# 
   399  0213                     	;# 
   400  0214                     	;# 
   401  0215                     	;# 
   402  0215                     	;# 
   403  0216                     	;# 
   404  0217                     	;# 
   405  0291                     	;# 
   406  0291                     	;# 
   407  0292                     	;# 
   408  0293                     	;# 
   409  0294                     	;# 
   410  0295                     	;# 
   411  0295                     	;# 
   412  0296                     	;# 
   413  0298                     	;# 
   414  0298                     	;# 
   415  0299                     	;# 
   416  029A                     	;# 
   417  029B                     	;# 
   418  029C                     	;# 
   419  029C                     	;# 
   420  029D                     	;# 
   421  029E                     	;# 
   422  029F                     	;# 
   423  0311                     	;# 
   424  0311                     	;# 
   425  0312                     	;# 
   426  0313                     	;# 
   427  0314                     	;# 
   428  0315                     	;# 
   429  0315                     	;# 
   430  0316                     	;# 
   431  0318                     	;# 
   432  0318                     	;# 
   433  0319                     	;# 
   434  031A                     	;# 
   435  031C                     	;# 
   436  031C                     	;# 
   437  031D                     	;# 
   438  031E                     	;# 
   439  0394                     	;# 
   440  0395                     	;# 
   441  0396                     	;# 
   442  0415                     	;# 
   443  0416                     	;# 
   444  0417                     	;# 
   445  041C                     	;# 
   446  041D                     	;# 
   447  041E                     	;# 
   448  0791                     	;# 
   449  0792                     	;# 
   450  0793                     	;# 
   451  0794                     	;# 
   452  0795                     	;# 
   453  0798                     	;# 
   454  0799                     	;# 
   455  079A                     	;# 
   456  07A0                     	;# 
   457  07A1                     	;# 
   458  07A2                     	;# 
   459  07A3                     	;# 
   460  07A4                     	;# 
   461  07A5                     	;# 
   462  07A6                     	;# 
   463  07A7                     	;# 
   464  07A8                     	;# 
   465  07A9                     	;# 
   466  07AA                     	;# 
   467  07AB                     	;# 
   468  0FE4                     	;# 
   469  0FE5                     	;# 
   470  0FE6                     	;# 
   471  0FE7                     	;# 
   472  0FE8                     	;# 
   473  0FE9                     	;# 
   474  0FEA                     	;# 
   475  0FEB                     	;# 
   476  0FED                     	;# 
   477  0FEE                     	;# 
   478  0FEF                     	;# 
   479  0000                     	;# 
   480  0001                     	;# 
   481  0002                     	;# 
   482  0003                     	;# 
   483  0004                     	;# 
   484  0005                     	;# 
   485  0006                     	;# 
   486  0007                     	;# 
   487  0008                     	;# 
   488  0009                     	;# 
   489  000A                     	;# 
   490  000B                     	;# 
   491  000C                     	;# 
   492  000D                     	;# 
   493  000E                     	;# 
   494  000F                     	;# 
   495  0010                     	;# 
   496  0011                     	;# 
   497  0012                     	;# 
   498  0013                     	;# 
   499  0015                     	;# 
   500  0016                     	;# 
   501  0016                     	;# 
   502  0017                     	;# 
   503  0018                     	;# 
   504  0019                     	;# 
   505  001A                     	;# 
   506  001B                     	;# 
   507  001C                     	;# 
   508  001E                     	;# 
   509  001F                     	;# 
   510  008C                     	;# 
   511  008D                     	;# 
   512  008E                     	;# 
   513  008F                     	;# 
   514  0090                     	;# 
   515  0091                     	;# 
   516  0092                     	;# 
   517  0093                     	;# 
   518  0095                     	;# 
   519  0096                     	;# 
   520  0097                     	;# 
   521  0098                     	;# 
   522  0099                     	;# 
   523  009A                     	;# 
   524  009B                     	;# 
   525  009B                     	;# 
   526  009C                     	;# 
   527  009D                     	;# 
   528  009E                     	;# 
   529  010C                     	;# 
   530  010D                     	;# 
   531  010E                     	;# 
   532  010F                     	;# 
   533  0110                     	;# 
   534  0111                     	;# 
   535  0112                     	;# 
   536  0113                     	;# 
   537  0114                     	;# 
   538  0115                     	;# 
   539  0116                     	;# 
   540  0117                     	;# 
   541  0118                     	;# 
   542  0119                     	;# 
   543  011A                     	;# 
   544  011B                     	;# 
   545  011D                     	;# 
   546  018C                     	;# 
   547  018D                     	;# 
   548  018F                     	;# 
   549  0190                     	;# 
   550  0191                     	;# 
   551  0191                     	;# 
   552  0192                     	;# 
   553  0193                     	;# 
   554  0193                     	;# 
   555  0193                     	;# 
   556  0194                     	;# 
   557  0195                     	;# 
   558  0196                     	;# 
   559  0199                     	;# 
   560  019A                     	;# 
   561  019B                     	;# 
   562  019B                     	;# 
   563  019B                     	;# 
   564  019B                     	;# 
   565  019C                     	;# 
   566  019C                     	;# 
   567  019D                     	;# 
   568  019E                     	;# 
   569  019F                     	;# 
   570  020D                     	;# 
   571  0210                     	;# 
   572  0211                     	;# 
   573  0212                     	;# 
   574  0213                     	;# 
   575  0214                     	;# 
   576  0215                     	;# 
   577  0215                     	;# 
   578  0216                     	;# 
   579  0217                     	;# 
   580  0291                     	;# 
   581  0291                     	;# 
   582  0292                     	;# 
   583  0293                     	;# 
   584  0294                     	;# 
   585  0295                     	;# 
   586  0295                     	;# 
   587  0296                     	;# 
   588  0298                     	;# 
   589  0298                     	;# 
   590  0299                     	;# 
   591  029A                     	;# 
   592  029B                     	;# 
   593  029C                     	;# 
   594  029C                     	;# 
   595  029D                     	;# 
   596  029E                     	;# 
   597  029F                     	;# 
   598  0311                     	;# 
   599  0311                     	;# 
   600  0312                     	;# 
   601  0313                     	;# 
   602  0314                     	;# 
   603  0315                     	;# 
   604  0315                     	;# 
   605  0316                     	;# 
   606  0318                     	;# 
   607  0318                     	;# 
   608  0319                     	;# 
   609  031A                     	;# 
   610  031C                     	;# 
   611  031C                     	;# 
   612  031D                     	;# 
   613  031E                     	;# 
   614  0394                     	;# 
   615  0395                     	;# 
   616  0396                     	;# 
   617  0415                     	;# 
   618  0416                     	;# 
   619  0417                     	;# 
   620  041C                     	;# 
   621  041D                     	;# 
   622  041E                     	;# 
   623  0791                     	;# 
   624  0792                     	;# 
   625  0793                     	;# 
   626  0794                     	;# 
   627  0795                     	;# 
   628  0798                     	;# 
   629  0799                     	;# 
   630  079A                     	;# 
   631  07A0                     	;# 
   632  07A1                     	;# 
   633  07A2                     	;# 
   634  07A3                     	;# 
   635  07A4                     	;# 
   636  07A5                     	;# 
   637  07A6                     	;# 
   638  07A7                     	;# 
   639  07A8                     	;# 
   640  07A9                     	;# 
   641  07AA                     	;# 
   642  07AB                     	;# 
   643  0FE4                     	;# 
   644  0FE5                     	;# 
   645  0FE6                     	;# 
   646  0FE7                     	;# 
   647  0FE8                     	;# 
   648  0FE9                     	;# 
   649  0FEA                     	;# 
   650  0FEB                     	;# 
   651  0FED                     	;# 
   652  0FEE                     	;# 
   653  0FEF                     	;# 
   654  0000                     	;# 
   655  0001                     	;# 
   656  0002                     	;# 
   657  0003                     	;# 
   658  0004                     	;# 
   659  0005                     	;# 
   660  0006                     	;# 
   661  0007                     	;# 
   662  0008                     	;# 
   663  0009                     	;# 
   664  000A                     	;# 
   665  000B                     	;# 
   666  000C                     	;# 
   667  000D                     	;# 
   668  000E                     	;# 
   669  000F                     	;# 
   670  0010                     	;# 
   671  0011                     	;# 
   672  0012                     	;# 
   673  0013                     	;# 
   674  0015                     	;# 
   675  0016                     	;# 
   676  0016                     	;# 
   677  0017                     	;# 
   678  0018                     	;# 
   679  0019                     	;# 
   680  001A                     	;# 
   681  001B                     	;# 
   682  001C                     	;# 
   683  001E                     	;# 
   684  001F                     	;# 
   685  008C                     	;# 
   686  008D                     	;# 
   687  008E                     	;# 
   688  008F                     	;# 
   689  0090                     	;# 
   690  0091                     	;# 
   691  0092                     	;# 
   692  0093                     	;# 
   693  0095                     	;# 
   694  0096                     	;# 
   695  0097                     	;# 
   696  0098                     	;# 
   697  0099                     	;# 
   698  009A                     	;# 
   699  009B                     	;# 
   700  009B                     	;# 
   701  009C                     	;# 
   702  009D                     	;# 
   703  009E                     	;# 
   704  010C                     	;# 
   705  010D                     	;# 
   706  010E                     	;# 
   707  010F                     	;# 
   708  0110                     	;# 
   709  0111                     	;# 
   710  0112                     	;# 
   711  0113                     	;# 
   712  0114                     	;# 
   713  0115                     	;# 
   714  0116                     	;# 
   715  0117                     	;# 
   716  0118                     	;# 
   717  0119                     	;# 
   718  011A                     	;# 
   719  011B                     	;# 
   720  011D                     	;# 
   721  018C                     	;# 
   722  018D                     	;# 
   723  018F                     	;# 
   724  0190                     	;# 
   725  0191                     	;# 
   726  0191                     	;# 
   727  0192                     	;# 
   728  0193                     	;# 
   729  0193                     	;# 
   730  0193                     	;# 
   731  0194                     	;# 
   732  0195                     	;# 
   733  0196                     	;# 
   734  0199                     	;# 
   735  019A                     	;# 
   736  019B                     	;# 
   737  019B                     	;# 
   738  019B                     	;# 
   739  019B                     	;# 
   740  019C                     	;# 
   741  019C                     	;# 
   742  019D                     	;# 
   743  019E                     	;# 
   744  019F                     	;# 
   745  020D                     	;# 
   746  0210                     	;# 
   747  0211                     	;# 
   748  0212                     	;# 
   749  0213                     	;# 
   750  0214                     	;# 
   751  0215                     	;# 
   752  0215                     	;# 
   753  0216                     	;# 
   754  0217                     	;# 
   755  0291                     	;# 
   756  0291                     	;# 
   757  0292                     	;# 
   758  0293                     	;# 
   759  0294                     	;# 
   760  0295                     	;# 
   761  0295                     	;# 
   762  0296                     	;# 
   763  0298                     	;# 
   764  0298                     	;# 
   765  0299                     	;# 
   766  029A                     	;# 
   767  029B                     	;# 
   768  029C                     	;# 
   769  029C                     	;# 
   770  029D                     	;# 
   771  029E                     	;# 
   772  029F                     	;# 
   773  0311                     	;# 
   774  0311                     	;# 
   775  0312                     	;# 
   776  0313                     	;# 
   777  0314                     	;# 
   778  0315                     	;# 
   779  0315                     	;# 
   780  0316                     	;# 
   781  0318                     	;# 
   782  0318                     	;# 
   783  0319                     	;# 
   784  031A                     	;# 
   785  031C                     	;# 
   786  031C                     	;# 
   787  031D                     	;# 
   788  031E                     	;# 
   789  0394                     	;# 
   790  0395                     	;# 
   791  0396                     	;# 
   792  0415                     	;# 
   793  0416                     	;# 
   794  0417                     	;# 
   795  041C                     	;# 
   796  041D                     	;# 
   797  041E                     	;# 
   798  0791                     	;# 
   799  0792                     	;# 
   800  0793                     	;# 
   801  0794                     	;# 
   802  0795                     	;# 
   803  0798                     	;# 
   804  0799                     	;# 
   805  079A                     	;# 
   806  07A0                     	;# 
   807  07A1                     	;# 
   808  07A2                     	;# 
   809  07A3                     	;# 
   810  07A4                     	;# 
   811  07A5                     	;# 
   812  07A6                     	;# 
   813  07A7                     	;# 
   814  07A8                     	;# 
   815  07A9                     	;# 
   816  07AA                     	;# 
   817  07AB                     	;# 
   818  0FE4                     	;# 
   819  0FE5                     	;# 
   820  0FE6                     	;# 
   821  0FE7                     	;# 
   822  0FE8                     	;# 
   823  0FE9                     	;# 
   824  0FEA                     	;# 
   825  0FEB                     	;# 
   826  0FED                     	;# 
   827  0FEE                     	;# 
   828  0FEF                     	;# 
   829  0000                     	;# 
   830  0001                     	;# 
   831  0002                     	;# 
   832  0003                     	;# 
   833  0004                     	;# 
   834  0005                     	;# 
   835  0006                     	;# 
   836  0007                     	;# 
   837  0008                     	;# 
   838  0009                     	;# 
   839  000A                     	;# 
   840  000B                     	;# 
   841  000C                     	;# 
   842  000D                     	;# 
   843  000E                     	;# 
   844  000F                     	;# 
   845  0010                     	;# 
   846  0011                     	;# 
   847  0012                     	;# 
   848  0013                     	;# 
   849  0015                     	;# 
   850  0016                     	;# 
   851  0016                     	;# 
   852  0017                     	;# 
   853  0018                     	;# 
   854  0019                     	;# 
   855  001A                     	;# 
   856  001B                     	;# 
   857  001C                     	;# 
   858  001E                     	;# 
   859  001F                     	;# 
   860  008C                     	;# 
   861  008D                     	;# 
   862  008E                     	;# 
   863  008F                     	;# 
   864  0090                     	;# 
   865  0091                     	;# 
   866  0092                     	;# 
   867  0093                     	;# 
   868  0095                     	;# 
   869  0096                     	;# 
   870  0097                     	;# 
   871  0098                     	;# 
   872  0099                     	;# 
   873  009A                     	;# 
   874  009B                     	;# 
   875  009B                     	;# 
   876  009C                     	;# 
   877  009D                     	;# 
   878  009E                     	;# 
   879  010C                     	;# 
   880  010D                     	;# 
   881  010E                     	;# 
   882  010F                     	;# 
   883  0110                     	;# 
   884  0111                     	;# 
   885  0112                     	;# 
   886  0113                     	;# 
   887  0114                     	;# 
   888  0115                     	;# 
   889  0116                     	;# 
   890  0117                     	;# 
   891  0118                     	;# 
   892  0119                     	;# 
   893  011A                     	;# 
   894  011B                     	;# 
   895  011D                     	;# 
   896  018C                     	;# 
   897  018D                     	;# 
   898  018F                     	;# 
   899  0190                     	;# 
   900  0191                     	;# 
   901  0191                     	;# 
   902  0192                     	;# 
   903  0193                     	;# 
   904  0193                     	;# 
   905  0193                     	;# 
   906  0194                     	;# 
   907  0195                     	;# 
   908  0196                     	;# 
   909  0199                     	;# 
   910  019A                     	;# 
   911  019B                     	;# 
   912  019B                     	;# 
   913  019B                     	;# 
   914  019B                     	;# 
   915  019C                     	;# 
   916  019C                     	;# 
   917  019D                     	;# 
   918  019E                     	;# 
   919  019F                     	;# 
   920  020D                     	;# 
   921  0210                     	;# 
   922  0211                     	;# 
   923  0212                     	;# 
   924  0213                     	;# 
   925  0214                     	;# 
   926  0215                     	;# 
   927  0215                     	;# 
   928  0216                     	;# 
   929  0217                     	;# 
   930  0291                     	;# 
   931  0291                     	;# 
   932  0292                     	;# 
   933  0293                     	;# 
   934  0294                     	;# 
   935  0295                     	;# 
   936  0295                     	;# 
   937  0296                     	;# 
   938  0298                     	;# 
   939  0298                     	;# 
   940  0299                     	;# 
   941  029A                     	;# 
   942  029B                     	;# 
   943  029C                     	;# 
   944  029C                     	;# 
   945  029D                     	;# 
   946  029E                     	;# 
   947  029F                     	;# 
   948  0311                     	;# 
   949  0311                     	;# 
   950  0312                     	;# 
   951  0313                     	;# 
   952  0314                     	;# 
   953  0315                     	;# 
   954  0315                     	;# 
   955  0316                     	;# 
   956  0318                     	;# 
   957  0318                     	;# 
   958  0319                     	;# 
   959  031A                     	;# 
   960  031C                     	;# 
   961  031C                     	;# 
   962  031D                     	;# 
   963  031E                     	;# 
   964  0394                     	;# 
   965  0395                     	;# 
   966  0396                     	;# 
   967  0415                     	;# 
   968  0416                     	;# 
   969  0417                     	;# 
   970  041C                     	;# 
   971  041D                     	;# 
   972  041E                     	;# 
   973  0791                     	;# 
   974  0792                     	;# 
   975  0793                     	;# 
   976  0794                     	;# 
   977  0795                     	;# 
   978  0798                     	;# 
   979  0799                     	;# 
   980  079A                     	;# 
   981  07A0                     	;# 
   982  07A1                     	;# 
   983  07A2                     	;# 
   984  07A3                     	;# 
   985  07A4                     	;# 
   986  07A5                     	;# 
   987  07A6                     	;# 
   988  07A7                     	;# 
   989  07A8                     	;# 
   990  07A9                     	;# 
   991  07AA                     	;# 
   992  07AB                     	;# 
   993  0FE4                     	;# 
   994  0FE5                     	;# 
   995  0FE6                     	;# 
   996  0FE7                     	;# 
   997  0FE8                     	;# 
   998  0FE9                     	;# 
   999  0FEA                     	;# 
  1000  0FEB                     	;# 
  1001  0FED                     	;# 
  1002  0FEE                     	;# 
  1003  0FEF                     	;# 
  1004  0000                     	;# 
  1005  0001                     	;# 
  1006  0002                     	;# 
  1007  0003                     	;# 
  1008  0004                     	;# 
  1009  0005                     	;# 
  1010  0006                     	;# 
  1011  0007                     	;# 
  1012  0008                     	;# 
  1013  0009                     	;# 
  1014  000A                     	;# 
  1015  000B                     	;# 
  1016  000C                     	;# 
  1017  000D                     	;# 
  1018  000E                     	;# 
  1019  000F                     	;# 
  1020  0010                     	;# 
  1021  0011                     	;# 
  1022  0012                     	;# 
  1023  0013                     	;# 
  1024  0015                     	;# 
  1025  0016                     	;# 
  1026  0016                     	;# 
  1027  0017                     	;# 
  1028  0018                     	;# 
  1029  0019                     	;# 
  1030  001A                     	;# 
  1031  001B                     	;# 
  1032  001C                     	;# 
  1033  001E                     	;# 
  1034  001F                     	;# 
  1035  008C                     	;# 
  1036  008D                     	;# 
  1037  008E                     	;# 
  1038  008F                     	;# 
  1039  0090                     	;# 
  1040  0091                     	;# 
  1041  0092                     	;# 
  1042  0093                     	;# 
  1043  0095                     	;# 
  1044  0096                     	;# 
  1045  0097                     	;# 
  1046  0098                     	;# 
  1047  0099                     	;# 
  1048  009A                     	;# 
  1049  009B                     	;# 
  1050  009B                     	;# 
  1051  009C                     	;# 
  1052  009D                     	;# 
  1053  009E                     	;# 
  1054  010C                     	;# 
  1055  010D                     	;# 
  1056  010E                     	;# 
  1057  010F                     	;# 
  1058  0110                     	;# 
  1059  0111                     	;# 
  1060  0112                     	;# 
  1061  0113                     	;# 
  1062  0114                     	;# 
  1063  0115                     	;# 
  1064  0116                     	;# 
  1065  0117                     	;# 
  1066  0118                     	;# 
  1067  0119                     	;# 
  1068  011A                     	;# 
  1069  011B                     	;# 
  1070  011D                     	;# 
  1071  018C                     	;# 
  1072  018D                     	;# 
  1073  018F                     	;# 
  1074  0190                     	;# 
  1075  0191                     	;# 
  1076  0191                     	;# 
  1077  0192                     	;# 
  1078  0193                     	;# 
  1079  0193                     	;# 
  1080  0193                     	;# 
  1081  0194                     	;# 
  1082  0195                     	;# 
  1083  0196                     	;# 
  1084  0199                     	;# 
  1085  019A                     	;# 
  1086  019B                     	;# 
  1087  019B                     	;# 
  1088  019B                     	;# 
  1089  019B                     	;# 
  1090  019C                     	;# 
  1091  019C                     	;# 
  1092  019D                     	;# 
  1093  019E                     	;# 
  1094  019F                     	;# 
  1095  020D                     	;# 
  1096  0210                     	;# 
  1097  0211                     	;# 
  1098  0212                     	;# 
  1099  0213                     	;# 
  1100  0214                     	;# 
  1101  0215                     	;# 
  1102  0215                     	;# 
  1103  0216                     	;# 
  1104  0217                     	;# 
  1105  0291                     	;# 
  1106  0291                     	;# 
  1107  0292                     	;# 
  1108  0293                     	;# 
  1109  0294                     	;# 
  1110  0295                     	;# 
  1111  0295                     	;# 
  1112  0296                     	;# 
  1113  0298                     	;# 
  1114  0298                     	;# 
  1115  0299                     	;# 
  1116  029A                     	;# 
  1117  029B                     	;# 
  1118  029C                     	;# 
  1119  029C                     	;# 
  1120  029D                     	;# 
  1121  029E                     	;# 
  1122  029F                     	;# 
  1123  0311                     	;# 
  1124  0311                     	;# 
  1125  0312                     	;# 
  1126  0313                     	;# 
  1127  0314                     	;# 
  1128  0315                     	;# 
  1129  0315                     	;# 
  1130  0316                     	;# 
  1131  0318                     	;# 
  1132  0318                     	;# 
  1133  0319                     	;# 
  1134  031A                     	;# 
  1135  031C                     	;# 
  1136  031C                     	;# 
  1137  031D                     	;# 
  1138  031E                     	;# 
  1139  0394                     	;# 
  1140  0395                     	;# 
  1141  0396                     	;# 
  1142  0415                     	;# 
  1143  0416                     	;# 
  1144  0417                     	;# 
  1145  041C                     	;# 
  1146  041D                     	;# 
  1147  041E                     	;# 
  1148  0791                     	;# 
  1149  0792                     	;# 
  1150  0793                     	;# 
  1151  0794                     	;# 
  1152  0795                     	;# 
  1153  0798                     	;# 
  1154  0799                     	;# 
  1155  079A                     	;# 
  1156  07A0                     	;# 
  1157  07A1                     	;# 
  1158  07A2                     	;# 
  1159  07A3                     	;# 
  1160  07A4                     	;# 
  1161  07A5                     	;# 
  1162  07A6                     	;# 
  1163  07A7                     	;# 
  1164  07A8                     	;# 
  1165  07A9                     	;# 
  1166  07AA                     	;# 
  1167  07AB                     	;# 
  1168  0FE4                     	;# 
  1169  0FE5                     	;# 
  1170  0FE6                     	;# 
  1171  0FE7                     	;# 
  1172  0FE8                     	;# 
  1173  0FE9                     	;# 
  1174  0FEA                     	;# 
  1175  0FEB                     	;# 
  1176  0FED                     	;# 
  1177  0FEE                     	;# 
  1178  0FEF                     	;# 
  1179  0000                     	;# 
  1180  0001                     	;# 
  1181  0002                     	;# 
  1182  0003                     	;# 
  1183  0004                     	;# 
  1184  0005                     	;# 
  1185  0006                     	;# 
  1186  0007                     	;# 
  1187  0008                     	;# 
  1188  0009                     	;# 
  1189  000A                     	;# 
  1190  000B                     	;# 
  1191  000C                     	;# 
  1192  000D                     	;# 
  1193  000E                     	;# 
  1194  000F                     	;# 
  1195  0010                     	;# 
  1196  0011                     	;# 
  1197  0012                     	;# 
  1198  0013                     	;# 
  1199  0015                     	;# 
  1200  0016                     	;# 
  1201  0016                     	;# 
  1202  0017                     	;# 
  1203  0018                     	;# 
  1204  0019                     	;# 
  1205  001A                     	;# 
  1206  001B                     	;# 
  1207  001C                     	;# 
  1208  001E                     	;# 
  1209  001F                     	;# 
  1210  008C                     	;# 
  1211  008D                     	;# 
  1212  008E                     	;# 
  1213  008F                     	;# 
  1214  0090                     	;# 
  1215  0091                     	;# 
  1216  0092                     	;# 
  1217  0093                     	;# 
  1218  0095                     	;# 
  1219  0096                     	;# 
  1220  0097                     	;# 
  1221  0098                     	;# 
  1222  0099                     	;# 
  1223  009A                     	;# 
  1224  009B                     	;# 
  1225  009B                     	;# 
  1226  009C                     	;# 
  1227  009D                     	;# 
  1228  009E                     	;# 
  1229  010C                     	;# 
  1230  010D                     	;# 
  1231  010E                     	;# 
  1232  010F                     	;# 
  1233  0110                     	;# 
  1234  0111                     	;# 
  1235  0112                     	;# 
  1236  0113                     	;# 
  1237  0114                     	;# 
  1238  0115                     	;# 
  1239  0116                     	;# 
  1240  0117                     	;# 
  1241  0118                     	;# 
  1242  0119                     	;# 
  1243  011A                     	;# 
  1244  011B                     	;# 
  1245  011D                     	;# 
  1246  018C                     	;# 
  1247  018D                     	;# 
  1248  018F                     	;# 
  1249  0190                     	;# 
  1250  0191                     	;# 
  1251  0191                     	;# 
  1252  0192                     	;# 
  1253  0193                     	;# 
  1254  0193                     	;# 
  1255  0193                     	;# 
  1256  0194                     	;# 
  1257  0195                     	;# 
  1258  0196                     	;# 
  1259  0199                     	;# 
  1260  019A                     	;# 
  1261  019B                     	;# 
  1262  019B                     	;# 
  1263  019B                     	;# 
  1264  019B                     	;# 
  1265  019C                     	;# 
  1266  019C                     	;# 
  1267  019D                     	;# 
  1268  019E                     	;# 
  1269  019F                     	;# 
  1270  020D                     	;# 
  1271  0210                     	;# 
  1272  0211                     	;# 
  1273  0212                     	;# 
  1274  0213                     	;# 
  1275  0214                     	;# 
  1276  0215                     	;# 
  1277  0215                     	;# 
  1278  0216                     	;# 
  1279  0217                     	;# 
  1280  0291                     	;# 
  1281  0291                     	;# 
  1282  0292                     	;# 
  1283  0293                     	;# 
  1284  0294                     	;# 
  1285  0295                     	;# 
  1286  0295                     	;# 
  1287  0296                     	;# 
  1288  0298                     	;# 
  1289  0298                     	;# 
  1290  0299                     	;# 
  1291  029A                     	;# 
  1292  029B                     	;# 
  1293  029C                     	;# 
  1294  029C                     	;# 
  1295  029D                     	;# 
  1296  029E                     	;# 
  1297  029F                     	;# 
  1298  0311                     	;# 
  1299  0311                     	;# 
  1300  0312                     	;# 
  1301  0313                     	;# 
  1302  0314                     	;# 
  1303  0315                     	;# 
  1304  0315                     	;# 
  1305  0316                     	;# 
  1306  0318                     	;# 
  1307  0318                     	;# 
  1308  0319                     	;# 
  1309  031A                     	;# 
  1310  031C                     	;# 
  1311  031C                     	;# 
  1312  031D                     	;# 
  1313  031E                     	;# 
  1314  0394                     	;# 
  1315  0395                     	;# 
  1316  0396                     	;# 
  1317  0415                     	;# 
  1318  0416                     	;# 
  1319  0417                     	;# 
  1320  041C                     	;# 
  1321  041D                     	;# 
  1322  041E                     	;# 
  1323  0791                     	;# 
  1324  0792                     	;# 
  1325  0793                     	;# 
  1326  0794                     	;# 
  1327  0795                     	;# 
  1328  0798                     	;# 
  1329  0799                     	;# 
  1330  079A                     	;# 
  1331  07A0                     	;# 
  1332  07A1                     	;# 
  1333  07A2                     	;# 
  1334  07A3                     	;# 
  1335  07A4                     	;# 
  1336  07A5                     	;# 
  1337  07A6                     	;# 
  1338  07A7                     	;# 
  1339  07A8                     	;# 
  1340  07A9                     	;# 
  1341  07AA                     	;# 
  1342  07AB                     	;# 
  1343  0FE4                     	;# 
  1344  0FE5                     	;# 
  1345  0FE6                     	;# 
  1346  0FE7                     	;# 
  1347  0FE8                     	;# 
  1348  0FE9                     	;# 
  1349  0FEA                     	;# 
  1350  0FEB                     	;# 
  1351  0FED                     	;# 
  1352  0FEE                     	;# 
  1353  0FEF                     	;# 
  1354  0000                     	;# 
  1355  0001                     	;# 
  1356  0002                     	;# 
  1357  0003                     	;# 
  1358  0004                     	;# 
  1359  0005                     	;# 
  1360  0006                     	;# 
  1361  0007                     	;# 
  1362  0008                     	;# 
  1363  0009                     	;# 
  1364  000A                     	;# 
  1365  000B                     	;# 
  1366  000C                     	;# 
  1367  000D                     	;# 
  1368  000E                     	;# 
  1369  000F                     	;# 
  1370  0010                     	;# 
  1371  0011                     	;# 
  1372  0012                     	;# 
  1373  0013                     	;# 
  1374  0015                     	;# 
  1375  0016                     	;# 
  1376  0016                     	;# 
  1377  0017                     	;# 
  1378  0018                     	;# 
  1379  0019                     	;# 
  1380  001A                     	;# 
  1381  001B                     	;# 
  1382  001C                     	;# 
  1383  001E                     	;# 
  1384  001F                     	;# 
  1385  008C                     	;# 
  1386  008D                     	;# 
  1387  008E                     	;# 
  1388  008F                     	;# 
  1389  0090                     	;# 
  1390  0091                     	;# 
  1391  0092                     	;# 
  1392  0093                     	;# 
  1393  0095                     	;# 
  1394  0096                     	;# 
  1395  0097                     	;# 
  1396  0098                     	;# 
  1397  0099                     	;# 
  1398  009A                     	;# 
  1399  009B                     	;# 
  1400  009B                     	;# 
  1401  009C                     	;# 
  1402  009D                     	;# 
  1403  009E                     	;# 
  1404  010C                     	;# 
  1405  010D                     	;# 
  1406  010E                     	;# 
  1407  010F                     	;# 
  1408  0110                     	;# 
  1409  0111                     	;# 
  1410  0112                     	;# 
  1411  0113                     	;# 
  1412  0114                     	;# 
  1413  0115                     	;# 
  1414  0116                     	;# 
  1415  0117                     	;# 
  1416  0118                     	;# 
  1417  0119                     	;# 
  1418  011A                     	;# 
  1419  011B                     	;# 
  1420  011D                     	;# 
  1421  018C                     	;# 
  1422  018D                     	;# 
  1423  018F                     	;# 
  1424  0190                     	;# 
  1425  0191                     	;# 
  1426  0191                     	;# 
  1427  0192                     	;# 
  1428  0193                     	;# 
  1429  0193                     	;# 
  1430  0193                     	;# 
  1431  0194                     	;# 
  1432  0195                     	;# 
  1433  0196                     	;# 
  1434  0199                     	;# 
  1435  019A                     	;# 
  1436  019B                     	;# 
  1437  019B                     	;# 
  1438  019B                     	;# 
  1439  019B                     	;# 
  1440  019C                     	;# 
  1441  019C                     	;# 
  1442  019D                     	;# 
  1443  019E                     	;# 
  1444  019F                     	;# 
  1445  020D                     	;# 
  1446  0210                     	;# 
  1447  0211                     	;# 
  1448  0212                     	;# 
  1449  0213                     	;# 
  1450  0214                     	;# 
  1451  0215                     	;# 
  1452  0215                     	;# 
  1453  0216                     	;# 
  1454  0217                     	;# 
  1455  0291                     	;# 
  1456  0291                     	;# 
  1457  0292                     	;# 
  1458  0293                     	;# 
  1459  0294                     	;# 
  1460  0295                     	;# 
  1461  0295                     	;# 
  1462  0296                     	;# 
  1463  0298                     	;# 
  1464  0298                     	;# 
  1465  0299                     	;# 
  1466  029A                     	;# 
  1467  029B                     	;# 
  1468  029C                     	;# 
  1469  029C                     	;# 
  1470  029D                     	;# 
  1471  029E                     	;# 
  1472  029F                     	;# 
  1473  0311                     	;# 
  1474  0311                     	;# 
  1475  0312                     	;# 
  1476  0313                     	;# 
  1477  0314                     	;# 
  1478  0315                     	;# 
  1479  0315                     	;# 
  1480  0316                     	;# 
  1481  0318                     	;# 
  1482  0318                     	;# 
  1483  0319                     	;# 
  1484  031A                     	;# 
  1485  031C                     	;# 
  1486  031C                     	;# 
  1487  031D                     	;# 
  1488  031E                     	;# 
  1489  0394                     	;# 
  1490  0395                     	;# 
  1491  0396                     	;# 
  1492  0415                     	;# 
  1493  0416                     	;# 
  1494  0417                     	;# 
  1495  041C                     	;# 
  1496  041D                     	;# 
  1497  041E                     	;# 
  1498  0791                     	;# 
  1499  0792                     	;# 
  1500  0793                     	;# 
  1501  0794                     	;# 
  1502  0795                     	;# 
  1503  0798                     	;# 
  1504  0799                     	;# 
  1505  079A                     	;# 
  1506  07A0                     	;# 
  1507  07A1                     	;# 
  1508  07A2                     	;# 
  1509  07A3                     	;# 
  1510  07A4                     	;# 
  1511  07A5                     	;# 
  1512  07A6                     	;# 
  1513  07A7                     	;# 
  1514  07A8                     	;# 
  1515  07A9                     	;# 
  1516  07AA                     	;# 
  1517  07AB                     	;# 
  1518  0FE4                     	;# 
  1519  0FE5                     	;# 
  1520  0FE6                     	;# 
  1521  0FE7                     	;# 
  1522  0FE8                     	;# 
  1523  0FE9                     	;# 
  1524  0FEA                     	;# 
  1525  0FEB                     	;# 
  1526  0FED                     	;# 
  1527  0FEE                     	;# 
  1528  0FEF                     	;# 
  1529  0000                     	;# 
  1530  0001                     	;# 
  1531  0002                     	;# 
  1532  0003                     	;# 
  1533  0004                     	;# 
  1534  0005                     	;# 
  1535  0006                     	;# 
  1536  0007                     	;# 
  1537  0008                     	;# 
  1538  0009                     	;# 
  1539  000A                     	;# 
  1540  000B                     	;# 
  1541  000C                     	;# 
  1542  000D                     	;# 
  1543  000E                     	;# 
  1544  000F                     	;# 
  1545  0010                     	;# 
  1546  0011                     	;# 
  1547  0012                     	;# 
  1548  0013                     	;# 
  1549  0015                     	;# 
  1550  0016                     	;# 
  1551  0016                     	;# 
  1552  0017                     	;# 
  1553  0018                     	;# 
  1554  0019                     	;# 
  1555  001A                     	;# 
  1556  001B                     	;# 
  1557  001C                     	;# 
  1558  001E                     	;# 
  1559  001F                     	;# 
  1560  008C                     	;# 
  1561  008D                     	;# 
  1562  008E                     	;# 
  1563  008F                     	;# 
  1564  0090                     	;# 
  1565  0091                     	;# 
  1566  0092                     	;# 
  1567  0093                     	;# 
  1568  0095                     	;# 
  1569  0096                     	;# 
  1570  0097                     	;# 
  1571  0098                     	;# 
  1572  0099                     	;# 
  1573  009A                     	;# 
  1574  009B                     	;# 
  1575  009B                     	;# 
  1576  009C                     	;# 
  1577  009D                     	;# 
  1578  009E                     	;# 
  1579  010C                     	;# 
  1580  010D                     	;# 
  1581  010E                     	;# 
  1582  010F                     	;# 
  1583  0110                     	;# 
  1584  0111                     	;# 
  1585  0112                     	;# 
  1586  0113                     	;# 
  1587  0114                     	;# 
  1588  0115                     	;# 
  1589  0116                     	;# 
  1590  0117                     	;# 
  1591  0118                     	;# 
  1592  0119                     	;# 
  1593  011A                     	;# 
  1594  011B                     	;# 
  1595  011D                     	;# 
  1596  018C                     	;# 
  1597  018D                     	;# 
  1598  018F                     	;# 
  1599  0190                     	;# 
  1600  0191                     	;# 
  1601  0191                     	;# 
  1602  0192                     	;# 
  1603  0193                     	;# 
  1604  0193                     	;# 
  1605  0193                     	;# 
  1606  0194                     	;# 
  1607  0195                     	;# 
  1608  0196                     	;# 
  1609  0199                     	;# 
  1610  019A                     	;# 
  1611  019B                     	;# 
  1612  019B                     	;# 
  1613  019B                     	;# 
  1614  019B                     	;# 
  1615  019C                     	;# 
  1616  019C                     	;# 
  1617  019D                     	;# 
  1618  019E                     	;# 
  1619  019F                     	;# 
  1620  020D                     	;# 
  1621  0210                     	;# 
  1622  0211                     	;# 
  1623  0212                     	;# 
  1624  0213                     	;# 
  1625  0214                     	;# 
  1626  0215                     	;# 
  1627  0215                     	;# 
  1628  0216                     	;# 
  1629  0217                     	;# 
  1630  0291                     	;# 
  1631  0291                     	;# 
  1632  0292                     	;# 
  1633  0293                     	;# 
  1634  0294                     	;# 
  1635  0295                     	;# 
  1636  0295                     	;# 
  1637  0296                     	;# 
  1638  0298                     	;# 
  1639  0298                     	;# 
  1640  0299                     	;# 
  1641  029A                     	;# 
  1642  029B                     	;# 
  1643  029C                     	;# 
  1644  029C                     	;# 
  1645  029D                     	;# 
  1646  029E                     	;# 
  1647  029F                     	;# 
  1648  0311                     	;# 
  1649  0311                     	;# 
  1650  0312                     	;# 
  1651  0313                     	;# 
  1652  0314                     	;# 
  1653  0315                     	;# 
  1654  0315                     	;# 
  1655  0316                     	;# 
  1656  0318                     	;# 
  1657  0318                     	;# 
  1658  0319                     	;# 
  1659  031A                     	;# 
  1660  031C                     	;# 
  1661  031C                     	;# 
  1662  031D                     	;# 
  1663  031E                     	;# 
  1664  0394                     	;# 
  1665  0395                     	;# 
  1666  0396                     	;# 
  1667  0415                     	;# 
  1668  0416                     	;# 
  1669  0417                     	;# 
  1670  041C                     	;# 
  1671  041D                     	;# 
  1672  041E                     	;# 
  1673  0791                     	;# 
  1674  0792                     	;# 
  1675  0793                     	;# 
  1676  0794                     	;# 
  1677  0795                     	;# 
  1678  0798                     	;# 
  1679  0799                     	;# 
  1680  079A                     	;# 
  1681  07A0                     	;# 
  1682  07A1                     	;# 
  1683  07A2                     	;# 
  1684  07A3                     	;# 
  1685  07A4                     	;# 
  1686  07A5                     	;# 
  1687  07A6                     	;# 
  1688  07A7                     	;# 
  1689  07A8                     	;# 
  1690  07A9                     	;# 
  1691  07AA                     	;# 
  1692  07AB                     	;# 
  1693  0FE4                     	;# 
  1694  0FE5                     	;# 
  1695  0FE6                     	;# 
  1696  0FE7                     	;# 
  1697  0FE8                     	;# 
  1698  0FE9                     	;# 
  1699  0FEA                     	;# 
  1700  0FEB                     	;# 
  1701  0FED                     	;# 
  1702  0FEE                     	;# 
  1703  0FEF                     	;# 
  1704  0000                     	;# 
  1705  0001                     	;# 
  1706  0002                     	;# 
  1707  0003                     	;# 
  1708  0004                     	;# 
  1709  0005                     	;# 
  1710  0006                     	;# 
  1711  0007                     	;# 
  1712  0008                     	;# 
  1713  0009                     	;# 
  1714  000A                     	;# 
  1715  000B                     	;# 
  1716  000C                     	;# 
  1717  000D                     	;# 
  1718  000E                     	;# 
  1719  000F                     	;# 
  1720  0010                     	;# 
  1721  0011                     	;# 
  1722  0012                     	;# 
  1723  0013                     	;# 
  1724  0015                     	;# 
  1725  0016                     	;# 
  1726  0016                     	;# 
  1727  0017                     	;# 
  1728  0018                     	;# 
  1729  0019                     	;# 
  1730  001A                     	;# 
  1731  001B                     	;# 
  1732  001C                     	;# 
  1733  001E                     	;# 
  1734  001F                     	;# 
  1735  008C                     	;# 
  1736  008D                     	;# 
  1737  008E                     	;# 
  1738  008F                     	;# 
  1739  0090                     	;# 
  1740  0091                     	;# 
  1741  0092                     	;# 
  1742  0093                     	;# 
  1743  0095                     	;# 
  1744  0096                     	;# 
  1745  0097                     	;# 
  1746  0098                     	;# 
  1747  0099                     	;# 
  1748  009A                     	;# 
  1749  009B                     	;# 
  1750  009B                     	;# 
  1751  009C                     	;# 
  1752  009D                     	;# 
  1753  009E                     	;# 
  1754  010C                     	;# 
  1755  010D                     	;# 
  1756  010E                     	;# 
  1757  010F                     	;# 
  1758  0110                     	;# 
  1759  0111                     	;# 
  1760  0112                     	;# 
  1761  0113                     	;# 
  1762  0114                     	;# 
  1763  0115                     	;# 
  1764  0116                     	;# 
  1765  0117                     	;# 
  1766  0118                     	;# 
  1767  0119                     	;# 
  1768  011A                     	;# 
  1769  011B                     	;# 
  1770  011D                     	;# 
  1771  018C                     	;# 
  1772  018D                     	;# 
  1773  018F                     	;# 
  1774  0190                     	;# 
  1775  0191                     	;# 
  1776  0191                     	;# 
  1777  0192                     	;# 
  1778  0193                     	;# 
  1779  0193                     	;# 
  1780  0193                     	;# 
  1781  0194                     	;# 
  1782  0195                     	;# 
  1783  0196                     	;# 
  1784  0199                     	;# 
  1785  019A                     	;# 
  1786  019B                     	;# 
  1787  019B                     	;# 
  1788  019B                     	;# 
  1789  019B                     	;# 
  1790  019C                     	;# 
  1791  019C                     	;# 
  1792  019D                     	;# 
  1793  019E                     	;# 
  1794  019F                     	;# 
  1795  020D                     	;# 
  1796  0210                     	;# 
  1797  0211                     	;# 
  1798  0212                     	;# 
  1799  0213                     	;# 
  1800  0214                     	;# 
  1801  0215                     	;# 
  1802  0215                     	;# 
  1803  0216                     	;# 
  1804  0217                     	;# 
  1805  0291                     	;# 
  1806  0291                     	;# 
  1807  0292                     	;# 
  1808  0293                     	;# 
  1809  0294                     	;# 
  1810  0295                     	;# 
  1811  0295                     	;# 
  1812  0296                     	;# 
  1813  0298                     	;# 
  1814  0298                     	;# 
  1815  0299                     	;# 
  1816  029A                     	;# 
  1817  029B                     	;# 
  1818  029C                     	;# 
  1819  029C                     	;# 
  1820  029D                     	;# 
  1821  029E                     	;# 
  1822  029F                     	;# 
  1823  0311                     	;# 
  1824  0311                     	;# 
  1825  0312                     	;# 
  1826  0313                     	;# 
  1827  0314                     	;# 
  1828  0315                     	;# 
  1829  0315                     	;# 
  1830  0316                     	;# 
  1831  0318                     	;# 
  1832  0318                     	;# 
  1833  0319                     	;# 
  1834  031A                     	;# 
  1835  031C                     	;# 
  1836  031C                     	;# 
  1837  031D                     	;# 
  1838  031E                     	;# 
  1839  0394                     	;# 
  1840  0395                     	;# 
  1841  0396                     	;# 
  1842  0415                     	;# 
  1843  0416                     	;# 
  1844  0417                     	;# 
  1845  041C                     	;# 
  1846  041D                     	;# 
  1847  041E                     	;# 
  1848  0791                     	;# 
  1849  0792                     	;# 
  1850  0793                     	;# 
  1851  0794                     	;# 
  1852  0795                     	;# 
  1853  0798                     	;# 
  1854  0799                     	;# 
  1855  079A                     	;# 
  1856  07A0                     	;# 
  1857  07A1                     	;# 
  1858  07A2                     	;# 
  1859  07A3                     	;# 
  1860  07A4                     	;# 
  1861  07A5                     	;# 
  1862  07A6                     	;# 
  1863  07A7                     	;# 
  1864  07A8                     	;# 
  1865  07A9                     	;# 
  1866  07AA                     	;# 
  1867  07AB                     	;# 
  1868  0FE4                     	;# 
  1869  0FE5                     	;# 
  1870  0FE6                     	;# 
  1871  0FE7                     	;# 
  1872  0FE8                     	;# 
  1873  0FE9                     	;# 
  1874  0FEA                     	;# 
  1875  0FEB                     	;# 
  1876  0FED                     	;# 
  1877  0FEE                     	;# 
  1878  0FEF                     	;# 
  1879                           
  1880                           	psect	stringtext1
  1881  03BE                     __pstringtext1:
  1882  03BE                     _i2c_fsmStateTable:
  1883  03BE  34A7               	retlw	low _I2C_DO_IDLE
  1884  03BF  3406               	retlw	high _I2C_DO_IDLE
  1885  03C0  342E               	retlw	low _I2C_DO_SEND_ADR_READ
  1886  03C1  3406               	retlw	high _I2C_DO_SEND_ADR_READ
  1887  03C2  343F               	retlw	low _I2C_DO_SEND_ADR_WRITE
  1888  03C3  3406               	retlw	high _I2C_DO_SEND_ADR_WRITE
  1889  03C4  34DA               	retlw	low _I2C_DO_TX
  1890  03C5  3401               	retlw	high _I2C_DO_TX
  1891  03C6  342F               	retlw	low _I2C_DO_RX
  1892  03C7  3402               	retlw	high _I2C_DO_RX
  1893  03C8  344E               	retlw	low _I2C_DO_RCEN
  1894  03C9  3406               	retlw	high _I2C_DO_RCEN
  1895  03CA  3435               	retlw	low _I2C_DO_TX_EMPTY
  1896  03CB  3403               	retlw	high _I2C_DO_TX_EMPTY
  1897  03CC  34A2               	retlw	low _I2C_DO_SEND_RESTART_READ
  1898  03CD  3406               	retlw	high _I2C_DO_SEND_RESTART_READ
  1899  03CE  349D               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  1900  03CF  3406               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  1901  03D0  3498               	retlw	low _I2C_DO_SEND_RESTART
  1902  03D1  3406               	retlw	high _I2C_DO_SEND_RESTART
  1903  03D2  3493               	retlw	low _I2C_DO_SEND_STOP
  1904  03D3  3406               	retlw	high _I2C_DO_SEND_STOP
  1905  03D4  348E               	retlw	low _I2C_DO_RX_ACK
  1906  03D5  3406               	retlw	high _I2C_DO_RX_ACK
  1907  03D6  3489               	retlw	low _I2C_DO_RX_NACK_STOP
  1908  03D7  3406               	retlw	high _I2C_DO_RX_NACK_STOP
  1909  03D8  3484               	retlw	low _I2C_DO_RX_NACK_RESTART
  1910  03D9  3406               	retlw	high _I2C_DO_RX_NACK_RESTART
  1911  03DA  347F               	retlw	low _I2C_DO_RESET
  1912  03DB  3406               	retlw	high _I2C_DO_RESET
  1913  03DC  3492               	retlw	low _I2C_DO_ADDRESS_NACK
  1914  03DD  3403               	retlw	high _I2C_DO_ADDRESS_NACK
  1915  03DE                     __end_of_i2c_fsmStateTable:
  1916  0012                     _PIR2bits	set	18
  1917  0011                     _PIR1bits	set	17
  1918  000B                     _INTCONbits	set	11
  1919  0092                     _PIE2bits	set	146
  1920  0091                     _PIE1bits	set	145
  1921  009D                     _ADCON0bits	set	157
  1922  009D                     _ADCON0	set	157
  1923  009C                     _ADRESH	set	156
  1924  009B                     _ADRESL	set	155
  1925  009E                     _ADCON1	set	158
  1926  0097                     _WDTCON	set	151
  1927  0098                     _OSCTUNE	set	152
  1928  0099                     _OSCCON	set	153
  1929  0095                     _OPTION_REGbits	set	149
  1930  008F                     _TRISD	set	143
  1931  008E                     _TRISC	set	142
  1932  008D                     _TRISB	set	141
  1933  008C                     _TRISA	set	140
  1934  0090                     _TRISE	set	144
  1935  04D6                     _PLLR	set	1238
  1936  010D                     _LATBbits	set	269
  1937  010C                     _LATAbits	set	268
  1938  0116                     _BORCON	set	278
  1939  011D                     _APFCON	set	285
  1940  010E                     _LATC	set	270
  1941  010D                     _LATB	set	269
  1942  010C                     _LATA	set	268
  1943  010F                     _LATD	set	271
  1944  0110                     _LATE	set	272
  1945  0196                     _EECON2	set	406
  1946  0193                     _EEDATL	set	403
  1947  0194                     _EEDATH	set	404
  1948  0195                     _EECON1bits	set	405
  1949  0192                     _EEADRH	set	402
  1950  0191                     _EEADRL	set	401
  1951  0199                     _RCREG	set	409
  1952  019D                     _RCSTAbits	set	413
  1953  019A                     _TXREG	set	410
  1954  019E                     _TXSTAbits	set	414
  1955  019C                     _SPBRGH	set	412
  1956  019B                     _SPBRGL	set	411
  1957  019E                     _TXSTA	set	414
  1958  019D                     _RCSTA	set	413
  1959  019F                     _BAUDCON	set	415
  1960  018C                     _ANSELA	set	396
  1961  0190                     _ANSELE	set	400
  1962  018D                     _ANSELB	set	397
  1963  018F                     _ANSELD	set	399
  1964  0214                     _SSPSTATbits	set	532
  1965  0216                     _SSPCON2bits	set	534
  1966  0211                     _SSPBUF	set	529
  1967  0215                     _SSPCON1bits	set	533
  1968  0212                     _SSPADD	set	530
  1969  0216                     _SSPCON2	set	534
  1970  0215                     _SSPCON1	set	533
  1971  0214                     _SSPSTAT	set	532
  1972  020D                     _WPUB	set	525
  1973  0210                     _WPUE	set	528
  1974  03DE                     STR_1:
  1975  03DE  342D               	retlw	45	;'-'
  1976  03DF  343E               	retlw	62	;'>'
  1977  03E0  3447               	retlw	71	;'G'
  1978  03E1  3452               	retlw	82	;'R'
  1979  03E2  343A               	retlw	58	;':'
  1980  03E3  3478               	retlw	120	;'x'
  1981  03E4  343A               	retlw	58	;':'
  1982  03E5  344F               	retlw	79	;'O'
  1983  03E6  3446               	retlw	70	;'F'
  1984  03E7  3446               	retlw	70	;'F'
  1985  03E8  3400               	retlw	0
  1986                           
  1987                           	psect	stringtext2
  1988  05A9                     __pstringtext2:
  1989  05A9                     STR_11:
  1990  05A9  342D               	retlw	45	;'-'
  1991  05AA  343E               	retlw	62	;'>'
  1992  05AB  3447               	retlw	71	;'G'
  1993  05AC  3452               	retlw	82	;'R'
  1994  05AD  343A               	retlw	58	;':'
  1995  05AE  3431               	retlw	49	;'1'
  1996  05AF  3430               	retlw	48	;'0'
  1997  05B0  343A               	retlw	58	;':'
  1998  05B1  344F               	retlw	79	;'O'
  1999  05B2  344E               	retlw	78	;'N'
  2000  05B3  3400               	retlw	0
  2001                           
  2002                           	psect	stringtext3
  2003  05B4                     __pstringtext3:
  2004  05B4                     STR_12:
  2005  05B4  342D               	retlw	45	;'-'
  2006  05B5  343E               	retlw	62	;'>'
  2007  05B6  3447               	retlw	71	;'G'
  2008  05B7  3452               	retlw	82	;'R'
  2009  05B8  343A               	retlw	58	;':'
  2010  05B9  3431               	retlw	49	;'1'
  2011  05BA  3431               	retlw	49	;'1'
  2012  05BB  343A               	retlw	58	;':'
  2013  05BC  344F               	retlw	79	;'O'
  2014  05BD  344E               	retlw	78	;'N'
  2015  05BE  3400               	retlw	0
  2016                           
  2017                           	psect	stringtext4
  2018  05BF                     __pstringtext4:
  2019  05BF                     STR_13:
  2020  05BF  342D               	retlw	45	;'-'
  2021  05C0  343E               	retlw	62	;'>'
  2022  05C1  3447               	retlw	71	;'G'
  2023  05C2  3452               	retlw	82	;'R'
  2024  05C3  343A               	retlw	58	;':'
  2025  05C4  3431               	retlw	49	;'1'
  2026  05C5  3432               	retlw	50	;'2'
  2027  05C6  343A               	retlw	58	;':'
  2028  05C7  344F               	retlw	79	;'O'
  2029  05C8  344E               	retlw	78	;'N'
  2030  05C9  3400               	retlw	0
  2031                           
  2032                           	psect	stringtext5
  2033  05CA                     __pstringtext5:
  2034  05CA                     STR_2:
  2035  05CA  342D               	retlw	45	;'-'
  2036  05CB  343E               	retlw	62	;'>'
  2037  05CC  3447               	retlw	71	;'G'
  2038  05CD  3452               	retlw	82	;'R'
  2039  05CE  343A               	retlw	58	;':'
  2040  05CF  3431               	retlw	49	;'1'
  2041  05D0  343A               	retlw	58	;':'
  2042  05D1  344F               	retlw	79	;'O'
  2043  05D2  344E               	retlw	78	;'N'
  2044  05D3  3400               	retlw	0
  2045                           
  2046                           	psect	stringtext6
  2047  05D4                     __pstringtext6:
  2048  05D4                     STR_3:
  2049  05D4  342D               	retlw	45	;'-'
  2050  05D5  343E               	retlw	62	;'>'
  2051  05D6  3447               	retlw	71	;'G'
  2052  05D7  3452               	retlw	82	;'R'
  2053  05D8  343A               	retlw	58	;':'
  2054  05D9  3432               	retlw	50	;'2'
  2055  05DA  343A               	retlw	58	;':'
  2056  05DB  344F               	retlw	79	;'O'
  2057  05DC  344E               	retlw	78	;'N'
  2058  05DD  3400               	retlw	0
  2059                           
  2060                           	psect	stringtext7
  2061  05DE                     __pstringtext7:
  2062  05DE                     STR_4:
  2063  05DE  342D               	retlw	45	;'-'
  2064  05DF  343E               	retlw	62	;'>'
  2065  05E0  3447               	retlw	71	;'G'
  2066  05E1  3452               	retlw	82	;'R'
  2067  05E2  343A               	retlw	58	;':'
  2068  05E3  3433               	retlw	51	;'3'
  2069  05E4  343A               	retlw	58	;':'
  2070  05E5  344F               	retlw	79	;'O'
  2071  05E6  344E               	retlw	78	;'N'
  2072  05E7  3400               	retlw	0
  2073                           
  2074                           	psect	stringtext8
  2075  05E8                     __pstringtext8:
  2076  05E8                     STR_5:
  2077  05E8  342D               	retlw	45	;'-'
  2078  05E9  343E               	retlw	62	;'>'
  2079  05EA  3447               	retlw	71	;'G'
  2080  05EB  3452               	retlw	82	;'R'
  2081  05EC  343A               	retlw	58	;':'
  2082  05ED  3434               	retlw	52	;'4'
  2083  05EE  343A               	retlw	58	;':'
  2084  05EF  344F               	retlw	79	;'O'
  2085  05F0  344E               	retlw	78	;'N'
  2086  05F1  3400               	retlw	0
  2087                           
  2088                           	psect	stringtext9
  2089  05F2                     __pstringtext9:
  2090  05F2                     STR_6:
  2091  05F2  342D               	retlw	45	;'-'
  2092  05F3  343E               	retlw	62	;'>'
  2093  05F4  3447               	retlw	71	;'G'
  2094  05F5  3452               	retlw	82	;'R'
  2095  05F6  343A               	retlw	58	;':'
  2096  05F7  3435               	retlw	53	;'5'
  2097  05F8  343A               	retlw	58	;':'
  2098  05F9  344F               	retlw	79	;'O'
  2099  05FA  344E               	retlw	78	;'N'
  2100  05FB  3400               	retlw	0
  2101                           
  2102                           	psect	stringtext10
  2103  05FC                     __pstringtext10:
  2104  05FC                     STR_7:
  2105  05FC  342D               	retlw	45	;'-'
  2106  05FD  343E               	retlw	62	;'>'
  2107  05FE  3447               	retlw	71	;'G'
  2108  05FF  3452               	retlw	82	;'R'
  2109  0600  343A               	retlw	58	;':'
  2110  0601  3436               	retlw	54	;'6'
  2111  0602  343A               	retlw	58	;':'
  2112  0603  344F               	retlw	79	;'O'
  2113  0604  344E               	retlw	78	;'N'
  2114  0605  3400               	retlw	0
  2115                           
  2116                           	psect	stringtext11
  2117  0606                     __pstringtext11:
  2118  0606                     STR_8:
  2119  0606  342D               	retlw	45	;'-'
  2120  0607  343E               	retlw	62	;'>'
  2121  0608  3447               	retlw	71	;'G'
  2122  0609  3452               	retlw	82	;'R'
  2123  060A  343A               	retlw	58	;':'
  2124  060B  3437               	retlw	55	;'7'
  2125  060C  343A               	retlw	58	;':'
  2126  060D  344F               	retlw	79	;'O'
  2127  060E  344E               	retlw	78	;'N'
  2128  060F  3400               	retlw	0
  2129                           
  2130                           	psect	stringtext12
  2131  0610                     __pstringtext12:
  2132  0610                     STR_9:
  2133  0610  342D               	retlw	45	;'-'
  2134  0611  343E               	retlw	62	;'>'
  2135  0612  3447               	retlw	71	;'G'
  2136  0613  3452               	retlw	82	;'R'
  2137  0614  343A               	retlw	58	;':'
  2138  0615  3438               	retlw	56	;'8'
  2139  0616  343A               	retlw	58	;':'
  2140  0617  344F               	retlw	79	;'O'
  2141  0618  344E               	retlw	78	;'N'
  2142  0619  3400               	retlw	0
  2143                           
  2144                           	psect	stringtext13
  2145  061A                     __pstringtext13:
  2146  061A                     STR_10:
  2147  061A  342D               	retlw	45	;'-'
  2148  061B  343E               	retlw	62	;'>'
  2149  061C  3447               	retlw	71	;'G'
  2150  061D  3452               	retlw	82	;'R'
  2151  061E  343A               	retlw	58	;':'
  2152  061F  3439               	retlw	57	;'9'
  2153  0620  343A               	retlw	58	;':'
  2154  0621  344F               	retlw	79	;'O'
  2155  0622  344E               	retlw	78	;'N'
  2156  0623  3400               	retlw	0
  2157                           
  2158                           	psect	stringtext14
  2159  0000                     __pstringtext14:
  2160                           
  2161                           	psect	cinit
  2162  0049                     start_initialization:	
  2163                           ; #config settings
  2164                           
  2165  0049                     __initialization:
  2166                           
  2167                           ; Clear objects allocated to BANK0
  2168  0049  3020               	movlw	low __pbssBANK0
  2169  004A  0084               	movwf	4
  2170  004B  3000               	movlw	high __pbssBANK0
  2171  004C  0085               	movwf	5
  2172  004D  3025               	movlw	37
  2173  004E  3186  2655  3180   	fcall	clear_ram0
  2174                           
  2175                           ; Clear objects allocated to BANK1
  2176  0051  30A0               	movlw	low __pbssBANK1
  2177  0052  0084               	movwf	4
  2178  0053  3000               	movlw	high __pbssBANK1
  2179  0054  0085               	movwf	5
  2180  0055  304D               	movlw	77
  2181  0056  3186  2655  3180   	fcall	clear_ram0
  2182  0059                     end_of_initialization:	
  2183                           ;End of C runtime variable initialization code
  2184                           
  2185  0059                     __end_of__initialization:
  2186  0059  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2187  005A  0020               	movlb	0
  2188  005B  3180  285D         	ljmp	_main	;jump to C main() function
  2189                           
  2190                           	psect	bssBANK0
  2191  0020                     __pbssBANK0:
  2192  0020                     _eusartRxStatusBuffer:
  2193  0020                     	ds	8
  2194  0028                     _nout:
  2195  0028                     	ds	2
  2196  002A                     _width:
  2197  002A                     	ds	2
  2198  002C                     _prec:
  2199  002C                     	ds	2
  2200  002E                     _flags:
  2201  002E                     	ds	2
  2202  0030                     _EUSART_ErrorHandler:
  2203  0030                     	ds	2
  2204  0032                     _EUSART_OverrunErrorHandler:
  2205  0032                     	ds	2
  2206  0034                     _EUSART_FramingErrorHandler:
  2207  0034                     	ds	2
  2208  0036                     _EUSART_RxDefaultInterruptHandler:
  2209  0036                     	ds	2
  2210  0038                     _EUSART_TxDefaultInterruptHandler:
  2211  0038                     	ds	2
  2212  003A                     _ADC_InterruptHandler:
  2213  003A                     	ds	2
  2214  003C                     _MSSP_InterruptHandler:
  2215  003C                     	ds	2
  2216  003E                     _eusartRxLastError:
  2217  003E                     	ds	1
  2218  003F                     _eusartRxCount:
  2219  003F                     	ds	1
  2220  0040                     _eusartRxTail:
  2221  0040                     	ds	1
  2222  0041                     _eusartRxHead:
  2223  0041                     	ds	1
  2224  0042                     _eusartTxBufferRemaining:
  2225  0042                     	ds	1
  2226  0043                     _eusartTxTail:
  2227  0043                     	ds	1
  2228  0044                     _eusartTxHead:
  2229  0044                     	ds	1
  2230                           
  2231                           	psect	bssBANK1
  2232  00A0                     __pbssBANK1:
  2233  00A0                     _dbuf:
  2234  00A0                     	ds	32
  2235  00C0                     _I2C_Status:
  2236  00C0                     	ds	29
  2237  00DD                     _eusartRxBuffer:
  2238  00DD                     	ds	8
  2239  00E5                     _eusartTxBuffer:
  2240  00E5                     	ds	8
  2241                           
  2242                           	psect	clrtext
  2243  0655                     clear_ram0:	
  2244                           ;	Called with FSR0 containing the base address, and
  2245                           ;	WREG with the size to clear
  2246                           
  2247  0655  0064               	clrwdt	;clear the watchdog before getting into this loop
  2248  0656                     clrloop0:
  2249  0656  0180               	clrf	0	;clear RAM location pointed to by FSR
  2250  0657  3101               	addfsr 0,1
  2251  0658  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2252  0659  2E56               	goto	clrloop0	;have we reached the end yet?
  2253  065A  3400               	retlw	0	;all done for this memory range, return
  2254                           
  2255                           	psect	cstackCOMMON
  2256  0070                     __pcstackCOMMON:
  2257  0070                     ?_I2C_SetBuffer:
  2258  0070                     ?_I2C_Initialize:	
  2259                           ; 1 bytes @ 0x0
  2260                           
  2261  0070                     ?_OSCILLATOR_Initialize:	
  2262                           ; 1 bytes @ 0x0
  2263                           
  2264  0070                     ?_WDT_Initialize:	
  2265                           ; 1 bytes @ 0x0
  2266                           
  2267  0070                     ?_ADC_Initialize:	
  2268                           ; 1 bytes @ 0x0
  2269                           
  2270  0070                     ?_EUSART_Initialize:	
  2271                           ; 1 bytes @ 0x0
  2272                           
  2273  0070                     ?_EUSART_Receive_ISR:	
  2274                           ; 1 bytes @ 0x0
  2275                           
  2276  0070                     ?_EUSART_Transmit_ISR:	
  2277                           ; 1 bytes @ 0x0
  2278                           
  2279  0070                     ??_EUSART_Transmit_ISR:	
  2280                           ; 1 bytes @ 0x0
  2281                           
  2282  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  2283                           ; 1 bytes @ 0x0
  2284                           
  2285  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  2286                           ; 1 bytes @ 0x0
  2287                           
  2288  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  2289                           ; 1 bytes @ 0x0
  2290                           
  2291  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  2292                           ; 1 bytes @ 0x0
  2293                           
  2294  0070                     ?_EUSART_DefaultErrorHandler:	
  2295                           ; 1 bytes @ 0x0
  2296                           
  2297  0070                     ?_EUSART_RxDataHandler:	
  2298                           ; 1 bytes @ 0x0
  2299                           
  2300  0070                     ??_EUSART_RxDataHandler:	
  2301                           ; 1 bytes @ 0x0
  2302                           
  2303  0070                     ?_I2C_DO_IDLE:	
  2304                           ; 1 bytes @ 0x0
  2305                           
  2306  0070                     ??_I2C_DO_IDLE:	
  2307                           ; 1 bytes @ 0x0
  2308                           
  2309  0070                     ?_I2C_DO_SEND_ADR_READ:	
  2310                           ; 1 bytes @ 0x0
  2311                           
  2312  0070                     ??_I2C_DO_SEND_ADR_READ:	
  2313                           ; 1 bytes @ 0x0
  2314                           
  2315  0070                     ?_I2C_DO_SEND_ADR_WRITE:	
  2316                           ; 1 bytes @ 0x0
  2317                           
  2318  0070                     ?_I2C_DO_TX:	
  2319                           ; 1 bytes @ 0x0
  2320                           
  2321  0070                     ?_I2C_DO_RX:	
  2322                           ; 1 bytes @ 0x0
  2323                           
  2324  0070                     ?_I2C_DO_RCEN:	
  2325                           ; 1 bytes @ 0x0
  2326                           
  2327  0070                     ??_I2C_DO_RCEN:	
  2328                           ; 1 bytes @ 0x0
  2329                           
  2330  0070                     ?_I2C_DO_TX_EMPTY:	
  2331                           ; 1 bytes @ 0x0
  2332                           
  2333  0070                     ?_I2C_DO_SEND_RESTART_READ:	
  2334                           ; 1 bytes @ 0x0
  2335                           
  2336  0070                     ??_I2C_DO_SEND_RESTART_READ:	
  2337                           ; 1 bytes @ 0x0
  2338                           
  2339  0070                     ?_I2C_DO_SEND_RESTART_WRITE:	
  2340                           ; 1 bytes @ 0x0
  2341                           
  2342  0070                     ??_I2C_DO_SEND_RESTART_WRITE:	
  2343                           ; 1 bytes @ 0x0
  2344                           
  2345  0070                     ?_I2C_DO_SEND_RESTART:	
  2346                           ; 1 bytes @ 0x0
  2347                           
  2348  0070                     ??_I2C_DO_SEND_RESTART:	
  2349                           ; 1 bytes @ 0x0
  2350                           
  2351  0070                     ?_I2C_DO_SEND_STOP:	
  2352                           ; 1 bytes @ 0x0
  2353                           
  2354  0070                     ??_I2C_DO_SEND_STOP:	
  2355                           ; 1 bytes @ 0x0
  2356                           
  2357  0070                     ?_I2C_DO_RX_ACK:	
  2358                           ; 1 bytes @ 0x0
  2359                           
  2360  0070                     ??_I2C_DO_RX_ACK:	
  2361                           ; 1 bytes @ 0x0
  2362                           
  2363  0070                     ?_I2C_DO_RX_NACK_STOP:	
  2364                           ; 1 bytes @ 0x0
  2365                           
  2366  0070                     ??_I2C_DO_RX_NACK_STOP:	
  2367                           ; 1 bytes @ 0x0
  2368                           
  2369  0070                     ?_I2C_DO_RX_NACK_RESTART:	
  2370                           ; 1 bytes @ 0x0
  2371                           
  2372  0070                     ??_I2C_DO_RX_NACK_RESTART:	
  2373                           ; 1 bytes @ 0x0
  2374                           
  2375  0070                     ?_I2C_DO_RESET:	
  2376                           ; 1 bytes @ 0x0
  2377                           
  2378  0070                     ??_I2C_DO_RESET:	
  2379                           ; 1 bytes @ 0x0
  2380                           
  2381  0070                     ?_I2C_DO_ADDRESS_NACK:	
  2382                           ; 1 bytes @ 0x0
  2383                           
  2384  0070                     ?_I2C_MasterIsr:	
  2385                           ; 1 bytes @ 0x0
  2386                           
  2387  0070                     ?_I2C_MasterClearIrq:	
  2388                           ; 1 bytes @ 0x0
  2389                           
  2390  0070                     ??_I2C_MasterClearIrq:	
  2391                           ; 1 bytes @ 0x0
  2392                           
  2393  0070                     ?_I2C_SetCallback:	
  2394                           ; 1 bytes @ 0x0
  2395                           
  2396  0070                     ?_I2C_MasterFsm:	
  2397                           ; 1 bytes @ 0x0
  2398                           
  2399  0070                     ?_I2C_MasterIsNack:	
  2400                           ; 1 bytes @ 0x0
  2401                           
  2402  0070                     ??_I2C_MasterIsNack:	
  2403                           ; 1 bytes @ 0x0
  2404                           
  2405  0070                     ?_I2C_MasterSendTxData:	
  2406                           ; 1 bytes @ 0x0
  2407                           
  2408  0070                     ??_I2C_MasterSendTxData:	
  2409                           ; 1 bytes @ 0x0
  2410                           
  2411  0070                     ?_I2C_MasterGetRxData:	
  2412                           ; 1 bytes @ 0x0
  2413                           
  2414  0070                     ??_I2C_MasterGetRxData:	
  2415                           ; 1 bytes @ 0x0
  2416                           
  2417  0070                     ?_I2C_MasterSendAck:	
  2418                           ; 1 bytes @ 0x0
  2419                           
  2420  0070                     ??_I2C_MasterSendAck:	
  2421                           ; 1 bytes @ 0x0
  2422                           
  2423  0070                     ?_I2C_MasterStartRx:	
  2424                           ; 1 bytes @ 0x0
  2425                           
  2426  0070                     ??_I2C_MasterStartRx:	
  2427                           ; 1 bytes @ 0x0
  2428                           
  2429  0070                     ?_I2C_MasterSetIrq:	
  2430                           ; 1 bytes @ 0x0
  2431                           
  2432  0070                     ??_I2C_MasterSetIrq:	
  2433                           ; 1 bytes @ 0x0
  2434                           
  2435  0070                     ?_I2C_MasterEnableRestart:	
  2436                           ; 1 bytes @ 0x0
  2437                           
  2438  0070                     ??_I2C_MasterEnableRestart:	
  2439                           ; 1 bytes @ 0x0
  2440                           
  2441  0070                     ?_I2C_MasterStop:	
  2442                           ; 1 bytes @ 0x0
  2443                           
  2444  0070                     ??_I2C_MasterStop:	
  2445                           ; 1 bytes @ 0x0
  2446                           
  2447  0070                     ?_I2C_MasterSendNack:	
  2448                           ; 1 bytes @ 0x0
  2449                           
  2450  0070                     ??_I2C_MasterSendNack:	
  2451                           ; 1 bytes @ 0x0
  2452                           
  2453  0070                     ?_reset:	
  2454                           ; 1 bytes @ 0x0
  2455                           
  2456  0070                     ?_PIN_MANAGER_Initialize:	
  2457                           ; 1 bytes @ 0x0
  2458                           
  2459  0070                     ?_SYSTEM_Initialize:	
  2460                           ; 1 bytes @ 0x0
  2461                           
  2462  0070                     ?_EUSART_Read:	
  2463                           ; 1 bytes @ 0x0
  2464                           
  2465  0070                     ?_EUSART_Write:	
  2466                           ; 1 bytes @ 0x0
  2467                           
  2468  0070                     ?_putch:	
  2469                           ; 1 bytes @ 0x0
  2470                           
  2471  0070                     ?_INTERRUPT_InterruptManager:	
  2472                           ; 1 bytes @ 0x0
  2473                           
  2474  0070                     ?_main:	
  2475                           ; 1 bytes @ 0x0
  2476                           
  2477  0070                     I2C_MasterSendTxData@data:	
  2478                           ; 1 bytes @ 0x0
  2479                           
  2480  0070                     I2C_SetBuffer@bufferSize:	
  2481                           ; 1 bytes @ 0x0
  2482                           
  2483  0070                     I2C_SetCallback@cb:	
  2484                           ; 2 bytes @ 0x0
  2485                           
  2486                           
  2487                           ; 2 bytes @ 0x0
  2488  0070                     	ds	1
  2489  0071                     ??_EUSART_Receive_ISR:
  2490  0071                     ??_EUSART_DefaultErrorHandler:	
  2491                           ; 1 bytes @ 0x1
  2492                           
  2493  0071                     ??_I2C_DO_SEND_ADR_WRITE:	
  2494                           ; 1 bytes @ 0x1
  2495                           
  2496                           
  2497                           ; 1 bytes @ 0x1
  2498  0071                     	ds	1
  2499  0072                     ??_I2C_SetBuffer:
  2500  0072                     I2C_SetCallback@ptr:	
  2501                           ; 1 bytes @ 0x2
  2502                           
  2503                           
  2504                           ; 1 bytes @ 0x2
  2505  0072                     	ds	1
  2506  0073                     ??_I2C_SetCallback:
  2507  0073                     I2C_SetBuffer@buffer:	
  2508                           ; 1 bytes @ 0x3
  2509                           
  2510                           
  2511                           ; 1 bytes @ 0x3
  2512  0073                     	ds	1
  2513  0074                     I2C_SetCallback@idx:
  2514                           
  2515                           ; 1 bytes @ 0x4
  2516  0074                     	ds	1
  2517  0075                     ?_I2C_SetDataCompleteCallback:
  2518  0075                     I2C_SetDataCompleteCallback@cb:	
  2519                           ; 1 bytes @ 0x5
  2520                           
  2521                           
  2522                           ; 2 bytes @ 0x5
  2523  0075                     	ds	2
  2524  0077                     I2C_SetDataCompleteCallback@ptr:
  2525                           
  2526                           ; 1 bytes @ 0x7
  2527  0077                     	ds	1
  2528  0078                     ??_I2C_SetDataCompleteCallback:
  2529                           
  2530                           ; 1 bytes @ 0x8
  2531  0078                     	ds	1
  2532  0079                     ?_rd1RegCompleteHandler:
  2533  0079                     ?_rd2RegCompleteHandler:	
  2534                           ; 1 bytes @ 0x9
  2535                           
  2536  0079                     ?_wr1RegCompleteHandler:	
  2537                           ; 1 bytes @ 0x9
  2538                           
  2539  0079                     ?_wr2RegCompleteHandler:	
  2540                           ; 1 bytes @ 0x9
  2541                           
  2542  0079                     ?_rdBlkRegCompleteHandler:	
  2543                           ; 1 bytes @ 0x9
  2544                           
  2545  0079                     ?_I2C_CallbackReturnStop:	
  2546                           ; 1 bytes @ 0x9
  2547                           
  2548  0079                     ?_I2C_CallbackReturnReset:	
  2549                           ; 1 bytes @ 0x9
  2550                           
  2551  0079                     rd1RegCompleteHandler@ptr:	
  2552                           ; 1 bytes @ 0x9
  2553                           
  2554  0079                     rd2RegCompleteHandler@ptr:	
  2555                           ; 1 bytes @ 0x9
  2556                           
  2557  0079                     wr1RegCompleteHandler@ptr:	
  2558                           ; 1 bytes @ 0x9
  2559                           
  2560  0079                     wr2RegCompleteHandler@ptr:	
  2561                           ; 1 bytes @ 0x9
  2562                           
  2563  0079                     rdBlkRegCompleteHandler@ptr:	
  2564                           ; 1 bytes @ 0x9
  2565                           
  2566  0079                     I2C_CallbackReturnStop@funPtr:	
  2567                           ; 1 bytes @ 0x9
  2568                           
  2569  0079                     I2C_CallbackReturnReset@funPtr:	
  2570                           ; 1 bytes @ 0x9
  2571                           
  2572                           
  2573                           ; 1 bytes @ 0x9
  2574  0079                     	ds	1
  2575  007A                     ??_rd1RegCompleteHandler:
  2576  007A                     ??_rd2RegCompleteHandler:	
  2577                           ; 1 bytes @ 0xA
  2578                           
  2579  007A                     ??_wr1RegCompleteHandler:	
  2580                           ; 1 bytes @ 0xA
  2581                           
  2582  007A                     ??_wr2RegCompleteHandler:	
  2583                           ; 1 bytes @ 0xA
  2584                           
  2585  007A                     ??_rdBlkRegCompleteHandler:	
  2586                           ; 1 bytes @ 0xA
  2587                           
  2588  007A                     ??_I2C_DO_TX:	
  2589                           ; 1 bytes @ 0xA
  2590                           
  2591  007A                     ??_I2C_DO_RX:	
  2592                           ; 1 bytes @ 0xA
  2593                           
  2594  007A                     ??_I2C_DO_TX_EMPTY:	
  2595                           ; 1 bytes @ 0xA
  2596                           
  2597  007A                     ??_I2C_DO_ADDRESS_NACK:	
  2598                           ; 1 bytes @ 0xA
  2599                           
  2600  007A                     ??_I2C_CallbackReturnStop:	
  2601                           ; 1 bytes @ 0xA
  2602                           
  2603  007A                     ??_I2C_CallbackReturnReset:	
  2604                           ; 1 bytes @ 0xA
  2605                           
  2606                           
  2607                           ; 1 bytes @ 0xA
  2608  007A                     	ds	3
  2609  007D                     ??_I2C_MasterIsr:
  2610  007D                     ??_INTERRUPT_InterruptManager:	
  2611                           ; 1 bytes @ 0xD
  2612                           
  2613                           
  2614                           	psect	cstackBANK0
  2615  0045                     __pcstackBANK0:	
  2616                           ; 1 bytes @ 0xD
  2617                           
  2618  0045                     ??_I2C_MasterFsm:
  2619                           
  2620                           ; 1 bytes @ 0x0
  2621  0045                     	ds	3
  2622  0048                     ??_I2C_Initialize:
  2623  0048                     ??_OSCILLATOR_Initialize:	
  2624                           ; 1 bytes @ 0x3
  2625                           
  2626  0048                     ??_WDT_Initialize:	
  2627                           ; 1 bytes @ 0x3
  2628                           
  2629  0048                     ??_ADC_Initialize:	
  2630                           ; 1 bytes @ 0x3
  2631                           
  2632  0048                     ?_EUSART_SetRxInterruptHandler:	
  2633                           ; 1 bytes @ 0x3
  2634                           
  2635  0048                     ?_EUSART_SetTxInterruptHandler:	
  2636                           ; 1 bytes @ 0x3
  2637                           
  2638  0048                     ?_EUSART_SetFramingErrorHandler:	
  2639                           ; 1 bytes @ 0x3
  2640                           
  2641  0048                     ?_EUSART_SetOverrunErrorHandler:	
  2642                           ; 1 bytes @ 0x3
  2643                           
  2644  0048                     ?_EUSART_SetErrorHandler:	
  2645                           ; 1 bytes @ 0x3
  2646                           
  2647  0048                     ??_reset:	
  2648                           ; 1 bytes @ 0x3
  2649                           
  2650  0048                     ??_PIN_MANAGER_Initialize:	
  2651                           ; 1 bytes @ 0x3
  2652                           
  2653  0048                     ??_EUSART_Read:	
  2654                           ; 1 bytes @ 0x3
  2655                           
  2656  0048                     ??_EUSART_Write:	
  2657                           ; 1 bytes @ 0x3
  2658                           
  2659  0048                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2660                           ; 1 bytes @ 0x3
  2661                           
  2662  0048                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2663                           ; 2 bytes @ 0x3
  2664                           
  2665  0048                     EUSART_SetErrorHandler@interruptHandler:	
  2666                           ; 2 bytes @ 0x3
  2667                           
  2668  0048                     EUSART_SetTxInterruptHandler@interruptHandler:	
  2669                           ; 2 bytes @ 0x3
  2670                           
  2671  0048                     EUSART_SetRxInterruptHandler@interruptHandler:	
  2672                           ; 2 bytes @ 0x3
  2673                           
  2674                           
  2675                           ; 2 bytes @ 0x3
  2676  0048                     	ds	1
  2677  0049                     EUSART_Read@readValue:
  2678  0049                     EUSART_Write@txData:	
  2679                           ; 1 bytes @ 0x4
  2680                           
  2681                           
  2682                           ; 1 bytes @ 0x4
  2683  0049                     	ds	1
  2684  004A                     ??_EUSART_Initialize:
  2685  004A                     ??_EUSART_SetRxInterruptHandler:	
  2686                           ; 1 bytes @ 0x5
  2687                           
  2688  004A                     ??_EUSART_SetTxInterruptHandler:	
  2689                           ; 1 bytes @ 0x5
  2690                           
  2691  004A                     ??_EUSART_SetFramingErrorHandler:	
  2692                           ; 1 bytes @ 0x5
  2693                           
  2694  004A                     ??_EUSART_SetOverrunErrorHandler:	
  2695                           ; 1 bytes @ 0x5
  2696                           
  2697  004A                     ??_EUSART_SetErrorHandler:	
  2698                           ; 1 bytes @ 0x5
  2699                           
  2700  004A                     ??_putch:	
  2701                           ; 1 bytes @ 0x5
  2702                           
  2703  004A                     putch@txData:	
  2704                           ; 1 bytes @ 0x5
  2705                           
  2706                           
  2707                           ; 1 bytes @ 0x5
  2708  004A                     	ds	1
  2709  004B                     ??_SYSTEM_Initialize:
  2710  004B                     ?_fputc:	
  2711                           ; 1 bytes @ 0x6
  2712                           
  2713  004B                     fputc@c:	
  2714                           ; 2 bytes @ 0x6
  2715                           
  2716                           
  2717                           ; 2 bytes @ 0x6
  2718  004B                     	ds	2
  2719  004D                     fputc@fp:
  2720                           
  2721                           ; 1 bytes @ 0x8
  2722  004D                     	ds	1
  2723  004E                     ??_fputc:
  2724                           
  2725                           ; 1 bytes @ 0x9
  2726  004E                     	ds	5
  2727  0053                     ?_vfpfcnvrt:
  2728  0053                     vfpfcnvrt@fmt:	
  2729                           ; 2 bytes @ 0xE
  2730                           
  2731                           
  2732                           ; 1 bytes @ 0xE
  2733  0053                     	ds	1
  2734  0054                     vfpfcnvrt@ap:
  2735                           
  2736                           ; 1 bytes @ 0xF
  2737  0054                     	ds	1
  2738  0055                     ??_vfpfcnvrt:
  2739                           
  2740                           ; 1 bytes @ 0x10
  2741  0055                     	ds	5
  2742  005A                     vfpfcnvrt@fp:
  2743                           
  2744                           ; 1 bytes @ 0x15
  2745  005A                     	ds	1
  2746  005B                     ?_vfprintf:
  2747  005B                     vfprintf@fmt:	
  2748                           ; 2 bytes @ 0x16
  2749                           
  2750                           
  2751                           ; 2 bytes @ 0x16
  2752  005B                     	ds	2
  2753  005D                     vfprintf@ap:
  2754                           
  2755                           ; 1 bytes @ 0x18
  2756  005D                     	ds	1
  2757  005E                     ??_vfprintf:
  2758                           
  2759                           ; 1 bytes @ 0x19
  2760  005E                     	ds	2
  2761  0060                     vfprintf@fp:
  2762                           
  2763                           ; 1 bytes @ 0x1B
  2764  0060                     	ds	1
  2765  0061                     vfprintf@cfmt:
  2766                           
  2767                           ; 2 bytes @ 0x1C
  2768  0061                     	ds	2
  2769  0063                     ?_printf:
  2770  0063                     printf@fmt:	
  2771                           ; 2 bytes @ 0x1E
  2772                           
  2773                           
  2774                           ; 2 bytes @ 0x1E
  2775  0063                     	ds	2
  2776  0065                     ??_printf:
  2777                           
  2778                           ; 1 bytes @ 0x20
  2779  0065                     	ds	1
  2780  0066                     printf@ap:
  2781                           
  2782                           ; 1 bytes @ 0x21
  2783  0066                     	ds	1
  2784  0067                     ??_main:
  2785                           
  2786                           ; 1 bytes @ 0x22
  2787  0067                     	ds	2
  2788  0069                     main@reception:
  2789                           
  2790                           ; 1 bytes @ 0x24
  2791  0069                     	ds	1
  2792                           
  2793                           	psect	maintext
  2794  005D                     __pmaintext:	
  2795 ;;
  2796 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2797 ;;
  2798 ;; *************** function _main *****************
  2799 ;; Defined at:
  2800 ;;		line 50 in file "main.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;		None
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;  reception       1   36[BANK0 ] unsigned char 
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  1    wreg      void 
  2807 ;; Registers used:
  2808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2809 ;; Tracked objects:
  2810 ;;		On entry : B1F/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2815 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2816 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2817 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2818 ;;Total ram usage:        3 bytes
  2819 ;; Hardware stack levels required when called: 13
  2820 ;; This function calls:
  2821 ;;		_EUSART_Read
  2822 ;;		_SYSTEM_Initialize
  2823 ;;		_printf
  2824 ;;		_reset
  2825 ;; This function is called by:
  2826 ;;		Startup code after reset
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           
  2831                           ;psect for function _main
  2832  005D                     _main:
  2833  005D                     l3568:	
  2834                           ;incstack = 0
  2835                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2836                           
  2837                           
  2838                           ;main.c: 52:     SYSTEM_Initialize();
  2839  005D  3185  2517  3180   	fcall	_SYSTEM_Initialize
  2840  0060                     l3570:
  2841                           
  2842                           ;main.c: 58:     (INTCONbits.GIE = 1);
  2843  0060  178B               	bsf	11,7	;volatile
  2844  0061                     l3572:
  2845                           
  2846                           ;main.c: 61:     (INTCONbits.PEIE = 1);
  2847  0061  170B               	bsf	11,6	;volatile
  2848  0062                     l3574:
  2849                           
  2850                           ;main.c: 74:         if (eusartRxCount != 0) {
  2851  0062  0020               	movlb	0	; select bank0
  2852  0063  083F               	movf	_eusartRxCount,w	;volatile
  2853  0064  1903               	btfsc	3,2
  2854  0065  2867               	goto	u1201
  2855  0066  2868               	goto	u1200
  2856  0067                     u1201:
  2857  0067  2862               	goto	l3574
  2858  0068                     u1200:
  2859  0068                     l3576:
  2860                           
  2861                           ;main.c: 76:             reception = EUSART_Read();
  2862  0068  3184  2414  3180   	fcall	_EUSART_Read
  2863  006B  0020               	movlb	0	; select bank0
  2864  006C  00E7               	movwf	??_main
  2865  006D  0867               	movf	??_main,w
  2866  006E  00E9               	movwf	main@reception
  2867                           
  2868                           ;main.c: 78:             switch (reception)
  2869  006F  2928               	goto	l3658
  2870  0070                     l3578:
  2871                           
  2872                           ;main.c: 82:                 {;main.c: 83:                     reset();
  2873  0070  3184  24CB  3180   	fcall	_reset
  2874  0073                     l3580:
  2875  0073  0022               	movlb	2	; select bank2
  2876  0074  140C               	bsf	12,0	;volatile
  2877  0075                     l3582:
  2878                           
  2879                           ;main.c: 85:                     printf("->GR:x:OFF");
  2880  0075  30DE               	movlw	low (STR_1| (0+32768))
  2881  0076  0020               	movlb	0	; select bank0
  2882  0077  00E3               	movwf	printf@fmt
  2883  0078  3083               	movlw	high (STR_1| (0+32768))
  2884  0079  00E4               	movwf	printf@fmt+1
  2885  007A  3185  252A  3180   	fcall	_printf
  2886                           
  2887                           ;main.c: 86:                     break;
  2888  007D  2862               	goto	l3574
  2889  007E                     l3584:
  2890                           
  2891                           ;main.c: 90:                 {;main.c: 91:                     reset();
  2892  007E  3184  24CB  3180   	fcall	_reset
  2893  0081                     l3586:
  2894  0081  0022               	movlb	2	; select bank2
  2895  0082  140C               	bsf	12,0	;volatile
  2896  0083                     l3588:
  2897                           
  2898                           ;main.c: 93:                     printf("->GR:1:ON");
  2899  0083  30CA               	movlw	low (STR_2| (0+32768))
  2900  0084  0020               	movlb	0	; select bank0
  2901  0085  00E3               	movwf	printf@fmt
  2902  0086  3085               	movlw	high (STR_2| (0+32768))
  2903  0087  00E4               	movwf	printf@fmt+1
  2904  0088  3185  252A  3180   	fcall	_printf
  2905                           
  2906                           ;main.c: 94:                     break;
  2907  008B  2862               	goto	l3574
  2908  008C                     l3590:
  2909                           
  2910                           ;main.c: 98:                 {;main.c: 99:                     reset();
  2911  008C  3184  24CB  3180   	fcall	_reset
  2912  008F                     l3592:
  2913  008F  0022               	movlb	2	; select bank2
  2914  0090  148C               	bsf	12,1	;volatile
  2915  0091                     l3594:
  2916                           
  2917                           ;main.c: 101:                     printf("->GR:2:ON");
  2918  0091  30D4               	movlw	low (STR_3| (0+32768))
  2919  0092  0020               	movlb	0	; select bank0
  2920  0093  00E3               	movwf	printf@fmt
  2921  0094  3085               	movlw	high (STR_3| (0+32768))
  2922  0095  00E4               	movwf	printf@fmt+1
  2923  0096  3185  252A  3180   	fcall	_printf
  2924                           
  2925                           ;main.c: 102:                     break;
  2926  0099  2862               	goto	l3574
  2927  009A                     l3596:
  2928                           
  2929                           ;main.c: 106:                 {;main.c: 107:                     reset();
  2930  009A  3184  24CB  3180   	fcall	_reset
  2931  009D                     l3598:
  2932  009D  0022               	movlb	2	; select bank2
  2933  009E  150C               	bsf	12,2	;volatile
  2934  009F                     l3600:
  2935                           
  2936                           ;main.c: 109:                     printf("->GR:3:ON");
  2937  009F  30DE               	movlw	low (STR_4| (0+32768))
  2938  00A0  0020               	movlb	0	; select bank0
  2939  00A1  00E3               	movwf	printf@fmt
  2940  00A2  3085               	movlw	high (STR_4| (0+32768))
  2941  00A3  00E4               	movwf	printf@fmt+1
  2942  00A4  3185  252A  3180   	fcall	_printf
  2943                           
  2944                           ;main.c: 110:                     break;
  2945  00A7  2862               	goto	l3574
  2946  00A8                     l3602:
  2947                           
  2948                           ;main.c: 114:                 {;main.c: 115:                     reset();
  2949  00A8  3184  24CB  3180   	fcall	_reset
  2950  00AB                     l3604:
  2951  00AB  0022               	movlb	2	; select bank2
  2952  00AC  158C               	bsf	12,3	;volatile
  2953  00AD                     l3606:
  2954                           
  2955                           ;main.c: 117:                     printf("->GR:4:ON");
  2956  00AD  30E8               	movlw	low (STR_5| (0+32768))
  2957  00AE  0020               	movlb	0	; select bank0
  2958  00AF  00E3               	movwf	printf@fmt
  2959  00B0  3085               	movlw	high (STR_5| (0+32768))
  2960  00B1  00E4               	movwf	printf@fmt+1
  2961  00B2  3185  252A  3180   	fcall	_printf
  2962                           
  2963                           ;main.c: 118:                     break;
  2964  00B5  2862               	goto	l3574
  2965  00B6                     l3608:
  2966                           
  2967                           ;main.c: 122:                 {;main.c: 123:                     reset();
  2968  00B6  3184  24CB  3180   	fcall	_reset
  2969  00B9                     l3610:
  2970  00B9  0022               	movlb	2	; select bank2
  2971  00BA  160C               	bsf	12,4	;volatile
  2972  00BB                     l3612:
  2973                           
  2974                           ;main.c: 125:                     printf("->GR:5:ON");
  2975  00BB  30F2               	movlw	low (STR_6| (0+32768))
  2976  00BC  0020               	movlb	0	; select bank0
  2977  00BD  00E3               	movwf	printf@fmt
  2978  00BE  3085               	movlw	high (STR_6| (0+32768))
  2979  00BF  00E4               	movwf	printf@fmt+1
  2980  00C0  3185  252A  3180   	fcall	_printf
  2981                           
  2982                           ;main.c: 126:                     break;
  2983  00C3  2862               	goto	l3574
  2984  00C4                     l3614:
  2985                           
  2986                           ;main.c: 130:                 {;main.c: 131:                     reset();
  2987  00C4  3184  24CB  3180   	fcall	_reset
  2988  00C7                     l3616:
  2989  00C7  0022               	movlb	2	; select bank2
  2990  00C8  168C               	bsf	12,5	;volatile
  2991  00C9                     l3618:
  2992                           
  2993                           ;main.c: 133:                     printf("->GR:6:ON");
  2994  00C9  30FC               	movlw	low (STR_7| (0+32768))
  2995  00CA  0020               	movlb	0	; select bank0
  2996  00CB  00E3               	movwf	printf@fmt
  2997  00CC  3085               	movlw	high (STR_7| (0+32768))
  2998  00CD  00E4               	movwf	printf@fmt+1
  2999  00CE  3185  252A  3180   	fcall	_printf
  3000                           
  3001                           ;main.c: 134:                     break;
  3002  00D1  2862               	goto	l3574
  3003  00D2                     l3620:
  3004                           
  3005                           ;main.c: 138:                 {;main.c: 139:                     reset();
  3006  00D2  3184  24CB  3180   	fcall	_reset
  3007  00D5                     l3622:
  3008  00D5  0022               	movlb	2	; select bank2
  3009  00D6  170C               	bsf	12,6	;volatile
  3010  00D7                     l3624:
  3011                           
  3012                           ;main.c: 141:                     printf("->GR:7:ON");
  3013  00D7  3006               	movlw	low (STR_8| (0+32768))
  3014  00D8  0020               	movlb	0	; select bank0
  3015  00D9  00E3               	movwf	printf@fmt
  3016  00DA  3086               	movlw	high (STR_8| (0+32768))
  3017  00DB  00E4               	movwf	printf@fmt+1
  3018  00DC  3185  252A  3180   	fcall	_printf
  3019                           
  3020                           ;main.c: 142:                     break;
  3021  00DF  2862               	goto	l3574
  3022  00E0                     l3626:
  3023                           
  3024                           ;main.c: 146:                 {;main.c: 147:                     reset();
  3025  00E0  3184  24CB  3180   	fcall	_reset
  3026  00E3                     l3628:
  3027  00E3  0022               	movlb	2	; select bank2
  3028  00E4  178C               	bsf	12,7	;volatile
  3029  00E5                     l3630:
  3030                           
  3031                           ;main.c: 149:                     printf("->GR:8:ON");
  3032  00E5  3010               	movlw	low (STR_9| (0+32768))
  3033  00E6  0020               	movlb	0	; select bank0
  3034  00E7  00E3               	movwf	printf@fmt
  3035  00E8  3086               	movlw	high (STR_9| (0+32768))
  3036  00E9  00E4               	movwf	printf@fmt+1
  3037  00EA  3185  252A  3180   	fcall	_printf
  3038                           
  3039                           ;main.c: 150:                     break;
  3040  00ED  2862               	goto	l3574
  3041  00EE                     l3632:
  3042                           
  3043                           ;main.c: 154:                 {;main.c: 155:                     reset();
  3044  00EE  3184  24CB  3180   	fcall	_reset
  3045  00F1                     l3634:
  3046  00F1  0022               	movlb	2	; select bank2
  3047  00F2  158C               	bsf	12,3	;volatile
  3048  00F3                     l3636:
  3049                           
  3050                           ;main.c: 157:                     printf("->GR:9:ON");
  3051  00F3  301A               	movlw	low (STR_10| (0+32768))
  3052  00F4  0020               	movlb	0	; select bank0
  3053  00F5  00E3               	movwf	printf@fmt
  3054  00F6  3086               	movlw	high (STR_10| (0+32768))
  3055  00F7  00E4               	movwf	printf@fmt+1
  3056  00F8  3185  252A  3180   	fcall	_printf
  3057                           
  3058                           ;main.c: 158:                     break;
  3059  00FB  2862               	goto	l3574
  3060  00FC                     l3638:
  3061                           
  3062                           ;main.c: 162:                 {;main.c: 163:                     reset();
  3063  00FC  3184  24CB  3180   	fcall	_reset
  3064  00FF                     l3640:
  3065  00FF  0022               	movlb	2	; select bank2
  3066  0100  148D               	bsf	13,1	;volatile
  3067  0101                     l3642:
  3068                           
  3069                           ;main.c: 165:                     printf("->GR:10:ON");
  3070  0101  30A9               	movlw	low (STR_11| (0+32768))
  3071  0102  0020               	movlb	0	; select bank0
  3072  0103  00E3               	movwf	printf@fmt
  3073  0104  3085               	movlw	high (STR_11| (0+32768))
  3074  0105  00E4               	movwf	printf@fmt+1
  3075  0106  3185  252A  3180   	fcall	_printf
  3076                           
  3077                           ;main.c: 166:                     break;
  3078  0109  2862               	goto	l3574
  3079  010A                     l3644:
  3080                           
  3081                           ;main.c: 170:                 {;main.c: 171:                     reset();
  3082  010A  3184  24CB  3180   	fcall	_reset
  3083  010D                     l3646:
  3084  010D  0022               	movlb	2	; select bank2
  3085  010E  150D               	bsf	13,2	;volatile
  3086  010F                     l3648:
  3087                           
  3088                           ;main.c: 173:                     printf("->GR:11:ON");
  3089  010F  30B4               	movlw	low (STR_12| (0+32768))
  3090  0110  0020               	movlb	0	; select bank0
  3091  0111  00E3               	movwf	printf@fmt
  3092  0112  3085               	movlw	high (STR_12| (0+32768))
  3093  0113  00E4               	movwf	printf@fmt+1
  3094  0114  3185  252A  3180   	fcall	_printf
  3095                           
  3096                           ;main.c: 174:                     break;
  3097  0117  2862               	goto	l3574
  3098  0118                     l3650:
  3099                           
  3100                           ;main.c: 178:                 {;main.c: 179:                     reset();
  3101  0118  3184  24CB  3180   	fcall	_reset
  3102  011B                     l3652:
  3103  011B  0022               	movlb	2	; select bank2
  3104  011C  158D               	bsf	13,3	;volatile
  3105  011D                     l3654:
  3106                           
  3107                           ;main.c: 181:                     printf("->GR:12:ON");
  3108  011D  30BF               	movlw	low (STR_13| (0+32768))
  3109  011E  0020               	movlb	0	; select bank0
  3110  011F  00E3               	movwf	printf@fmt
  3111  0120  3085               	movlw	high (STR_13| (0+32768))
  3112  0121  00E4               	movwf	printf@fmt+1
  3113  0122  3185  252A  3180   	fcall	_printf
  3114                           
  3115                           ;main.c: 182:                     break;
  3116  0125  2862               	goto	l3574
  3117  0126                     l856:	
  3118                           ;main.c: 183:                 };main.c: 185:                 case 'Z':
  3119                           
  3120  0126  0001               	reset	;# 
  3121                           
  3122                           ;main.c: 188:                     break;
  3123  0127  2862               	goto	l3574
  3124  0128                     l3658:
  3125  0128  0869               	movf	main@reception,w
  3126  0129  00E7               	movwf	??_main
  3127  012A  01E8               	clrf	??_main+1
  3128                           
  3129                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3130                           ; Switch size 1, requested type "simple"
  3131                           ; Number of cases is 1, Range of values is 0 to 0
  3132                           ; switch strategies available:
  3133                           ; Name         Instructions Cycles
  3134                           ; simple_byte            4     3 (average)
  3135                           ; direct_byte            8     6 (fixed)
  3136                           ; jumptable            260     6 (fixed)
  3137                           ;	Chosen strategy is simple_byte
  3138  012B  0868               	movf	??_main+1,w
  3139  012C  3A00               	xorlw	0	; case 0
  3140  012D  1903               	skipnz
  3141  012E  2930               	goto	l3794
  3142  012F  2862               	goto	l3574
  3143  0130                     l3794:
  3144                           
  3145                           ; Switch size 1, requested type "simple"
  3146                           ; Number of cases is 14, Range of values is 48 to 90
  3147                           ; switch strategies available:
  3148                           ; Name         Instructions Cycles
  3149                           ; simple_byte           43    22 (average)
  3150                           ; direct_byte           95     9 (fixed)
  3151                           ; jumptable            263     9 (fixed)
  3152                           ;	Chosen strategy is simple_byte
  3153  0130  0867               	movf	??_main,w
  3154  0131  3A30               	xorlw	48	; case 48
  3155  0132  1903               	skipnz
  3156  0133  2870               	goto	l3578
  3157  0134  3A01               	xorlw	1	; case 49
  3158  0135  1903               	skipnz
  3159  0136  287E               	goto	l3584
  3160  0137  3A03               	xorlw	3	; case 50
  3161  0138  1903               	skipnz
  3162  0139  288C               	goto	l3590
  3163  013A  3A01               	xorlw	1	; case 51
  3164  013B  1903               	skipnz
  3165  013C  289A               	goto	l3596
  3166  013D  3A07               	xorlw	7	; case 52
  3167  013E  1903               	skipnz
  3168  013F  28A8               	goto	l3602
  3169  0140  3A01               	xorlw	1	; case 53
  3170  0141  1903               	skipnz
  3171  0142  28B6               	goto	l3608
  3172  0143  3A03               	xorlw	3	; case 54
  3173  0144  1903               	skipnz
  3174  0145  28C4               	goto	l3614
  3175  0146  3A01               	xorlw	1	; case 55
  3176  0147  1903               	skipnz
  3177  0148  28D2               	goto	l3620
  3178  0149  3A0F               	xorlw	15	; case 56
  3179  014A  1903               	skipnz
  3180  014B  28E0               	goto	l3626
  3181  014C  3A01               	xorlw	1	; case 57
  3182  014D  1903               	skipnz
  3183  014E  28EE               	goto	l3632
  3184  014F  3A78               	xorlw	120	; case 65
  3185  0150  1903               	skipnz
  3186  0151  28FC               	goto	l3638
  3187  0152  3A03               	xorlw	3	; case 66
  3188  0153  1903               	skipnz
  3189  0154  290A               	goto	l3644
  3190  0155  3A01               	xorlw	1	; case 67
  3191  0156  1903               	skipnz
  3192  0157  2918               	goto	l3650
  3193  0158  3A19               	xorlw	25	; case 90
  3194  0159  1903               	skipnz
  3195  015A  2926               	goto	l856
  3196  015B  2862               	goto	l3574
  3197  015C  3180  2847         	ljmp	start
  3198  015E                     __end_of_main:
  3199                           
  3200                           	psect	text1
  3201  04CB                     __ptext1:	
  3202 ;; *************** function _reset *****************
  3203 ;; Defined at:
  3204 ;;		line 6 in file "commande.c"
  3205 ;; Parameters:    Size  Location     Type
  3206 ;;		None
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;		None
  3209 ;; Return value:  Size  Location     Type
  3210 ;;                  1    wreg      void 
  3211 ;; Registers used:
  3212 ;;		wreg
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3220 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3221 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3222 ;;Total ram usage:        2 bytes
  3223 ;; Hardware stack levels used: 1
  3224 ;; Hardware stack levels required when called: 7
  3225 ;; This function calls:
  3226 ;;		Nothing
  3227 ;; This function is called by:
  3228 ;;		_main
  3229 ;; This function uses a non-reentrant model
  3230 ;;
  3231                           
  3232                           
  3233                           ;psect for function _reset
  3234  04CB                     _reset:
  3235  04CB                     l870:	
  3236                           ;incstack = 0
  3237                           ; Regs used in _reset: [wreg]
  3238                           ;commande.c: 8:     do { LATAbits.LATA0 = 0; } while(0);
  3239                           
  3240  04CB  0022               	movlb	2	; select bank2
  3241  04CC  100C               	bcf	12,0	;volatile
  3242  04CD                     l872:	
  3243                           ;commande.c: 9:     do { LATAbits.LATA1 = 0; } while(0);
  3244                           
  3245  04CD  108C               	bcf	12,1	;volatile
  3246  04CE                     l874:	
  3247                           ;commande.c: 10:     do { LATAbits.LATA2 = 0; } while(0);
  3248                           
  3249  04CE  110C               	bcf	12,2	;volatile
  3250  04CF                     l876:	
  3251                           ;commande.c: 11:     do { LATAbits.LATA3 = 0; } while(0);
  3252                           
  3253  04CF  118C               	bcf	12,3	;volatile
  3254  04D0                     l878:	
  3255                           ;commande.c: 12:     do { LATAbits.LATA4 = 0; } while(0);
  3256                           
  3257  04D0  120C               	bcf	12,4	;volatile
  3258  04D1                     l880:	
  3259                           ;commande.c: 13:     do { LATAbits.LATA5 = 0; } while(0);
  3260                           
  3261  04D1  128C               	bcf	12,5	;volatile
  3262  04D2                     l882:	
  3263                           ;commande.c: 14:     do { LATAbits.LATA6 = 0; } while(0);
  3264                           
  3265  04D2  130C               	bcf	12,6	;volatile
  3266  04D3                     l884:	
  3267                           ;commande.c: 15:     do { LATAbits.LATA7 = 0; } while(0);
  3268                           
  3269  04D3  138C               	bcf	12,7	;volatile
  3270  04D4                     l886:	
  3271                           ;commande.c: 16:     do { LATBbits.LATB0 = 0; } while(0);
  3272                           
  3273  04D4  100D               	bcf	13,0	;volatile
  3274  04D5                     l888:	
  3275                           ;commande.c: 17:     do { LATBbits.LATB1 = 0; } while(0);
  3276                           
  3277  04D5  108D               	bcf	13,1	;volatile
  3278  04D6                     l890:	
  3279                           ;commande.c: 18:     do { LATBbits.LATB2 = 0; } while(0);
  3280                           
  3281  04D6  110D               	bcf	13,2	;volatile
  3282  04D7                     l892:	
  3283                           ;commande.c: 19:     do { LATBbits.LATB3 = 0; } while(0);
  3284                           
  3285  04D7  118D               	bcf	13,3	;volatile
  3286  04D8                     l3320:
  3287                           
  3288                           ;commande.c: 20:     _delay((unsigned long)((100)*(32000000/4000.0)));
  3289  04D8  3005               	movlw	5
  3290  04D9  0020               	movlb	0	; select bank0
  3291  04DA  00C9               	movwf	??_reset+1
  3292  04DB  300F               	movlw	15
  3293  04DC  00C8               	movwf	??_reset
  3294  04DD  30F1               	movlw	241
  3295  04DE                     u1217:
  3296  04DE  0B89               	decfsz	9,f
  3297  04DF  2CDE               	goto	u1217
  3298  04E0  0BC8               	decfsz	??_reset,f
  3299  04E1  2CDE               	goto	u1217
  3300  04E2  0BC9               	decfsz	??_reset+1,f
  3301  04E3  2CDE               	goto	u1217
  3302  04E4                     l894:
  3303  04E4  0008               	return
  3304  04E5                     __end_of_reset:
  3305                           
  3306                           	psect	text2
  3307  052A                     __ptext2:	
  3308 ;; *************** function _printf *****************
  3309 ;; Defined at:
  3310 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;  fmt             2   30[BANK0 ] PTR const unsigned char 
  3313 ;;		 -> STR_13(11), STR_12(11), STR_11(11), STR_10(10), 
  3314 ;;		 -> STR_9(10), STR_8(10), STR_7(10), STR_6(10), 
  3315 ;;		 -> STR_5(10), STR_4(10), STR_3(10), STR_2(10), 
  3316 ;;		 -> STR_1(11), 
  3317 ;; Auto vars:     Size  Location     Type
  3318 ;;  ret             2    0        int 
  3319 ;;  ap              1   33[BANK0 ] PTR void [1]
  3320 ;;		 -> ?_printf(2), 
  3321 ;; Return value:  Size  Location     Type
  3322 ;;                  2   30[BANK0 ] int 
  3323 ;; Registers used:
  3324 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3325 ;; Tracked objects:
  3326 ;;		On entry : 0/0
  3327 ;;		On exit  : 0/0
  3328 ;;		Unchanged: 0/0
  3329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3330 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3331 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3332 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3333 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3334 ;;Total ram usage:        4 bytes
  3335 ;; Hardware stack levels used: 1
  3336 ;; Hardware stack levels required when called: 12
  3337 ;; This function calls:
  3338 ;;		_vfprintf
  3339 ;; This function is called by:
  3340 ;;		_main
  3341 ;; This function uses a non-reentrant model
  3342 ;;
  3343                           
  3344                           
  3345                           ;psect for function _printf
  3346  052A                     _printf:
  3347  052A                     l3322:	
  3348                           ;incstack = 0
  3349                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3350                           
  3351  052A  3065               	movlw	(low ((?_printf| 0+2)))& (0+255)
  3352  052B  0020               	movlb	0	; select bank0
  3353  052C  00E5               	movwf	??_printf
  3354  052D  0865               	movf	??_printf,w
  3355  052E  00E6               	movwf	printf@ap
  3356  052F                     l3324:
  3357  052F  0864               	movf	printf@fmt+1,w
  3358  0530  00DC               	movwf	vfprintf@fmt+1
  3359  0531  0863               	movf	printf@fmt,w
  3360  0532  00DB               	movwf	vfprintf@fmt
  3361  0533  3066               	movlw	(low (printf@ap| 0))& (0+255)
  3362  0534  00E5               	movwf	??_printf
  3363  0535  0865               	movf	??_printf,w
  3364  0536  00DD               	movwf	vfprintf@ap
  3365  0537  3000               	movlw	0
  3366  0538  3184  243F  3185   	fcall	_vfprintf
  3367  053B                     l1507:
  3368  053B  0008               	return
  3369  053C                     __end_of_printf:
  3370                           
  3371                           	psect	text3
  3372  043F                     __ptext3:	
  3373 ;; *************** function _vfprintf *****************
  3374 ;; Defined at:
  3375 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3376 ;; Parameters:    Size  Location     Type
  3377 ;;  fp              1    wreg     PTR struct _IO_FILE
  3378 ;;		 -> NULL(0), 
  3379 ;;  fmt             2   22[BANK0 ] PTR const unsigned char 
  3380 ;;		 -> STR_13(11), STR_12(11), STR_11(11), STR_10(10), 
  3381 ;;		 -> STR_9(10), STR_8(10), STR_7(10), STR_6(10), 
  3382 ;;		 -> STR_5(10), STR_4(10), STR_3(10), STR_2(10), 
  3383 ;;		 -> STR_1(11), 
  3384 ;;  ap              1   24[BANK0 ] PTR PTR void 
  3385 ;;		 -> printf@ap(1), 
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
  3388 ;;		 -> NULL(0), 
  3389 ;;  cfmt            2   28[BANK0 ] PTR unsigned char 
  3390 ;;		 -> STR_13(11), STR_12(11), STR_11(11), STR_10(10), 
  3391 ;;		 -> STR_9(10), STR_8(10), STR_7(10), STR_6(10), 
  3392 ;;		 -> STR_5(10), STR_4(10), STR_3(10), STR_2(10), 
  3393 ;;		 -> STR_1(11), 
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  2   22[BANK0 ] int 
  3396 ;; Registers used:
  3397 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3403 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3404 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3405 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3406 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3407 ;;Total ram usage:        8 bytes
  3408 ;; Hardware stack levels used: 1
  3409 ;; Hardware stack levels required when called: 11
  3410 ;; This function calls:
  3411 ;;		_vfpfcnvrt
  3412 ;; This function is called by:
  3413 ;;		_printf
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           
  3418                           ;psect for function _vfprintf
  3419  043F                     _vfprintf:
  3420                           
  3421                           ;incstack = 0
  3422                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3423                           ;vfprintf@fp stored from wreg
  3424  043F  0020               	movlb	0	; select bank0
  3425  0440  00E0               	movwf	vfprintf@fp
  3426  0441                     l3232:
  3427                           
  3428                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3429  0441  085C               	movf	vfprintf@fmt+1,w
  3430  0442  00E2               	movwf	vfprintf@cfmt+1
  3431  0443  085B               	movf	vfprintf@fmt,w
  3432  0444  00E1               	movwf	vfprintf@cfmt
  3433  0445                     l3234:
  3434                           
  3435                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3436  0445  01A8               	clrf	_nout
  3437  0446  01A9               	clrf	_nout+1
  3438                           
  3439                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3440  0447  2C59               	goto	l3238
  3441  0448                     l3236:
  3442                           
  3443                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3444  0448  3061               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3445  0449  00DE               	movwf	??_vfprintf
  3446  044A  085E               	movf	??_vfprintf,w
  3447  044B  00D3               	movwf	vfpfcnvrt@fmt
  3448  044C  085D               	movf	vfprintf@ap,w
  3449  044D  00DF               	movwf	??_vfprintf+1
  3450  044E  085F               	movf	??_vfprintf+1,w
  3451  044F  00D4               	movwf	vfpfcnvrt@ap
  3452  0450  0860               	movf	vfprintf@fp,w
  3453  0451  3181  215E  3184   	fcall	_vfpfcnvrt
  3454  0454  0020               	movlb	0	; select bank0
  3455  0455  0853               	movf	?_vfpfcnvrt,w
  3456  0456  07A8               	addwf	_nout,f
  3457  0457  0854               	movf	?_vfpfcnvrt+1,w
  3458  0458  3DA9               	addwfc	_nout+1,f
  3459  0459                     l3238:
  3460                           
  3461                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3462  0459  0861               	movf	vfprintf@cfmt,w
  3463  045A  0084               	movwf	4
  3464  045B  0862               	movf	vfprintf@cfmt+1,w
  3465  045C  0085               	movwf	5
  3466  045D  0012               	moviw fsr0++
  3467  045E  1D03               	btfss	3,2
  3468  045F  2C61               	goto	u831
  3469  0460  2C62               	goto	u830
  3470  0461                     u831:
  3471  0461  2C48               	goto	l3236
  3472  0462                     u830:
  3473  0462                     l3240:
  3474                           
  3475                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3476  0462  0829               	movf	_nout+1,w
  3477  0463  00DC               	movwf	?_vfprintf+1
  3478  0464  0828               	movf	_nout,w
  3479  0465  00DB               	movwf	?_vfprintf
  3480  0466                     l1546:
  3481  0466  0008               	return
  3482  0467                     __end_of_vfprintf:
  3483                           
  3484                           	psect	text4
  3485  015E                     __ptext4:	
  3486 ;; *************** function _vfpfcnvrt *****************
  3487 ;; Defined at:
  3488 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;  fp              1    wreg     PTR struct _IO_FILE
  3491 ;;		 -> NULL(0), 
  3492 ;;  fmt             1   14[BANK0 ] PTR PTR unsigned char 
  3493 ;;		 -> vfprintf@cfmt(2), 
  3494 ;;  ap              1   15[BANK0 ] PTR PTR void 
  3495 ;;		 -> printf@ap(1), 
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;  fp              1   21[BANK0 ] PTR struct _IO_FILE
  3498 ;;		 -> NULL(0), 
  3499 ;;  llu             8    0        unsigned long long 
  3500 ;;  ll              8    0        long long 
  3501 ;;  f               4    0        long long 
  3502 ;;  ct              3    0        unsigned char [3]
  3503 ;;  vp              2    0        PTR void 
  3504 ;;  i               2    0        int 
  3505 ;;  done            2    0        int 
  3506 ;;  cp              2    0        PTR unsigned char 
  3507 ;;  c               1    0        unsigned char 
  3508 ;; Return value:  Size  Location     Type
  3509 ;;                  2   14[BANK0 ] int 
  3510 ;; Registers used:
  3511 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3512 ;; Tracked objects:
  3513 ;;		On entry : 0/0
  3514 ;;		On exit  : 0/0
  3515 ;;		Unchanged: 0/0
  3516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3517 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3518 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3519 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3520 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3521 ;;Total ram usage:        8 bytes
  3522 ;; Hardware stack levels used: 1
  3523 ;; Hardware stack levels required when called: 10
  3524 ;; This function calls:
  3525 ;;		_fputc
  3526 ;; This function is called by:
  3527 ;;		_vfprintf
  3528 ;; This function uses a non-reentrant model
  3529 ;;
  3530                           
  3531                           
  3532                           ;psect for function _vfpfcnvrt
  3533  015E                     _vfpfcnvrt:
  3534                           
  3535                           ;incstack = 0
  3536                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3537                           ;vfpfcnvrt@fp stored from wreg
  3538  015E  0020               	movlb	0	; select bank0
  3539  015F  00DA               	movwf	vfpfcnvrt@fp
  3540  0160                     l3108:
  3541                           
  3542                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3543  0160  0853               	movf	vfpfcnvrt@fmt,w
  3544  0161  0086               	movwf	6
  3545  0162  0187               	clrf	7
  3546  0163  3F40               	moviw [0]fsr1
  3547  0164  00D5               	movwf	??_vfpfcnvrt
  3548  0165  3F41               	moviw [1]fsr1
  3549  0166  00D6               	movwf	??_vfpfcnvrt+1
  3550  0167  0855               	movf	??_vfpfcnvrt,w
  3551  0168  0084               	movwf	4
  3552  0169  0856               	movf	??_vfpfcnvrt+1,w
  3553  016A  0085               	movwf	5
  3554  016B  0012               	moviw fsr0++
  3555  016C  3A25               	xorlw	37
  3556  016D  1D03               	btfss	3,2
  3557  016E  2970               	goto	u781
  3558  016F  2971               	goto	u780
  3559  0170                     u781:
  3560  0170  29B6               	goto	l3132
  3561  0171                     u780:
  3562  0171                     l3110:
  3563                           
  3564                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3565  0171  0853               	movf	vfpfcnvrt@fmt,w
  3566  0172  0086               	movwf	6
  3567  0173  0187               	clrf	7
  3568  0174  3001               	movlw	1
  3569  0175  0781               	addwf	1,f
  3570  0176  3141               	addfsr 1,1
  3571  0177  1803               	skipnc
  3572  0178  0A81               	incf	1,f
  3573  0179                     l3112:
  3574                           
  3575                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3576  0179  01AA               	clrf	_width
  3577  017A  01AB               	clrf	_width+1
  3578  017B  01AE               	clrf	_flags
  3579  017C  01AF               	clrf	_flags+1
  3580  017D                     l3114:
  3581                           
  3582                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3583  017D  30FF               	movlw	255
  3584  017E  00AC               	movwf	_prec
  3585  017F  30FF               	movlw	255
  3586  0180  00AD               	movwf	_prec+1
  3587  0181                     l3116:
  3588                           
  3589                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3590  0181  0853               	movf	vfpfcnvrt@fmt,w
  3591  0182  0086               	movwf	6
  3592  0183  0187               	clrf	7
  3593  0184  3F40               	moviw [0]fsr1
  3594  0185  00D5               	movwf	??_vfpfcnvrt
  3595  0186  3F41               	moviw [1]fsr1
  3596  0187  00D6               	movwf	??_vfpfcnvrt+1
  3597  0188  0855               	movf	??_vfpfcnvrt,w
  3598  0189  0084               	movwf	4
  3599  018A  0856               	movf	??_vfpfcnvrt+1,w
  3600  018B  0085               	movwf	5
  3601  018C  0012               	moviw fsr0++
  3602  018D  3A25               	xorlw	37
  3603  018E  1D03               	btfss	3,2
  3604  018F  2991               	goto	u791
  3605  0190  2992               	goto	u790
  3606  0191                     u791:
  3607  0191  29AB               	goto	l3126
  3608  0192                     u790:
  3609  0192                     l3118:
  3610                           
  3611                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3612  0192  0853               	movf	vfpfcnvrt@fmt,w
  3613  0193  0086               	movwf	6
  3614  0194  0187               	clrf	7
  3615  0195  3001               	movlw	1
  3616  0196  0781               	addwf	1,f
  3617  0197  3141               	addfsr 1,1
  3618  0198  1803               	skipnc
  3619  0199  0A81               	incf	1,f
  3620  019A                     l3120:
  3621                           
  3622                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3623  019A  3025               	movlw	37
  3624  019B  00CB               	movwf	fputc@c
  3625  019C  3000               	movlw	0
  3626  019D  00CC               	movwf	fputc@c+1
  3627  019E  085A               	movf	vfpfcnvrt@fp,w
  3628  019F  00D5               	movwf	??_vfpfcnvrt
  3629  01A0  0855               	movf	??_vfpfcnvrt,w
  3630  01A1  00CD               	movwf	fputc@fp
  3631  01A2  3182  22BA  3181   	fcall	_fputc
  3632  01A5                     l3122:
  3633                           
  3634                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3635  01A5  3001               	movlw	1
  3636  01A6  0020               	movlb	0	; select bank0
  3637  01A7  00D3               	movwf	?_vfpfcnvrt
  3638  01A8  3000               	movlw	0
  3639  01A9  00D4               	movwf	?_vfpfcnvrt+1
  3640  01AA  29D9               	goto	l1540
  3641  01AB                     l3126:
  3642                           
  3643                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3644  01AB  0853               	movf	vfpfcnvrt@fmt,w
  3645  01AC  0086               	movwf	6
  3646  01AD  0187               	clrf	7
  3647  01AE  3001               	movlw	1
  3648  01AF  0781               	addwf	1,f
  3649  01B0  3141               	addfsr 1,1
  3650  01B1  1803               	skipnc
  3651  01B2  0A81               	incf	1,f
  3652  01B3                     l3128:
  3653                           
  3654                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3655  01B3  01D3               	clrf	?_vfpfcnvrt
  3656  01B4  01D4               	clrf	?_vfpfcnvrt+1
  3657  01B5  29D9               	goto	l1540
  3658  01B6                     l3132:
  3659                           
  3660                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3661  01B6  0853               	movf	vfpfcnvrt@fmt,w
  3662  01B7  0086               	movwf	6
  3663  01B8  0187               	clrf	7
  3664  01B9  3F40               	moviw [0]fsr1
  3665  01BA  00D5               	movwf	??_vfpfcnvrt
  3666  01BB  3F41               	moviw [1]fsr1
  3667  01BC  00D6               	movwf	??_vfpfcnvrt+1
  3668  01BD  0855               	movf	??_vfpfcnvrt,w
  3669  01BE  0084               	movwf	4
  3670  01BF  0856               	movf	??_vfpfcnvrt+1,w
  3671  01C0  0085               	movwf	5
  3672  01C1  0800               	movf	0,w	;code access
  3673  01C2  00D7               	movwf	??_vfpfcnvrt+2
  3674  01C3  01D8               	clrf	??_vfpfcnvrt+3
  3675  01C4  0857               	movf	??_vfpfcnvrt+2,w
  3676  01C5  00CB               	movwf	fputc@c
  3677  01C6  0858               	movf	??_vfpfcnvrt+3,w
  3678  01C7  00CC               	movwf	fputc@c+1
  3679  01C8  085A               	movf	vfpfcnvrt@fp,w
  3680  01C9  00D9               	movwf	??_vfpfcnvrt+4
  3681  01CA  0859               	movf	??_vfpfcnvrt+4,w
  3682  01CB  00CD               	movwf	fputc@fp
  3683  01CC  3182  22BA  3181   	fcall	_fputc
  3684  01CF                     l3134:
  3685                           
  3686                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3687  01CF  0020               	movlb	0	; select bank0
  3688  01D0  0853               	movf	vfpfcnvrt@fmt,w
  3689  01D1  0086               	movwf	6
  3690  01D2  0187               	clrf	7
  3691  01D3  3001               	movlw	1
  3692  01D4  0781               	addwf	1,f
  3693  01D5  3141               	addfsr 1,1
  3694  01D6  1803               	skipnc
  3695  01D7  0A81               	incf	1,f
  3696  01D8  29A5               	goto	l3122
  3697  01D9                     l1540:
  3698  01D9  0008               	return
  3699  01DA                     __end_of_vfpfcnvrt:
  3700                           
  3701                           	psect	text5
  3702  02BA                     __ptext5:	
  3703 ;; *************** function _fputc *****************
  3704 ;; Defined at:
  3705 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  3706 ;; Parameters:    Size  Location     Type
  3707 ;;  c               2    6[BANK0 ] int 
  3708 ;;  fp              1    8[BANK0 ] PTR struct _IO_FILE
  3709 ;;		 -> NULL(0), 
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;		None
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  2    6[BANK0 ] int 
  3714 ;; Registers used:
  3715 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3721 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3723 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3724 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3725 ;;Total ram usage:        8 bytes
  3726 ;; Hardware stack levels used: 1
  3727 ;; Hardware stack levels required when called: 9
  3728 ;; This function calls:
  3729 ;;		_putch
  3730 ;; This function is called by:
  3731 ;;		_vfpfcnvrt
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735                           
  3736                           ;psect for function _fputc
  3737  02BA                     _fputc:
  3738  02BA                     l2912:	
  3739                           ;incstack = 0
  3740                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3741                           
  3742  02BA  0020               	movlb	0	; select bank0
  3743  02BB  084D               	movf	fputc@fp,w
  3744  02BC  1903               	btfsc	3,2
  3745  02BD  2ABF               	goto	u701
  3746  02BE  2AC0               	goto	u700
  3747  02BF                     u701:
  3748  02BF  2AC5               	goto	l2916
  3749  02C0                     u700:
  3750  02C0                     l2914:
  3751  02C0  084D               	movf	fputc@fp,w
  3752  02C1  1D03               	btfss	3,2
  3753  02C2  2AC4               	goto	u711
  3754  02C3  2AC5               	goto	u710
  3755  02C4                     u711:
  3756  02C4  2ACA               	goto	l2918
  3757  02C5                     u710:
  3758  02C5                     l2916:
  3759  02C5  084B               	movf	fputc@c,w
  3760  02C6  3186  2647  3182   	fcall	_putch
  3761  02C9  2AFA               	goto	l1558
  3762  02CA                     l2918:
  3763  02CA  084D               	movf	fputc@fp,w
  3764  02CB  3E03               	addlw	3
  3765  02CC  0086               	movwf	6
  3766  02CD  0187               	clrf	7
  3767  02CE  0016               	moviw fsr1++
  3768  02CF  0401               	iorwf	1,w
  3769  02D0  1903               	btfsc	3,2
  3770  02D1  2AD3               	goto	u721
  3771  02D2  2AD4               	goto	u720
  3772  02D3                     u721:
  3773  02D3  2AF1               	goto	l2922
  3774  02D4                     u720:
  3775  02D4                     l2920:
  3776  02D4  084D               	movf	fputc@fp,w
  3777  02D5  3E03               	addlw	3
  3778  02D6  0086               	movwf	6
  3779  02D7  0187               	clrf	7
  3780  02D8  3F40               	moviw [0]fsr1
  3781  02D9  00CE               	movwf	??_fputc
  3782  02DA  3F41               	moviw [1]fsr1
  3783  02DB  00CF               	movwf	??_fputc+1
  3784  02DC  0A4D               	incf	fputc@fp,w
  3785  02DD  0086               	movwf	6
  3786  02DE  0187               	clrf	7
  3787  02DF  3F40               	moviw [0]fsr1
  3788  02E0  00D0               	movwf	??_fputc+2
  3789  02E1  3F41               	moviw [1]fsr1
  3790  02E2  00D1               	movwf	??_fputc+3
  3791  02E3  0851               	movf	??_fputc+3,w
  3792  02E4  3A80               	xorlw	128
  3793  02E5  00D2               	movwf	??_fputc+4
  3794  02E6  084F               	movf	??_fputc+1,w
  3795  02E7  3A80               	xorlw	128
  3796  02E8  0252               	subwf	??_fputc+4,w
  3797  02E9  1D03               	skipz
  3798  02EA  2AED               	goto	u735
  3799  02EB  084E               	movf	??_fputc,w
  3800  02EC  0250               	subwf	??_fputc+2,w
  3801  02ED                     u735:
  3802  02ED  1803               	skipnc
  3803  02EE  2AF0               	goto	u731
  3804  02EF  2AF1               	goto	u730
  3805  02F0                     u731:
  3806  02F0  2AFA               	goto	l1558
  3807  02F1                     u730:
  3808  02F1                     l2922:
  3809  02F1  0020               	movlb	0	; select bank0
  3810  02F2  0A4D               	incf	fputc@fp,w
  3811  02F3  0086               	movwf	6
  3812  02F4  0187               	clrf	7
  3813  02F5  3001               	movlw	1
  3814  02F6  0781               	addwf	1,f
  3815  02F7  3141               	addfsr 1,1
  3816  02F8  1803               	skipnc
  3817  02F9  0A81               	incf	1,f
  3818  02FA                     l1558:
  3819  02FA  0008               	return
  3820  02FB                     __end_of_fputc:
  3821                           
  3822                           	psect	text6
  3823  0647                     __ptext6:	
  3824 ;; *************** function _putch *****************
  3825 ;; Defined at:
  3826 ;;		line 201 in file "mcc_generated_files/eusart.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;  txData          1    wreg     unsigned char 
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;  txData          1    5[BANK0 ] unsigned char 
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  1    wreg      void 
  3833 ;; Registers used:
  3834 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3835 ;; Tracked objects:
  3836 ;;		On entry : 0/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3841 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3843 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3844 ;;Total ram usage:        1 bytes
  3845 ;; Hardware stack levels used: 1
  3846 ;; Hardware stack levels required when called: 8
  3847 ;; This function calls:
  3848 ;;		_EUSART_Write
  3849 ;; This function is called by:
  3850 ;;		_fputc
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854                           
  3855                           ;psect for function _putch
  3856  0647                     _putch:
  3857                           
  3858                           ;incstack = 0
  3859                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3860                           ;putch@txData stored from wreg
  3861  0647  0020               	movlb	0	; select bank0
  3862  0648  00CA               	movwf	putch@txData
  3863  0649                     l2806:
  3864                           
  3865                           ;mcc_generated_files/eusart.c: 201: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 202: {;mcc_generated_files/eusart.c: 203:     EUSART_Write(txData);
  3866  0649  084A               	movf	putch@txData,w
  3867  064A  3183  23E9  3186   	fcall	_EUSART_Write
  3868  064D                     l329:
  3869  064D  0008               	return
  3870  064E                     __end_of_putch:
  3871                           
  3872                           	psect	text7
  3873  03E9                     __ptext7:	
  3874 ;; *************** function _EUSART_Write *****************
  3875 ;; Defined at:
  3876 ;;		line 173 in file "mcc_generated_files/eusart.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;  txData          1    wreg     unsigned char 
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;  txData          1    4[BANK0 ] unsigned char 
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  1    wreg      void 
  3883 ;; Registers used:
  3884 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3891 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3892 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3893 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3894 ;;Total ram usage:        2 bytes
  3895 ;; Hardware stack levels used: 1
  3896 ;; Hardware stack levels required when called: 7
  3897 ;; This function calls:
  3898 ;;		Nothing
  3899 ;; This function is called by:
  3900 ;;		_putch
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           
  3905                           ;psect for function _EUSART_Write
  3906  03E9                     _EUSART_Write:
  3907                           
  3908                           ;incstack = 0
  3909                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  3910                           ;EUSART_Write@txData stored from wreg
  3911  03E9  0020               	movlb	0	; select bank0
  3912  03EA  00C9               	movwf	EUSART_Write@txData
  3913  03EB                     l2774:
  3914  03EB                     l2776:	
  3915                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
  3916                           
  3917                           
  3918                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  3919  03EB  0842               	movf	_eusartTxBufferRemaining,w	;volatile
  3920  03EC  1903               	btfsc	3,2
  3921  03ED  2BEF               	goto	u651
  3922  03EE  2BF0               	goto	u650
  3923  03EF                     u651:
  3924  03EF  2BEB               	goto	l2776
  3925  03F0                     u650:
  3926  03F0                     l319:
  3927                           
  3928                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TXIE)
  3929  03F0  0021               	movlb	1	; select bank1
  3930  03F1  1A11               	btfsc	17,4	;volatile
  3931  03F2  2BF4               	goto	u661
  3932  03F3  2BF5               	goto	u660
  3933  03F4                     u661:
  3934  03F4  2BFA               	goto	l320
  3935  03F5                     u660:
  3936  03F5                     l2778:
  3937                           
  3938                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
  3939  03F5  0020               	movlb	0	; select bank0
  3940  03F6  0849               	movf	EUSART_Write@txData,w
  3941  03F7  0023               	movlb	3	; select bank3
  3942  03F8  009A               	movwf	26	;volatile
  3943                           
  3944                           ;mcc_generated_files/eusart.c: 182:     }
  3945  03F9  2C11               	goto	l2790
  3946  03FA                     l320:	
  3947                           ;mcc_generated_files/eusart.c: 183:     else
  3948                           
  3949                           
  3950                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TXIE = 0;
  3951  03FA  1211               	bcf	17,4	;volatile
  3952  03FB                     l2780:
  3953                           
  3954                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  3955  03FB  0020               	movlb	0	; select bank0
  3956  03FC  0849               	movf	EUSART_Write@txData,w
  3957  03FD  00C8               	movwf	??_EUSART_Write
  3958  03FE  0844               	movf	_eusartTxHead,w
  3959  03FF  3EE5               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  3960  0400  0086               	movwf	6
  3961  0401  0187               	clrf	7
  3962  0402  0848               	movf	??_EUSART_Write,w
  3963  0403  0081               	movwf	1
  3964  0404                     l2782:
  3965  0404  3001               	movlw	1
  3966  0405  00C8               	movwf	??_EUSART_Write
  3967  0406  0848               	movf	??_EUSART_Write,w
  3968  0407  07C4               	addwf	_eusartTxHead,f	;volatile
  3969  0408                     l2784:
  3970                           
  3971                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  3972  0408  3008               	movlw	8
  3973  0409  0244               	subwf	_eusartTxHead,w	;volatile
  3974  040A  1C03               	skipc
  3975  040B  2C0D               	goto	u671
  3976  040C  2C0E               	goto	u670
  3977  040D                     u671:
  3978  040D  2C0F               	goto	l2788
  3979  040E                     u670:
  3980  040E                     l2786:
  3981                           
  3982                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  3983  040E  01C4               	clrf	_eusartTxHead	;volatile
  3984  040F                     l2788:
  3985                           
  3986                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  3987  040F  3001               	movlw	1
  3988  0410  02C2               	subwf	_eusartTxBufferRemaining,f	;volatile
  3989  0411                     l2790:
  3990                           
  3991                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TXIE = 1;
  3992  0411  0021               	movlb	1	; select bank1
  3993  0412  1611               	bsf	17,4	;volatile
  3994  0413                     l323:
  3995  0413  0008               	return
  3996  0414                     __end_of_EUSART_Write:
  3997                           
  3998                           	psect	text8
  3999  0517                     __ptext8:	
  4000 ;; *************** function _SYSTEM_Initialize *****************
  4001 ;; Defined at:
  4002 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;		None
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;		None
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  1    wreg      void 
  4009 ;; Registers used:
  4010 ;;		wreg, status,2, status,0, pclath, cstack
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4020 ;;Total ram usage:        0 bytes
  4021 ;; Hardware stack levels used: 1
  4022 ;; Hardware stack levels required when called: 9
  4023 ;; This function calls:
  4024 ;;		_ADC_Initialize
  4025 ;;		_EUSART_Initialize
  4026 ;;		_I2C_Initialize
  4027 ;;		_OSCILLATOR_Initialize
  4028 ;;		_PIN_MANAGER_Initialize
  4029 ;;		_WDT_Initialize
  4030 ;; This function is called by:
  4031 ;;		_main
  4032 ;; This function uses a non-reentrant model
  4033 ;;
  4034                           
  4035                           
  4036                           ;psect for function _SYSTEM_Initialize
  4037  0517                     _SYSTEM_Initialize:
  4038  0517                     l3244:	
  4039                           ;incstack = 0
  4040                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4041                           
  4042                           
  4043                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  4044  0517  3186  2624  3185   	fcall	_I2C_Initialize
  4045                           
  4046                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4047  051A  3184  24AF  3185   	fcall	_PIN_MANAGER_Initialize
  4048                           
  4049                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4050  051D  3185  259D  3185   	fcall	_OSCILLATOR_Initialize
  4051                           
  4052                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  4053  0520  3186  26B1  3185   	fcall	_WDT_Initialize
  4054                           
  4055                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  4056  0523  3186  2637  3185   	fcall	_ADC_Initialize
  4057                           
  4058                           ;mcc_generated_files/mcc.c: 58:     EUSART_Initialize();
  4059  0526  3182  2275  3185   	fcall	_EUSART_Initialize
  4060  0529                     l173:
  4061  0529  0008               	return
  4062  052A                     __end_of_SYSTEM_Initialize:
  4063                           
  4064                           	psect	text9
  4065  06B1                     __ptext9:	
  4066 ;; *************** function _WDT_Initialize *****************
  4067 ;; Defined at:
  4068 ;;		line 75 in file "mcc_generated_files/mcc.c"
  4069 ;; Parameters:    Size  Location     Type
  4070 ;;		None
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;		None
  4073 ;; Return value:  Size  Location     Type
  4074 ;;                  1    wreg      void 
  4075 ;; Registers used:
  4076 ;;		wreg
  4077 ;; Tracked objects:
  4078 ;;		On entry : 0/0
  4079 ;;		On exit  : 0/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4086 ;;Total ram usage:        0 bytes
  4087 ;; Hardware stack levels used: 1
  4088 ;; Hardware stack levels required when called: 7
  4089 ;; This function calls:
  4090 ;;		Nothing
  4091 ;; This function is called by:
  4092 ;;		_SYSTEM_Initialize
  4093 ;; This function uses a non-reentrant model
  4094 ;;
  4095                           
  4096                           
  4097                           ;psect for function _WDT_Initialize
  4098  06B1                     _WDT_Initialize:
  4099  06B1                     l3178:	
  4100                           ;incstack = 0
  4101                           ; Regs used in _WDT_Initialize: [wreg]
  4102                           
  4103                           
  4104                           ;mcc_generated_files/mcc.c: 78:     WDTCON = 0x16;
  4105  06B1  3016               	movlw	22
  4106  06B2  0021               	movlb	1	; select bank1
  4107  06B3  0097               	movwf	23	;volatile
  4108  06B4                     l182:
  4109  06B4  0008               	return
  4110  06B5                     __end_of_WDT_Initialize:
  4111                           
  4112                           	psect	text10
  4113  04AF                     __ptext10:	
  4114 ;; *************** function _PIN_MANAGER_Initialize *****************
  4115 ;; Defined at:
  4116 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4117 ;; Parameters:    Size  Location     Type
  4118 ;;		None
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;		None
  4121 ;; Return value:  Size  Location     Type
  4122 ;;                  1    wreg      void 
  4123 ;; Registers used:
  4124 ;;		wreg, status,2
  4125 ;; Tracked objects:
  4126 ;;		On entry : 0/0
  4127 ;;		On exit  : 0/0
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4134 ;;Total ram usage:        0 bytes
  4135 ;; Hardware stack levels used: 1
  4136 ;; Hardware stack levels required when called: 7
  4137 ;; This function calls:
  4138 ;;		Nothing
  4139 ;; This function is called by:
  4140 ;;		_SYSTEM_Initialize
  4141 ;; This function uses a non-reentrant model
  4142 ;;
  4143                           
  4144                           
  4145                           ;psect for function _PIN_MANAGER_Initialize
  4146  04AF                     _PIN_MANAGER_Initialize:
  4147  04AF                     l3140:	
  4148                           ;incstack = 0
  4149                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4150                           
  4151                           
  4152                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  4153  04AF  0022               	movlb	2	; select bank2
  4154  04B0  0190               	clrf	16	;volatile
  4155                           
  4156                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  4157  04B1  018F               	clrf	15	;volatile
  4158                           
  4159                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  4160  04B2  018C               	clrf	12	;volatile
  4161                           
  4162                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  4163  04B3  018D               	clrf	13	;volatile
  4164                           
  4165                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  4166  04B4  018E               	clrf	14	;volatile
  4167  04B5                     l3142:
  4168                           
  4169                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x08;
  4170  04B5  3008               	movlw	8
  4171  04B6  0021               	movlb	1	; select bank1
  4172  04B7  0090               	movwf	16	;volatile
  4173  04B8                     l3144:
  4174                           
  4175                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x00;
  4176  04B8  018C               	clrf	12	;volatile
  4177                           
  4178                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xC0;
  4179  04B9  30C0               	movlw	192
  4180  04BA  008D               	movwf	13	;volatile
  4181                           
  4182                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x99;
  4183  04BB  3099               	movlw	153
  4184  04BC  008E               	movwf	14	;volatile
  4185  04BD                     l3146:
  4186                           
  4187                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x00;
  4188  04BD  018F               	clrf	15	;volatile
  4189  04BE                     l3148:
  4190                           
  4191                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
  4192  04BE  0023               	movlb	3	; select bank3
  4193  04BF  018F               	clrf	15	;volatile
  4194  04C0                     l3150:
  4195                           
  4196                           ;mcc_generated_files/pin_manager.c: 79:     ANSELB = 0x00;
  4197  04C0  018D               	clrf	13	;volatile
  4198  04C1                     l3152:
  4199                           
  4200                           ;mcc_generated_files/pin_manager.c: 80:     ANSELE = 0x00;
  4201  04C1  0190               	clrf	16	;volatile
  4202  04C2                     l3154:
  4203                           
  4204                           ;mcc_generated_files/pin_manager.c: 81:     ANSELA = 0x00;
  4205  04C2  018C               	clrf	12	;volatile
  4206  04C3                     l3156:
  4207                           
  4208                           ;mcc_generated_files/pin_manager.c: 86:     WPUE = 0x00;
  4209  04C3  0024               	movlb	4	; select bank4
  4210  04C4  0190               	clrf	16	;volatile
  4211  04C5                     l3158:
  4212                           
  4213                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  4214  04C5  018D               	clrf	13	;volatile
  4215  04C6                     l3160:
  4216                           
  4217                           ;mcc_generated_files/pin_manager.c: 88:     OPTION_REGbits.nWPUEN = 1;
  4218  04C6  0021               	movlb	1	; select bank1
  4219  04C7  1795               	bsf	21,7	;volatile
  4220  04C8                     l3162:
  4221                           
  4222                           ;mcc_generated_files/pin_manager.c: 94:     APFCON = 0x00;
  4223  04C8  0022               	movlb	2	; select bank2
  4224  04C9  019D               	clrf	29	;volatile
  4225  04CA                     l143:
  4226  04CA  0008               	return
  4227  04CB                     __end_of_PIN_MANAGER_Initialize:
  4228                           
  4229                           	psect	text11
  4230  059D                     __ptext11:	
  4231 ;; *************** function _OSCILLATOR_Initialize *****************
  4232 ;; Defined at:
  4233 ;;		line 61 in file "mcc_generated_files/mcc.c"
  4234 ;; Parameters:    Size  Location     Type
  4235 ;;		None
  4236 ;; Auto vars:     Size  Location     Type
  4237 ;;		None
  4238 ;; Return value:  Size  Location     Type
  4239 ;;                  1    wreg      void 
  4240 ;; Registers used:
  4241 ;;		wreg, status,2
  4242 ;; Tracked objects:
  4243 ;;		On entry : 0/0
  4244 ;;		On exit  : 0/0
  4245 ;;		Unchanged: 0/0
  4246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4251 ;;Total ram usage:        0 bytes
  4252 ;; Hardware stack levels used: 1
  4253 ;; Hardware stack levels required when called: 7
  4254 ;; This function calls:
  4255 ;;		Nothing
  4256 ;; This function is called by:
  4257 ;;		_SYSTEM_Initialize
  4258 ;; This function uses a non-reentrant model
  4259 ;;
  4260                           
  4261                           
  4262                           ;psect for function _OSCILLATOR_Initialize
  4263  059D                     _OSCILLATOR_Initialize:
  4264  059D                     l3172:	
  4265                           ;incstack = 0
  4266                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4267                           
  4268                           
  4269                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  4270  059D  3070               	movlw	112
  4271  059E  0021               	movlb	1	; select bank1
  4272  059F  0099               	movwf	25	;volatile
  4273  05A0                     l3174:
  4274                           
  4275                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  4276  05A0  0198               	clrf	24	;volatile
  4277  05A1                     l3176:
  4278                           
  4279                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  4280  05A1  0022               	movlb	2	; select bank2
  4281  05A2  0196               	clrf	22	;volatile
  4282  05A3                     l176:	
  4283                           ;mcc_generated_files/mcc.c: 71:     {;mcc_generated_files/mcc.c: 72:     }
  4284                           
  4285                           
  4286                           ;mcc_generated_files/mcc.c: 70:     while(PLLR == 0)
  4287  05A3  0021               	movlb	1	; select bank1
  4288  05A4  1F1A               	btfss	26,6	;volatile
  4289  05A5  2DA7               	goto	u801
  4290  05A6  2DA8               	goto	u800
  4291  05A7                     u801:
  4292  05A7  2DA3               	goto	l176
  4293  05A8                     u800:
  4294  05A8                     l179:
  4295  05A8  0008               	return
  4296  05A9                     __end_of_OSCILLATOR_Initialize:
  4297                           
  4298                           	psect	text12
  4299  0624                     __ptext12:	
  4300 ;; *************** function _I2C_Initialize *****************
  4301 ;; Defined at:
  4302 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;		None
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;		None
  4307 ;; Return value:  Size  Location     Type
  4308 ;;                  1    wreg      void 
  4309 ;; Registers used:
  4310 ;;		wreg, status,2
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4320 ;;Total ram usage:        0 bytes
  4321 ;; Hardware stack levels used: 1
  4322 ;; Hardware stack levels required when called: 7
  4323 ;; This function calls:
  4324 ;;		Nothing
  4325 ;; This function is called by:
  4326 ;;		_SYSTEM_Initialize
  4327 ;; This function uses a non-reentrant model
  4328 ;;
  4329                           
  4330                           
  4331                           ;psect for function _I2C_Initialize
  4332  0624                     _I2C_Initialize:
  4333  0624                     l3164:	
  4334                           ;incstack = 0
  4335                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  4336                           
  4337                           
  4338                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0xC0;
  4339  0624  30C0               	movlw	192
  4340  0625  0024               	movlb	4	; select bank4
  4341  0626  0094               	movwf	20	;volatile
  4342                           
  4343                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  4344  0627  3008               	movlw	8
  4345  0628  0095               	movwf	21	;volatile
  4346  0629                     l3166:
  4347                           
  4348                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  4349  0629  0196               	clrf	22	;volatile
  4350  062A                     l3168:
  4351                           
  4352                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x4F;
  4353  062A  304F               	movlw	79
  4354  062B  0092               	movwf	18	;volatile
  4355  062C                     l3170:
  4356                           
  4357                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  4358  062C  1295               	bcf	21,5	;volatile
  4359  062D                     l510:
  4360  062D  0008               	return
  4361  062E                     __end_of_I2C_Initialize:
  4362                           
  4363                           	psect	text13
  4364  0275                     __ptext13:	
  4365 ;; *************** function _EUSART_Initialize *****************
  4366 ;; Defined at:
  4367 ;;		line 88 in file "mcc_generated_files/eusart.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;		None
  4370 ;; Auto vars:     Size  Location     Type
  4371 ;;		None
  4372 ;; Return value:  Size  Location     Type
  4373 ;;                  1    wreg      void 
  4374 ;; Registers used:
  4375 ;;		wreg, status,2, status,0, pclath, cstack
  4376 ;; Tracked objects:
  4377 ;;		On entry : 0/0
  4378 ;;		On exit  : 0/0
  4379 ;;		Unchanged: 0/0
  4380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4383 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4384 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4385 ;;Total ram usage:        1 bytes
  4386 ;; Hardware stack levels used: 1
  4387 ;; Hardware stack levels required when called: 8
  4388 ;; This function calls:
  4389 ;;		_EUSART_SetErrorHandler
  4390 ;;		_EUSART_SetFramingErrorHandler
  4391 ;;		_EUSART_SetOverrunErrorHandler
  4392 ;;		_EUSART_SetRxInterruptHandler
  4393 ;;		_EUSART_SetTxInterruptHandler
  4394 ;; This function is called by:
  4395 ;;		_SYSTEM_Initialize
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399                           
  4400                           ;psect for function _EUSART_Initialize
  4401  0275                     _EUSART_Initialize:
  4402  0275                     l3186:	
  4403                           ;incstack = 0
  4404                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4405                           
  4406                           
  4407                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  4408  0275  0021               	movlb	1	; select bank1
  4409  0276  1291               	bcf	17,5	;volatile
  4410  0277                     l3188:
  4411                           
  4412                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  4413  0277  30FB               	movlw	low _EUSART_Receive_ISR
  4414  0278  0020               	movlb	0	; select bank0
  4415  0279  00C8               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  4416  027A  3002               	movlw	high _EUSART_Receive_ISR
  4417  027B  00C9               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  4418  027C  3186  2661  3182   	fcall	_EUSART_SetRxInterruptHandler
  4419  027F                     l3190:
  4420                           
  4421                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  4422  027F  0021               	movlb	1	; select bank1
  4423  0280  1211               	bcf	17,4	;volatile
  4424                           
  4425                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  4426  0281  308D               	movlw	low _EUSART_Transmit_ISR
  4427  0282  0020               	movlb	0	; select bank0
  4428  0283  00C8               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  4429  0284  3004               	movlw	high _EUSART_Transmit_ISR
  4430  0285  00C9               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  4431  0286  3186  265B  3182   	fcall	_EUSART_SetTxInterruptHandler
  4432  0289                     l3192:
  4433                           
  4434                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  4435  0289  3008               	movlw	8
  4436  028A  0023               	movlb	3	; select bank3
  4437  028B  009F               	movwf	31	;volatile
  4438  028C                     l3194:
  4439                           
  4440                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  4441  028C  3090               	movlw	144
  4442  028D  009D               	movwf	29	;volatile
  4443  028E                     l3196:
  4444                           
  4445                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  4446  028E  3024               	movlw	36
  4447  028F  009E               	movwf	30	;volatile
  4448  0290                     l3198:
  4449                           
  4450                           ;mcc_generated_files/eusart.c: 107:     SPBRGL = 0x40;
  4451  0290  3040               	movlw	64
  4452  0291  009B               	movwf	27	;volatile
  4453  0292                     l3200:
  4454                           
  4455                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x03;
  4456  0292  3003               	movlw	3
  4457  0293  009C               	movwf	28	;volatile
  4458  0294                     l3202:
  4459                           
  4460                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  4461  0294  30DF               	movlw	low _EUSART_DefaultFramingErrorHandler
  4462  0295  0020               	movlb	0	; select bank0
  4463  0296  00C8               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  4464  0297  3006               	movlw	high _EUSART_DefaultFramingErrorHandler
  4465  0298  00C9               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  4466  0299  3186  266D  3182   	fcall	_EUSART_SetFramingErrorHandler
  4467  029C                     l3204:
  4468                           
  4469                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  4470  029C  30C1               	movlw	low _EUSART_DefaultOverrunErrorHandler
  4471  029D  0020               	movlb	0	; select bank0
  4472  029E  00C8               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  4473  029F  3006               	movlw	high _EUSART_DefaultOverrunErrorHandler
  4474  02A0  00C9               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  4475  02A1  3186  2667  3182   	fcall	_EUSART_SetOverrunErrorHandler
  4476  02A4                     l3206:
  4477                           
  4478                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  4479  02A4  30C5               	movlw	low _EUSART_DefaultErrorHandler
  4480  02A5  0020               	movlb	0	; select bank0
  4481  02A6  00C8               	movwf	EUSART_SetErrorHandler@interruptHandler
  4482  02A7  3006               	movlw	high _EUSART_DefaultErrorHandler
  4483  02A8  00C9               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  4484  02A9  3186  2673  3182   	fcall	_EUSART_SetErrorHandler
  4485  02AC                     l3208:
  4486                           
  4487                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  4488  02AC  0020               	movlb	0	; select bank0
  4489  02AD  01BE               	clrf	_eusartRxLastError	;volatile
  4490  02AE                     l3210:
  4491                           
  4492                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  4493  02AE  01C4               	clrf	_eusartTxHead	;volatile
  4494  02AF                     l3212:
  4495                           
  4496                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  4497  02AF  01C3               	clrf	_eusartTxTail	;volatile
  4498  02B0                     l3214:
  4499                           
  4500                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  4501  02B0  3008               	movlw	8
  4502  02B1  00CA               	movwf	??_EUSART_Initialize
  4503  02B2  084A               	movf	??_EUSART_Initialize,w
  4504  02B3  00C2               	movwf	_eusartTxBufferRemaining	;volatile
  4505                           
  4506                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  4507  02B4  01C1               	clrf	_eusartRxHead	;volatile
  4508                           
  4509                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  4510  02B5  01C0               	clrf	_eusartRxTail	;volatile
  4511                           
  4512                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  4513  02B6  01BF               	clrf	_eusartRxCount	;volatile
  4514  02B7                     l3216:
  4515                           
  4516                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  4517  02B7  0021               	movlb	1	; select bank1
  4518  02B8  1691               	bsf	17,5	;volatile
  4519  02B9                     l295:
  4520  02B9  0008               	return
  4521  02BA                     __end_of_EUSART_Initialize:
  4522                           
  4523                           	psect	text14
  4524  065B                     __ptext14:	
  4525 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  4526 ;; Defined at:
  4527 ;;		line 285 in file "mcc_generated_files/eusart.c"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;  interruptHan    2    3[BANK0 ] PTR FTN()void 
  4530 ;;		 -> EUSART_Transmit_ISR(1), 
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;		None
  4533 ;; Return value:  Size  Location     Type
  4534 ;;                  1    wreg      void 
  4535 ;; Registers used:
  4536 ;;		wreg
  4537 ;; Tracked objects:
  4538 ;;		On entry : 0/0
  4539 ;;		On exit  : 0/0
  4540 ;;		Unchanged: 0/0
  4541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4542 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4545 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4546 ;;Total ram usage:        2 bytes
  4547 ;; Hardware stack levels used: 1
  4548 ;; Hardware stack levels required when called: 7
  4549 ;; This function calls:
  4550 ;;		Nothing
  4551 ;; This function is called by:
  4552 ;;		_EUSART_Initialize
  4553 ;; This function uses a non-reentrant model
  4554 ;;
  4555                           
  4556                           
  4557                           ;psect for function _EUSART_SetTxInterruptHandler
  4558  065B                     _EUSART_SetTxInterruptHandler:
  4559  065B                     l2928:	
  4560                           ;incstack = 0
  4561                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  4562                           
  4563                           
  4564                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  4565  065B  0020               	movlb	0	; select bank0
  4566  065C  0849               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  4567  065D  00B9               	movwf	_EUSART_TxDefaultInterruptHandler+1
  4568  065E  0848               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  4569  065F  00B8               	movwf	_EUSART_TxDefaultInterruptHandler
  4570  0660                     l367:
  4571  0660  0008               	return
  4572  0661                     __end_of_EUSART_SetTxInterruptHandler:
  4573                           
  4574                           	psect	text15
  4575  0661                     __ptext15:	
  4576 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  4577 ;; Defined at:
  4578 ;;		line 289 in file "mcc_generated_files/eusart.c"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;  interruptHan    2    3[BANK0 ] PTR FTN()void 
  4581 ;;		 -> EUSART_Receive_ISR(1), 
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;		None
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  1    wreg      void 
  4586 ;; Registers used:
  4587 ;;		wreg
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4593 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4596 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4597 ;;Total ram usage:        2 bytes
  4598 ;; Hardware stack levels used: 1
  4599 ;; Hardware stack levels required when called: 7
  4600 ;; This function calls:
  4601 ;;		Nothing
  4602 ;; This function is called by:
  4603 ;;		_EUSART_Initialize
  4604 ;; This function uses a non-reentrant model
  4605 ;;
  4606                           
  4607                           
  4608                           ;psect for function _EUSART_SetRxInterruptHandler
  4609  0661                     _EUSART_SetRxInterruptHandler:
  4610  0661                     l2926:	
  4611                           ;incstack = 0
  4612                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  4613                           
  4614                           
  4615                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  4616  0661  0020               	movlb	0	; select bank0
  4617  0662  0849               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  4618  0663  00B7               	movwf	_EUSART_RxDefaultInterruptHandler+1
  4619  0664  0848               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  4620  0665  00B6               	movwf	_EUSART_RxDefaultInterruptHandler
  4621  0666                     l370:
  4622  0666  0008               	return
  4623  0667                     __end_of_EUSART_SetRxInterruptHandler:
  4624                           
  4625                           	psect	text16
  4626  0667                     __ptext16:	
  4627 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  4628 ;; Defined at:
  4629 ;;		line 277 in file "mcc_generated_files/eusart.c"
  4630 ;; Parameters:    Size  Location     Type
  4631 ;;  interruptHan    2    3[BANK0 ] PTR FTN()void 
  4632 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  4633 ;; Auto vars:     Size  Location     Type
  4634 ;;		None
  4635 ;; Return value:  Size  Location     Type
  4636 ;;                  1    wreg      void 
  4637 ;; Registers used:
  4638 ;;		wreg
  4639 ;; Tracked objects:
  4640 ;;		On entry : 0/0
  4641 ;;		On exit  : 0/0
  4642 ;;		Unchanged: 0/0
  4643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4644 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4647 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4648 ;;Total ram usage:        2 bytes
  4649 ;; Hardware stack levels used: 1
  4650 ;; Hardware stack levels required when called: 7
  4651 ;; This function calls:
  4652 ;;		Nothing
  4653 ;; This function is called by:
  4654 ;;		_EUSART_Initialize
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658                           
  4659                           ;psect for function _EUSART_SetOverrunErrorHandler
  4660  0667                     _EUSART_SetOverrunErrorHandler:
  4661  0667                     l2932:	
  4662                           ;incstack = 0
  4663                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  4664                           
  4665                           
  4666                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
  4667  0667  0020               	movlb	0	; select bank0
  4668  0668  0849               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  4669  0669  00B3               	movwf	_EUSART_OverrunErrorHandler+1
  4670  066A  0848               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  4671  066B  00B2               	movwf	_EUSART_OverrunErrorHandler
  4672  066C                     l361:
  4673  066C  0008               	return
  4674  066D                     __end_of_EUSART_SetOverrunErrorHandler:
  4675                           
  4676                           	psect	text17
  4677  066D                     __ptext17:	
  4678 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  4679 ;; Defined at:
  4680 ;;		line 273 in file "mcc_generated_files/eusart.c"
  4681 ;; Parameters:    Size  Location     Type
  4682 ;;  interruptHan    2    3[BANK0 ] PTR FTN()void 
  4683 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  4684 ;; Auto vars:     Size  Location     Type
  4685 ;;		None
  4686 ;; Return value:  Size  Location     Type
  4687 ;;                  1    wreg      void 
  4688 ;; Registers used:
  4689 ;;		wreg
  4690 ;; Tracked objects:
  4691 ;;		On entry : 0/0
  4692 ;;		On exit  : 0/0
  4693 ;;		Unchanged: 0/0
  4694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4695 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4698 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4699 ;;Total ram usage:        2 bytes
  4700 ;; Hardware stack levels used: 1
  4701 ;; Hardware stack levels required when called: 7
  4702 ;; This function calls:
  4703 ;;		Nothing
  4704 ;; This function is called by:
  4705 ;;		_EUSART_Initialize
  4706 ;; This function uses a non-reentrant model
  4707 ;;
  4708                           
  4709                           
  4710                           ;psect for function _EUSART_SetFramingErrorHandler
  4711  066D                     _EUSART_SetFramingErrorHandler:
  4712  066D                     l2930:	
  4713                           ;incstack = 0
  4714                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  4715                           
  4716                           
  4717                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
  4718  066D  0020               	movlb	0	; select bank0
  4719  066E  0849               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  4720  066F  00B5               	movwf	_EUSART_FramingErrorHandler+1
  4721  0670  0848               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  4722  0671  00B4               	movwf	_EUSART_FramingErrorHandler
  4723  0672                     l358:
  4724  0672  0008               	return
  4725  0673                     __end_of_EUSART_SetFramingErrorHandler:
  4726                           
  4727                           	psect	text18
  4728  0673                     __ptext18:	
  4729 ;; *************** function _EUSART_SetErrorHandler *****************
  4730 ;; Defined at:
  4731 ;;		line 281 in file "mcc_generated_files/eusart.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;  interruptHan    2    3[BANK0 ] PTR FTN()void 
  4734 ;;		 -> EUSART_DefaultErrorHandler(1), 
  4735 ;; Auto vars:     Size  Location     Type
  4736 ;;		None
  4737 ;; Return value:  Size  Location     Type
  4738 ;;                  1    wreg      void 
  4739 ;; Registers used:
  4740 ;;		wreg
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4746 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4749 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4750 ;;Total ram usage:        2 bytes
  4751 ;; Hardware stack levels used: 1
  4752 ;; Hardware stack levels required when called: 7
  4753 ;; This function calls:
  4754 ;;		Nothing
  4755 ;; This function is called by:
  4756 ;;		_EUSART_Initialize
  4757 ;; This function uses a non-reentrant model
  4758 ;;
  4759                           
  4760                           
  4761                           ;psect for function _EUSART_SetErrorHandler
  4762  0673                     _EUSART_SetErrorHandler:
  4763  0673                     l2934:	
  4764                           ;incstack = 0
  4765                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  4766                           
  4767                           
  4768                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
  4769  0673  0020               	movlb	0	; select bank0
  4770  0674  0849               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  4771  0675  00B1               	movwf	_EUSART_ErrorHandler+1
  4772  0676  0848               	movf	EUSART_SetErrorHandler@interruptHandler,w
  4773  0677  00B0               	movwf	_EUSART_ErrorHandler
  4774  0678                     l364:
  4775  0678  0008               	return
  4776  0679                     __end_of_EUSART_SetErrorHandler:
  4777                           
  4778                           	psect	text19
  4779  0637                     __ptext19:	
  4780 ;; *************** function _ADC_Initialize *****************
  4781 ;; Defined at:
  4782 ;;		line 67 in file "mcc_generated_files/adc.c"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;		None
  4785 ;; Auto vars:     Size  Location     Type
  4786 ;;		None
  4787 ;; Return value:  Size  Location     Type
  4788 ;;                  1    wreg      void 
  4789 ;; Registers used:
  4790 ;;		wreg, status,2
  4791 ;; Tracked objects:
  4792 ;;		On entry : 0/0
  4793 ;;		On exit  : 0/0
  4794 ;;		Unchanged: 0/0
  4795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4800 ;;Total ram usage:        0 bytes
  4801 ;; Hardware stack levels used: 1
  4802 ;; Hardware stack levels required when called: 7
  4803 ;; This function calls:
  4804 ;;		Nothing
  4805 ;; This function is called by:
  4806 ;;		_SYSTEM_Initialize
  4807 ;; This function uses a non-reentrant model
  4808 ;;
  4809                           
  4810                           
  4811                           ;psect for function _ADC_Initialize
  4812  0637                     _ADC_Initialize:
  4813  0637                     l3180:	
  4814                           ;incstack = 0
  4815                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  4816                           
  4817                           
  4818                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xF0;
  4819  0637  30F0               	movlw	240
  4820  0638  0021               	movlb	1	; select bank1
  4821  0639  009E               	movwf	30	;volatile
  4822  063A                     l3182:
  4823                           
  4824                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  4825  063A  019B               	clrf	27	;volatile
  4826  063B                     l3184:
  4827                           
  4828                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  4829  063B  019C               	clrf	28	;volatile
  4830                           
  4831                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  4832  063C  3001               	movlw	1
  4833  063D  009D               	movwf	29	;volatile
  4834  063E                     l199:
  4835  063E  0008               	return
  4836  063F                     __end_of_ADC_Initialize:
  4837                           
  4838                           	psect	text20
  4839  0414                     __ptext20:	
  4840 ;; *************** function _EUSART_Read *****************
  4841 ;; Defined at:
  4842 ;;		line 151 in file "mcc_generated_files/eusart.c"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;		None
  4845 ;; Auto vars:     Size  Location     Type
  4846 ;;  readValue       1    4[BANK0 ] unsigned char 
  4847 ;; Return value:  Size  Location     Type
  4848 ;;                  1    wreg      unsigned char 
  4849 ;; Registers used:
  4850 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4851 ;; Tracked objects:
  4852 ;;		On entry : 0/0
  4853 ;;		On exit  : 0/0
  4854 ;;		Unchanged: 0/0
  4855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4857 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4858 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4859 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4860 ;;Total ram usage:        2 bytes
  4861 ;; Hardware stack levels used: 1
  4862 ;; Hardware stack levels required when called: 7
  4863 ;; This function calls:
  4864 ;;		Nothing
  4865 ;; This function is called by:
  4866 ;;		_main
  4867 ;;		_getch
  4868 ;; This function uses a non-reentrant model
  4869 ;;
  4870                           
  4871                           
  4872                           ;psect for function _EUSART_Read
  4873  0414                     _EUSART_Read:
  4874  0414                     l3246:	
  4875                           ;incstack = 0
  4876                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  4877                           
  4878  0414                     l3248:	
  4879                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  4880                           
  4881                           
  4882                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  4883  0414  0020               	movlb	0	; select bank0
  4884  0415  083F               	movf	_eusartRxCount,w	;volatile
  4885  0416  1903               	btfsc	3,2
  4886  0417  2C19               	goto	u841
  4887  0418  2C1A               	goto	u840
  4888  0419                     u841:
  4889  0419  2C14               	goto	l3248
  4890  041A                     u840:
  4891  041A                     l3250:
  4892                           
  4893                           ;mcc_generated_files/eusart.c: 159:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
  4894  041A  0840               	movf	_eusartRxTail,w	;volatile
  4895  041B  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4896  041C  0086               	movwf	6
  4897  041D  0187               	clrf	7
  4898  041E  0801               	movf	1,w
  4899  041F  00C8               	movwf	??_EUSART_Read
  4900  0420  0848               	movf	??_EUSART_Read,w
  4901  0421  00BE               	movwf	_eusartRxLastError	;volatile
  4902                           
  4903                           ;mcc_generated_files/eusart.c: 161:     readValue = eusartRxBuffer[eusartRxTail++];
  4904  0422  0840               	movf	_eusartRxTail,w
  4905  0423  3EDD               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  4906  0424  0086               	movwf	6
  4907  0425  0187               	clrf	7
  4908  0426  0801               	movf	1,w
  4909  0427  00C8               	movwf	??_EUSART_Read
  4910  0428  0848               	movf	??_EUSART_Read,w
  4911  0429  00C9               	movwf	EUSART_Read@readValue
  4912  042A                     l3252:
  4913  042A  3001               	movlw	1
  4914  042B  00C8               	movwf	??_EUSART_Read
  4915  042C  0848               	movf	??_EUSART_Read,w
  4916  042D  07C0               	addwf	_eusartRxTail,f	;volatile
  4917  042E                     l3254:
  4918                           
  4919                           ;mcc_generated_files/eusart.c: 162:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
  4920  042E  3008               	movlw	8
  4921  042F  0240               	subwf	_eusartRxTail,w	;volatile
  4922  0430  1C03               	skipc
  4923  0431  2C33               	goto	u851
  4924  0432  2C34               	goto	u850
  4925  0433                     u851:
  4926  0433  2C35               	goto	l3258
  4927  0434                     u850:
  4928  0434                     l3256:
  4929                           
  4930                           ;mcc_generated_files/eusart.c: 163:     {;mcc_generated_files/eusart.c: 164:         eus
      +                          artRxTail = 0;
  4931  0434  01C0               	clrf	_eusartRxTail	;volatile
  4932  0435                     l3258:
  4933                           
  4934                           ;mcc_generated_files/eusart.c: 166:     PIE1bits.RCIE = 0;
  4935  0435  0021               	movlb	1	; select bank1
  4936  0436  1291               	bcf	17,5	;volatile
  4937  0437                     l3260:
  4938                           
  4939                           ;mcc_generated_files/eusart.c: 167:     eusartRxCount--;
  4940  0437  3001               	movlw	1
  4941  0438  0020               	movlb	0	; select bank0
  4942  0439  02BF               	subwf	_eusartRxCount,f	;volatile
  4943  043A                     l3262:
  4944                           
  4945                           ;mcc_generated_files/eusart.c: 168:     PIE1bits.RCIE = 1;
  4946  043A  0021               	movlb	1	; select bank1
  4947  043B  1691               	bsf	17,5	;volatile
  4948  043C                     l3264:
  4949                           
  4950                           ;mcc_generated_files/eusart.c: 170:     return readValue;
  4951  043C  0020               	movlb	0	; select bank0
  4952  043D  0849               	movf	EUSART_Read@readValue,w
  4953  043E                     l314:
  4954  043E  0008               	return
  4955  043F                     __end_of_EUSART_Read:
  4956                           
  4957                           	psect	intentry
  4958  0004                     __pintentry:	
  4959 ;; *************** function _INTERRUPT_InterruptManager *****************
  4960 ;; Defined at:
  4961 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4962 ;; Parameters:    Size  Location     Type
  4963 ;;		None
  4964 ;; Auto vars:     Size  Location     Type
  4965 ;;		None
  4966 ;; Return value:  Size  Location     Type
  4967 ;;                  1    wreg      void 
  4968 ;; Registers used:
  4969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4970 ;; Tracked objects:
  4971 ;;		On entry : 0/0
  4972 ;;		On exit  : 0/0
  4973 ;;		Unchanged: 0/0
  4974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4979 ;;Total ram usage:        0 bytes
  4980 ;; Hardware stack levels used: 1
  4981 ;; Hardware stack levels required when called: 6
  4982 ;; This function calls:
  4983 ;;		Absolute function
  4984 ;;		_EUSART_Receive_ISR
  4985 ;;		_EUSART_Transmit_ISR
  4986 ;;		_I2C_MasterIsr
  4987 ;; This function is called by:
  4988 ;;		Interrupt level 1
  4989 ;; This function uses a non-reentrant model
  4990 ;;
  4991                           
  4992  0004                     _INTERRUPT_InterruptManager:
  4993                           
  4994                           ;incstack = 0
  4995  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4996                           
  4997                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4998  0005  3180               	pagesel	$
  4999  0006                     i1l3480:
  5000                           
  5001                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  5002  0006  1F0B               	btfss	11,6	;volatile
  5003  0007  2809               	goto	u109_21
  5004  0008  280A               	goto	u109_20
  5005  0009                     u109_21:
  5006  0009  2845               	goto	i1l401
  5007  000A                     u109_20:
  5008  000A                     i1l3482:
  5009                           
  5010                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  5011  000A  0021               	movlb	1	; select bank1
  5012  000B  1E11               	btfss	17,4	;volatile
  5013  000C  280E               	goto	u110_21
  5014  000D  280F               	goto	u110_20
  5015  000E                     u110_21:
  5016  000E  281A               	goto	i1l392
  5017  000F                     u110_20:
  5018  000F                     i1l3484:
  5019  000F  0020               	movlb	0	; select bank0
  5020  0010  1E11               	btfss	17,4	;volatile
  5021  0011  2813               	goto	u111_21
  5022  0012  2814               	goto	u111_20
  5023  0013                     u111_21:
  5024  0013  281A               	goto	i1l392
  5025  0014                     u111_20:
  5026  0014                     i1l3486:
  5027                           
  5028                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
  5029  0014  0839               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  5030  0015  008A               	movwf	10
  5031  0016  0838               	movf	_EUSART_TxDefaultInterruptHandler,w
  5032  0017  000A               	callw
  5033  0018  3180               	pagesel	$
  5034                           
  5035                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  5036  0019  2845               	goto	i1l401
  5037  001A                     i1l392:	
  5038                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  5039                           
  5040  001A  0021               	movlb	1	; select bank1
  5041  001B  1E91               	btfss	17,5	;volatile
  5042  001C  281E               	goto	u112_21
  5043  001D  281F               	goto	u112_20
  5044  001E                     u112_21:
  5045  001E  282A               	goto	i1l394
  5046  001F                     u112_20:
  5047  001F                     i1l3488:
  5048  001F  0020               	movlb	0	; select bank0
  5049  0020  1E91               	btfss	17,5	;volatile
  5050  0021  2823               	goto	u113_21
  5051  0022  2824               	goto	u113_20
  5052  0023                     u113_21:
  5053  0023  282A               	goto	i1l394
  5054  0024                     u113_20:
  5055  0024                     i1l3490:
  5056                           
  5057                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
  5058  0024  0837               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  5059  0025  008A               	movwf	10
  5060  0026  0836               	movf	_EUSART_RxDefaultInterruptHandler,w
  5061  0027  000A               	callw
  5062  0028  3180               	pagesel	$
  5063                           
  5064                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  5065  0029  2845               	goto	i1l401
  5066  002A                     i1l394:	
  5067                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE2bits.BCLIE == 1 && PIR
      +                          2bits.BCLIF == 1)
  5068                           
  5069  002A  0021               	movlb	1	; select bank1
  5070  002B  1D92               	btfss	18,3	;volatile
  5071  002C  282E               	goto	u114_21
  5072  002D  282F               	goto	u114_20
  5073  002E                     u114_21:
  5074  002E  283A               	goto	i1l396
  5075  002F                     u114_20:
  5076  002F                     i1l3492:
  5077  002F  0020               	movlb	0	; select bank0
  5078  0030  1D92               	btfss	18,3	;volatile
  5079  0031  2833               	goto	u115_21
  5080  0032  2834               	goto	u115_20
  5081  0033                     u115_21:
  5082  0033  283A               	goto	i1l396
  5083  0034                     u115_20:
  5084  0034                     i1l3494:
  5085                           
  5086                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             MSSP_InterruptHandler();
  5087  0034  083D               	movf	_MSSP_InterruptHandler+1,w
  5088  0035  008A               	movwf	10
  5089  0036  083C               	movf	_MSSP_InterruptHandler,w
  5090  0037  000A               	callw
  5091  0038  3180               	pagesel	$
  5092                           
  5093                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  5094  0039  2845               	goto	i1l401
  5095  003A                     i1l396:	
  5096                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.SSPIE == 1 && PIR
      +                          1bits.SSPIF == 1)
  5097                           
  5098  003A  0021               	movlb	1	; select bank1
  5099  003B  1D91               	btfss	17,3	;volatile
  5100  003C  283E               	goto	u116_21
  5101  003D  283F               	goto	u116_20
  5102  003E                     u116_21:
  5103  003E  2845               	goto	i1l395
  5104  003F                     u116_20:
  5105  003F                     i1l3496:
  5106  003F  0020               	movlb	0	; select bank0
  5107  0040  1D91               	btfss	17,3	;volatile
  5108  0041  2843               	goto	u117_21
  5109  0042  2844               	goto	u117_20
  5110  0043                     u117_21:
  5111  0043  2845               	goto	i1l395
  5112  0044                     u117_20:
  5113  0044  2834               	goto	i1l3494
  5114  0045                     i1l395:
  5115  0045                     i1l401:
  5116  0045  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5117  0046  0009               	retfie
  5118  0047                     __end_of_INTERRUPT_InterruptManager:
  5119                           
  5120                           	psect	text22
  5121  06B5                     __ptext22:	
  5122 ;; *************** function _I2C_MasterIsr *****************
  5123 ;; Defined at:
  5124 ;;		line 318 in file "mcc_generated_files/i2c_master.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;		None
  5127 ;; Auto vars:     Size  Location     Type
  5128 ;;		None
  5129 ;; Return value:  Size  Location     Type
  5130 ;;                  1    wreg      void 
  5131 ;; Registers used:
  5132 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5133 ;; Tracked objects:
  5134 ;;		On entry : 0/0
  5135 ;;		On exit  : 0/0
  5136 ;;		Unchanged: 0/0
  5137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5142 ;;Total ram usage:        0 bytes
  5143 ;; Hardware stack levels used: 1
  5144 ;; Hardware stack levels required when called: 5
  5145 ;; This function calls:
  5146 ;;		_I2C_MasterFsm
  5147 ;; This function is called by:
  5148 ;;		_I2C_Open
  5149 ;;		_INTERRUPT_InterruptManager
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           
  5153                           
  5154                           ;psect for function _I2C_MasterIsr
  5155  06B5                     _I2C_MasterIsr:
  5156  06B5                     i1l3318:	
  5157                           ;incstack = 0
  5158                           ; Regs used in _I2C_MasterIsr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5159                           
  5160                           
  5161                           ;mcc_generated_files/i2c_master.c: 320:     I2C_MasterFsm();
  5162  06B5  3183  2364  3186   	fcall	_I2C_MasterFsm
  5163  06B8                     i1l563:
  5164  06B8  0008               	return
  5165  06B9                     __end_of_I2C_MasterIsr:
  5166                           
  5167                           	psect	text23
  5168  0364                     __ptext23:	
  5169 ;; *************** function _I2C_MasterFsm *****************
  5170 ;; Defined at:
  5171 ;;		line 323 in file "mcc_generated_files/i2c_master.c"
  5172 ;; Parameters:    Size  Location     Type
  5173 ;;		None
  5174 ;; Auto vars:     Size  Location     Type
  5175 ;;		None
  5176 ;; Return value:  Size  Location     Type
  5177 ;;                  1    wreg      void 
  5178 ;; Registers used:
  5179 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5180 ;; Tracked objects:
  5181 ;;		On entry : 0/0
  5182 ;;		On exit  : 0/0
  5183 ;;		Unchanged: 0/0
  5184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5187 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5188 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5189 ;;Total ram usage:        3 bytes
  5190 ;; Hardware stack levels used: 1
  5191 ;; Hardware stack levels required when called: 4
  5192 ;; This function calls:
  5193 ;;		_I2C_DO_ADDRESS_NACK
  5194 ;;		_I2C_DO_IDLE
  5195 ;;		_I2C_DO_RCEN
  5196 ;;		_I2C_DO_RESET
  5197 ;;		_I2C_DO_RX
  5198 ;;		_I2C_DO_RX_ACK
  5199 ;;		_I2C_DO_RX_NACK_RESTART
  5200 ;;		_I2C_DO_RX_NACK_STOP
  5201 ;;		_I2C_DO_SEND_ADR_READ
  5202 ;;		_I2C_DO_SEND_ADR_WRITE
  5203 ;;		_I2C_DO_SEND_RESTART
  5204 ;;		_I2C_DO_SEND_RESTART_READ
  5205 ;;		_I2C_DO_SEND_RESTART_WRITE
  5206 ;;		_I2C_DO_SEND_STOP
  5207 ;;		_I2C_DO_TX
  5208 ;;		_I2C_DO_TX_EMPTY
  5209 ;;		_I2C_MasterClearIrq
  5210 ;;		_I2C_MasterIsNack
  5211 ;; This function is called by:
  5212 ;;		_I2C_MasterIsr
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216                           
  5217                           ;psect for function _I2C_MasterFsm
  5218  0364                     _I2C_MasterFsm:
  5219  0364                     i1l3222:	
  5220                           ;incstack = 0
  5221                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5222                           
  5223                           
  5224                           ;mcc_generated_files/i2c_master.c: 325:     I2C_MasterClearIrq();
  5225  0364  3186  26C9  3183   	fcall	_I2C_MasterClearIrq
  5226  0367                     i1l3224:
  5227                           
  5228                           ;mcc_generated_files/i2c_master.c: 327:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  5229  0367  0021               	movlb	1	; select bank1
  5230  0368  1C5C               	btfss	(_I2C_Status^(0+128)+28),0
  5231  0369  2B6B               	goto	u81_21
  5232  036A  2B6C               	goto	u81_20
  5233  036B                     u81_21:
  5234  036B  2B7A               	goto	i1l3230
  5235  036C                     u81_20:
  5236  036C                     i1l3226:
  5237  036C  3186  2679  3183   	fcall	_I2C_MasterIsNack
  5238  036F  3A00               	xorlw	0
  5239  0370  1903               	skipnz
  5240  0371  2B73               	goto	u82_21
  5241  0372  2B74               	goto	u82_20
  5242  0373                     u82_21:
  5243  0373  2B7A               	goto	i1l3230
  5244  0374                     u82_20:
  5245  0374                     i1l3228:
  5246                           
  5247                           ;mcc_generated_files/i2c_master.c: 328:     {;mcc_generated_files/i2c_master.c: 329:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  5248  0374  300F               	movlw	15
  5249  0375  0020               	movlb	0	; select bank0
  5250  0376  00C5               	movwf	??_I2C_MasterFsm
  5251  0377  0845               	movf	??_I2C_MasterFsm,w
  5252  0378  0021               	movlb	1	; select bank1
  5253  0379  00DA               	movwf	(_I2C_Status^(0+128)+26)
  5254  037A                     i1l3230:
  5255                           
  5256                           ;mcc_generated_files/i2c_master.c: 331:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
  5257  037A  0021               	movlb	1	; select bank1
  5258  037B  085A               	movf	(_I2C_Status^(0+128)+26),w
  5259  037C  0020               	movlb	0	; select bank0
  5260  037D  00C5               	movwf	??_I2C_MasterFsm
  5261  037E  01C6               	clrf	??_I2C_MasterFsm+1
  5262  037F  35C5               	lslf	??_I2C_MasterFsm,f
  5263  0380  0DC6               	rlf	??_I2C_MasterFsm+1,f
  5264  0381  30BE               	movlw	low (_i2c_fsmStateTable| (0+32768))
  5265  0382  0745               	addwf	??_I2C_MasterFsm,w
  5266  0383  0084               	movwf	4
  5267  0384  3083               	movlw	high (_i2c_fsmStateTable| (0+32768))
  5268  0385  3D46               	addwfc	??_I2C_MasterFsm+1,w
  5269  0386  0085               	movwf	5
  5270  0387  3F01               	moviw [1]fsr0
  5271  0388  008A               	movwf	10
  5272  0389  3F00               	moviw [0]fsr0
  5273  038A  000A               	callw
  5274  038B  3183               	pagesel	$
  5275  038C  0020               	movlb	0	; select bank0
  5276  038D  00C7               	movwf	??_I2C_MasterFsm+2
  5277  038E  0847               	movf	??_I2C_MasterFsm+2,w
  5278  038F  0021               	movlb	1	; select bank1
  5279  0390  00DA               	movwf	(_I2C_Status^(0+128)+26)
  5280  0391                     i1l567:
  5281  0391  0008               	return
  5282  0392                     __end_of_I2C_MasterFsm:
  5283                           
  5284                           	psect	text24
  5285  06C9                     __ptext24:	
  5286 ;; *************** function _I2C_MasterClearIrq *****************
  5287 ;; Defined at:
  5288 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
  5289 ;; Parameters:    Size  Location     Type
  5290 ;;		None
  5291 ;; Auto vars:     Size  Location     Type
  5292 ;;		None
  5293 ;; Return value:  Size  Location     Type
  5294 ;;                  1    wreg      void 
  5295 ;; Registers used:
  5296 ;;		None
  5297 ;; Tracked objects:
  5298 ;;		On entry : 0/0
  5299 ;;		On exit  : 0/0
  5300 ;;		Unchanged: 0/0
  5301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5306 ;;Total ram usage:        0 bytes
  5307 ;; Hardware stack levels used: 1
  5308 ;; This function calls:
  5309 ;;		Nothing
  5310 ;; This function is called by:
  5311 ;;		_I2C_MasterFsm
  5312 ;;		_I2C_Open
  5313 ;;		_I2C_Close
  5314 ;; This function uses a non-reentrant model
  5315 ;;
  5316                           
  5317                           
  5318                           ;psect for function _I2C_MasterClearIrq
  5319  06C9                     _I2C_MasterClearIrq:
  5320  06C9                     i1l2946:	
  5321                           ;incstack = 0
  5322                           ; Regs used in _I2C_MasterClearIrq: []
  5323                           
  5324                           
  5325                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
  5326  06C9  0020               	movlb	0	; select bank0
  5327  06CA  1191               	bcf	17,3	;volatile
  5328  06CB                     i1l730:
  5329  06CB  0008               	return
  5330  06CC                     __end_of_I2C_MasterClearIrq:
  5331                           
  5332                           	psect	text25
  5333  0392                     __ptext25:	
  5334 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  5335 ;; Defined at:
  5336 ;;		line 501 in file "mcc_generated_files/i2c_master.c"
  5337 ;; Parameters:    Size  Location     Type
  5338 ;;		None
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;		None
  5341 ;; Return value:  Size  Location     Type
  5342 ;;                  1    wreg      enum E3338
  5343 ;; Registers used:
  5344 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5345 ;; Tracked objects:
  5346 ;;		On entry : 0/0
  5347 ;;		On exit  : 0/0
  5348 ;;		Unchanged: 0/0
  5349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5352 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5353 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5354 ;;Total ram usage:        3 bytes
  5355 ;; Hardware stack levels used: 1
  5356 ;; Hardware stack levels required when called: 3
  5357 ;; This function calls:
  5358 ;;		Absolute function
  5359 ;;		_I2C_CallbackReturnReset
  5360 ;;		_I2C_CallbackReturnStop
  5361 ;;		_I2C_DO_SEND_RESTART
  5362 ;;		_I2C_DO_SEND_STOP
  5363 ;;		_rd1RegCompleteHandler
  5364 ;;		_rd2RegCompleteHandler
  5365 ;;		_rdBlkRegCompleteHandler
  5366 ;;		_wr1RegCompleteHandler
  5367 ;;		_wr2RegCompleteHandler
  5368 ;; This function is called by:
  5369 ;;		_I2C_MasterFsm
  5370 ;; This function uses a non-reentrant model
  5371 ;;
  5372                           
  5373                           
  5374                           ;psect for function _I2C_DO_ADDRESS_NACK
  5375  0392                     _I2C_DO_ADDRESS_NACK:
  5376  0392                     i1l3086:	
  5377                           ;incstack = 0
  5378                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5379                           
  5380                           
  5381                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.addressNackCheck = 0;
  5382  0392  0021               	movlb	1	; select bank1
  5383  0393  105C               	bcf	(_I2C_Status^(0+128)+28),0
  5384  0394                     i1l3088:
  5385                           
  5386                           ;mcc_generated_files/i2c_master.c: 504:     I2C_Status.error = I2C_FAIL;
  5387  0394  3002               	movlw	2
  5388  0395  00FA               	movwf	??_I2C_DO_ADDRESS_NACK
  5389  0396  087A               	movf	??_I2C_DO_ADDRESS_NACK,w
  5390  0397  00DB               	movwf	(_I2C_Status^(0+128)+27)
  5391                           
  5392                           ;mcc_generated_files/i2c_master.c: 505:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  5393  0398  2BA1               	goto	i1l3100
  5394  0399                     i1l3090:
  5395                           
  5396                           ;mcc_generated_files/i2c_master.c: 509:             return I2C_DO_SEND_RESTART();
  5397  0399  3186  2698  3183   	fcall	_I2C_DO_SEND_RESTART
  5398  039C  2BBD               	goto	i1l658
  5399  039D                     i1l3094:
  5400                           
  5401                           ;mcc_generated_files/i2c_master.c: 511:             return I2C_DO_SEND_STOP();
  5402  039D  3186  2693  3183   	fcall	_I2C_DO_SEND_STOP
  5403  03A0  2BBD               	goto	i1l658
  5404  03A1                     i1l3100:
  5405  03A1  084E               	movf	(low ((_I2C_Status| 0+14)))^(0+128),w
  5406  03A2  00FA               	movwf	??_I2C_DO_ADDRESS_NACK
  5407  03A3  087A               	movf	??_I2C_DO_ADDRESS_NACK,w
  5408  03A4  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  5409  03A5  3004               	movlw	4
  5410  03A6  3EC0               	addlw	(low (_I2C_Status| 0))& (0+255)
  5411  03A7  0086               	movwf	6
  5412  03A8  0187               	clrf	7
  5413  03A9  3F41               	moviw [1]fsr1
  5414  03AA  008A               	movwf	10
  5415  03AB  3F40               	moviw [0]fsr1
  5416  03AC  000A               	callw
  5417  03AD  3183               	pagesel	$
  5418  03AE  00FB               	movwf	??_I2C_DO_ADDRESS_NACK+1
  5419  03AF  01FC               	clrf	??_I2C_DO_ADDRESS_NACK+2
  5420                           
  5421                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5422                           ; Switch size 1, requested type "simple"
  5423                           ; Number of cases is 1, Range of values is 0 to 0
  5424                           ; switch strategies available:
  5425                           ; Name         Instructions Cycles
  5426                           ; simple_byte            4     3 (average)
  5427                           ; direct_byte            8     6 (fixed)
  5428                           ; jumptable            260     6 (fixed)
  5429                           ;	Chosen strategy is simple_byte
  5430  03B0  087C               	movf	??_I2C_DO_ADDRESS_NACK+2,w
  5431  03B1  3A00               	xorlw	0	; case 0
  5432  03B2  1903               	skipnz
  5433  03B3  2BB5               	goto	i1l3796
  5434  03B4  2B9D               	goto	i1l3094
  5435  03B5                     i1l3796:
  5436                           
  5437                           ; Switch size 1, requested type "simple"
  5438                           ; Number of cases is 2, Range of values is 2 to 3
  5439                           ; switch strategies available:
  5440                           ; Name         Instructions Cycles
  5441                           ; simple_byte            7     4 (average)
  5442                           ; direct_byte           13     9 (fixed)
  5443                           ; jumptable            263     9 (fixed)
  5444                           ;	Chosen strategy is simple_byte
  5445  03B5  087B               	movf	??_I2C_DO_ADDRESS_NACK+1,w
  5446  03B6  3A02               	xorlw	2	; case 2
  5447  03B7  1903               	skipnz
  5448  03B8  2B99               	goto	i1l3090
  5449  03B9  3A01               	xorlw	1	; case 3
  5450  03BA  1903               	skipnz
  5451  03BB  2B99               	goto	i1l3090
  5452  03BC  2B9D               	goto	i1l3094
  5453  03BD                     i1l658:
  5454  03BD  0008               	return
  5455  03BE                     __end_of_I2C_DO_ADDRESS_NACK:
  5456                           
  5457                           	psect	text26
  5458  067F                     __ptext26:	
  5459 ;; *************** function _I2C_DO_RESET *****************
  5460 ;; Defined at:
  5461 ;;		line 495 in file "mcc_generated_files/i2c_master.c"
  5462 ;; Parameters:    Size  Location     Type
  5463 ;;		None
  5464 ;; Auto vars:     Size  Location     Type
  5465 ;;		None
  5466 ;; Return value:  Size  Location     Type
  5467 ;;                  1    wreg      enum E3338
  5468 ;; Registers used:
  5469 ;;		wreg, status,2
  5470 ;; Tracked objects:
  5471 ;;		On entry : 0/0
  5472 ;;		On exit  : 0/0
  5473 ;;		Unchanged: 0/0
  5474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5479 ;;Total ram usage:        0 bytes
  5480 ;; Hardware stack levels used: 1
  5481 ;; This function calls:
  5482 ;;		Nothing
  5483 ;; This function is called by:
  5484 ;;		_I2C_MasterFsm
  5485 ;; This function uses a non-reentrant model
  5486 ;;
  5487                           
  5488                           
  5489                           ;psect for function _I2C_DO_RESET
  5490  067F                     _I2C_DO_RESET:
  5491  067F                     i1l3078:	
  5492                           ;incstack = 0
  5493                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
  5494                           
  5495                           
  5496                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.busy = 0;
  5497  067F  0021               	movlb	1	; select bank1
  5498  0680  10DC               	bcf	(_I2C_Status^(0+128)+28),1
  5499  0681                     i1l3080:
  5500                           
  5501                           ;mcc_generated_files/i2c_master.c: 498:     I2C_Status.error = I2C_NOERR;
  5502  0681  01DB               	clrf	(_I2C_Status^(0+128)+27)
  5503  0682                     i1l3082:
  5504                           
  5505                           ;mcc_generated_files/i2c_master.c: 499:     return I2C_RESET;
  5506  0682  300E               	movlw	14
  5507  0683                     i1l652:
  5508  0683  0008               	return
  5509  0684                     __end_of_I2C_DO_RESET:
  5510                           
  5511                           	psect	text27
  5512  0684                     __ptext27:	
  5513 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  5514 ;; Defined at:
  5515 ;;		line 489 in file "mcc_generated_files/i2c_master.c"
  5516 ;; Parameters:    Size  Location     Type
  5517 ;;		None
  5518 ;; Auto vars:     Size  Location     Type
  5519 ;;		None
  5520 ;; Return value:  Size  Location     Type
  5521 ;;                  1    wreg      enum E3338
  5522 ;; Registers used:
  5523 ;;		wreg, status,2, status,0, pclath, cstack
  5524 ;; Tracked objects:
  5525 ;;		On entry : 0/0
  5526 ;;		On exit  : 0/0
  5527 ;;		Unchanged: 0/0
  5528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5533 ;;Total ram usage:        0 bytes
  5534 ;; Hardware stack levels used: 1
  5535 ;; Hardware stack levels required when called: 1
  5536 ;; This function calls:
  5537 ;;		_I2C_MasterSendNack
  5538 ;; This function is called by:
  5539 ;;		_I2C_DO_RX
  5540 ;;		_I2C_MasterFsm
  5541 ;; This function uses a non-reentrant model
  5542 ;;
  5543                           
  5544                           
  5545                           ;psect for function _I2C_DO_RX_NACK_RESTART
  5546  0684                     _I2C_DO_RX_NACK_RESTART:
  5547  0684                     i1l2882:	
  5548                           ;incstack = 0
  5549                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  5550                           
  5551                           
  5552                           ;mcc_generated_files/i2c_master.c: 491:     I2C_MasterSendNack();
  5553  0684  3186  26BD  3186   	fcall	_I2C_MasterSendNack
  5554  0687                     i1l2884:
  5555                           
  5556                           ;mcc_generated_files/i2c_master.c: 492:     return I2C_SEND_RESTART;
  5557  0687  3009               	movlw	9
  5558  0688                     i1l649:
  5559  0688  0008               	return
  5560  0689                     __end_of_I2C_DO_RX_NACK_RESTART:
  5561                           
  5562                           	psect	text28
  5563  0689                     __ptext28:	
  5564 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  5565 ;; Defined at:
  5566 ;;		line 483 in file "mcc_generated_files/i2c_master.c"
  5567 ;; Parameters:    Size  Location     Type
  5568 ;;		None
  5569 ;; Auto vars:     Size  Location     Type
  5570 ;;		None
  5571 ;; Return value:  Size  Location     Type
  5572 ;;                  1    wreg      enum E3338
  5573 ;; Registers used:
  5574 ;;		wreg, status,2, status,0, pclath, cstack
  5575 ;; Tracked objects:
  5576 ;;		On entry : 0/0
  5577 ;;		On exit  : 0/0
  5578 ;;		Unchanged: 0/0
  5579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5584 ;;Total ram usage:        0 bytes
  5585 ;; Hardware stack levels used: 1
  5586 ;; Hardware stack levels required when called: 1
  5587 ;; This function calls:
  5588 ;;		_I2C_MasterSendNack
  5589 ;; This function is called by:
  5590 ;;		_I2C_DO_RX
  5591 ;;		_I2C_MasterFsm
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595                           
  5596                           ;psect for function _I2C_DO_RX_NACK_STOP
  5597  0689                     _I2C_DO_RX_NACK_STOP:
  5598  0689                     i1l2888:	
  5599                           ;incstack = 0
  5600                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  5601                           
  5602                           
  5603                           ;mcc_generated_files/i2c_master.c: 485:     I2C_MasterSendNack();
  5604  0689  3186  26BD  3186   	fcall	_I2C_MasterSendNack
  5605  068C                     i1l2890:
  5606                           
  5607                           ;mcc_generated_files/i2c_master.c: 486:     return I2C_SEND_STOP;
  5608  068C  300A               	movlw	10
  5609  068D                     i1l646:
  5610  068D  0008               	return
  5611  068E                     __end_of_I2C_DO_RX_NACK_STOP:
  5612                           
  5613                           	psect	text29
  5614  068E                     __ptext29:	
  5615 ;; *************** function _I2C_DO_RX_ACK *****************
  5616 ;; Defined at:
  5617 ;;		line 476 in file "mcc_generated_files/i2c_master.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;		None
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;		None
  5622 ;; Return value:  Size  Location     Type
  5623 ;;                  1    wreg      enum E3338
  5624 ;; Registers used:
  5625 ;;		wreg, status,2, status,0, pclath, cstack
  5626 ;; Tracked objects:
  5627 ;;		On entry : 0/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5635 ;;Total ram usage:        0 bytes
  5636 ;; Hardware stack levels used: 1
  5637 ;; Hardware stack levels required when called: 1
  5638 ;; This function calls:
  5639 ;;		_I2C_MasterSendAck
  5640 ;; This function is called by:
  5641 ;;		_I2C_MasterFsm
  5642 ;; This function uses a non-reentrant model
  5643 ;;
  5644                           
  5645                           
  5646                           ;psect for function _I2C_DO_RX_ACK
  5647  068E                     _I2C_DO_RX_ACK:
  5648  068E                     i1l3072:	
  5649                           ;incstack = 0
  5650                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
  5651                           
  5652                           
  5653                           ;mcc_generated_files/i2c_master.c: 478:     I2C_MasterSendAck();
  5654  068E  3186  26B9  3186   	fcall	_I2C_MasterSendAck
  5655  0691                     i1l3074:
  5656                           
  5657                           ;mcc_generated_files/i2c_master.c: 479:     return I2C_RCEN;
  5658  0691  3005               	movlw	5
  5659  0692                     i1l643:
  5660  0692  0008               	return
  5661  0693                     __end_of_I2C_DO_RX_ACK:
  5662                           
  5663                           	psect	text30
  5664  0693                     __ptext30:	
  5665 ;; *************** function _I2C_DO_SEND_STOP *****************
  5666 ;; Defined at:
  5667 ;;		line 470 in file "mcc_generated_files/i2c_master.c"
  5668 ;; Parameters:    Size  Location     Type
  5669 ;;		None
  5670 ;; Auto vars:     Size  Location     Type
  5671 ;;		None
  5672 ;; Return value:  Size  Location     Type
  5673 ;;                  1    wreg      enum E3338
  5674 ;; Registers used:
  5675 ;;		wreg, status,2, status,0, pclath, cstack
  5676 ;; Tracked objects:
  5677 ;;		On entry : 0/0
  5678 ;;		On exit  : 0/0
  5679 ;;		Unchanged: 0/0
  5680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5685 ;;Total ram usage:        0 bytes
  5686 ;; Hardware stack levels used: 1
  5687 ;; Hardware stack levels required when called: 1
  5688 ;; This function calls:
  5689 ;;		_I2C_MasterStop
  5690 ;; This function is called by:
  5691 ;;		_I2C_DO_TX
  5692 ;;		_I2C_DO_TX_EMPTY
  5693 ;;		_I2C_DO_ADDRESS_NACK
  5694 ;;		_I2C_MasterFsm
  5695 ;; This function uses a non-reentrant model
  5696 ;;
  5697                           
  5698                           
  5699                           ;psect for function _I2C_DO_SEND_STOP
  5700  0693                     _I2C_DO_SEND_STOP:
  5701  0693                     i1l2870:	
  5702                           ;incstack = 0
  5703                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  5704                           
  5705                           
  5706                           ;mcc_generated_files/i2c_master.c: 472:     I2C_MasterStop();
  5707  0693  3186  26D5  3186   	fcall	_I2C_MasterStop
  5708  0696                     i1l2872:
  5709                           
  5710                           ;mcc_generated_files/i2c_master.c: 473:     return I2C_IDLE;
  5711  0696  3000               	movlw	0
  5712  0697                     i1l640:
  5713  0697  0008               	return
  5714  0698                     __end_of_I2C_DO_SEND_STOP:
  5715                           
  5716                           	psect	text31
  5717  0698                     __ptext31:	
  5718 ;; *************** function _I2C_DO_SEND_RESTART *****************
  5719 ;; Defined at:
  5720 ;;		line 464 in file "mcc_generated_files/i2c_master.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;		None
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;		None
  5725 ;; Return value:  Size  Location     Type
  5726 ;;                  1    wreg      enum E3338
  5727 ;; Registers used:
  5728 ;;		wreg, status,2, status,0, pclath, cstack
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5738 ;;Total ram usage:        0 bytes
  5739 ;; Hardware stack levels used: 1
  5740 ;; Hardware stack levels required when called: 1
  5741 ;; This function calls:
  5742 ;;		_I2C_MasterEnableRestart
  5743 ;; This function is called by:
  5744 ;;		_I2C_DO_TX_EMPTY
  5745 ;;		_I2C_DO_ADDRESS_NACK
  5746 ;;		_I2C_MasterFsm
  5747 ;; This function uses a non-reentrant model
  5748 ;;
  5749                           
  5750                           
  5751                           ;psect for function _I2C_DO_SEND_RESTART
  5752  0698                     _I2C_DO_SEND_RESTART:
  5753  0698                     i1l2896:	
  5754                           ;incstack = 0
  5755                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  5756                           
  5757                           
  5758                           ;mcc_generated_files/i2c_master.c: 466:     I2C_MasterEnableRestart();
  5759  0698  3186  26D8  3186   	fcall	_I2C_MasterEnableRestart
  5760  069B                     i1l2898:
  5761                           
  5762                           ;mcc_generated_files/i2c_master.c: 467:     return I2C_SEND_ADR_READ;
  5763  069B  3001               	movlw	1
  5764  069C                     i1l637:
  5765  069C  0008               	return
  5766  069D                     __end_of_I2C_DO_SEND_RESTART:
  5767                           
  5768                           	psect	text32
  5769  069D                     __ptext32:	
  5770 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  5771 ;; Defined at:
  5772 ;;		line 457 in file "mcc_generated_files/i2c_master.c"
  5773 ;; Parameters:    Size  Location     Type
  5774 ;;		None
  5775 ;; Auto vars:     Size  Location     Type
  5776 ;;		None
  5777 ;; Return value:  Size  Location     Type
  5778 ;;                  1    wreg      enum E3338
  5779 ;; Registers used:
  5780 ;;		wreg, status,2, status,0, pclath, cstack
  5781 ;; Tracked objects:
  5782 ;;		On entry : 0/0
  5783 ;;		On exit  : 0/0
  5784 ;;		Unchanged: 0/0
  5785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5790 ;;Total ram usage:        0 bytes
  5791 ;; Hardware stack levels used: 1
  5792 ;; Hardware stack levels required when called: 1
  5793 ;; This function calls:
  5794 ;;		_I2C_MasterEnableRestart
  5795 ;; This function is called by:
  5796 ;;		_I2C_DO_TX
  5797 ;;		_I2C_MasterFsm
  5798 ;; This function uses a non-reentrant model
  5799 ;;
  5800                           
  5801                           
  5802                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
  5803  069D                     _I2C_DO_SEND_RESTART_WRITE:
  5804  069D                     i1l2864:	
  5805                           ;incstack = 0
  5806                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  5807                           
  5808                           
  5809                           ;mcc_generated_files/i2c_master.c: 459:     I2C_MasterEnableRestart();
  5810  069D  3186  26D8  3186   	fcall	_I2C_MasterEnableRestart
  5811  06A0                     i1l2866:
  5812                           
  5813                           ;mcc_generated_files/i2c_master.c: 460:     return I2C_SEND_ADR_WRITE;
  5814  06A0  3002               	movlw	2
  5815  06A1                     i1l634:
  5816  06A1  0008               	return
  5817  06A2                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  5818                           
  5819                           	psect	text33
  5820  06A2                     __ptext33:	
  5821 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  5822 ;; Defined at:
  5823 ;;		line 451 in file "mcc_generated_files/i2c_master.c"
  5824 ;; Parameters:    Size  Location     Type
  5825 ;;		None
  5826 ;; Auto vars:     Size  Location     Type
  5827 ;;		None
  5828 ;; Return value:  Size  Location     Type
  5829 ;;                  1    wreg      enum E3338
  5830 ;; Registers used:
  5831 ;;		wreg, status,2, status,0, pclath, cstack
  5832 ;; Tracked objects:
  5833 ;;		On entry : 0/0
  5834 ;;		On exit  : 0/0
  5835 ;;		Unchanged: 0/0
  5836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5841 ;;Total ram usage:        0 bytes
  5842 ;; Hardware stack levels used: 1
  5843 ;; Hardware stack levels required when called: 1
  5844 ;; This function calls:
  5845 ;;		_I2C_MasterEnableRestart
  5846 ;; This function is called by:
  5847 ;;		_I2C_DO_TX
  5848 ;;		_I2C_MasterFsm
  5849 ;; This function uses a non-reentrant model
  5850 ;;
  5851                           
  5852                           
  5853                           ;psect for function _I2C_DO_SEND_RESTART_READ
  5854  06A2                     _I2C_DO_SEND_RESTART_READ:
  5855  06A2                     i1l2858:	
  5856                           ;incstack = 0
  5857                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  5858                           
  5859                           
  5860                           ;mcc_generated_files/i2c_master.c: 453:     I2C_MasterEnableRestart();
  5861  06A2  3186  26D8  3186   	fcall	_I2C_MasterEnableRestart
  5862  06A5                     i1l2860:
  5863                           
  5864                           ;mcc_generated_files/i2c_master.c: 454:     return I2C_SEND_ADR_READ;
  5865  06A5  3001               	movlw	1
  5866  06A6                     i1l631:
  5867  06A6  0008               	return
  5868  06A7                     __end_of_I2C_DO_SEND_RESTART_READ:
  5869                           
  5870                           	psect	text34
  5871  064E                     __ptext34:	
  5872 ;; *************** function _I2C_DO_RCEN *****************
  5873 ;; Defined at:
  5874 ;;		line 404 in file "mcc_generated_files/i2c_master.c"
  5875 ;; Parameters:    Size  Location     Type
  5876 ;;		None
  5877 ;; Auto vars:     Size  Location     Type
  5878 ;;		None
  5879 ;; Return value:  Size  Location     Type
  5880 ;;                  1    wreg      enum E3338
  5881 ;; Registers used:
  5882 ;;		wreg, status,2, status,0, pclath, cstack
  5883 ;; Tracked objects:
  5884 ;;		On entry : 0/0
  5885 ;;		On exit  : 0/0
  5886 ;;		Unchanged: 0/0
  5887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5892 ;;Total ram usage:        0 bytes
  5893 ;; Hardware stack levels used: 1
  5894 ;; Hardware stack levels required when called: 1
  5895 ;; This function calls:
  5896 ;;		_I2C_MasterStartRx
  5897 ;; This function is called by:
  5898 ;;		_I2C_MasterFsm
  5899 ;; This function uses a non-reentrant model
  5900 ;;
  5901                           
  5902                           
  5903                           ;psect for function _I2C_DO_RCEN
  5904  064E                     _I2C_DO_RCEN:
  5905  064E                     i1l3038:	
  5906                           ;incstack = 0
  5907                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
  5908                           
  5909                           
  5910                           ;mcc_generated_files/i2c_master.c: 406:     I2C_Status.addressNackCheck = 0;
  5911  064E  0021               	movlb	1	; select bank1
  5912  064F  105C               	bcf	(_I2C_Status^(0+128)+28),0
  5913  0650                     i1l3040:
  5914                           
  5915                           ;mcc_generated_files/i2c_master.c: 407:     I2C_MasterStartRx();
  5916  0650  3186  26D2  3186   	fcall	_I2C_MasterStartRx
  5917  0653                     i1l3042:
  5918                           
  5919                           ;mcc_generated_files/i2c_master.c: 408:     return I2C_RX;
  5920  0653  3004               	movlw	4
  5921  0654                     i1l607:
  5922  0654  0008               	return
  5923  0655                     __end_of_I2C_DO_RCEN:
  5924                           
  5925                           	psect	text35
  5926  022F                     __ptext35:	
  5927 ;; *************** function _I2C_DO_RX *****************
  5928 ;; Defined at:
  5929 ;;		line 380 in file "mcc_generated_files/i2c_master.c"
  5930 ;; Parameters:    Size  Location     Type
  5931 ;;		None
  5932 ;; Auto vars:     Size  Location     Type
  5933 ;;		None
  5934 ;; Return value:  Size  Location     Type
  5935 ;;                  1    wreg      enum E3338
  5936 ;; Registers used:
  5937 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5938 ;; Tracked objects:
  5939 ;;		On entry : 0/0
  5940 ;;		On exit  : 0/0
  5941 ;;		Unchanged: 0/0
  5942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5945 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5946 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5947 ;;Total ram usage:        3 bytes
  5948 ;; Hardware stack levels used: 1
  5949 ;; Hardware stack levels required when called: 3
  5950 ;; This function calls:
  5951 ;;		Absolute function
  5952 ;;		_I2C_CallbackReturnReset
  5953 ;;		_I2C_CallbackReturnStop
  5954 ;;		_I2C_DO_RX_NACK_RESTART
  5955 ;;		_I2C_DO_RX_NACK_STOP
  5956 ;;		_I2C_MasterGetRxData
  5957 ;;		_I2C_MasterSendAck
  5958 ;;		_rd1RegCompleteHandler
  5959 ;;		_rd2RegCompleteHandler
  5960 ;;		_rdBlkRegCompleteHandler
  5961 ;;		_wr1RegCompleteHandler
  5962 ;;		_wr2RegCompleteHandler
  5963 ;; This function is called by:
  5964 ;;		_I2C_MasterFsm
  5965 ;; This function uses a non-reentrant model
  5966 ;;
  5967                           
  5968                           
  5969                           ;psect for function _I2C_DO_RX
  5970  022F                     _I2C_DO_RX:
  5971  022F                     i1l3006:	
  5972                           ;incstack = 0
  5973                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5974                           
  5975                           
  5976                           ;mcc_generated_files/i2c_master.c: 382:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  5977  022F  3186  26CF  3182   	fcall	_I2C_MasterGetRxData
  5978  0232  00FA               	movwf	??_I2C_DO_RX
  5979  0233  0021               	movlb	1	; select bank1
  5980  0234  0857               	movf	(low ((_I2C_Status| 0+23)))^(0+128),w
  5981  0235  0086               	movwf	6
  5982  0236  0187               	clrf	7
  5983  0237  087A               	movf	??_I2C_DO_RX,w
  5984  0238  0081               	movwf	1
  5985  0239                     i1l3008:
  5986  0239  3001               	movlw	1
  5987  023A  00FA               	movwf	??_I2C_DO_RX
  5988  023B  087A               	movf	??_I2C_DO_RX,w
  5989  023C  07D7               	addwf	(low ((_I2C_Status| 0+23)))^(0+128),f
  5990  023D                     i1l3010:
  5991                           
  5992                           ;mcc_generated_files/i2c_master.c: 383:     if(--I2C_Status.data_length)
  5993  023D  3001               	movlw	1
  5994  023E  02D8               	subwf	(_I2C_Status^(0+128)+24),f
  5995  023F  3000               	movlw	0
  5996  0240  3BD9               	subwfb	((_I2C_Status+1)^(0+128)+24),f
  5997  0241  0858               	movf	(_I2C_Status^(0+128)+24),w
  5998  0242  0459               	iorwf	((_I2C_Status+1)^(0+128)+24),w
  5999  0243  1903               	btfsc	3,2
  6000  0244  2A46               	goto	u77_21
  6001  0245  2A47               	goto	u77_20
  6002  0246                     u77_21:
  6003  0246  2A4C               	goto	i1l595
  6004  0247                     u77_20:
  6005  0247                     i1l3012:
  6006                           
  6007                           ;mcc_generated_files/i2c_master.c: 384:     {;mcc_generated_files/i2c_master.c: 385:    
      +                               I2C_MasterSendAck();
  6008  0247  3186  26B9  3182   	fcall	_I2C_MasterSendAck
  6009  024A                     i1l3014:
  6010                           
  6011                           ;mcc_generated_files/i2c_master.c: 386:         return I2C_RCEN;
  6012  024A  3005               	movlw	5
  6013  024B  2A74               	goto	i1l596
  6014  024C                     i1l595:	
  6015                           ;mcc_generated_files/i2c_master.c: 388:     else
  6016                           
  6017                           
  6018                           ;mcc_generated_files/i2c_master.c: 389:     {;mcc_generated_files/i2c_master.c: 390:    
      +                               I2C_Status.bufferFree = 1;
  6019  024C  15DC               	bsf	(_I2C_Status^(0+128)+28),3
  6020                           
  6021                           ;mcc_generated_files/i2c_master.c: 391:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  6022  024D  2A56               	goto	i1l3030
  6023  024E                     i1l3020:
  6024                           
  6025                           ;mcc_generated_files/i2c_master.c: 395:                 return I2C_DO_RX_NACK_RESTART();
  6026  024E  3186  2684  3182   	fcall	_I2C_DO_RX_NACK_RESTART
  6027  0251  2A74               	goto	i1l596
  6028  0252                     i1l3024:
  6029                           
  6030                           ;mcc_generated_files/i2c_master.c: 399:                 return I2C_DO_RX_NACK_STOP();
  6031  0252  3186  2689  3182   	fcall	_I2C_DO_RX_NACK_STOP
  6032  0255  2A74               	goto	i1l596
  6033  0256                     i1l3030:
  6034  0256  084C               	movf	(low ((_I2C_Status| 0+12)))^(0+128),w
  6035  0257  00FA               	movwf	??_I2C_DO_RX
  6036  0258  087A               	movf	??_I2C_DO_RX,w
  6037  0259  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  6038  025A  0841               	movf	(_I2C_Status+1)^(0+128),w
  6039  025B  008A               	movwf	10
  6040  025C  0840               	movf	_I2C_Status^(0+128),w
  6041  025D  000A               	callw
  6042  025E  3182               	pagesel	$
  6043  025F  00FB               	movwf	??_I2C_DO_RX+1
  6044  0260  01FC               	clrf	??_I2C_DO_RX+2
  6045                           
  6046                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6047                           ; Switch size 1, requested type "simple"
  6048                           ; Number of cases is 1, Range of values is 0 to 0
  6049                           ; switch strategies available:
  6050                           ; Name         Instructions Cycles
  6051                           ; simple_byte            4     3 (average)
  6052                           ; direct_byte            8     6 (fixed)
  6053                           ; jumptable            260     6 (fixed)
  6054                           ;	Chosen strategy is simple_byte
  6055  0261  087C               	movf	??_I2C_DO_RX+2,w
  6056  0262  3A00               	xorlw	0	; case 0
  6057  0263  1903               	skipnz
  6058  0264  2A66               	goto	i1l3798
  6059  0265  2A52               	goto	i1l3024
  6060  0266                     i1l3798:
  6061                           
  6062                           ; Switch size 1, requested type "simple"
  6063                           ; Number of cases is 4, Range of values is 1 to 4
  6064                           ; switch strategies available:
  6065                           ; Name         Instructions Cycles
  6066                           ; simple_byte           13     7 (average)
  6067                           ; direct_byte           17     9 (fixed)
  6068                           ; jumptable            263     9 (fixed)
  6069                           ;	Chosen strategy is simple_byte
  6070  0266  087B               	movf	??_I2C_DO_RX+1,w
  6071  0267  3A01               	xorlw	1	; case 1
  6072  0268  1903               	skipnz
  6073  0269  2A52               	goto	i1l3024
  6074  026A  3A03               	xorlw	3	; case 2
  6075  026B  1903               	skipnz
  6076  026C  2A4E               	goto	i1l3020
  6077  026D  3A01               	xorlw	1	; case 3
  6078  026E  1903               	skipnz
  6079  026F  2A4E               	goto	i1l3020
  6080  0270  3A07               	xorlw	7	; case 4
  6081  0271  1903               	skipnz
  6082  0272  2A52               	goto	i1l3024
  6083  0273  2A52               	goto	i1l3024
  6084  0274                     i1l596:
  6085  0274  0008               	return
  6086  0275                     __end_of_I2C_DO_RX:
  6087                           
  6088                           	psect	text36
  6089  01DA                     __ptext36:	
  6090 ;; *************** function _I2C_DO_TX *****************
  6091 ;; Defined at:
  6092 ;;		line 356 in file "mcc_generated_files/i2c_master.c"
  6093 ;; Parameters:    Size  Location     Type
  6094 ;;		None
  6095 ;; Auto vars:     Size  Location     Type
  6096 ;;		None
  6097 ;; Return value:  Size  Location     Type
  6098 ;;                  1    wreg      enum E3338
  6099 ;; Registers used:
  6100 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6101 ;; Tracked objects:
  6102 ;;		On entry : 0/0
  6103 ;;		On exit  : 0/0
  6104 ;;		Unchanged: 0/0
  6105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6108 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6109 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6110 ;;Total ram usage:        3 bytes
  6111 ;; Hardware stack levels used: 1
  6112 ;; Hardware stack levels required when called: 3
  6113 ;; This function calls:
  6114 ;;		Absolute function
  6115 ;;		_I2C_CallbackReturnReset
  6116 ;;		_I2C_CallbackReturnStop
  6117 ;;		_I2C_DO_SEND_RESTART_READ
  6118 ;;		_I2C_DO_SEND_RESTART_WRITE
  6119 ;;		_I2C_DO_SEND_STOP
  6120 ;;		_I2C_MasterIsNack
  6121 ;;		_I2C_MasterSendTxData
  6122 ;;		_rd1RegCompleteHandler
  6123 ;;		_rd2RegCompleteHandler
  6124 ;;		_rdBlkRegCompleteHandler
  6125 ;;		_wr1RegCompleteHandler
  6126 ;;		_wr2RegCompleteHandler
  6127 ;; This function is called by:
  6128 ;;		_I2C_MasterFsm
  6129 ;; This function uses a non-reentrant model
  6130 ;;
  6131                           
  6132                           
  6133                           ;psect for function _I2C_DO_TX
  6134  01DA                     _I2C_DO_TX:
  6135  01DA                     i1l2972:	
  6136                           ;incstack = 0
  6137                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6138                           
  6139                           
  6140                           ;mcc_generated_files/i2c_master.c: 358:     if(I2C_MasterIsNack())
  6141  01DA  3186  2679  3181   	fcall	_I2C_MasterIsNack
  6142  01DD  3A00               	xorlw	0
  6143  01DE  1903               	skipnz
  6144  01DF  29E1               	goto	u75_21
  6145  01E0  29E2               	goto	u75_20
  6146  01E1                     u75_21:
  6147  01E1  2A12               	goto	i1l579
  6148  01E2                     u75_20:
  6149  01E2  29EF               	goto	i1l2990
  6150  01E3                     i1l2976:
  6151                           
  6152                           ;mcc_generated_files/i2c_master.c: 363:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  6153  01E3  3186  26A2  3181   	fcall	_I2C_DO_SEND_RESTART_READ
  6154  01E6  2A2E               	goto	i1l582
  6155  01E7                     i1l2980:
  6156                           
  6157                           ;mcc_generated_files/i2c_master.c: 365:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  6158  01E7  3186  269D  3181   	fcall	_I2C_DO_SEND_RESTART_WRITE
  6159  01EA  2A2E               	goto	i1l582
  6160  01EB                     i1l2984:
  6161                           
  6162                           ;mcc_generated_files/i2c_master.c: 369:                 return I2C_DO_SEND_STOP();
  6163  01EB  3186  2693  3181   	fcall	_I2C_DO_SEND_STOP
  6164  01EE  2A2E               	goto	i1l582
  6165  01EF                     i1l2990:
  6166  01EF  0021               	movlb	1	; select bank1
  6167  01F0  084F               	movf	(low ((_I2C_Status| 0+15)))^(0+128),w
  6168  01F1  00FA               	movwf	??_I2C_DO_TX
  6169  01F2  087A               	movf	??_I2C_DO_TX,w
  6170  01F3  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  6171  01F4  3006               	movlw	6
  6172  01F5  3EC0               	addlw	(low (_I2C_Status| 0))& (0+255)
  6173  01F6  0086               	movwf	6
  6174  01F7  0187               	clrf	7
  6175  01F8  3F41               	moviw [1]fsr1
  6176  01F9  008A               	movwf	10
  6177  01FA  3F40               	moviw [0]fsr1
  6178  01FB  000A               	callw
  6179  01FC  3181               	pagesel	$
  6180  01FD  00FB               	movwf	??_I2C_DO_TX+1
  6181  01FE  01FC               	clrf	??_I2C_DO_TX+2
  6182                           
  6183                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6184                           ; Switch size 1, requested type "simple"
  6185                           ; Number of cases is 1, Range of values is 0 to 0
  6186                           ; switch strategies available:
  6187                           ; Name         Instructions Cycles
  6188                           ; simple_byte            4     3 (average)
  6189                           ; direct_byte            8     6 (fixed)
  6190                           ; jumptable            260     6 (fixed)
  6191                           ;	Chosen strategy is simple_byte
  6192  01FF  087C               	movf	??_I2C_DO_TX+2,w
  6193  0200  3A00               	xorlw	0	; case 0
  6194  0201  1903               	skipnz
  6195  0202  2A04               	goto	i1l3800
  6196  0203  29EB               	goto	i1l2984
  6197  0204                     i1l3800:
  6198                           
  6199                           ; Switch size 1, requested type "simple"
  6200                           ; Number of cases is 4, Range of values is 1 to 4
  6201                           ; switch strategies available:
  6202                           ; Name         Instructions Cycles
  6203                           ; simple_byte           13     7 (average)
  6204                           ; direct_byte           17     9 (fixed)
  6205                           ; jumptable            263     9 (fixed)
  6206                           ;	Chosen strategy is simple_byte
  6207  0204  087B               	movf	??_I2C_DO_TX+1,w
  6208  0205  3A01               	xorlw	1	; case 1
  6209  0206  1903               	skipnz
  6210  0207  29EB               	goto	i1l2984
  6211  0208  3A03               	xorlw	3	; case 2
  6212  0209  1903               	skipnz
  6213  020A  29E3               	goto	i1l2976
  6214  020B  3A01               	xorlw	1	; case 3
  6215  020C  1903               	skipnz
  6216  020D  29E7               	goto	i1l2980
  6217  020E  3A07               	xorlw	7	; case 4
  6218  020F  1903               	skipnz
  6219  0210  29EB               	goto	i1l2984
  6220  0211  29EB               	goto	i1l2984
  6221  0212                     i1l579:	
  6222                           ;mcc_generated_files/i2c_master.c: 372:     else
  6223                           
  6224                           
  6225                           ;mcc_generated_files/i2c_master.c: 373:     {;mcc_generated_files/i2c_master.c: 374:    
      +                               I2C_Status.addressNackCheck = 0;
  6226  0212  0021               	movlb	1	; select bank1
  6227  0213  105C               	bcf	(_I2C_Status^(0+128)+28),0
  6228  0214                     i1l2992:
  6229                           
  6230                           ;mcc_generated_files/i2c_master.c: 375:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  6231  0214  3017               	movlw	23
  6232  0215  3EC0               	addlw	(low (_I2C_Status| 0))& (0+255)
  6233  0216  0086               	movwf	6
  6234  0217  0187               	clrf	7
  6235  0218  3F40               	moviw [0]fsr1
  6236  0219  0084               	movwf	4
  6237  021A  0185               	clrf	5
  6238  021B  0A81               	incf	1,f
  6239  021C  0800               	movf	0,w
  6240  021D  3186  26AC  3181   	fcall	_I2C_MasterSendTxData
  6241  0220                     i1l2994:
  6242                           
  6243                           ;mcc_generated_files/i2c_master.c: 376:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  6244  0220  3001               	movlw	1
  6245  0221  0021               	movlb	1	; select bank1
  6246  0222  02D8               	subwf	(_I2C_Status^(0+128)+24),f
  6247  0223  3000               	movlw	0
  6248  0224  3BD9               	subwfb	((_I2C_Status+1)^(0+128)+24),f
  6249  0225  0858               	movf	(_I2C_Status^(0+128)+24),w
  6250  0226  0459               	iorwf	((_I2C_Status+1)^(0+128)+24),w
  6251  0227  1D03               	btfss	3,2
  6252  0228  2A2A               	goto	u76_21
  6253  0229  2A2B               	goto	u76_20
  6254  022A                     u76_21:
  6255  022A  2A2D               	goto	i1l2998
  6256  022B                     u76_20:
  6257  022B                     i1l2996:
  6258  022B  3006               	movlw	6
  6259  022C  2A2E               	goto	i1l582
  6260  022D                     i1l2998:
  6261  022D  3003               	movlw	3
  6262  022E                     i1l582:
  6263  022E  0008               	return
  6264  022F                     __end_of_I2C_DO_TX:
  6265                           
  6266                           	psect	text37
  6267  063F                     __ptext37:	
  6268 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  6269 ;; Defined at:
  6270 ;;		line 349 in file "mcc_generated_files/i2c_master.c"
  6271 ;; Parameters:    Size  Location     Type
  6272 ;;		None
  6273 ;; Auto vars:     Size  Location     Type
  6274 ;;		None
  6275 ;; Return value:  Size  Location     Type
  6276 ;;                  1    wreg      enum E3338
  6277 ;; Registers used:
  6278 ;;		wreg, status,2, status,0, pclath, cstack
  6279 ;; Tracked objects:
  6280 ;;		On entry : 0/0
  6281 ;;		On exit  : 0/0
  6282 ;;		Unchanged: 0/0
  6283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6288 ;;Total ram usage:        0 bytes
  6289 ;; Hardware stack levels used: 1
  6290 ;; Hardware stack levels required when called: 1
  6291 ;; This function calls:
  6292 ;;		_I2C_MasterSendTxData
  6293 ;; This function is called by:
  6294 ;;		_I2C_MasterFsm
  6295 ;; This function uses a non-reentrant model
  6296 ;;
  6297                           
  6298                           
  6299                           ;psect for function _I2C_DO_SEND_ADR_WRITE
  6300  063F                     _I2C_DO_SEND_ADR_WRITE:
  6301  063F                     i1l2964:	
  6302                           ;incstack = 0
  6303                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  6304                           
  6305                           
  6306                           ;mcc_generated_files/i2c_master.c: 351:     I2C_Status.addressNackCheck = 1;
  6307  063F  0021               	movlb	1	; select bank1
  6308  0640  145C               	bsf	(_I2C_Status^(0+128)+28),0
  6309  0641                     i1l2966:
  6310                           
  6311                           ;mcc_generated_files/i2c_master.c: 352:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
  6312  0641  3556               	lslf	(_I2C_Status^(0+128)+22),w
  6313  0642  3186  26AC  3186   	fcall	_I2C_MasterSendTxData
  6314  0645                     i1l2968:
  6315                           
  6316                           ;mcc_generated_files/i2c_master.c: 353:     return I2C_TX;
  6317  0645  3003               	movlw	3
  6318  0646                     i1l576:
  6319  0646  0008               	return
  6320  0647                     __end_of_I2C_DO_SEND_ADR_WRITE:
  6321                           
  6322                           	psect	text38
  6323  062E                     __ptext38:	
  6324 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  6325 ;; Defined at:
  6326 ;;		line 342 in file "mcc_generated_files/i2c_master.c"
  6327 ;; Parameters:    Size  Location     Type
  6328 ;;		None
  6329 ;; Auto vars:     Size  Location     Type
  6330 ;;		None
  6331 ;; Return value:  Size  Location     Type
  6332 ;;                  1    wreg      enum E3338
  6333 ;; Registers used:
  6334 ;;		wreg, status,2, status,0, pclath, cstack
  6335 ;; Tracked objects:
  6336 ;;		On entry : 0/0
  6337 ;;		On exit  : 0/0
  6338 ;;		Unchanged: 0/0
  6339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6344 ;;Total ram usage:        0 bytes
  6345 ;; Hardware stack levels used: 1
  6346 ;; Hardware stack levels required when called: 1
  6347 ;; This function calls:
  6348 ;;		_I2C_MasterSendTxData
  6349 ;; This function is called by:
  6350 ;;		_I2C_MasterFsm
  6351 ;; This function uses a non-reentrant model
  6352 ;;
  6353                           
  6354                           
  6355                           ;psect for function _I2C_DO_SEND_ADR_READ
  6356  062E                     _I2C_DO_SEND_ADR_READ:
  6357  062E                     i1l2956:	
  6358                           ;incstack = 0
  6359                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  6360                           
  6361                           
  6362                           ;mcc_generated_files/i2c_master.c: 344:     I2C_Status.addressNackCheck = 1;
  6363  062E  0021               	movlb	1	; select bank1
  6364  062F  145C               	bsf	(_I2C_Status^(0+128)+28),0
  6365  0630                     i1l2958:
  6366                           
  6367                           ;mcc_generated_files/i2c_master.c: 345:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
  6368  0630  1403               	setc
  6369  0631  0D56               	rlf	(_I2C_Status^(0+128)+22),w
  6370  0632  3186  26AC  3186   	fcall	_I2C_MasterSendTxData
  6371  0635                     i1l2960:
  6372                           
  6373                           ;mcc_generated_files/i2c_master.c: 346:     return I2C_RCEN;
  6374  0635  3005               	movlw	5
  6375  0636                     i1l573:
  6376  0636  0008               	return
  6377  0637                     __end_of_I2C_DO_SEND_ADR_READ:
  6378                           
  6379                           	psect	text39
  6380  06A7                     __ptext39:	
  6381 ;; *************** function _I2C_DO_IDLE *****************
  6382 ;; Defined at:
  6383 ;;		line 335 in file "mcc_generated_files/i2c_master.c"
  6384 ;; Parameters:    Size  Location     Type
  6385 ;;		None
  6386 ;; Auto vars:     Size  Location     Type
  6387 ;;		None
  6388 ;; Return value:  Size  Location     Type
  6389 ;;                  1    wreg      enum E3338
  6390 ;; Registers used:
  6391 ;;		wreg, status,2
  6392 ;; Tracked objects:
  6393 ;;		On entry : 0/0
  6394 ;;		On exit  : 0/0
  6395 ;;		Unchanged: 0/0
  6396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6401 ;;Total ram usage:        0 bytes
  6402 ;; Hardware stack levels used: 1
  6403 ;; This function calls:
  6404 ;;		Nothing
  6405 ;; This function is called by:
  6406 ;;		_I2C_MasterFsm
  6407 ;; This function uses a non-reentrant model
  6408 ;;
  6409                           
  6410                           
  6411                           ;psect for function _I2C_DO_IDLE
  6412  06A7                     _I2C_DO_IDLE:
  6413  06A7                     i1l2948:	
  6414                           ;incstack = 0
  6415                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
  6416                           
  6417                           
  6418                           ;mcc_generated_files/i2c_master.c: 337:     I2C_Status.busy = 0;
  6419  06A7  0021               	movlb	1	; select bank1
  6420  06A8  10DC               	bcf	(_I2C_Status^(0+128)+28),1
  6421  06A9                     i1l2950:
  6422                           
  6423                           ;mcc_generated_files/i2c_master.c: 338:     I2C_Status.error = I2C_NOERR;
  6424  06A9  01DB               	clrf	(_I2C_Status^(0+128)+27)
  6425  06AA                     i1l2952:
  6426                           
  6427                           ;mcc_generated_files/i2c_master.c: 339:     return I2C_RESET;
  6428  06AA  300E               	movlw	14
  6429  06AB                     i1l570:
  6430  06AB  0008               	return
  6431  06AC                     __end_of_I2C_DO_IDLE:
  6432                           
  6433                           	psect	text40
  6434  0335                     __ptext40:	
  6435 ;; *************** function _I2C_DO_TX_EMPTY *****************
  6436 ;; Defined at:
  6437 ;;		line 411 in file "mcc_generated_files/i2c_master.c"
  6438 ;; Parameters:    Size  Location     Type
  6439 ;;		None
  6440 ;; Auto vars:     Size  Location     Type
  6441 ;;		None
  6442 ;; Return value:  Size  Location     Type
  6443 ;;                  1    wreg      enum E3338
  6444 ;; Registers used:
  6445 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6446 ;; Tracked objects:
  6447 ;;		On entry : 0/0
  6448 ;;		On exit  : 0/0
  6449 ;;		Unchanged: 0/0
  6450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6453 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6454 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6455 ;;Total ram usage:        3 bytes
  6456 ;; Hardware stack levels used: 1
  6457 ;; Hardware stack levels required when called: 3
  6458 ;; This function calls:
  6459 ;;		Absolute function
  6460 ;;		_I2C_CallbackReturnReset
  6461 ;;		_I2C_CallbackReturnStop
  6462 ;;		_I2C_DO_SEND_RESTART
  6463 ;;		_I2C_DO_SEND_STOP
  6464 ;;		_I2C_MasterSetIrq
  6465 ;;		_rd1RegCompleteHandler
  6466 ;;		_rd2RegCompleteHandler
  6467 ;;		_rdBlkRegCompleteHandler
  6468 ;;		_wr1RegCompleteHandler
  6469 ;;		_wr2RegCompleteHandler
  6470 ;; This function is called by:
  6471 ;;		_I2C_MasterFsm
  6472 ;; This function uses a non-reentrant model
  6473 ;;
  6474                           
  6475                           
  6476                           ;psect for function _I2C_DO_TX_EMPTY
  6477  0335                     _I2C_DO_TX_EMPTY:
  6478  0335                     i1l3046:	
  6479                           ;incstack = 0
  6480                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6481                           
  6482                           
  6483                           ;mcc_generated_files/i2c_master.c: 413:     I2C_Status.bufferFree = 1;
  6484  0335  0021               	movlb	1	; select bank1
  6485  0336  15DC               	bsf	(_I2C_Status^(0+128)+28),3
  6486                           
  6487                           ;mcc_generated_files/i2c_master.c: 414:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  6488  0337  2B45               	goto	i1l3064
  6489  0338                     i1l3048:
  6490                           
  6491                           ;mcc_generated_files/i2c_master.c: 418:             return I2C_DO_SEND_RESTART();
  6492  0338  3186  2698  3183   	fcall	_I2C_DO_SEND_RESTART
  6493  033B  2B63               	goto	i1l613
  6494  033C                     i1l3052:
  6495                           
  6496                           ;mcc_generated_files/i2c_master.c: 420:             I2C_MasterSetIrq();
  6497  033C  3186  26CC  3183   	fcall	_I2C_MasterSetIrq
  6498  033F                     i1l3054:
  6499                           
  6500                           ;mcc_generated_files/i2c_master.c: 421:             return I2C_TX;
  6501  033F  3003               	movlw	3
  6502  0340  2B63               	goto	i1l613
  6503  0341                     i1l3058:
  6504                           
  6505                           ;mcc_generated_files/i2c_master.c: 424:             return I2C_DO_SEND_STOP();
  6506  0341  3186  2693  3183   	fcall	_I2C_DO_SEND_STOP
  6507  0344  2B63               	goto	i1l613
  6508  0345                     i1l3064:
  6509  0345  084C               	movf	(low ((_I2C_Status| 0+12)))^(0+128),w
  6510  0346  00FA               	movwf	??_I2C_DO_TX_EMPTY
  6511  0347  087A               	movf	??_I2C_DO_TX_EMPTY,w
  6512  0348  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  6513  0349  0841               	movf	(_I2C_Status+1)^(0+128),w
  6514  034A  008A               	movwf	10
  6515  034B  0840               	movf	_I2C_Status^(0+128),w
  6516  034C  000A               	callw
  6517  034D  3183               	pagesel	$
  6518  034E  00FB               	movwf	??_I2C_DO_TX_EMPTY+1
  6519  034F  01FC               	clrf	??_I2C_DO_TX_EMPTY+2
  6520                           
  6521                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6522                           ; Switch size 1, requested type "simple"
  6523                           ; Number of cases is 1, Range of values is 0 to 0
  6524                           ; switch strategies available:
  6525                           ; Name         Instructions Cycles
  6526                           ; simple_byte            4     3 (average)
  6527                           ; direct_byte            8     6 (fixed)
  6528                           ; jumptable            260     6 (fixed)
  6529                           ;	Chosen strategy is simple_byte
  6530  0350  087C               	movf	??_I2C_DO_TX_EMPTY+2,w
  6531  0351  3A00               	xorlw	0	; case 0
  6532  0352  1903               	skipnz
  6533  0353  2B55               	goto	i1l3802
  6534  0354  2B41               	goto	i1l3058
  6535  0355                     i1l3802:
  6536                           
  6537                           ; Switch size 1, requested type "simple"
  6538                           ; Number of cases is 4, Range of values is 1 to 4
  6539                           ; switch strategies available:
  6540                           ; Name         Instructions Cycles
  6541                           ; simple_byte           13     7 (average)
  6542                           ; direct_byte           17     9 (fixed)
  6543                           ; jumptable            263     9 (fixed)
  6544                           ;	Chosen strategy is simple_byte
  6545  0355  087B               	movf	??_I2C_DO_TX_EMPTY+1,w
  6546  0356  3A01               	xorlw	1	; case 1
  6547  0357  1903               	skipnz
  6548  0358  2B41               	goto	i1l3058
  6549  0359  3A03               	xorlw	3	; case 2
  6550  035A  1903               	skipnz
  6551  035B  2B38               	goto	i1l3048
  6552  035C  3A01               	xorlw	1	; case 3
  6553  035D  1903               	skipnz
  6554  035E  2B38               	goto	i1l3048
  6555  035F  3A07               	xorlw	7	; case 4
  6556  0360  1903               	skipnz
  6557  0361  2B3C               	goto	i1l3052
  6558  0362  2B41               	goto	i1l3058
  6559  0363                     i1l613:
  6560  0363  0008               	return
  6561  0364                     __end_of_I2C_DO_TX_EMPTY:
  6562                           
  6563                           	psect	text41
  6564  06CC                     __ptext41:	
  6565 ;; *************** function _I2C_MasterSetIrq *****************
  6566 ;; Defined at:
  6567 ;;		line 647 in file "mcc_generated_files/i2c_master.c"
  6568 ;; Parameters:    Size  Location     Type
  6569 ;;		None
  6570 ;; Auto vars:     Size  Location     Type
  6571 ;;		None
  6572 ;; Return value:  Size  Location     Type
  6573 ;;                  1    wreg      void 
  6574 ;; Registers used:
  6575 ;;		None
  6576 ;; Tracked objects:
  6577 ;;		On entry : 0/0
  6578 ;;		On exit  : 0/0
  6579 ;;		Unchanged: 0/0
  6580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6585 ;;Total ram usage:        0 bytes
  6586 ;; Hardware stack levels used: 1
  6587 ;; This function calls:
  6588 ;;		Nothing
  6589 ;; This function is called by:
  6590 ;;		_I2C_DO_TX_EMPTY
  6591 ;; This function uses a non-reentrant model
  6592 ;;
  6593                           
  6594                           
  6595                           ;psect for function _I2C_MasterSetIrq
  6596  06CC                     _I2C_MasterSetIrq:
  6597  06CC                     i1l2902:	
  6598                           ;incstack = 0
  6599                           ; Regs used in _I2C_MasterSetIrq: []
  6600                           
  6601                           
  6602                           ;mcc_generated_files/i2c_master.c: 649:     PIR1bits.SSPIF = 1;
  6603  06CC  0020               	movlb	0	; select bank0
  6604  06CD  1591               	bsf	17,3	;volatile
  6605  06CE                     i1l733:
  6606  06CE  0008               	return
  6607  06CF                     __end_of_I2C_MasterSetIrq:
  6608                           
  6609                           	psect	text42
  6610  0679                     __ptext42:	
  6611 ;; *************** function _I2C_MasterIsNack *****************
  6612 ;; Defined at:
  6613 ;;		line 599 in file "mcc_generated_files/i2c_master.c"
  6614 ;; Parameters:    Size  Location     Type
  6615 ;;		None
  6616 ;; Auto vars:     Size  Location     Type
  6617 ;;		None
  6618 ;; Return value:  Size  Location     Type
  6619 ;;                  1    wreg      _Bool 
  6620 ;; Registers used:
  6621 ;;		wreg, status,2, status,0
  6622 ;; Tracked objects:
  6623 ;;		On entry : 0/0
  6624 ;;		On exit  : 0/0
  6625 ;;		Unchanged: 0/0
  6626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6631 ;;Total ram usage:        0 bytes
  6632 ;; Hardware stack levels used: 1
  6633 ;; This function calls:
  6634 ;;		Nothing
  6635 ;; This function is called by:
  6636 ;;		_I2C_MasterFsm
  6637 ;;		_I2C_DO_TX
  6638 ;; This function uses a non-reentrant model
  6639 ;;
  6640                           
  6641                           
  6642                           ;psect for function _I2C_MasterIsNack
  6643  0679                     _I2C_MasterIsNack:
  6644  0679                     i1l2852:	
  6645                           ;incstack = 0
  6646                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
  6647                           
  6648                           
  6649                           ;mcc_generated_files/i2c_master.c: 601:     return SSPCON2bits.ACKSTAT;
  6650  0679  0024               	movlb	4	; select bank4
  6651  067A  0E16               	swapf	22,w	;volatile
  6652  067B  0C89               	rrf	9,f
  6653  067C  0C89               	rrf	9,f
  6654  067D  3901               	andlw	1
  6655  067E                     i1l706:
  6656  067E  0008               	return
  6657  067F                     __end_of_I2C_MasterIsNack:
  6658                           
  6659                           	psect	text43
  6660  06AC                     __ptext43:	
  6661 ;; *************** function _I2C_MasterSendTxData *****************
  6662 ;; Defined at:
  6663 ;;		line 569 in file "mcc_generated_files/i2c_master.c"
  6664 ;; Parameters:    Size  Location     Type
  6665 ;;  data            1    wreg     unsigned char 
  6666 ;; Auto vars:     Size  Location     Type
  6667 ;;  data            1    0[COMMON] unsigned char 
  6668 ;; Return value:  Size  Location     Type
  6669 ;;                  1    wreg      void 
  6670 ;; Registers used:
  6671 ;;		wreg
  6672 ;; Tracked objects:
  6673 ;;		On entry : 0/0
  6674 ;;		On exit  : 0/0
  6675 ;;		Unchanged: 0/0
  6676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6678 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6680 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6681 ;;Total ram usage:        1 bytes
  6682 ;; Hardware stack levels used: 1
  6683 ;; This function calls:
  6684 ;;		Nothing
  6685 ;; This function is called by:
  6686 ;;		_I2C_DO_SEND_ADR_READ
  6687 ;;		_I2C_DO_SEND_ADR_WRITE
  6688 ;;		_I2C_DO_TX
  6689 ;; This function uses a non-reentrant model
  6690 ;;
  6691                           
  6692                           
  6693                           ;psect for function _I2C_MasterSendTxData
  6694  06AC                     _I2C_MasterSendTxData:
  6695                           
  6696                           ;incstack = 0
  6697                           ; Regs used in _I2C_MasterSendTxData: [wreg]
  6698                           ;I2C_MasterSendTxData@data stored from wreg
  6699  06AC  00F0               	movwf	I2C_MasterSendTxData@data
  6700  06AD                     i1l2856:
  6701                           
  6702                           ;mcc_generated_files/i2c_master.c: 569: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 570: {;mcc_generated_files/i2c_
      +                          master.c: 571:     SSPBUF = data;
  6703  06AD  0870               	movf	I2C_MasterSendTxData@data,w
  6704  06AE  0024               	movlb	4	; select bank4
  6705  06AF  0091               	movwf	17	;volatile
  6706  06B0                     i1l688:
  6707  06B0  0008               	return
  6708  06B1                     __end_of_I2C_MasterSendTxData:
  6709                           
  6710                           	psect	text44
  6711  06B9                     __ptext44:	
  6712 ;; *************** function _I2C_MasterSendAck *****************
  6713 ;; Defined at:
  6714 ;;		line 604 in file "mcc_generated_files/i2c_master.c"
  6715 ;; Parameters:    Size  Location     Type
  6716 ;;		None
  6717 ;; Auto vars:     Size  Location     Type
  6718 ;;		None
  6719 ;; Return value:  Size  Location     Type
  6720 ;;                  1    wreg      void 
  6721 ;; Registers used:
  6722 ;;		None
  6723 ;; Tracked objects:
  6724 ;;		On entry : 0/0
  6725 ;;		On exit  : 0/0
  6726 ;;		Unchanged: 0/0
  6727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6732 ;;Total ram usage:        0 bytes
  6733 ;; Hardware stack levels used: 1
  6734 ;; This function calls:
  6735 ;;		Nothing
  6736 ;; This function is called by:
  6737 ;;		_I2C_DO_RX
  6738 ;;		_I2C_DO_RX_ACK
  6739 ;; This function uses a non-reentrant model
  6740 ;;
  6741                           
  6742                           
  6743                           ;psect for function _I2C_MasterSendAck
  6744  06B9                     _I2C_MasterSendAck:
  6745  06B9                     i1l2880:	
  6746                           ;incstack = 0
  6747                           ; Regs used in _I2C_MasterSendAck: []
  6748                           
  6749                           
  6750                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKDT = 0;
  6751  06B9  0024               	movlb	4	; select bank4
  6752  06BA  1296               	bcf	22,5	;volatile
  6753                           
  6754                           ;mcc_generated_files/i2c_master.c: 607:     SSPCON2bits.ACKEN = 1;
  6755  06BB  1616               	bsf	22,4	;volatile
  6756  06BC                     i1l709:
  6757  06BC  0008               	return
  6758  06BD                     __end_of_I2C_MasterSendAck:
  6759                           
  6760                           	psect	text45
  6761  06CF                     __ptext45:	
  6762 ;; *************** function _I2C_MasterGetRxData *****************
  6763 ;; Defined at:
  6764 ;;		line 564 in file "mcc_generated_files/i2c_master.c"
  6765 ;; Parameters:    Size  Location     Type
  6766 ;;		None
  6767 ;; Auto vars:     Size  Location     Type
  6768 ;;		None
  6769 ;; Return value:  Size  Location     Type
  6770 ;;                  1    wreg      unsigned char 
  6771 ;; Registers used:
  6772 ;;		wreg
  6773 ;; Tracked objects:
  6774 ;;		On entry : 0/0
  6775 ;;		On exit  : 0/0
  6776 ;;		Unchanged: 0/0
  6777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6782 ;;Total ram usage:        0 bytes
  6783 ;; Hardware stack levels used: 1
  6784 ;; This function calls:
  6785 ;;		Nothing
  6786 ;; This function is called by:
  6787 ;;		_I2C_DO_RX
  6788 ;; This function uses a non-reentrant model
  6789 ;;
  6790                           
  6791                           
  6792                           ;psect for function _I2C_MasterGetRxData
  6793  06CF                     _I2C_MasterGetRxData:
  6794  06CF                     i1l2876:	
  6795                           ;incstack = 0
  6796                           ; Regs used in _I2C_MasterGetRxData: [wreg]
  6797                           
  6798                           
  6799                           ;mcc_generated_files/i2c_master.c: 566:     return SSPBUF;
  6800  06CF  0024               	movlb	4	; select bank4
  6801  06D0  0811               	movf	17,w	;volatile
  6802  06D1                     i1l685:
  6803  06D1  0008               	return
  6804  06D2                     __end_of_I2C_MasterGetRxData:
  6805                           
  6806                           	psect	text46
  6807  06BD                     __ptext46:	
  6808 ;; *************** function _I2C_MasterSendNack *****************
  6809 ;; Defined at:
  6810 ;;		line 610 in file "mcc_generated_files/i2c_master.c"
  6811 ;; Parameters:    Size  Location     Type
  6812 ;;		None
  6813 ;; Auto vars:     Size  Location     Type
  6814 ;;		None
  6815 ;; Return value:  Size  Location     Type
  6816 ;;                  1    wreg      void 
  6817 ;; Registers used:
  6818 ;;		None
  6819 ;; Tracked objects:
  6820 ;;		On entry : 0/0
  6821 ;;		On exit  : 0/0
  6822 ;;		Unchanged: 0/0
  6823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6828 ;;Total ram usage:        0 bytes
  6829 ;; Hardware stack levels used: 1
  6830 ;; This function calls:
  6831 ;;		Nothing
  6832 ;; This function is called by:
  6833 ;;		_I2C_DO_RX_NACK_STOP
  6834 ;;		_I2C_DO_RX_NACK_RESTART
  6835 ;; This function uses a non-reentrant model
  6836 ;;
  6837                           
  6838                           
  6839                           ;psect for function _I2C_MasterSendNack
  6840  06BD                     _I2C_MasterSendNack:
  6841  06BD                     i1l2812:	
  6842                           ;incstack = 0
  6843                           ; Regs used in _I2C_MasterSendNack: []
  6844                           
  6845                           
  6846                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKDT = 1;
  6847  06BD  0024               	movlb	4	; select bank4
  6848  06BE  1696               	bsf	22,5	;volatile
  6849                           
  6850                           ;mcc_generated_files/i2c_master.c: 613:     SSPCON2bits.ACKEN = 1;
  6851  06BF  1616               	bsf	22,4	;volatile
  6852  06C0                     i1l712:
  6853  06C0  0008               	return
  6854  06C1                     __end_of_I2C_MasterSendNack:
  6855                           
  6856                           	psect	text47
  6857  06D2                     __ptext47:	
  6858 ;; *************** function _I2C_MasterStartRx *****************
  6859 ;; Defined at:
  6860 ;;		line 584 in file "mcc_generated_files/i2c_master.c"
  6861 ;; Parameters:    Size  Location     Type
  6862 ;;		None
  6863 ;; Auto vars:     Size  Location     Type
  6864 ;;		None
  6865 ;; Return value:  Size  Location     Type
  6866 ;;                  1    wreg      void 
  6867 ;; Registers used:
  6868 ;;		None
  6869 ;; Tracked objects:
  6870 ;;		On entry : 0/0
  6871 ;;		On exit  : 0/0
  6872 ;;		Unchanged: 0/0
  6873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6878 ;;Total ram usage:        0 bytes
  6879 ;; Hardware stack levels used: 1
  6880 ;; This function calls:
  6881 ;;		Nothing
  6882 ;; This function is called by:
  6883 ;;		_I2C_DO_RCEN
  6884 ;; This function uses a non-reentrant model
  6885 ;;
  6886                           
  6887                           
  6888                           ;psect for function _I2C_MasterStartRx
  6889  06D2                     _I2C_MasterStartRx:
  6890  06D2                     i1l2894:	
  6891                           ;incstack = 0
  6892                           ; Regs used in _I2C_MasterStartRx: []
  6893                           
  6894                           
  6895                           ;mcc_generated_files/i2c_master.c: 586:     SSPCON2bits.RCEN = 1;
  6896  06D2  0024               	movlb	4	; select bank4
  6897  06D3  1596               	bsf	22,3	;volatile
  6898  06D4                     i1l697:
  6899  06D4  0008               	return
  6900  06D5                     __end_of_I2C_MasterStartRx:
  6901                           
  6902                           	psect	text48
  6903  06DB                     __ptext48:	
  6904 ;; *************** function _I2C_CallbackReturnReset *****************
  6905 ;; Defined at:
  6906 ;;		line 526 in file "mcc_generated_files/i2c_master.c"
  6907 ;; Parameters:    Size  Location     Type
  6908 ;;  funPtr          1    9[COMMON] PTR void 
  6909 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6910 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6911 ;; Auto vars:     Size  Location     Type
  6912 ;;		None
  6913 ;; Return value:  Size  Location     Type
  6914 ;;                  1    wreg      enum E360
  6915 ;; Registers used:
  6916 ;;		wreg
  6917 ;; Tracked objects:
  6918 ;;		On entry : 0/0
  6919 ;;		On exit  : 0/0
  6920 ;;		Unchanged: 0/0
  6921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6922 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6925 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6926 ;;Total ram usage:        1 bytes
  6927 ;; Hardware stack levels used: 1
  6928 ;; This function calls:
  6929 ;;		Nothing
  6930 ;; This function is called by:
  6931 ;;		_I2C_Open
  6932 ;;		_I2C_DO_TX
  6933 ;;		_I2C_DO_RX
  6934 ;;		_I2C_DO_TX_EMPTY
  6935 ;;		_I2C_DO_ADDRESS_NACK
  6936 ;;		_I2C_DO_RX_EMPTY
  6937 ;; This function uses a non-reentrant model
  6938 ;;
  6939                           
  6940                           
  6941                           ;psect for function _I2C_CallbackReturnReset
  6942  06DB                     _I2C_CallbackReturnReset:
  6943  06DB                     i1l2908:	
  6944                           ;incstack = 0
  6945                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
  6946                           
  6947                           
  6948                           ;mcc_generated_files/i2c_master.c: 526: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 527: {;mcc_generated_files/i2c_master.c: 528:  
      +                             return I2C_RESET_LINK;
  6949  06DB  3005               	movlw	5
  6950  06DC                     i1l669:
  6951  06DC  0008               	return
  6952  06DD                     __end_of_I2C_CallbackReturnReset:
  6953                           
  6954                           	psect	text49
  6955  06DD                     __ptext49:	
  6956 ;; *************** function _I2C_CallbackReturnStop *****************
  6957 ;; Defined at:
  6958 ;;		line 521 in file "mcc_generated_files/i2c_master.c"
  6959 ;; Parameters:    Size  Location     Type
  6960 ;;  funPtr          1    9[COMMON] PTR void 
  6961 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6962 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6963 ;; Auto vars:     Size  Location     Type
  6964 ;;		None
  6965 ;; Return value:  Size  Location     Type
  6966 ;;                  1    wreg      enum E360
  6967 ;; Registers used:
  6968 ;;		wreg
  6969 ;; Tracked objects:
  6970 ;;		On entry : 0/0
  6971 ;;		On exit  : 0/0
  6972 ;;		Unchanged: 0/0
  6973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6974 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6977 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6978 ;;Total ram usage:        1 bytes
  6979 ;; Hardware stack levels used: 1
  6980 ;; This function calls:
  6981 ;;		Nothing
  6982 ;; This function is called by:
  6983 ;;		_I2C_SetCallback
  6984 ;;		_I2C_Open
  6985 ;;		_I2C_DO_TX
  6986 ;;		_I2C_DO_RX
  6987 ;;		_I2C_DO_TX_EMPTY
  6988 ;;		_I2C_DO_ADDRESS_NACK
  6989 ;;		_I2C_DO_RX_EMPTY
  6990 ;; This function uses a non-reentrant model
  6991 ;;
  6992                           
  6993                           
  6994                           ;psect for function _I2C_CallbackReturnStop
  6995  06DD                     _I2C_CallbackReturnStop:
  6996  06DD                     i1l2904:	
  6997                           ;incstack = 0
  6998                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
  6999                           
  7000                           
  7001                           ;mcc_generated_files/i2c_master.c: 521: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 522: {;mcc_generated_files/i2c_master.c: 523:   
      +                            return I2C_STOP;
  7002  06DD  3001               	movlw	1
  7003  06DE                     i1l666:
  7004  06DE  0008               	return
  7005  06DF                     __end_of_I2C_CallbackReturnStop:
  7006                           
  7007                           	psect	text50
  7008  04FF                     __ptext50:	
  7009 ;; *************** function _rdBlkRegCompleteHandler *****************
  7010 ;; Defined at:
  7011 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
  7012 ;; Parameters:    Size  Location     Type
  7013 ;;  ptr             1    9[COMMON] PTR void 
  7014 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7015 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7016 ;; Auto vars:     Size  Location     Type
  7017 ;;		None
  7018 ;; Return value:  Size  Location     Type
  7019 ;;                  1    wreg      enum E360
  7020 ;; Registers used:
  7021 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7022 ;; Tracked objects:
  7023 ;;		On entry : 0/0
  7024 ;;		On exit  : 0/0
  7025 ;;		Unchanged: 0/0
  7026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7027 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7030 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7031 ;;Total ram usage:        1 bytes
  7032 ;; Hardware stack levels used: 1
  7033 ;; Hardware stack levels required when called: 2
  7034 ;; This function calls:
  7035 ;;		_I2C_SetBuffer
  7036 ;;		_I2C_SetDataCompleteCallback
  7037 ;; This function is called by:
  7038 ;;		_I2C_ReadDataBlock
  7039 ;;		_I2C_DO_TX
  7040 ;;		_I2C_DO_RX
  7041 ;;		_I2C_DO_TX_EMPTY
  7042 ;;		_I2C_DO_ADDRESS_NACK
  7043 ;;		_I2C_DO_RX_EMPTY
  7044 ;; This function uses a non-reentrant model
  7045 ;;
  7046                           
  7047                           
  7048                           ;psect for function _rdBlkRegCompleteHandler
  7049  04FF                     _rdBlkRegCompleteHandler:
  7050  04FF                     i1l2846:	
  7051                           ;incstack = 0
  7052                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  7053                           
  7054                           
  7055                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
  7056  04FF  0879               	movf	rdBlkRegCompleteHandler@ptr,w
  7057  0500  0086               	movwf	6
  7058  0501  0187               	clrf	7
  7059  0502  3F40               	moviw [0]fsr1
  7060  0503  00F0               	movwf	I2C_SetBuffer@bufferSize
  7061  0504  3F41               	moviw [1]fsr1
  7062  0505  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7063  0506  0879               	movf	rdBlkRegCompleteHandler@ptr,w
  7064  0507  3E02               	addlw	2
  7065  0508  0086               	movwf	6
  7066  0509  0187               	clrf	7
  7067  050A  0801               	movf	1,w
  7068  050B  3185  2580  3184   	fcall	_I2C_SetBuffer
  7069                           
  7070                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7071  050E  3000               	movlw	0
  7072  050F  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7073  0510  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7074  0511  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7075  0512  3185  2590  3184   	fcall	_I2C_SetDataCompleteCallback
  7076  0515                     i1l2848:
  7077                           
  7078                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
  7079  0515  3002               	movlw	2
  7080  0516                     i1l104:
  7081  0516  0008               	return
  7082  0517                     __end_of_rdBlkRegCompleteHandler:
  7083                           
  7084                           	psect	text51
  7085  053C                     __ptext51:	
  7086 ;; *************** function _wr1RegCompleteHandler *****************
  7087 ;; Defined at:
  7088 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
  7089 ;; Parameters:    Size  Location     Type
  7090 ;;  ptr             1    9[COMMON] PTR void 
  7091 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7092 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7093 ;; Auto vars:     Size  Location     Type
  7094 ;;		None
  7095 ;; Return value:  Size  Location     Type
  7096 ;;                  1    wreg      enum E360
  7097 ;; Registers used:
  7098 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7099 ;; Tracked objects:
  7100 ;;		On entry : 0/0
  7101 ;;		On exit  : 0/0
  7102 ;;		Unchanged: 0/0
  7103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7104 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7107 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7108 ;;Total ram usage:        1 bytes
  7109 ;; Hardware stack levels used: 1
  7110 ;; Hardware stack levels required when called: 2
  7111 ;; This function calls:
  7112 ;;		_I2C_SetBuffer
  7113 ;;		_I2C_SetDataCompleteCallback
  7114 ;; This function is called by:
  7115 ;;		_I2C_Write1ByteRegister
  7116 ;;		_I2C_DO_TX
  7117 ;;		_I2C_DO_RX
  7118 ;;		_I2C_DO_TX_EMPTY
  7119 ;;		_I2C_DO_ADDRESS_NACK
  7120 ;;		_I2C_DO_RX_EMPTY
  7121 ;; This function uses a non-reentrant model
  7122 ;;
  7123                           
  7124                           
  7125                           ;psect for function _wr1RegCompleteHandler
  7126  053C                     _wr1RegCompleteHandler:
  7127  053C                     i1l2830:	
  7128                           ;incstack = 0
  7129                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7130                           
  7131                           
  7132                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
  7133  053C  3001               	movlw	1
  7134  053D  00F0               	movwf	I2C_SetBuffer@bufferSize
  7135  053E  3000               	movlw	0
  7136  053F  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7137  0540  0879               	movf	wr1RegCompleteHandler@ptr,w
  7138  0541  3185  2580  3185   	fcall	_I2C_SetBuffer
  7139  0544                     i1l2832:
  7140                           
  7141                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7142  0544  3000               	movlw	0
  7143  0545  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7144  0546  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7145  0547  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7146  0548  3185  2590  3185   	fcall	_I2C_SetDataCompleteCallback
  7147  054B                     i1l2834:
  7148                           
  7149                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
  7150  054B  3004               	movlw	4
  7151  054C                     i1l98:
  7152  054C  0008               	return
  7153  054D                     __end_of_wr1RegCompleteHandler:
  7154                           
  7155                           	psect	text52
  7156  054D                     __ptext52:	
  7157 ;; *************** function _rd2RegCompleteHandler *****************
  7158 ;; Defined at:
  7159 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
  7160 ;; Parameters:    Size  Location     Type
  7161 ;;  ptr             1    9[COMMON] PTR void 
  7162 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7163 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7164 ;; Auto vars:     Size  Location     Type
  7165 ;;		None
  7166 ;; Return value:  Size  Location     Type
  7167 ;;                  1    wreg      enum E360
  7168 ;; Registers used:
  7169 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7170 ;; Tracked objects:
  7171 ;;		On entry : 0/0
  7172 ;;		On exit  : 0/0
  7173 ;;		Unchanged: 0/0
  7174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7175 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7178 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7179 ;;Total ram usage:        1 bytes
  7180 ;; Hardware stack levels used: 1
  7181 ;; Hardware stack levels required when called: 2
  7182 ;; This function calls:
  7183 ;;		_I2C_SetBuffer
  7184 ;;		_I2C_SetDataCompleteCallback
  7185 ;; This function is called by:
  7186 ;;		_I2C_Read2ByteRegister
  7187 ;;		_I2C_DO_TX
  7188 ;;		_I2C_DO_RX
  7189 ;;		_I2C_DO_TX_EMPTY
  7190 ;;		_I2C_DO_ADDRESS_NACK
  7191 ;;		_I2C_DO_RX_EMPTY
  7192 ;; This function uses a non-reentrant model
  7193 ;;
  7194                           
  7195                           
  7196                           ;psect for function _rd2RegCompleteHandler
  7197  054D                     _rd2RegCompleteHandler:
  7198  054D                     i1l2822:	
  7199                           ;incstack = 0
  7200                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7201                           
  7202                           
  7203                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
  7204  054D  3002               	movlw	2
  7205  054E  00F0               	movwf	I2C_SetBuffer@bufferSize
  7206  054F  3000               	movlw	0
  7207  0550  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7208  0551  0879               	movf	rd2RegCompleteHandler@ptr,w
  7209  0552  3185  2580  3185   	fcall	_I2C_SetBuffer
  7210  0555                     i1l2824:
  7211                           
  7212                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7213  0555  3000               	movlw	0
  7214  0556  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7215  0557  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7216  0558  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7217  0559  3185  2590  3185   	fcall	_I2C_SetDataCompleteCallback
  7218  055C                     i1l2826:
  7219                           
  7220                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
  7221  055C  3002               	movlw	2
  7222  055D                     i1l95:
  7223  055D  0008               	return
  7224  055E                     __end_of_rd2RegCompleteHandler:
  7225                           
  7226                           	psect	text53
  7227  055E                     __ptext53:	
  7228 ;; *************** function _rd1RegCompleteHandler *****************
  7229 ;; Defined at:
  7230 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
  7231 ;; Parameters:    Size  Location     Type
  7232 ;;  ptr             1    9[COMMON] PTR void 
  7233 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7234 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7235 ;; Auto vars:     Size  Location     Type
  7236 ;;		None
  7237 ;; Return value:  Size  Location     Type
  7238 ;;                  1    wreg      enum E360
  7239 ;; Registers used:
  7240 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7241 ;; Tracked objects:
  7242 ;;		On entry : 0/0
  7243 ;;		On exit  : 0/0
  7244 ;;		Unchanged: 0/0
  7245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7246 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7249 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7250 ;;Total ram usage:        1 bytes
  7251 ;; Hardware stack levels used: 1
  7252 ;; Hardware stack levels required when called: 2
  7253 ;; This function calls:
  7254 ;;		_I2C_SetBuffer
  7255 ;;		_I2C_SetDataCompleteCallback
  7256 ;; This function is called by:
  7257 ;;		_I2C_Read1ByteRegister
  7258 ;;		_I2C_DO_TX
  7259 ;;		_I2C_DO_RX
  7260 ;;		_I2C_DO_TX_EMPTY
  7261 ;;		_I2C_DO_ADDRESS_NACK
  7262 ;;		_I2C_DO_RX_EMPTY
  7263 ;; This function uses a non-reentrant model
  7264 ;;
  7265                           
  7266                           
  7267                           ;psect for function _rd1RegCompleteHandler
  7268  055E                     _rd1RegCompleteHandler:
  7269  055E                     i1l2814:	
  7270                           ;incstack = 0
  7271                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7272                           
  7273                           
  7274                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
  7275  055E  3001               	movlw	1
  7276  055F  00F0               	movwf	I2C_SetBuffer@bufferSize
  7277  0560  3000               	movlw	0
  7278  0561  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7279  0562  0879               	movf	rd1RegCompleteHandler@ptr,w
  7280  0563  3185  2580  3185   	fcall	_I2C_SetBuffer
  7281  0566                     i1l2816:
  7282                           
  7283                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7284  0566  3000               	movlw	0
  7285  0567  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7286  0568  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7287  0569  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7288  056A  3185  2590  3185   	fcall	_I2C_SetDataCompleteCallback
  7289  056D                     i1l2818:
  7290                           
  7291                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
  7292  056D  3002               	movlw	2
  7293  056E                     i1l92:
  7294  056E  0008               	return
  7295  056F                     __end_of_rd1RegCompleteHandler:
  7296                           
  7297                           	psect	text54
  7298  056F                     __ptext54:	
  7299 ;; *************** function _wr2RegCompleteHandler *****************
  7300 ;; Defined at:
  7301 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
  7302 ;; Parameters:    Size  Location     Type
  7303 ;;  ptr             1    9[COMMON] PTR void 
  7304 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7305 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7306 ;; Auto vars:     Size  Location     Type
  7307 ;;		None
  7308 ;; Return value:  Size  Location     Type
  7309 ;;                  1    wreg      enum E360
  7310 ;; Registers used:
  7311 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7312 ;; Tracked objects:
  7313 ;;		On entry : 0/0
  7314 ;;		On exit  : 0/0
  7315 ;;		Unchanged: 0/0
  7316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7317 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7320 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7321 ;;Total ram usage:        1 bytes
  7322 ;; Hardware stack levels used: 1
  7323 ;; Hardware stack levels required when called: 2
  7324 ;; This function calls:
  7325 ;;		_I2C_SetBuffer
  7326 ;;		_I2C_SetDataCompleteCallback
  7327 ;; This function is called by:
  7328 ;;		_I2C_Write2ByteRegister
  7329 ;;		_I2C_DO_TX
  7330 ;;		_I2C_DO_RX
  7331 ;;		_I2C_DO_TX_EMPTY
  7332 ;;		_I2C_DO_ADDRESS_NACK
  7333 ;;		_I2C_DO_RX_EMPTY
  7334 ;; This function uses a non-reentrant model
  7335 ;;
  7336                           
  7337                           
  7338                           ;psect for function _wr2RegCompleteHandler
  7339  056F                     _wr2RegCompleteHandler:
  7340  056F                     i1l2838:	
  7341                           ;incstack = 0
  7342                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7343                           
  7344                           
  7345                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
  7346  056F  3002               	movlw	2
  7347  0570  00F0               	movwf	I2C_SetBuffer@bufferSize
  7348  0571  3000               	movlw	0
  7349  0572  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7350  0573  0879               	movf	wr2RegCompleteHandler@ptr,w
  7351  0574  3185  2580  3185   	fcall	_I2C_SetBuffer
  7352  0577                     i1l2840:
  7353                           
  7354                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7355  0577  3000               	movlw	0
  7356  0578  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7357  0579  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7358  057A  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7359  057B  3185  2590  3185   	fcall	_I2C_SetDataCompleteCallback
  7360  057E                     i1l2842:
  7361                           
  7362                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
  7363  057E  3004               	movlw	4
  7364  057F                     i1l101:
  7365  057F  0008               	return
  7366  0580                     __end_of_wr2RegCompleteHandler:
  7367                           
  7368                           	psect	text55
  7369  0590                     __ptext55:	
  7370 ;; *************** function _I2C_SetDataCompleteCallback *****************
  7371 ;; Defined at:
  7372 ;;		line 274 in file "mcc_generated_files/i2c_master.c"
  7373 ;; Parameters:    Size  Location     Type
  7374 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
  7375 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  7376 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  7377 ;;  ptr             1    7[COMMON] PTR void 
  7378 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7379 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7380 ;; Auto vars:     Size  Location     Type
  7381 ;;		None
  7382 ;; Return value:  Size  Location     Type
  7383 ;;                  1    wreg      void 
  7384 ;; Registers used:
  7385 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7386 ;; Tracked objects:
  7387 ;;		On entry : 0/0
  7388 ;;		On exit  : 0/0
  7389 ;;		Unchanged: 0/0
  7390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7391 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7393 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7394 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7395 ;;Total ram usage:        4 bytes
  7396 ;; Hardware stack levels used: 1
  7397 ;; Hardware stack levels required when called: 1
  7398 ;; This function calls:
  7399 ;;		_I2C_SetCallback
  7400 ;; This function is called by:
  7401 ;;		_rd1RegCompleteHandler
  7402 ;;		_rd2RegCompleteHandler
  7403 ;;		_wr1RegCompleteHandler
  7404 ;;		_wr2RegCompleteHandler
  7405 ;;		_rdBlkRegCompleteHandler
  7406 ;;		_I2C_Read1ByteRegister
  7407 ;;		_I2C_Read2ByteRegister
  7408 ;;		_I2C_Write1ByteRegister
  7409 ;;		_I2C_Write2ByteRegister
  7410 ;;		_I2C_ReadDataBlock
  7411 ;; This function uses a non-reentrant model
  7412 ;;
  7413                           
  7414                           
  7415                           ;psect for function _I2C_SetDataCompleteCallback
  7416  0590                     _I2C_SetDataCompleteCallback:
  7417  0590                     i1l2798:	
  7418                           ;incstack = 0
  7419                           ; Regs used in _I2C_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  7420                           
  7421                           
  7422                           ;mcc_generated_files/i2c_master.c: 274: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 275: {;mcc_generated_files/i2c_master.c
      +                          : 276:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  7423  0590  0876               	movf	I2C_SetDataCompleteCallback@cb+1,w
  7424  0591  00F1               	movwf	I2C_SetCallback@cb+1
  7425  0592  0875               	movf	I2C_SetDataCompleteCallback@cb,w
  7426  0593  00F0               	movwf	I2C_SetCallback@cb
  7427  0594  0877               	movf	I2C_SetDataCompleteCallback@ptr,w
  7428  0595  00F8               	movwf	??_I2C_SetDataCompleteCallback
  7429  0596  0878               	movf	??_I2C_SetDataCompleteCallback,w
  7430  0597  00F2               	movwf	I2C_SetCallback@ptr
  7431  0598  3000               	movlw	0
  7432  0599  3184  2467  3185   	fcall	_I2C_SetCallback
  7433  059C                     i1l540:
  7434  059C  0008               	return
  7435  059D                     __end_of_I2C_SetDataCompleteCallback:
  7436                           
  7437                           	psect	text56
  7438  0467                     __ptext56:	
  7439 ;; *************** function _I2C_SetCallback *****************
  7440 ;; Defined at:
  7441 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
  7442 ;; Parameters:    Size  Location     Type
  7443 ;;  idx             1    wreg     enum E3356
  7444 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
  7445 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  7446 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  7447 ;;  ptr             1    2[COMMON] PTR void 
  7448 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7449 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7450 ;; Auto vars:     Size  Location     Type
  7451 ;;  idx             1    4[COMMON] enum E3356
  7452 ;; Return value:  Size  Location     Type
  7453 ;;                  1    wreg      void 
  7454 ;; Registers used:
  7455 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7456 ;; Tracked objects:
  7457 ;;		On entry : 0/0
  7458 ;;		On exit  : 0/0
  7459 ;;		Unchanged: 0/0
  7460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7461 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7462 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7463 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7464 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7465 ;;Total ram usage:        5 bytes
  7466 ;; Hardware stack levels used: 1
  7467 ;; This function calls:
  7468 ;;		Nothing
  7469 ;; This function is called by:
  7470 ;;		_I2C_SetDataCompleteCallback
  7471 ;;		_I2C_SetWriteCollisionCallback
  7472 ;;		_I2C_SetAddressNackCallback
  7473 ;;		_I2C_SetDataNackCallback
  7474 ;;		_I2C_SetTimeoutCallback
  7475 ;; This function uses a non-reentrant model
  7476 ;;
  7477                           
  7478                           
  7479                           ;psect for function _I2C_SetCallback
  7480  0467                     _I2C_SetCallback:
  7481                           
  7482                           ;incstack = 0
  7483                           ; Regs used in _I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
  7484                           ;I2C_SetCallback@idx stored from wreg
  7485  0467  00F4               	movwf	I2C_SetCallback@idx
  7486  0468                     i1l2792:
  7487                           
  7488                           ;mcc_generated_files/i2c_master.c: 304: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 305: {;mcc_generate
      +                          d_files/i2c_master.c: 306:     if(cb)
  7489  0468  0870               	movf	I2C_SetCallback@cb,w
  7490  0469  0471               	iorwf	I2C_SetCallback@cb+1,w
  7491  046A  1903               	btfsc	3,2
  7492  046B  2C6D               	goto	u68_21
  7493  046C  2C6E               	goto	u68_20
  7494  046D                     u68_21:
  7495  046D  2C7F               	goto	i1l2796
  7496  046E                     u68_20:
  7497  046E                     i1l2794:
  7498                           
  7499                           ;mcc_generated_files/i2c_master.c: 307:     {;mcc_generated_files/i2c_master.c: 308:    
      +                               I2C_Status.callbackTable[idx] = cb;
  7500  046E  3574               	lslf	I2C_SetCallback@idx,w
  7501  046F  3EC0               	addlw	(low (_I2C_Status| 0))& (0+255)
  7502  0470  0086               	movwf	6
  7503  0471  0187               	clrf	7
  7504  0472  0870               	movf	I2C_SetCallback@cb,w
  7505  0473  3FC0               	movwi [0]fsr1
  7506  0474  0871               	movf	I2C_SetCallback@cb+1,w
  7507  0475  3FC1               	movwi [1]fsr1
  7508                           
  7509                           ;mcc_generated_files/i2c_master.c: 309:         I2C_Status.callbackPayload[idx] = ptr;
  7510  0476  0872               	movf	I2C_SetCallback@ptr,w
  7511  0477  00F3               	movwf	??_I2C_SetCallback
  7512  0478  0874               	movf	I2C_SetCallback@idx,w
  7513  0479  3ECC               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  7514  047A  0086               	movwf	6
  7515  047B  0187               	clrf	7
  7516  047C  0873               	movf	??_I2C_SetCallback,w
  7517  047D  0081               	movwf	1
  7518                           
  7519                           ;mcc_generated_files/i2c_master.c: 310:     }
  7520  047E  2C8C               	goto	i1l560
  7521  047F                     i1l2796:
  7522                           
  7523                           ;mcc_generated_files/i2c_master.c: 312:     {;mcc_generated_files/i2c_master.c: 313:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  7524  047F  3574               	lslf	I2C_SetCallback@idx,w
  7525  0480  3EC0               	addlw	(low (_I2C_Status| 0))& (0+255)
  7526  0481  0086               	movwf	6
  7527  0482  0187               	clrf	7
  7528  0483  30DD               	movlw	low _I2C_CallbackReturnStop
  7529  0484  3FC0               	movwi [0]fsr1
  7530  0485  3006               	movlw	high _I2C_CallbackReturnStop
  7531  0486  3FC1               	movwi [1]fsr1
  7532                           
  7533                           ;mcc_generated_files/i2c_master.c: 314:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  7534  0487  0874               	movf	I2C_SetCallback@idx,w
  7535  0488  3ECC               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  7536  0489  0086               	movwf	6
  7537  048A  0187               	clrf	7
  7538  048B  0181               	clrf	1
  7539  048C                     i1l560:
  7540  048C  0008               	return
  7541  048D                     __end_of_I2C_SetCallback:
  7542                           
  7543                           	psect	text57
  7544  0580                     __ptext57:	
  7545 ;; *************** function _I2C_SetBuffer *****************
  7546 ;; Defined at:
  7547 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
  7548 ;; Parameters:    Size  Location     Type
  7549 ;;  buffer          1    wreg     PTR void 
  7550 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
  7551 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  7552 ;;		 -> NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
  7553 ;;  bufferSize      2    0[COMMON] unsigned int 
  7554 ;; Auto vars:     Size  Location     Type
  7555 ;;  buffer          1    3[COMMON] PTR void 
  7556 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
  7557 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  7558 ;;		 -> NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
  7559 ;; Return value:  Size  Location     Type
  7560 ;;                  1    wreg      void 
  7561 ;; Registers used:
  7562 ;;		wreg
  7563 ;; Tracked objects:
  7564 ;;		On entry : 0/0
  7565 ;;		On exit  : 0/0
  7566 ;;		Unchanged: 0/0
  7567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7568 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7569 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7570 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7571 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7572 ;;Total ram usage:        4 bytes
  7573 ;; Hardware stack levels used: 1
  7574 ;; This function calls:
  7575 ;;		Nothing
  7576 ;; This function is called by:
  7577 ;;		_rd1RegCompleteHandler
  7578 ;;		_rd2RegCompleteHandler
  7579 ;;		_wr1RegCompleteHandler
  7580 ;;		_wr2RegCompleteHandler
  7581 ;;		_rdBlkRegCompleteHandler
  7582 ;;		_I2C_Read1ByteRegister
  7583 ;;		_I2C_Read2ByteRegister
  7584 ;;		_I2C_Write1ByteRegister
  7585 ;;		_I2C_Write2ByteRegister
  7586 ;;		_I2C_WriteNBytes
  7587 ;;		_I2C_ReadNBytes
  7588 ;;		_I2C_ReadDataBlock
  7589 ;; This function uses a non-reentrant model
  7590 ;;
  7591                           
  7592                           
  7593                           ;psect for function _I2C_SetBuffer
  7594  0580                     _I2C_SetBuffer:
  7595                           
  7596                           ;incstack = 0
  7597                           ; Regs used in _I2C_SetBuffer: [wreg]
  7598                           ;I2C_SetBuffer@buffer stored from wreg
  7599  0580  00F3               	movwf	I2C_SetBuffer@buffer
  7600  0581                     i1l2800:
  7601                           
  7602                           ;mcc_generated_files/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 265: {;mcc_generated_files/i2c_master.c: 266:     
      +                          if(I2C_Status.bufferFree)
  7603  0581  0021               	movlb	1	; select bank1
  7604  0582  1DDC               	btfss	(_I2C_Status^(0+128)+28),3
  7605  0583  2D85               	goto	u69_21
  7606  0584  2D86               	goto	u69_20
  7607  0585                     u69_21:
  7608  0585  2D8F               	goto	i1l537
  7609  0586                     u69_20:
  7610  0586                     i1l2802:
  7611                           
  7612                           ;mcc_generated_files/i2c_master.c: 267:     {;mcc_generated_files/i2c_master.c: 268:    
      +                               I2C_Status.data_ptr = buffer;
  7613  0586  0873               	movf	I2C_SetBuffer@buffer,w
  7614  0587  00F2               	movwf	??_I2C_SetBuffer
  7615  0588  0872               	movf	??_I2C_SetBuffer,w
  7616  0589  00D7               	movwf	(low ((_I2C_Status| 0+23)))^(0+128)
  7617                           
  7618                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.data_length = bufferSize;
  7619  058A  0871               	movf	I2C_SetBuffer@bufferSize+1,w
  7620  058B  00D9               	movwf	((_I2C_Status+1)^(0+128)+24)
  7621  058C  0870               	movf	I2C_SetBuffer@bufferSize,w
  7622  058D  00D8               	movwf	(_I2C_Status^(0+128)+24)
  7623  058E                     i1l2804:
  7624                           
  7625                           ;mcc_generated_files/i2c_master.c: 270:         I2C_Status.bufferFree = 0;
  7626  058E  11DC               	bcf	(_I2C_Status^(0+128)+28),3
  7627  058F                     i1l537:
  7628  058F  0008               	return
  7629  0590                     __end_of_I2C_SetBuffer:
  7630                           
  7631                           	psect	text58
  7632  06D5                     __ptext58:	
  7633 ;; *************** function _I2C_MasterStop *****************
  7634 ;; Defined at:
  7635 ;;		line 594 in file "mcc_generated_files/i2c_master.c"
  7636 ;; Parameters:    Size  Location     Type
  7637 ;;		None
  7638 ;; Auto vars:     Size  Location     Type
  7639 ;;		None
  7640 ;; Return value:  Size  Location     Type
  7641 ;;                  1    wreg      void 
  7642 ;; Registers used:
  7643 ;;		None
  7644 ;; Tracked objects:
  7645 ;;		On entry : 0/0
  7646 ;;		On exit  : 0/0
  7647 ;;		Unchanged: 0/0
  7648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7653 ;;Total ram usage:        0 bytes
  7654 ;; Hardware stack levels used: 1
  7655 ;; This function calls:
  7656 ;;		Nothing
  7657 ;; This function is called by:
  7658 ;;		_I2C_DO_SEND_STOP
  7659 ;; This function uses a non-reentrant model
  7660 ;;
  7661                           
  7662                           
  7663                           ;psect for function _I2C_MasterStop
  7664  06D5                     _I2C_MasterStop:
  7665  06D5                     i1l2810:	
  7666                           ;incstack = 0
  7667                           ; Regs used in _I2C_MasterStop: []
  7668                           
  7669                           
  7670                           ;mcc_generated_files/i2c_master.c: 596:     SSPCON2bits.PEN = 1;
  7671  06D5  0024               	movlb	4	; select bank4
  7672  06D6  1516               	bsf	22,2	;volatile
  7673  06D7                     i1l703:
  7674  06D7  0008               	return
  7675  06D8                     __end_of_I2C_MasterStop:
  7676                           
  7677                           	psect	text59
  7678  06D8                     __ptext59:	
  7679 ;; *************** function _I2C_MasterEnableRestart *****************
  7680 ;; Defined at:
  7681 ;;		line 574 in file "mcc_generated_files/i2c_master.c"
  7682 ;; Parameters:    Size  Location     Type
  7683 ;;		None
  7684 ;; Auto vars:     Size  Location     Type
  7685 ;;		None
  7686 ;; Return value:  Size  Location     Type
  7687 ;;                  1    wreg      void 
  7688 ;; Registers used:
  7689 ;;		None
  7690 ;; Tracked objects:
  7691 ;;		On entry : 0/0
  7692 ;;		On exit  : 0/0
  7693 ;;		Unchanged: 0/0
  7694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7699 ;;Total ram usage:        0 bytes
  7700 ;; Hardware stack levels used: 1
  7701 ;; This function calls:
  7702 ;;		Nothing
  7703 ;; This function is called by:
  7704 ;;		_I2C_DO_SEND_RESTART_READ
  7705 ;;		_I2C_DO_SEND_RESTART_WRITE
  7706 ;;		_I2C_DO_SEND_RESTART
  7707 ;;		_I2C_DO_RX_EMPTY
  7708 ;; This function uses a non-reentrant model
  7709 ;;
  7710                           
  7711                           
  7712                           ;psect for function _I2C_MasterEnableRestart
  7713  06D8                     _I2C_MasterEnableRestart:
  7714  06D8                     i1l2808:	
  7715                           ;incstack = 0
  7716                           ; Regs used in _I2C_MasterEnableRestart: []
  7717                           
  7718                           
  7719                           ;mcc_generated_files/i2c_master.c: 576:     SSPCON2bits.RSEN = 1;
  7720  06D8  0024               	movlb	4	; select bank4
  7721  06D9  1496               	bsf	22,1	;volatile
  7722  06DA                     i1l691:
  7723  06DA  0008               	return
  7724  06DB                     __end_of_I2C_MasterEnableRestart:
  7725                           
  7726                           	psect	text60
  7727  048D                     __ptext60:	
  7728 ;; *************** function _EUSART_Transmit_ISR *****************
  7729 ;; Defined at:
  7730 ;;		line 206 in file "mcc_generated_files/eusart.c"
  7731 ;; Parameters:    Size  Location     Type
  7732 ;;		None
  7733 ;; Auto vars:     Size  Location     Type
  7734 ;;		None
  7735 ;; Return value:  Size  Location     Type
  7736 ;;                  1    wreg      void 
  7737 ;; Registers used:
  7738 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7739 ;; Tracked objects:
  7740 ;;		On entry : 0/0
  7741 ;;		On exit  : 0/0
  7742 ;;		Unchanged: 0/0
  7743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7746 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7747 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7748 ;;Total ram usage:        1 bytes
  7749 ;; Hardware stack levels used: 1
  7750 ;; This function calls:
  7751 ;;		Nothing
  7752 ;; This function is called by:
  7753 ;;		_EUSART_Initialize
  7754 ;;		_INTERRUPT_InterruptManager
  7755 ;; This function uses a non-reentrant model
  7756 ;;
  7757                           
  7758                           
  7759                           ;psect for function _EUSART_Transmit_ISR
  7760  048D                     _EUSART_Transmit_ISR:
  7761  048D                     i1l3268:	
  7762                           ;incstack = 0
  7763                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  7764                           
  7765                           
  7766                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  7767  048D  3008               	movlw	8
  7768  048E  0020               	movlb	0	; select bank0
  7769  048F  0242               	subwf	_eusartTxBufferRemaining,w	;volatile
  7770  0490  1803               	skipnc
  7771  0491  2C93               	goto	u86_21
  7772  0492  2C94               	goto	u86_20
  7773  0493                     u86_21:
  7774  0493  2CAC               	goto	i1l332
  7775  0494                     u86_20:
  7776  0494                     i1l3270:
  7777                           
  7778                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  7779  0494  0843               	movf	_eusartTxTail,w
  7780  0495  3EE5               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  7781  0496  0086               	movwf	6
  7782  0497  0187               	clrf	7
  7783  0498  0801               	movf	1,w
  7784  0499  0023               	movlb	3	; select bank3
  7785  049A  009A               	movwf	26	;volatile
  7786  049B                     i1l3272:
  7787  049B  3001               	movlw	1
  7788  049C  00F0               	movwf	??_EUSART_Transmit_ISR
  7789  049D  0870               	movf	??_EUSART_Transmit_ISR,w
  7790  049E  0020               	movlb	0	; select bank0
  7791  049F  07C3               	addwf	_eusartTxTail,f	;volatile
  7792  04A0                     i1l3274:
  7793                           
  7794                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  7795  04A0  3008               	movlw	8
  7796  04A1  0243               	subwf	_eusartTxTail,w	;volatile
  7797  04A2  1C03               	skipc
  7798  04A3  2CA5               	goto	u87_21
  7799  04A4  2CA6               	goto	u87_20
  7800  04A5                     u87_21:
  7801  04A5  2CA7               	goto	i1l3278
  7802  04A6                     u87_20:
  7803  04A6                     i1l3276:
  7804                           
  7805                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
  7806  04A6  01C3               	clrf	_eusartTxTail	;volatile
  7807  04A7                     i1l3278:
  7808                           
  7809                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
  7810  04A7  3001               	movlw	1
  7811  04A8  00F0               	movwf	??_EUSART_Transmit_ISR
  7812  04A9  0870               	movf	??_EUSART_Transmit_ISR,w
  7813  04AA  07C2               	addwf	_eusartTxBufferRemaining,f	;volatile
  7814                           
  7815                           ;mcc_generated_files/eusart.c: 218:     }
  7816  04AB  2CAE               	goto	i1l335
  7817  04AC                     i1l332:	
  7818                           ;mcc_generated_files/eusart.c: 219:     else
  7819                           
  7820                           
  7821                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TXIE = 0;
  7822  04AC  0021               	movlb	1	; select bank1
  7823  04AD  1211               	bcf	17,4	;volatile
  7824  04AE                     i1l335:
  7825  04AE  0008               	return
  7826  04AF                     __end_of_EUSART_Transmit_ISR:
  7827                           
  7828                           	psect	text61
  7829  02FB                     __ptext61:	
  7830 ;; *************** function _EUSART_Receive_ISR *****************
  7831 ;; Defined at:
  7832 ;;		line 225 in file "mcc_generated_files/eusart.c"
  7833 ;; Parameters:    Size  Location     Type
  7834 ;;		None
  7835 ;; Auto vars:     Size  Location     Type
  7836 ;;		None
  7837 ;; Return value:  Size  Location     Type
  7838 ;;                  1    wreg      void 
  7839 ;; Registers used:
  7840 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7841 ;; Tracked objects:
  7842 ;;		On entry : 0/0
  7843 ;;		On exit  : 0/0
  7844 ;;		Unchanged: 0/0
  7845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7850 ;;Total ram usage:        0 bytes
  7851 ;; Hardware stack levels used: 1
  7852 ;; Hardware stack levels required when called: 2
  7853 ;; This function calls:
  7854 ;;		Absolute function
  7855 ;;		_EUSART_DefaultErrorHandler
  7856 ;;		_EUSART_DefaultFramingErrorHandler
  7857 ;;		_EUSART_DefaultOverrunErrorHandler
  7858 ;;		_EUSART_RxDataHandler
  7859 ;; This function is called by:
  7860 ;;		_EUSART_Initialize
  7861 ;;		_INTERRUPT_InterruptManager
  7862 ;; This function uses a non-reentrant model
  7863 ;;
  7864                           
  7865                           
  7866                           ;psect for function _EUSART_Receive_ISR
  7867  02FB                     _EUSART_Receive_ISR:
  7868  02FB                     i1l3280:	
  7869                           ;incstack = 0
  7870                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7871                           
  7872                           
  7873                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  7874  02FB  0020               	movlb	0	; select bank0
  7875  02FC  0841               	movf	_eusartRxHead,w	;volatile
  7876  02FD  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7877  02FE  0086               	movwf	6
  7878  02FF  0187               	clrf	7
  7879  0300  0181               	clrf	1
  7880  0301                     i1l3282:
  7881                           
  7882                           ;mcc_generated_files/eusart.c: 230:     if(RCSTAbits.FERR){
  7883  0301  0023               	movlb	3	; select bank3
  7884  0302  1D1D               	btfss	29,2	;volatile
  7885  0303  2B05               	goto	u88_21
  7886  0304  2B06               	goto	u88_20
  7887  0305                     u88_21:
  7888  0305  2B11               	goto	i1l3288
  7889  0306                     u88_20:
  7890  0306                     i1l3284:
  7891                           
  7892                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  7893  0306  0020               	movlb	0	; select bank0
  7894  0307  0841               	movf	_eusartRxHead,w	;volatile
  7895  0308  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7896  0309  0086               	movwf	6
  7897  030A  0187               	clrf	7
  7898  030B  1481               	bsf	1,1
  7899  030C                     i1l3286:
  7900                           
  7901                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
  7902  030C  0835               	movf	_EUSART_FramingErrorHandler+1,w
  7903  030D  008A               	movwf	10
  7904  030E  0834               	movf	_EUSART_FramingErrorHandler,w
  7905  030F  000A               	callw
  7906  0310  3182               	pagesel	$
  7907  0311                     i1l3288:
  7908                           
  7909                           ;mcc_generated_files/eusart.c: 235:     if(RCSTAbits.OERR){
  7910  0311  0023               	movlb	3	; select bank3
  7911  0312  1C9D               	btfss	29,1	;volatile
  7912  0313  2B15               	goto	u89_21
  7913  0314  2B16               	goto	u89_20
  7914  0315                     u89_21:
  7915  0315  2B21               	goto	i1l3294
  7916  0316                     u89_20:
  7917  0316                     i1l3290:
  7918                           
  7919                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  7920  0316  0020               	movlb	0	; select bank0
  7921  0317  0841               	movf	_eusartRxHead,w	;volatile
  7922  0318  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7923  0319  0086               	movwf	6
  7924  031A  0187               	clrf	7
  7925  031B  1501               	bsf	1,2
  7926  031C                     i1l3292:
  7927                           
  7928                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
  7929  031C  0833               	movf	_EUSART_OverrunErrorHandler+1,w
  7930  031D  008A               	movwf	10
  7931  031E  0832               	movf	_EUSART_OverrunErrorHandler,w
  7932  031F  000A               	callw
  7933  0320  3182               	pagesel	$
  7934  0321                     i1l3294:
  7935                           
  7936                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
  7937  0321  0020               	movlb	0	; select bank0
  7938  0322  0841               	movf	_eusartRxHead,w	;volatile
  7939  0323  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7940  0324  0086               	movwf	6
  7941  0325  0187               	clrf	7
  7942  0326  0801               	movf	1,w
  7943  0327  1903               	btfsc	3,2
  7944  0328  2B2A               	goto	u90_21
  7945  0329  2B2B               	goto	u90_20
  7946  032A                     u90_21:
  7947  032A  2B31               	goto	i1l3298
  7948  032B                     u90_20:
  7949  032B                     i1l3296:
  7950                           
  7951                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
  7952  032B  0831               	movf	_EUSART_ErrorHandler+1,w
  7953  032C  008A               	movwf	10
  7954  032D  0830               	movf	_EUSART_ErrorHandler,w
  7955  032E  000A               	callw
  7956  032F  3182               	pagesel	$
  7957                           
  7958                           ;mcc_generated_files/eusart.c: 242:     } else {
  7959  0330  2B34               	goto	i1l342
  7960  0331                     i1l3298:
  7961                           
  7962                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
  7963  0331  3184  24E5  3182   	fcall	_EUSART_RxDataHandler
  7964  0334                     i1l342:
  7965  0334  0008               	return
  7966  0335                     __end_of_EUSART_Receive_ISR:
  7967                           
  7968                           	psect	text62
  7969  06C1                     __ptext62:	
  7970 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  7971 ;; Defined at:
  7972 ;;		line 261 in file "mcc_generated_files/eusart.c"
  7973 ;; Parameters:    Size  Location     Type
  7974 ;;		None
  7975 ;; Auto vars:     Size  Location     Type
  7976 ;;		None
  7977 ;; Return value:  Size  Location     Type
  7978 ;;                  1    wreg      void 
  7979 ;; Registers used:
  7980 ;;		None
  7981 ;; Tracked objects:
  7982 ;;		On entry : 0/0
  7983 ;;		On exit  : 0/0
  7984 ;;		Unchanged: 0/0
  7985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7990 ;;Total ram usage:        0 bytes
  7991 ;; Hardware stack levels used: 1
  7992 ;; This function calls:
  7993 ;;		Nothing
  7994 ;; This function is called by:
  7995 ;;		_EUSART_Initialize
  7996 ;;		_EUSART_Receive_ISR
  7997 ;; This function uses a non-reentrant model
  7998 ;;
  7999                           
  8000                           
  8001                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  8002  06C1                     _EUSART_DefaultOverrunErrorHandler:
  8003  06C1                     i1l3218:	
  8004                           ;incstack = 0
  8005                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  8006                           
  8007                           
  8008                           ;mcc_generated_files/eusart.c: 264:     RCSTAbits.CREN = 0;
  8009  06C1  0023               	movlb	3	; select bank3
  8010  06C2  121D               	bcf	29,4	;volatile
  8011                           
  8012                           ;mcc_generated_files/eusart.c: 265:     RCSTAbits.CREN = 1;
  8013  06C3  161D               	bsf	29,4	;volatile
  8014  06C4                     i1l352:
  8015  06C4  0008               	return
  8016  06C5                     __end_of_EUSART_DefaultOverrunErrorHandler:
  8017                           
  8018                           	psect	text63
  8019  06DF                     __ptext63:	
  8020 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  8021 ;; Defined at:
  8022 ;;		line 259 in file "mcc_generated_files/eusart.c"
  8023 ;; Parameters:    Size  Location     Type
  8024 ;;		None
  8025 ;; Auto vars:     Size  Location     Type
  8026 ;;		None
  8027 ;; Return value:  Size  Location     Type
  8028 ;;                  1    wreg      void 
  8029 ;; Registers used:
  8030 ;;		None
  8031 ;; Tracked objects:
  8032 ;;		On entry : 0/0
  8033 ;;		On exit  : 0/0
  8034 ;;		Unchanged: 0/0
  8035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8040 ;;Total ram usage:        0 bytes
  8041 ;; Hardware stack levels used: 1
  8042 ;; This function calls:
  8043 ;;		Nothing
  8044 ;; This function is called by:
  8045 ;;		_EUSART_Initialize
  8046 ;;		_EUSART_Receive_ISR
  8047 ;; This function uses a non-reentrant model
  8048 ;;
  8049                           
  8050                           
  8051                           ;psect for function _EUSART_DefaultFramingErrorHandler
  8052  06DF                     _EUSART_DefaultFramingErrorHandler:
  8053  06DF                     i1l349:	
  8054                           ;incstack = 0
  8055                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  8056                           
  8057  06DF  0008               	return
  8058  06E0                     __end_of_EUSART_DefaultFramingErrorHandler:
  8059                           
  8060                           	psect	text64
  8061  06C5                     __ptext64:	
  8062 ;; *************** function _EUSART_DefaultErrorHandler *****************
  8063 ;; Defined at:
  8064 ;;		line 269 in file "mcc_generated_files/eusart.c"
  8065 ;; Parameters:    Size  Location     Type
  8066 ;;		None
  8067 ;; Auto vars:     Size  Location     Type
  8068 ;;		None
  8069 ;; Return value:  Size  Location     Type
  8070 ;;                  1    wreg      void 
  8071 ;; Registers used:
  8072 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8073 ;; Tracked objects:
  8074 ;;		On entry : 0/0
  8075 ;;		On exit  : 0/0
  8076 ;;		Unchanged: 0/0
  8077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8082 ;;Total ram usage:        0 bytes
  8083 ;; Hardware stack levels used: 1
  8084 ;; Hardware stack levels required when called: 1
  8085 ;; This function calls:
  8086 ;;		_EUSART_RxDataHandler
  8087 ;; This function is called by:
  8088 ;;		_EUSART_Initialize
  8089 ;;		_EUSART_Receive_ISR
  8090 ;; This function uses a non-reentrant model
  8091 ;;
  8092                           
  8093                           
  8094                           ;psect for function _EUSART_DefaultErrorHandler
  8095  06C5                     _EUSART_DefaultErrorHandler:
  8096  06C5                     i1l3220:	
  8097                           ;incstack = 0
  8098                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  8099                           
  8100                           
  8101                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
  8102  06C5  3184  24E5  3186   	fcall	_EUSART_RxDataHandler
  8103  06C8                     i1l355:
  8104  06C8  0008               	return
  8105  06C9                     __end_of_EUSART_DefaultErrorHandler:
  8106                           
  8107                           	psect	text65
  8108  04E5                     __ptext65:	
  8109 ;; *************** function _EUSART_RxDataHandler *****************
  8110 ;; Defined at:
  8111 ;;		line 249 in file "mcc_generated_files/eusart.c"
  8112 ;; Parameters:    Size  Location     Type
  8113 ;;		None
  8114 ;; Auto vars:     Size  Location     Type
  8115 ;;		None
  8116 ;; Return value:  Size  Location     Type
  8117 ;;                  1    wreg      void 
  8118 ;; Registers used:
  8119 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8120 ;; Tracked objects:
  8121 ;;		On entry : 0/0
  8122 ;;		On exit  : 0/0
  8123 ;;		Unchanged: 0/0
  8124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8127 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8128 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8129 ;;Total ram usage:        1 bytes
  8130 ;; Hardware stack levels used: 1
  8131 ;; This function calls:
  8132 ;;		Nothing
  8133 ;; This function is called by:
  8134 ;;		_EUSART_Receive_ISR
  8135 ;;		_EUSART_DefaultErrorHandler
  8136 ;; This function uses a non-reentrant model
  8137 ;;
  8138                           
  8139                           
  8140                           ;psect for function _EUSART_RxDataHandler
  8141  04E5                     _EUSART_RxDataHandler:
  8142  04E5                     i1l2936:	
  8143                           ;incstack = 0
  8144                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  8145                           
  8146                           
  8147                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RCREG;
  8148  04E5  0023               	movlb	3	; select bank3
  8149  04E6  0819               	movf	25,w	;volatile
  8150  04E7  00F0               	movwf	??_EUSART_RxDataHandler
  8151  04E8  0020               	movlb	0	; select bank0
  8152  04E9  0841               	movf	_eusartRxHead,w
  8153  04EA  3EDD               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  8154  04EB  0086               	movwf	6
  8155  04EC  0187               	clrf	7
  8156  04ED  0870               	movf	??_EUSART_RxDataHandler,w
  8157  04EE  0081               	movwf	1
  8158  04EF                     i1l2938:
  8159  04EF  3001               	movlw	1
  8160  04F0  00F0               	movwf	??_EUSART_RxDataHandler
  8161  04F1  0870               	movf	??_EUSART_RxDataHandler,w
  8162  04F2  07C1               	addwf	_eusartRxHead,f	;volatile
  8163  04F3                     i1l2940:
  8164                           
  8165                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  8166  04F3  3008               	movlw	8
  8167  04F4  0241               	subwf	_eusartRxHead,w	;volatile
  8168  04F5  1C03               	skipc
  8169  04F6  2CF8               	goto	u74_21
  8170  04F7  2CF9               	goto	u74_20
  8171  04F8                     u74_21:
  8172  04F8  2CFA               	goto	i1l2944
  8173  04F9                     u74_20:
  8174  04F9                     i1l2942:
  8175                           
  8176                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
  8177  04F9  01C1               	clrf	_eusartRxHead	;volatile
  8178  04FA                     i1l2944:
  8179                           
  8180                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
  8181  04FA  3001               	movlw	1
  8182  04FB  00F0               	movwf	??_EUSART_RxDataHandler
  8183  04FC  0870               	movf	??_EUSART_RxDataHandler,w
  8184  04FD  07BF               	addwf	_eusartRxCount,f	;volatile
  8185  04FE                     i1l346:
  8186  04FE  0008               	return
  8187  04FF                     __end_of_EUSART_RxDataHandler:
  8188  007E                     btemp	set	126	;btemp
  8189  007E                     int$flags	set	126
  8190  007E                     wtemp0	set	126
  8191                           
  8192                           	psect	idloc
  8193                           
  8194                           ;Config register IDLOC0 @ 0x8000
  8195                           ;	unspecified, using default values
  8196  8000                     	org	32768
  8197  8000  3FFF               	dw	16383
  8198                           
  8199                           ;Config register IDLOC1 @ 0x8001
  8200                           ;	unspecified, using default values
  8201  8001                     	org	32769
  8202  8001  3FFF               	dw	16383
  8203                           
  8204                           ;Config register IDLOC2 @ 0x8002
  8205                           ;	unspecified, using default values
  8206  8002                     	org	32770
  8207  8002  3FFF               	dw	16383
  8208                           
  8209                           ;Config register IDLOC3 @ 0x8003
  8210                           ;	unspecified, using default values
  8211  8003                     	org	32771
  8212  8003  3FFF               	dw	16383
  8213                           
  8214                           	psect	config
  8215                           
  8216                           ;Config register CONFIG1 @ 0x8007
  8217                           ;	Oscillator Selection
  8218                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  8219                           ;	Watchdog Timer Enable
  8220                           ;	WDTE = OFF, WDT disabled
  8221                           ;	Power-up Timer Enable
  8222                           ;	PWRTE = OFF, PWRT disabled
  8223                           ;	MCLR Pin Function Select
  8224                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  8225                           ;	Flash Program Memory Code Protection
  8226                           ;	CP = OFF, Program memory code protection is disabled
  8227                           ;	Data Memory Code Protection
  8228                           ;	CPD = OFF, Data memory code protection is disabled
  8229                           ;	Brown-out Reset Enable
  8230                           ;	BOREN = ON, Brown-out Reset enabled
  8231                           ;	Clock Out Enable
  8232                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  8233                           ;	Internal/External Switchover
  8234                           ;	IESO = ON, Internal/External Switchover mode is enabled
  8235                           ;	Fail-Safe Clock Monitor Enable
  8236                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  8237  8007                     	org	32775
  8238  8007  3FE4               	dw	16356
  8239                           
  8240                           ;Config register CONFIG2 @ 0x8008
  8241                           ;	Flash Memory Self-Write Protection
  8242                           ;	WRT = OFF, Write protection off
  8243                           ;	Voltage Regulator Capacitor Enable
  8244                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  8245                           ;	PLL Enable
  8246                           ;	PLLEN = ON, 4x PLL enabled
  8247                           ;	Stack Overflow/Underflow Reset Enable
  8248                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  8249                           ;	Brown-out Reset Voltage Selection
  8250                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  8251                           ;	Low-Voltage Programming Enable
  8252                           ;	LVP = ON, Low-voltage programming enabled
  8253  8008                     	org	32776
  8254  8008  3FFF               	dw	16383

Data Sizes:
    Strings     134
    Constant    32
    Data        0
    BSS         114
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     37      74
    BANK1            80      0      77
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_DO_TX$2286$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$2291	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$2286	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2285	const PTR FTN()enum E3338 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    S799$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S1916_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_13(CODE[11]), STR_12(CODE[11]), STR_11(CODE[11]), STR_10(CODE[10]), 
		 -> STR_9(CODE[10]), STR_8(CODE[10]), STR_7(CODE[10]), STR_6(CODE[10]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[10]), STR_2(CODE[10]), 
		 -> STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 11
		 -> STR_13(CODE[11]), STR_12(CODE[11]), STR_11(CODE[11]), STR_10(CODE[10]), 
		 -> STR_9(CODE[10]), STR_8(CODE[10]), STR_7(CODE[10]), STR_6(CODE[10]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[10]), STR_2(CODE[10]), 
		 -> STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_13(CODE[11]), STR_12(CODE[11]), STR_11(CODE[11]), STR_10(CODE[10]), 
		 -> STR_9(CODE[10]), STR_8(CODE[10]), STR_7(CODE[10]), STR_6(CODE[10]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[10]), STR_2(CODE[10]), 
		 -> STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    I2C_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S799$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S799$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S799$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c_fsmStateTable	const PTR FTN()enum E3338[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), Absolute function(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S95$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _SYSTEM_Initialize->_EUSART_Initialize
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _I2C_MasterIsr->_I2C_MasterFsm

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3083
                                             34 BANK0      3     3      0
                        _EUSART_Read
                  _SYSTEM_Initialize
                             _printf
                              _reset
 ---------------------------------------------------------------------------------
 (1) _reset                                                2     2      0       0
                                              3 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     4      2    2546
                                             30 BANK0      4     2      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    1506
                                             22 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    1182
                                             14 BANK0      8     6      2
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     782
                                              6 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      66
                                              5 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         2     2      0      44
                                              3 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                     _ADC_Initialize
                  _EUSART_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     490
                                              5 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          2     2      0      24
                                              3 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0   78254
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                      _I2C_MasterIsr *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterIsr                                        0     0      0   78254
                      _I2C_MasterFsm
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterFsm                                        3     3      0   78254
                                              0 BANK0      3     3      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_TX_EMPTY                                     3     3      0   19547
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterSetIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_TX                                           3     3      0   19569
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_RESTART_WRITE                           0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_RESTART_READ                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_ADR_WRITE                               0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_ADR_READ                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterSendTxData                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_RX_ACK                                       0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_RX                                           3     3      0   19547
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterSendAck                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_RX_NACK_STOP                                 0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_RX_NACK_RESTART                              0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterSendNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_RCEN                                         0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_ADDRESS_NACK                                 3     3      0   19547
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler                             1     0      1    3874
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (12) _I2C_SetDataCompleteCallback                         4     1      3    2478
                                              5 COMMON     4     1      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (13) _I2C_SetCallback                                     5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (12) _I2C_SetBuffer                                       4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_STOP                                    0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_RESTART                                 0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_CallbackReturnStop                              1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (11) _I2C_CallbackReturnReset                             1     0      1     265
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _EUSART_Receive_ISR                                   0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (9) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (9) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
             _EUSART_Write
   _reset

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _I2C_MasterIsr *
     _I2C_MasterFsm
       _I2C_DO_ADDRESS_NACK *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
         _rd1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rd2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
         _rdBlkRegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
         _wr1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
         _wr2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
       _I2C_DO_IDLE *
       _I2C_DO_RCEN *
         _I2C_MasterStartRx
       _I2C_DO_RESET *
       _I2C_DO_RX *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_RX_NACK_RESTART *
           _I2C_MasterSendNack
         _I2C_DO_RX_NACK_STOP *
           _I2C_MasterSendNack
         _I2C_MasterGetRxData *
         _I2C_MasterSendAck *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_RX_ACK *
         _I2C_MasterSendAck
       _I2C_DO_RX_NACK_RESTART *
       _I2C_DO_RX_NACK_STOP *
       _I2C_DO_SEND_ADR_READ *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_ADR_WRITE *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_RESTART *
       _I2C_DO_SEND_RESTART_READ *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_WRITE *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_STOP *
       _I2C_DO_TX *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART_READ *
         _I2C_DO_SEND_RESTART_WRITE *
         _I2C_DO_SEND_STOP *
         _I2C_MasterIsNack *
         _I2C_MasterSendTxData *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_TX_EMPTY *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
         _I2C_DO_SEND_STOP *
         _I2C_MasterSetIrq *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_MasterClearIrq *
       _I2C_MasterIsNack *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     25      4A       5       92.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4D       7       96.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      A4      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      A4      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Feb 06 15:31:12 2025

                ?_EUSART_SetRxInterruptHandler 0048                         ??_I2C_DO_SEND_ADR_READ 0070  
                  __size_of_I2C_MasterSendNack 0004                        ??_I2C_DO_SEND_ADR_WRITE 0071  
                                  _SSPSTATbits 0214                          ??_I2C_DO_SEND_RESTART 0070  
                                          l143 04CA                                            l320 03FA  
                __size_of_I2C_MasterSendTxData 0005                                            l314 043E  
                                          l323 0413                                            l173 0529  
                                          l510 062D                                            l182 06B4  
                                          l319 03F0                                            l176 05A3  
                                          l361 066C                                            l329 064D  
                                          l370 0666                                            l179 05A8  
                                          l364 0678                                            l358 0672  
                                          l199 063E                                            l367 0660  
                                          l295 02B9                                            l870 04CB  
                                          l880 04D1                                            l872 04CD  
                                          l856 0126                                            l890 04D6  
                                          l882 04D2                                            l874 04CE  
                                          l892 04D7                                            l884 04D3  
                                          l876 04CF                                            l894 04E4  
                                          l886 04D4                                            l878 04D0  
                                          l888 04D5                                            u700 02C0  
                                          u701 02BF                                            u710 02C5  
                                          u711 02C4                                            u800 05A8  
                                          u720 02D4                                            u801 05A7  
                                          u721 02D3                                            u650 03F0  
                                          u730 02F1                                            u651 03EF  
                                          u731 02F0                                            u660 03F5  
                                          u661 03F4                                            u670 040E  
                                          u830 0462                                            u671 040D  
                                          u735 02ED                                            u831 0461  
                                          u840 041A                                            u841 0419  
                                          u850 0434                                            u851 0433  
                                          u780 0171                                            u781 0170  
                                          u790 0192                                            u791 0191  
                       ??_EUSART_RxDataHandler 0070                 ?_EUSART_SetFramingErrorHandler 0048  
                                          wreg 0009                                   ?_EUSART_Read 0070  
                     ??_I2C_CallbackReturnStop 007A                                   _I2C_DO_RESET 067F  
                      ??_rd2RegCompleteHandler 007A                                           l3110 0171  
                                         l3200 0292                                           l3120 019A  
                                         l3112 0179                                           l3210 02AE  
                                         l3202 0294                                           l3122 01A5  
                                         l3114 017D                                           l1507 053B  
                                         l3212 02AF                                           l3204 029C  
                                         l3140 04AF                                           l1540 01D9  
                                         l3116 0181                                           l3132 01B6  
                                         l3108 0160                                           l3214 02B0  
                                         l3206 02A4                                           l3150 04C0  
                                         l3142 04B5                                           l3134 01CF  
                                         l3118 0192                                           l3126 01AB  
                                         l3216 02B7                                           l3208 02AC  
                                         l3160 04C6                                           l3152 04C1  
                                         l3144 04B8                                           l3128 01B3  
                                         l3240 0462                                           l3232 0441  
                                         l3320 04D8                                           l3250 041A  
                                         l3170 062C                                           l3162 04C8  
                                         l3154 04C2                                           l3146 04BD  
                                         l1546 0466                                           l3234 0445  
                                         l3322 052A                                           l3260 0437  
                                         l3252 042A                                           l3180 0637  
                                         l3164 0624                                           l3172 059D  
                                         l3156 04C3                                           l3148 04BE  
                                         l3244 0517                                           l3236 0448  
                                         l3324 052F                                           l3262 043A  
                                         l3254 042E                                           l3246 0414  
                                         l3182 063A                                           l3190 027F  
                                         l3166 0629                                           l3174 05A0  
                                         l3158 04C5                                           l1558 02FA  
                                         l3238 0459                                           l3264 043C  
                                         l3256 0434                                           l3248 0414  
                                         l3184 063B                                           l3192 0289  
                                         l3168 062A                                           l3176 05A1  
                                         l3600 009F                                           l3258 0435  
                                         l3194 028C                                           l3186 0275  
                                         l3178 06B1                                           l3610 00B9  
                                         l3602 00A8                                           l3196 028E  
                                         l3188 0277                                           l3620 00D2  
                                         l3612 00BB                                           l3604 00AB  
                                         l3198 0290                                           l2806 0649  
                                         l3630 00E5                                           l3622 00D5  
                                         l3614 00C4                                           l3606 00AD  
                                         l2920 02D4                                           l2912 02BA  
                                         l3640 00FF                                           l3632 00EE  
                                         l3624 00D7                                           l3616 00C7  
                                         l3608 00B6                                           l2930 066D  
                                         l2922 02F1                                           l2914 02C0  
                                         l3650 0118                                           l3642 0101  
                                         l3634 00F1                                           l3626 00E0  
                                         l3618 00C9                                           l3570 0060  
                                         l2932 0667                                           l2780 03FB  
                                         l2916 02C5                                           l3652 011B  
                                         l3644 010A                                           l3636 00F3  
                                         l3628 00E3                                           l3580 0073  
                                         l3572 0061                                           l2934 0673  
                                         l2926 0661                                           l2782 0404  
                                         l2790 0411                                           l2774 03EB  
                                         l2918 02CA                                           l3654 011D  
                                         l3646 010D                                           l3638 00FC  
                                         l3590 008C                                           l3582 0075  
                                         l3574 0062                                           l2928 065B  
                                         l2784 0408                                           l2776 03EB  
                                         l3648 010F                                           l3592 008F  
                                         l3584 007E                                           l3576 0068  
                                         l3568 005D                                           l2786 040E  
                                         l2778 03F5                                           l3594 0091  
                                         l3586 0081                                           l3578 0070  
                                         l3658 0128                                           l2788 040F  
                                         l3596 009A                                           l3588 0083  
                                         l3598 009D                                           l3794 0130  
                                         STR_1 03DE                                           STR_2 05CA  
                                         STR_3 05D4                                           STR_4 05DE  
                                         STR_5 05E8                                           STR_6 05F2  
                                         STR_7 05FC                                           STR_8 0606  
                                         STR_9 0610                                           u1200 0068  
                                         u1201 0067                                           u1217 04DE  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           _LATD 010F  
                                         _LATE 0110                                           i1l92 056E  
                                         i1l95 055D                                           i1l98 054C  
                                         _PLLR 04D6                                           _WPUB 020D  
                                         _WPUE 0210                        ??_wr2RegCompleteHandler 007A  
                                         _dbuf 00A0                                           _main 005D  
                     ?_I2C_CallbackReturnReset 0079                                           _prec 002C  
                                         _nout 0028                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                         start 0047               __size_of_rdBlkRegCompleteHandler 0018  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 000C  
                                _I2C_DO_RX_ACK 068E                  __end_of_OSCILLATOR_Initialize 05A9  
                                        ?_main 0070                                          STR_10 061A  
                                        STR_11 05A9                                          STR_12 05B4  
                                        STR_13 05BF                                          i1l101 057F  
                                        i1l104 0516                                          i1l401 0045  
                                        i1l332 04AC                                          i1l342 0334  
                                        i1l335 04AE                                          i1l352 06C4  
                                        i1l346 04FE                                          i1l355 06C8  
                                        i1l540 059C                                          i1l349 06DF  
                                        i1l613 0363                                          i1l703 06D7  
                                        i1l607 0654                                          i1l631 06A6  
                                        i1l560 048C                                          i1l712 06C0  
                                        i1l640 0697                                          i1l392 001A  
                                        i1l537 058F                                          i1l706 067E  
                                        i1l570 06AB                                          i1l634 06A1  
                                        i1l730 06CB                                          i1l394 002A  
                                        i1l643 0692                                          i1l563 06B8  
                                        i1l395 0045                                          i1l652 0683  
                                        i1l396 003A                                          i1l709 06BC  
                                        i1l733 06CE                                          i1l573 0636  
                                        i1l637 069C                                          i1l582 022E  
                                        i1l646 068D                                          i1l567 0391  
                                        i1l576 0646                                          i1l649 0688  
                                        i1l666 06DE                                          i1l658 03BD  
                                        i1l691 06DA                                          i1l579 0212  
                                        i1l595 024C                                          i1l596 0274  
                                        i1l669 06DC                                          i1l685 06D1  
                                        i1l688 06B0                                          i1l697 06D4  
                                        _RCREG 0199                   __size_of_I2C_DO_RX_NACK_STOP 0005  
                                        _RCSTA 019D                                   vfpfcnvrt@fmt 0053  
                                        u81_20 036C                              ??_I2C_DO_TX_EMPTY 007A  
                                        u81_21 036B                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _TRISD 008F                                          _TRISE 0090  
                                        u74_20 04F9                                          u90_20 032B  
                                        u82_20 0374                                          u74_21 04F8  
                                        u90_21 032A                                          u82_21 0373  
                                        u75_20 01E2                                          u75_21 01E1  
                                        u68_20 046E                                          u76_20 022B  
                                        u68_21 046D                                          u76_21 022A  
                                        u69_20 0586                                          u77_20 0247  
                                        u69_21 0585                                          u77_21 0246  
                                        u86_20 0494                                          u86_21 0493  
                                        u87_20 04A6                                          u87_21 04A5  
                                        u88_20 0306                                          u88_21 0305  
                                        u89_20 0316                                          u89_21 0315  
                                        _TXREG 019A                                          _TXSTA 019E  
                            __end_of_I2C_DO_RX 0275                              __end_of_I2C_DO_TX 022F  
                                        _flags 002E                                 _WDT_Initialize 06B1  
                                        _fputc 02BA                         __size_of_I2C_MasterFsm 002E  
                       __size_of_I2C_MasterIsr 0004                                          _reset 04CB  
                                        _width 002A                                          _putch 0647  
                      _I2C_MasterEnableRestart 06D8                                          pclath 000A  
                             ?_I2C_SetCallback 0070                                          status 0003  
                                        wtemp0 007E                              ?_I2C_DO_SEND_STOP 0070  
                       __size_of_I2C_SetBuffer 0010                             ??_I2C_DO_SEND_STOP 0070  
                              __initialization 0049                                   __end_of_main 015E  
            __size_of_I2C_DO_SEND_RESTART_READ 0005                      ?_I2C_DO_SEND_RESTART_READ 0070  
                               ??_EUSART_Write 0048                                 ?_I2C_DO_RX_ACK 0070  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 004A  
                                       ??_main 0067                              ?_I2C_MasterIsNack 0070  
                            ?_I2C_MasterSetIrq 0070                             ??_I2C_MasterIsNack 0070  
                       __end_of_WDT_Initialize 06B5                             ??_I2C_MasterSetIrq 0070  
    __end_of_EUSART_DefaultFramingErrorHandler 06E0     __size_of_EUSART_DefaultFramingErrorHandler 0001  
          ??_EUSART_DefaultFramingErrorHandler 0070             ?_EUSART_DefaultFramingErrorHandler 0070  
            _EUSART_DefaultFramingErrorHandler 06DF                                         _ADCON0 009D  
                                       _ADCON1 009E                     _EUSART_OverrunErrorHandler 0032  
              __end_of_I2C_CallbackReturnReset 06DD                                         ?_fputc 004B  
                                       _ADRESH 009C                                         _EEADRH 0192  
                                       _ADRESL 009B                                         _EEADRL 0191  
                                       _EEDATH 0194                                         _EEDATL 0193  
                                       _EECON2 0196                __size_of_I2C_CallbackReturnStop 0002  
                                       ?_reset 0070                                         _APFCON 011D  
                I2C_SetDataCompleteCallback@cb 0075                                         _ANSELA 018C  
                                       ?_putch 0070                                         _ANSELB 018D  
                                       _ANSELD 018F                                         _ANSELE 0190  
                                       _BORCON 0116                                         u110_20 000F  
                                       u110_21 000E                                         u111_20 0014  
                                       u111_21 0013                                         i1l3010 023D  
                                       i1l3020 024E                                         i1l3012 0247  
                                       i1l3100 03A1                                         i1l3030 0256  
                                       i1l3014 024A                                         i1l3006 022F  
                                       i1l3024 0252                                         i1l3008 0239  
                                       i1l3040 0650                                         u112_20 001F  
                                       u112_21 001E                                         i1l3042 0653  
                                       i1l3220 06C5                                         i1l3052 033C  
                                       i1l3054 033F                                         i1l3046 0335  
                                       i1l3038 064E                                         i1l3230 037A  
                                       i1l3222 0364                                         i1l3048 0338  
                                       i1l3064 0345                                         i1l3072 068E  
                                       i1l3080 0681                                         i1l3224 0367  
                                       u113_20 0024                                         u113_21 0023  
                                       i1l3218 06C1                                         i1l3058 0341  
                                       i1l3074 0691                                         i1l3082 0682  
                                       i1l3090 0399                                         i1l3226 036C  
                                       i1l3228 0374                                         i1l3270 0494  
                                       i1l3078 067F                                         i1l3094 039D  
                                       i1l3086 0392                                         i1l3318 06B5  
                                       i1l3280 02FB                                         i1l3272 049B  
                                       i1l2800 0581                                         i1l3088 0394  
                                       u114_20 002F                                         u114_21 002E  
                                       i1l3290 0316                                         i1l3282 0301  
                                       i1l3274 04A0                                         i1l2810 06D5  
                                       i1l2802 0586                                         i1l3292 031C  
                                       i1l3284 0306                                         i1l3276 04A6  
                                       i1l3268 048D                                         i1l2804 058E  
                                       i1l2812 06BD                                         i1l3294 0321  
                                       i1l3286 030C                                         i1l3278 04A7  
                                       i1l2814 055E                                         i1l2822 054D  
                                       i1l2830 053C                                         i1l2902 06CC  
                                       i1l3296 032B                                         i1l3288 0311  
                                       i1l2808 06D8                                         i1l2840 0577  
                                       i1l2816 0566                                         i1l2824 0555  
                                       i1l2832 0544                                         i1l2904 06DD  
                                       i1l3800 0204                                         u115_20 0034  
                                       i1l3480 0006                                         u115_21 0033  
                                       i1l3298 0331                                         i1l2842 057E  
                                       i1l2818 056D                                         i1l2826 055C  
                                       i1l2834 054B                                         i1l3802 0355  
                                       i1l3490 0024                                         i1l3482 000A  
                                       i1l2940 04F3                                         i1l2908 06DB  
                                       i1l2852 0679                                         i1l2860 06A5  
                                       i1l3492 002F                                         i1l3484 000F  
                                       i1l2942 04F9                                         i1l2838 056F  
                                       i1l2846 04FF                                         i1l2950 06A9  
                                       i1l2870 0693                                         i1l3494 0034  
                                       i1l3486 0014                                         i1l2944 04FA  
                                       i1l2936 04E5                                         i1l2792 0468  
                                       i1l2848 0515                                         i1l2880 06B9  
                                       i1l2856 06AD                                         i1l2952 06AA  
                                       i1l2960 0635                                         i1l2864 069D  
                                       i1l2872 0696                                         i1l3496 003F  
                                       u116_20 003F                                         i1l3488 001F  
                                       u116_21 003E                                         i1l2938 04EF  
                                       i1l2794 046E                                         i1l2858 06A2  
                                       i1l2866 06A0                                         i1l2890 068C  
                                       i1l2882 0684                                         i1l2946 06C9  
                                       i1l2796 047F                                         i1l2876 06CF  
                                       i1l2948 06A7                                         i1l2956 062E  
                                       i1l2964 063F                                         i1l2980 01E7  
                                       i1l2972 01DA                                         i1l2884 0687  
                                       i1l2798 0590                                         i1l2894 06D2  
                                       i1l2958 0630                                         i1l2966 0641  
                                       i1l2990 01EF                                         i1l2968 0645  
                                       i1l2992 0214                                         i1l2984 01EB  
                                       i1l2976 01E3                                         i1l2896 0698  
                                       i1l2888 0689                                         u117_20 0044  
                                       u109_20 000A                                         u117_21 0043  
                                       u109_21 0009                                         i1l2994 0220  
                                       i1l2898 069B                                         i1l2996 022B  
                                       i1l3796 03B5                                         i1l2998 022D  
                                       i1l3798 0266                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                                         _SSPADD 0212  
                                       _SSPBUF 0211                            _I2C_MasterGetRxData 06CF  
                                main@reception 0069                                   vfprintf@cfmt 0061  
                                _I2C_MasterFsm 0364                                  _I2C_MasterIsr 06B5  
                          _EUSART_Transmit_ISR 048D                              I2C_SetCallback@cb 0070  
                      __size_of_I2C_MasterStop 0003                        __size_of_I2C_Initialize 000A  
                                       _printf 052A                                  _I2C_SetBuffer 0580  
                                       fputc@c 004B                            _I2C_DO_ADDRESS_NACK 0392  
                         ?_I2C_MasterGetRxData 0070                                ?_WDT_Initialize 0070  
                    ??_I2C_MasterEnableRestart 0070                               __end_of_vfprintf 0467  
                         ?_EUSART_Transmit_ISR 0070                           __size_of_EUSART_Read 002B  
                            _SYSTEM_Initialize 0517                        __end_of__initialization 0059  
                           ?_SYSTEM_Initialize 0070                           ?_I2C_DO_ADDRESS_NACK 0070  
         __end_of_EUSART_SetTxInterruptHandler 0661          __size_of_EUSART_SetTxInterruptHandler 0006  
                 _EUSART_SetTxInterruptHandler 065B                        _rdBlkRegCompleteHandler 04FF  
                               __pcstackCOMMON 0070                                 ?_I2C_MasterFsm 0070  
                               ?_I2C_MasterIsr 0070                                ??_I2C_DO_RX_ACK 0070  
                       _I2C_CallbackReturnStop 06DD                            ??_SYSTEM_Initialize 004B  
                                __end_of_fputc 02FB                                  __end_of_reset 04E5  
                                __end_of_putch 064E                                 ?_I2C_SetBuffer 0070  
               __size_of_I2C_DO_SEND_ADR_WRITE 0008             __size_of_I2C_DO_SEND_RESTART_WRITE 0005  
                __end_of_I2C_DO_SEND_ADR_WRITE 0647                     ?_I2C_DO_SEND_RESTART_WRITE 0070  
                        ??_I2C_MasterGetRxData 0070                                 _OPTION_REGbits 0095  
                         _eusartRxStatusBuffer 0020                     __end_of_I2C_MasterClearIrq 06CC  
              ??_EUSART_SetOverrunErrorHandler 004A                                        ??_fputc 004E  
                    __end_of_SYSTEM_Initialize 052A                          ??_EUSART_Transmit_ISR 0070  
                                      ??_reset 0048                                        ??_putch 004A  
                            _I2C_MasterSendAck 06B9                                     __pbssBANK0 0020  
                                   __pbssBANK1 00A0                           __end_of_EUSART_Write 0414  
                                ??_I2C_DO_IDLE 0070                 __size_of_rd2RegCompleteHandler 0011  
                                ??_I2C_DO_RCEN 0070                  __end_of_rd2RegCompleteHandler 055E  
                 __end_of_I2C_MasterSendTxData 06B1                             ?_I2C_MasterSendAck 0070  
                            _I2C_MasterStartRx 06D2                 __size_of_wr2RegCompleteHandler 0011  
                        ??_I2C_DO_ADDRESS_NACK 007A                  __end_of_wr2RegCompleteHandler 0580  
                  __size_of_EUSART_Receive_ISR 003A                            _I2C_DO_RX_NACK_STOP 0689  
                        _rd1RegCompleteHandler 055E                             ?_I2C_MasterStartRx 0070  
                   __end_of_I2C_MasterSendNack 06C1                          _wr1RegCompleteHandler 053C  
                                   __pmaintext 005D                            ??_I2C_MasterSendAck 0070  
                     rd1RegCompleteHandler@ptr 0079                  ?_EUSART_SetTxInterruptHandler 0048  
             _EUSART_TxDefaultInterruptHandler 0038                    __end_of_I2C_DO_SEND_RESTART 069D  
                              _I2C_DO_TX_EMPTY 0335                            I2C_SetBuffer@buffer 0073  
                                   __pintentry 0004                            ??_I2C_MasterStartRx 0070  
                __size_of_I2C_DO_SEND_ADR_READ 0009                                        _BAUDCON 019F  
             __size_of_I2C_CallbackReturnReset 0002                   ??_EUSART_DefaultErrorHandler 0071  
                                      ?_printf 0063                 I2C_SetDataCompleteCallback@ptr 0077  
                      __size_of_ADC_Initialize 0008                       ??_I2C_DO_RX_NACK_RESTART 0070  
            __end_of_I2C_DO_SEND_RESTART_WRITE 06A2                           ?_I2C_DO_RX_NACK_STOP 0070  
                                _eusartRxCount 003F                             __size_of_vfpfcnvrt 007C  
                __size_of_EUSART_RxDataHandler 001A                      __end_of_I2C_MasterSendAck 06BD  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 004A  
                                      _SSPCON1 0215                                        _SSPCON2 0216  
                                      _SSPSTAT 0214                      __end_of_I2C_MasterStartRx 06D5  
                 ?_I2C_SetDataCompleteCallback 0075                                      _I2C_DO_RX 022F  
                                    _I2C_DO_TX 01DA               __end_of_I2C_DO_SEND_RESTART_READ 06A7  
                    ??_rdBlkRegCompleteHandler 007A                                ??_I2C_MasterFsm 0045  
                              ??_I2C_MasterIsr 007D                           _ADC_InterruptHandler 003A  
          __size_of_EUSART_DefaultErrorHandler 0004                            __end_of_I2C_DO_IDLE 06AC  
                          __end_of_I2C_DO_RCEN 0655                                ??_I2C_SetBuffer 0072  
                                    ?_vfprintf 005B                        I2C_SetBuffer@bufferSize 0070  
                               _I2C_MasterStop 06D5                                 _I2C_Initialize 0624  
                    __size_of_I2C_DO_SEND_STOP 0005                                        __ptext1 04CB  
                                      __ptext2 052A                                        __ptext3 043F  
                                      __ptext4 015E                                        __ptext5 02BA  
                                      __ptext6 0647                                        __ptext7 03E9  
                                      __ptext8 0517                                        __ptext9 06B1  
                              __size_of_printf 0012                          ??_I2C_DO_RX_NACK_STOP 0070  
                        _OSCILLATOR_Initialize 059D                             I2C_SetCallback@idx 0074  
                     ??_PIN_MANAGER_Initialize 0048                  I2C_CallbackReturnReset@funPtr 0079  
                           I2C_SetCallback@ptr 0072                       wr1RegCompleteHandler@ptr 0079  
                   __size_of_SYSTEM_Initialize 0013                                        clrloop0 0656  
                         end_of_initialization 0059                                     ?_I2C_DO_RX 0070  
                                   ?_I2C_DO_TX 0070          __end_of_EUSART_SetOverrunErrorHandler 066D  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 0667  
                    __size_of_I2C_MasterIsNack 0006                                        fputc@fp 004D  
                       ?_rd1RegCompleteHandler 0079                        __end_of_I2C_DO_TX_EMPTY 0364  
                    __size_of_I2C_MasterSetIrq 0003                              _EUSART_Initialize 0275  
                       ?_wr1RegCompleteHandler 0079                             ?_EUSART_Initialize 0070  
                     __size_of_I2C_SetCallback 0026                              __end_of_vfpfcnvrt 01DA  
                                    _RCSTAbits 019D                         __end_of_I2C_MasterStop 06D8  
                       __end_of_I2C_Initialize 062E                                     ??_vfprintf 005E  
                          ??_EUSART_Initialize 004A                               ??_WDT_Initialize 0048  
               ??_EUSART_SetTxInterruptHandler 004A                __end_of_rdBlkRegCompleteHandler 0517  
                         _I2C_MasterSendTxData 06AC                __size_of_I2C_DO_RX_NACK_RESTART 0005  
                        __size_of_EUSART_Write 002B                     __size_of_I2C_MasterSendAck 0004  
              __size_of_EUSART_SetErrorHandler 0006                     __size_of_I2C_MasterStartRx 0003  
                    __end_of_EUSART_Initialize 02BA                                    _I2C_DO_IDLE 06A7  
                                  _I2C_DO_RCEN 064E                     rdBlkRegCompleteHandler@ptr 0079  
                                    _TXSTAbits 019E                        ?_I2C_CallbackReturnStop 0079  
                     _I2C_DO_SEND_RESTART_READ 06A2                   I2C_CallbackReturnStop@funPtr 0079  
                              ?_I2C_MasterStop 0070                                ?_I2C_Initialize 0070  
                      _I2C_CallbackReturnReset 06DB             __end_of_EUSART_DefaultErrorHandler 06C9  
                   _EUSART_DefaultErrorHandler 06C5                                    vfpfcnvrt@ap 0054  
                                  vfpfcnvrt@fp 005A           __size_of_I2C_SetDataCompleteCallback 000D  
                                 _EUSART_Write 03E9                                 _ADC_Initialize 0637  
                        ?_I2C_MasterSendTxData 0070                         ?_OSCILLATOR_Initialize 0070  
                  ??_I2C_DO_SEND_RESTART_WRITE 0070                                 __end_of_printf 053C  
                          start_initialization 0049                __size_of_PIN_MANAGER_Initialize 001C  
                                ??_EUSART_Read 0048                                  ?_I2C_DO_RESET 0070  
 EUSART_SetRxInterruptHandler@interruptHandler 0048   EUSART_SetTxInterruptHandler@interruptHandler 0048  
                                  putch@txData 004A                                    ??_I2C_DO_RX 007A  
                                  ??_I2C_DO_TX 007A                 __end_of_I2C_CallbackReturnStop 06DF  
                       _I2C_DO_RX_NACK_RESTART 0684                               ?_I2C_DO_TX_EMPTY 0070  
                           _I2C_MasterClearIrq 06C9                 ?_EUSART_SetOverrunErrorHandler 0048  
                                  vfprintf@fmt 005B                     _EUSART_FramingErrorHandler 0034  
                       _EUSART_SetErrorHandler 0673                            ?_I2C_MasterClearIrq 0070  
                       __end_of_ADC_Initialize 063F                    __end_of_I2C_MasterGetRxData 06D2  
                        __end_of_I2C_DO_RX_ACK 0693                               _I2C_DO_SEND_STOP 0693  
                            ??_I2C_SetCallback 0073                                       ??_printf 0065  
                           _I2C_MasterSendNack 06BD                       ?_I2C_MasterEnableRestart 0070  
                            _i2c_fsmStateTable 03BE                    __end_of_EUSART_Transmit_ISR 04AF  
                        _I2C_DO_SEND_ADR_WRITE 063F                                      ___latbits 0003  
                                __pcstackBANK0 0045                                 ??_I2C_DO_RESET 0070  
                          ?_I2C_MasterSendNack 0070                   __end_of_I2C_DO_SEND_ADR_READ 0637  
                         ??_I2C_MasterClearIrq 0070                    __end_of_I2C_DO_ADDRESS_NACK 03BE  
                   __end_of_EUSART_Receive_ISR 0335                               _I2C_MasterIsNack 0679  
                   __size_of_EUSART_Initialize 0045                      _I2C_DO_SEND_RESTART_WRITE 069D  
             _EUSART_RxDefaultInterruptHandler 0036                            __end_of_EUSART_Read 043F  
                             _I2C_MasterSetIrq 06CC                          _rd2RegCompleteHandler 054D  
                 __end_of_EUSART_RxDataHandler 04FF                         _PIN_MANAGER_Initialize 04AF  
                        _wr2RegCompleteHandler 056F                      ??_I2C_CallbackReturnReset 007A  
                         EUSART_Read@readValue 0049                           ??_I2C_MasterSendNack 0070  
                     rd2RegCompleteHandler@ptr 0079                                ?_ADC_Initialize 0070  
                                 _eusartRxHead 0041                                   _eusartTxHead 0044  
                                 _eusartRxTail 0040                         ??_I2C_MasterSendTxData 0070  
                                 _eusartTxTail 0043                      __end_of_i2c_fsmStateTable 03DE  
                 ??_INTERRUPT_InterruptManager 007D                              __size_of_vfprintf 0028  
                      _eusartTxBufferRemaining 0042                   __size_of_I2C_DO_SEND_RESTART 0005  
                               __size_of_fputc 0041                        ??_rd1RegCompleteHandler 007A  
                               __size_of_reset 001A                                 __size_of_putch 0007  
                               _eusartRxBuffer 00DD                        ??_wr1RegCompleteHandler 007A  
                               _eusartTxBuffer 00E5                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 0048                                       _LATBbits 010D  
                                    clear_ram0 0655                                       _PIE1bits 0091  
                                     _PIE2bits 0092                              _eusartRxLastError 003E  
          __size_of_INTERRUPT_InterruptManager 0043                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 004A                                       _PIR2bits 0012  
                        __end_of_I2C_MasterFsm 0392                          __end_of_I2C_MasterIsr 06B9  
                  __end_of_I2C_DO_RX_NACK_STOP 068E      __end_of_EUSART_DefaultOverrunErrorHandler 06C5  
   __size_of_EUSART_DefaultOverrunErrorHandler 0004            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 06C1  
              __end_of_I2C_MasterEnableRestart 06DB                                      _vfpfcnvrt 015E  
                        __end_of_I2C_SetBuffer 0590                                     _ADCON0bits 009D  
                       ?_I2C_DO_SEND_ADR_WRITE 0070                       I2C_MasterSendTxData@data 0070  
                     wr2RegCompleteHandler@ptr 0079                                    _EUSART_Read 0414  
                   ??_I2C_DO_SEND_RESTART_READ 0070                       ?_rdBlkRegCompleteHandler 0079  
                                   _I2C_Status 00C0                                   ?_I2C_DO_IDLE 0070  
                                 ?_I2C_DO_RCEN 0070                         ?_rd2RegCompleteHandler 0079  
                                   _EECON1bits 0195                         ?_wr2RegCompleteHandler 0079  
                             ??_I2C_MasterStop 0070                               ??_I2C_Initialize 0048  
                                   vfprintf@ap 005D                                     vfprintf@fp 0060  
                         __end_of_I2C_DO_RESET 0684                        ??_OSCILLATOR_Initialize 0048  
                          _EUSART_ErrorHandler 0030                           _I2C_DO_SEND_ADR_READ 062E  
                  ?_EUSART_DefaultErrorHandler 0070                                     ?_vfpfcnvrt 0053  
                         _EUSART_RxDataHandler 04E5                                       __ptext10 04AF  
                                     __ptext11 059D                                       __ptext20 0414  
                                     __ptext12 0624                                       __ptext13 0275  
                                     __ptext30 0693                                       __ptext22 06B5  
                                     __ptext14 065B                                       __ptext31 0698  
                                     __ptext23 0364                                       __ptext15 0661  
                                     __ptext40 0335                                       __ptext32 069D  
                                     __ptext24 06C9                                       __ptext16 0667  
                                     __ptext41 06CC                                       __ptext33 06A2  
                                     __ptext25 0392                                       __ptext17 066D  
                                     __ptext50 04FF                                       __ptext42 0679  
                                     __ptext34 064E                                       __ptext26 067F  
                                     __ptext18 0673                                       __ptext51 053C  
                                     __ptext43 06AC                                       __ptext35 022F  
                                     __ptext27 0684                                       __ptext19 0637  
                                     __ptext60 048D                                       __ptext52 054D  
                                     __ptext44 06B9                                       __ptext36 01DA  
                                     __ptext28 0689                                       __ptext61 02FB  
                                     __ptext53 055E                                       __ptext45 06CF  
                                     __ptext37 063F                                       __ptext29 068E  
                                     __ptext62 06C1                                       __ptext54 056F  
                                     __ptext46 06BD                                       __ptext38 062E  
                                     __ptext63 06DF                                       __ptext55 0590  
                                     __ptext47 06D2                                       __ptext39 06A7  
                                     __ptext64 06C5                                       __ptext56 0467  
                                     __ptext48 06DB                                       __ptext65 04E5  
                                     __ptext57 0580                                       __ptext49 06DD  
                                     __ptext58 06D5                                       __ptext59 06D8  
          __end_of_I2C_SetDataCompleteCallback 059D                    _I2C_SetDataCompleteCallback 0590  
                      ?_I2C_DO_RX_NACK_RESTART 0070                       __end_of_I2C_DO_SEND_STOP 0698  
                                __size_of_main 0101                        ?_EUSART_SetErrorHandler 0048  
                              _I2C_SetCallback 0467                  ??_I2C_SetDataCompleteCallback 0078  
EUSART_SetOverrunErrorHandler@interruptHandler 0048                                       int$flags 007E  
                        ?_I2C_DO_SEND_ADR_READ 0070                                       _vfprintf 043F  
           __end_of_INTERRUPT_InterruptManager 0047                     _INTERRUPT_InterruptManager 0004  
                                    printf@fmt 0063          __end_of_EUSART_SetFramingErrorHandler 0673  
       __size_of_EUSART_SetFramingErrorHandler 0006                  _EUSART_SetFramingErrorHandler 066D  
                     __end_of_I2C_MasterIsNack 067F                       __end_of_I2C_MasterSetIrq 06CF  
                                   _INTCONbits 000B                          ?_EUSART_RxDataHandler 0070  
                               __pstringtext10 05FC                                 __pstringtext11 0606  
                               __pstringtext12 0610                                 __pstringtext13 061A  
                               __pstringtext14 0000                 __end_of_I2C_DO_RX_NACK_RESTART 0689  
                      __size_of_WDT_Initialize 0004                                       intlevel1 0000  
             __size_of_I2C_MasterEnableRestart 0003                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 0679                            _I2C_DO_SEND_RESTART 0698  
                             ??_ADC_Initialize 0048           __end_of_EUSART_SetRxInterruptHandler 0667  
        __size_of_EUSART_SetRxInterruptHandler 0006                   _EUSART_SetRxInterruptHandler 0661  
                                     printf@ap 0066                             _EUSART_Receive_ISR 02FB  
EUSART_SetFramingErrorHandler@interruptHandler 0048                       __size_of_I2C_DO_TX_EMPTY 002F  
                                  ??_vfpfcnvrt 0055                                  __pstringtext1 03BE  
                                __pstringtext2 05A9                                  __pstringtext3 05B4  
                                __pstringtext4 05BF                                  __pstringtext5 05CA  
                                __pstringtext6 05D4                                  __pstringtext7 05DE  
                                __pstringtext8 05E8                                  __pstringtext9 05F2  
                         ?_I2C_DO_SEND_RESTART 0070                            ?_EUSART_Receive_ISR 0070  
                 __size_of_I2C_MasterGetRxData 0003                                    _SSPCON1bits 0215  
                                  _SSPCON2bits 0216                    __size_of_I2C_MasterClearIrq 0003  
                           EUSART_Write@txData 0049                   __size_of_EUSART_Transmit_ISR 0022  
                      __end_of_I2C_SetCallback 048D                 __end_of_PIN_MANAGER_Initialize 04CB  
               __size_of_rd1RegCompleteHandler 0011                  __end_of_rd1RegCompleteHandler 056F  
                       __size_of_I2C_DO_RX_ACK 0005                 __size_of_wr1RegCompleteHandler 0011  
                         ??_EUSART_Receive_ISR 0071                          __size_of_I2C_DO_RESET 0005  
                __end_of_wr1RegCompleteHandler 054D                          _MSSP_InterruptHandler 003C  
                 __size_of_I2C_DO_ADDRESS_NACK 002C                           __size_of_I2C_DO_IDLE 0005  
                         __size_of_I2C_DO_RCEN 0007                             __size_of_I2C_DO_RX 0046  
                           __size_of_I2C_DO_TX 0055  
