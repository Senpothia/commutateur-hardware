

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Feb 06 15:44:41 2025

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1939
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    18                           	psect	cinit,global,class=CODE,merge=1,delta=2
    19                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    25                           	psect	text1,local,class=CODE,merge=1,delta=2
    26                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    30                           	psect	text6,local,class=CODE,merge=1,delta=2
    31                           	psect	text7,local,class=CODE,merge=1,delta=2
    32                           	psect	text8,local,class=CODE,merge=1,delta=2
    33                           	psect	text9,local,class=CODE,merge=1,delta=2
    34                           	psect	text10,local,class=CODE,merge=1,delta=2
    35                           	psect	text11,local,class=CODE,merge=1,delta=2
    36                           	psect	text12,local,class=CODE,merge=1,delta=2
    37                           	psect	text13,local,class=CODE,merge=1,delta=2
    38                           	psect	text14,local,class=CODE,merge=1,delta=2
    39                           	psect	text15,local,class=CODE,merge=1,delta=2
    40                           	psect	text16,local,class=CODE,merge=1,delta=2
    41                           	psect	text17,local,class=CODE,merge=1,delta=2
    42                           	psect	text18,local,class=CODE,merge=1,delta=2
    43                           	psect	text19,local,class=CODE,merge=1,delta=2
    44                           	psect	text20,local,class=CODE,merge=1,delta=2
    45                           	psect	intentry,global,class=CODE,delta=2
    46                           	psect	text22,local,class=CODE,merge=1,delta=2
    47                           	psect	text23,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text24,local,class=CODE,merge=1,inline,delta=2
    49                           	psect	text25,local,class=CODE,merge=1,delta=2
    50                           	psect	text26,local,class=CODE,merge=1,delta=2
    51                           	psect	text27,local,class=CODE,merge=1,delta=2
    52                           	psect	text28,local,class=CODE,merge=1,delta=2
    53                           	psect	text29,local,class=CODE,merge=1,delta=2
    54                           	psect	text30,local,class=CODE,merge=1,delta=2
    55                           	psect	text31,local,class=CODE,merge=1,delta=2
    56                           	psect	text32,local,class=CODE,merge=1,delta=2
    57                           	psect	text33,local,class=CODE,merge=1,delta=2
    58                           	psect	text34,local,class=CODE,merge=1,delta=2
    59                           	psect	text35,local,class=CODE,merge=1,delta=2
    60                           	psect	text36,local,class=CODE,merge=1,delta=2
    61                           	psect	text37,local,class=CODE,merge=1,delta=2
    62                           	psect	text38,local,class=CODE,merge=1,delta=2
    63                           	psect	text39,local,class=CODE,merge=1,delta=2
    64                           	psect	text40,local,class=CODE,merge=1,delta=2
    65                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    66                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    67                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    68                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text45,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text46,local,class=CODE,merge=1,inline,delta=2
    71                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    72                           	psect	text48,local,class=CODE,merge=1,delta=2
    73                           	psect	text49,local,class=CODE,merge=1,delta=2
    74                           	psect	text50,local,class=CODE,merge=1,delta=2
    75                           	psect	text51,local,class=CODE,merge=1,delta=2
    76                           	psect	text52,local,class=CODE,merge=1,delta=2
    77                           	psect	text53,local,class=CODE,merge=1,delta=2
    78                           	psect	text54,local,class=CODE,merge=1,delta=2
    79                           	psect	text55,local,class=CODE,merge=1,delta=2
    80                           	psect	text56,local,class=CODE,merge=1,delta=2
    81                           	psect	text57,local,class=CODE,merge=1,delta=2
    82                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    83                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    84                           	psect	text60,local,class=CODE,merge=1,delta=2
    85                           	psect	text61,local,class=CODE,merge=1,delta=2
    86                           	psect	text62,local,class=CODE,merge=1,delta=2
    87                           	psect	text63,local,class=CODE,merge=1,delta=2
    88                           	psect	text64,local,class=CODE,merge=1,delta=2
    89                           	psect	text65,local,class=CODE,merge=1,delta=2
    90                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    91                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    92                           	dabs	1,0x7E,2
    93  0000                     
    94                           ; Version 2.32
    95                           ; Generated 02/02/2021 GMT
    96                           ; 
    97                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    98                           ; All rights reserved.
    99                           ; 
   100                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   101                           ; 
   102                           ; Redistribution and use in source and binary forms, with or without modification, are
   103                           ; permitted provided that the following conditions are met:
   104                           ; 
   105                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   106                           ;        conditions and the following disclaimer.
   107                           ; 
   108                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   109                           ;        of conditions and the following disclaimer in the documentation and/or other
   110                           ;        materials provided with the distribution. Publication is not required when
   111                           ;        this file is used in an embedded application.
   112                           ; 
   113                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   114                           ;        software without specific prior written permission.
   115                           ; 
   116                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   117                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   118                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   119                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   120                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   121                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   122                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   123                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   124                           ; 
   125                           ; 
   126                           ; Code-generator required, PIC16F1939 Definitions
   127                           ; 
   128                           ; SFR Addresses
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  008C                     	;# 
   161  008D                     	;# 
   162  008E                     	;# 
   163  008F                     	;# 
   164  0090                     	;# 
   165  0091                     	;# 
   166  0092                     	;# 
   167  0093                     	;# 
   168  0095                     	;# 
   169  0096                     	;# 
   170  0097                     	;# 
   171  0098                     	;# 
   172  0099                     	;# 
   173  009A                     	;# 
   174  009B                     	;# 
   175  009B                     	;# 
   176  009C                     	;# 
   177  009D                     	;# 
   178  009E                     	;# 
   179  010C                     	;# 
   180  010D                     	;# 
   181  010E                     	;# 
   182  010F                     	;# 
   183  0110                     	;# 
   184  0111                     	;# 
   185  0112                     	;# 
   186  0113                     	;# 
   187  0114                     	;# 
   188  0115                     	;# 
   189  0116                     	;# 
   190  0117                     	;# 
   191  0118                     	;# 
   192  0119                     	;# 
   193  011A                     	;# 
   194  011B                     	;# 
   195  011D                     	;# 
   196  018C                     	;# 
   197  018D                     	;# 
   198  018F                     	;# 
   199  0190                     	;# 
   200  0191                     	;# 
   201  0191                     	;# 
   202  0192                     	;# 
   203  0193                     	;# 
   204  0193                     	;# 
   205  0193                     	;# 
   206  0194                     	;# 
   207  0195                     	;# 
   208  0196                     	;# 
   209  0199                     	;# 
   210  019A                     	;# 
   211  019B                     	;# 
   212  019B                     	;# 
   213  019B                     	;# 
   214  019B                     	;# 
   215  019C                     	;# 
   216  019C                     	;# 
   217  019D                     	;# 
   218  019E                     	;# 
   219  019F                     	;# 
   220  020D                     	;# 
   221  0210                     	;# 
   222  0211                     	;# 
   223  0212                     	;# 
   224  0213                     	;# 
   225  0214                     	;# 
   226  0215                     	;# 
   227  0215                     	;# 
   228  0216                     	;# 
   229  0217                     	;# 
   230  0291                     	;# 
   231  0291                     	;# 
   232  0292                     	;# 
   233  0293                     	;# 
   234  0294                     	;# 
   235  0295                     	;# 
   236  0295                     	;# 
   237  0296                     	;# 
   238  0298                     	;# 
   239  0298                     	;# 
   240  0299                     	;# 
   241  029A                     	;# 
   242  029B                     	;# 
   243  029C                     	;# 
   244  029C                     	;# 
   245  029D                     	;# 
   246  029E                     	;# 
   247  029F                     	;# 
   248  0311                     	;# 
   249  0311                     	;# 
   250  0312                     	;# 
   251  0313                     	;# 
   252  0314                     	;# 
   253  0315                     	;# 
   254  0315                     	;# 
   255  0316                     	;# 
   256  0318                     	;# 
   257  0318                     	;# 
   258  0319                     	;# 
   259  031A                     	;# 
   260  031C                     	;# 
   261  031C                     	;# 
   262  031D                     	;# 
   263  031E                     	;# 
   264  0394                     	;# 
   265  0395                     	;# 
   266  0396                     	;# 
   267  0415                     	;# 
   268  0416                     	;# 
   269  0417                     	;# 
   270  041C                     	;# 
   271  041D                     	;# 
   272  041E                     	;# 
   273  0791                     	;# 
   274  0792                     	;# 
   275  0793                     	;# 
   276  0794                     	;# 
   277  0795                     	;# 
   278  0798                     	;# 
   279  0799                     	;# 
   280  079A                     	;# 
   281  07A0                     	;# 
   282  07A1                     	;# 
   283  07A2                     	;# 
   284  07A3                     	;# 
   285  07A4                     	;# 
   286  07A5                     	;# 
   287  07A6                     	;# 
   288  07A7                     	;# 
   289  07A8                     	;# 
   290  07A9                     	;# 
   291  07AA                     	;# 
   292  07AB                     	;# 
   293  0FE4                     	;# 
   294  0FE5                     	;# 
   295  0FE6                     	;# 
   296  0FE7                     	;# 
   297  0FE8                     	;# 
   298  0FE9                     	;# 
   299  0FEA                     	;# 
   300  0FEB                     	;# 
   301  0FED                     	;# 
   302  0FEE                     	;# 
   303  0FEF                     	;# 
   304  0000                     	;# 
   305  0001                     	;# 
   306  0002                     	;# 
   307  0003                     	;# 
   308  0004                     	;# 
   309  0005                     	;# 
   310  0006                     	;# 
   311  0007                     	;# 
   312  0008                     	;# 
   313  0009                     	;# 
   314  000A                     	;# 
   315  000B                     	;# 
   316  000C                     	;# 
   317  000D                     	;# 
   318  000E                     	;# 
   319  000F                     	;# 
   320  0010                     	;# 
   321  0011                     	;# 
   322  0012                     	;# 
   323  0013                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0016                     	;# 
   327  0017                     	;# 
   328  0018                     	;# 
   329  0019                     	;# 
   330  001A                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  008C                     	;# 
   336  008D                     	;# 
   337  008E                     	;# 
   338  008F                     	;# 
   339  0090                     	;# 
   340  0091                     	;# 
   341  0092                     	;# 
   342  0093                     	;# 
   343  0095                     	;# 
   344  0096                     	;# 
   345  0097                     	;# 
   346  0098                     	;# 
   347  0099                     	;# 
   348  009A                     	;# 
   349  009B                     	;# 
   350  009B                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  010C                     	;# 
   355  010D                     	;# 
   356  010E                     	;# 
   357  010F                     	;# 
   358  0110                     	;# 
   359  0111                     	;# 
   360  0112                     	;# 
   361  0113                     	;# 
   362  0114                     	;# 
   363  0115                     	;# 
   364  0116                     	;# 
   365  0117                     	;# 
   366  0118                     	;# 
   367  0119                     	;# 
   368  011A                     	;# 
   369  011B                     	;# 
   370  011D                     	;# 
   371  018C                     	;# 
   372  018D                     	;# 
   373  018F                     	;# 
   374  0190                     	;# 
   375  0191                     	;# 
   376  0191                     	;# 
   377  0192                     	;# 
   378  0193                     	;# 
   379  0193                     	;# 
   380  0193                     	;# 
   381  0194                     	;# 
   382  0195                     	;# 
   383  0196                     	;# 
   384  0199                     	;# 
   385  019A                     	;# 
   386  019B                     	;# 
   387  019B                     	;# 
   388  019B                     	;# 
   389  019B                     	;# 
   390  019C                     	;# 
   391  019C                     	;# 
   392  019D                     	;# 
   393  019E                     	;# 
   394  019F                     	;# 
   395  020D                     	;# 
   396  0210                     	;# 
   397  0211                     	;# 
   398  0212                     	;# 
   399  0213                     	;# 
   400  0214                     	;# 
   401  0215                     	;# 
   402  0215                     	;# 
   403  0216                     	;# 
   404  0217                     	;# 
   405  0291                     	;# 
   406  0291                     	;# 
   407  0292                     	;# 
   408  0293                     	;# 
   409  0294                     	;# 
   410  0295                     	;# 
   411  0295                     	;# 
   412  0296                     	;# 
   413  0298                     	;# 
   414  0298                     	;# 
   415  0299                     	;# 
   416  029A                     	;# 
   417  029B                     	;# 
   418  029C                     	;# 
   419  029C                     	;# 
   420  029D                     	;# 
   421  029E                     	;# 
   422  029F                     	;# 
   423  0311                     	;# 
   424  0311                     	;# 
   425  0312                     	;# 
   426  0313                     	;# 
   427  0314                     	;# 
   428  0315                     	;# 
   429  0315                     	;# 
   430  0316                     	;# 
   431  0318                     	;# 
   432  0318                     	;# 
   433  0319                     	;# 
   434  031A                     	;# 
   435  031C                     	;# 
   436  031C                     	;# 
   437  031D                     	;# 
   438  031E                     	;# 
   439  0394                     	;# 
   440  0395                     	;# 
   441  0396                     	;# 
   442  0415                     	;# 
   443  0416                     	;# 
   444  0417                     	;# 
   445  041C                     	;# 
   446  041D                     	;# 
   447  041E                     	;# 
   448  0791                     	;# 
   449  0792                     	;# 
   450  0793                     	;# 
   451  0794                     	;# 
   452  0795                     	;# 
   453  0798                     	;# 
   454  0799                     	;# 
   455  079A                     	;# 
   456  07A0                     	;# 
   457  07A1                     	;# 
   458  07A2                     	;# 
   459  07A3                     	;# 
   460  07A4                     	;# 
   461  07A5                     	;# 
   462  07A6                     	;# 
   463  07A7                     	;# 
   464  07A8                     	;# 
   465  07A9                     	;# 
   466  07AA                     	;# 
   467  07AB                     	;# 
   468  0FE4                     	;# 
   469  0FE5                     	;# 
   470  0FE6                     	;# 
   471  0FE7                     	;# 
   472  0FE8                     	;# 
   473  0FE9                     	;# 
   474  0FEA                     	;# 
   475  0FEB                     	;# 
   476  0FED                     	;# 
   477  0FEE                     	;# 
   478  0FEF                     	;# 
   479  0000                     	;# 
   480  0001                     	;# 
   481  0002                     	;# 
   482  0003                     	;# 
   483  0004                     	;# 
   484  0005                     	;# 
   485  0006                     	;# 
   486  0007                     	;# 
   487  0008                     	;# 
   488  0009                     	;# 
   489  000A                     	;# 
   490  000B                     	;# 
   491  000C                     	;# 
   492  000D                     	;# 
   493  000E                     	;# 
   494  000F                     	;# 
   495  0010                     	;# 
   496  0011                     	;# 
   497  0012                     	;# 
   498  0013                     	;# 
   499  0015                     	;# 
   500  0016                     	;# 
   501  0016                     	;# 
   502  0017                     	;# 
   503  0018                     	;# 
   504  0019                     	;# 
   505  001A                     	;# 
   506  001B                     	;# 
   507  001C                     	;# 
   508  001E                     	;# 
   509  001F                     	;# 
   510  008C                     	;# 
   511  008D                     	;# 
   512  008E                     	;# 
   513  008F                     	;# 
   514  0090                     	;# 
   515  0091                     	;# 
   516  0092                     	;# 
   517  0093                     	;# 
   518  0095                     	;# 
   519  0096                     	;# 
   520  0097                     	;# 
   521  0098                     	;# 
   522  0099                     	;# 
   523  009A                     	;# 
   524  009B                     	;# 
   525  009B                     	;# 
   526  009C                     	;# 
   527  009D                     	;# 
   528  009E                     	;# 
   529  010C                     	;# 
   530  010D                     	;# 
   531  010E                     	;# 
   532  010F                     	;# 
   533  0110                     	;# 
   534  0111                     	;# 
   535  0112                     	;# 
   536  0113                     	;# 
   537  0114                     	;# 
   538  0115                     	;# 
   539  0116                     	;# 
   540  0117                     	;# 
   541  0118                     	;# 
   542  0119                     	;# 
   543  011A                     	;# 
   544  011B                     	;# 
   545  011D                     	;# 
   546  018C                     	;# 
   547  018D                     	;# 
   548  018F                     	;# 
   549  0190                     	;# 
   550  0191                     	;# 
   551  0191                     	;# 
   552  0192                     	;# 
   553  0193                     	;# 
   554  0193                     	;# 
   555  0193                     	;# 
   556  0194                     	;# 
   557  0195                     	;# 
   558  0196                     	;# 
   559  0199                     	;# 
   560  019A                     	;# 
   561  019B                     	;# 
   562  019B                     	;# 
   563  019B                     	;# 
   564  019B                     	;# 
   565  019C                     	;# 
   566  019C                     	;# 
   567  019D                     	;# 
   568  019E                     	;# 
   569  019F                     	;# 
   570  020D                     	;# 
   571  0210                     	;# 
   572  0211                     	;# 
   573  0212                     	;# 
   574  0213                     	;# 
   575  0214                     	;# 
   576  0215                     	;# 
   577  0215                     	;# 
   578  0216                     	;# 
   579  0217                     	;# 
   580  0291                     	;# 
   581  0291                     	;# 
   582  0292                     	;# 
   583  0293                     	;# 
   584  0294                     	;# 
   585  0295                     	;# 
   586  0295                     	;# 
   587  0296                     	;# 
   588  0298                     	;# 
   589  0298                     	;# 
   590  0299                     	;# 
   591  029A                     	;# 
   592  029B                     	;# 
   593  029C                     	;# 
   594  029C                     	;# 
   595  029D                     	;# 
   596  029E                     	;# 
   597  029F                     	;# 
   598  0311                     	;# 
   599  0311                     	;# 
   600  0312                     	;# 
   601  0313                     	;# 
   602  0314                     	;# 
   603  0315                     	;# 
   604  0315                     	;# 
   605  0316                     	;# 
   606  0318                     	;# 
   607  0318                     	;# 
   608  0319                     	;# 
   609  031A                     	;# 
   610  031C                     	;# 
   611  031C                     	;# 
   612  031D                     	;# 
   613  031E                     	;# 
   614  0394                     	;# 
   615  0395                     	;# 
   616  0396                     	;# 
   617  0415                     	;# 
   618  0416                     	;# 
   619  0417                     	;# 
   620  041C                     	;# 
   621  041D                     	;# 
   622  041E                     	;# 
   623  0791                     	;# 
   624  0792                     	;# 
   625  0793                     	;# 
   626  0794                     	;# 
   627  0795                     	;# 
   628  0798                     	;# 
   629  0799                     	;# 
   630  079A                     	;# 
   631  07A0                     	;# 
   632  07A1                     	;# 
   633  07A2                     	;# 
   634  07A3                     	;# 
   635  07A4                     	;# 
   636  07A5                     	;# 
   637  07A6                     	;# 
   638  07A7                     	;# 
   639  07A8                     	;# 
   640  07A9                     	;# 
   641  07AA                     	;# 
   642  07AB                     	;# 
   643  0FE4                     	;# 
   644  0FE5                     	;# 
   645  0FE6                     	;# 
   646  0FE7                     	;# 
   647  0FE8                     	;# 
   648  0FE9                     	;# 
   649  0FEA                     	;# 
   650  0FEB                     	;# 
   651  0FED                     	;# 
   652  0FEE                     	;# 
   653  0FEF                     	;# 
   654  0000                     	;# 
   655  0001                     	;# 
   656  0002                     	;# 
   657  0003                     	;# 
   658  0004                     	;# 
   659  0005                     	;# 
   660  0006                     	;# 
   661  0007                     	;# 
   662  0008                     	;# 
   663  0009                     	;# 
   664  000A                     	;# 
   665  000B                     	;# 
   666  000C                     	;# 
   667  000D                     	;# 
   668  000E                     	;# 
   669  000F                     	;# 
   670  0010                     	;# 
   671  0011                     	;# 
   672  0012                     	;# 
   673  0013                     	;# 
   674  0015                     	;# 
   675  0016                     	;# 
   676  0016                     	;# 
   677  0017                     	;# 
   678  0018                     	;# 
   679  0019                     	;# 
   680  001A                     	;# 
   681  001B                     	;# 
   682  001C                     	;# 
   683  001E                     	;# 
   684  001F                     	;# 
   685  008C                     	;# 
   686  008D                     	;# 
   687  008E                     	;# 
   688  008F                     	;# 
   689  0090                     	;# 
   690  0091                     	;# 
   691  0092                     	;# 
   692  0093                     	;# 
   693  0095                     	;# 
   694  0096                     	;# 
   695  0097                     	;# 
   696  0098                     	;# 
   697  0099                     	;# 
   698  009A                     	;# 
   699  009B                     	;# 
   700  009B                     	;# 
   701  009C                     	;# 
   702  009D                     	;# 
   703  009E                     	;# 
   704  010C                     	;# 
   705  010D                     	;# 
   706  010E                     	;# 
   707  010F                     	;# 
   708  0110                     	;# 
   709  0111                     	;# 
   710  0112                     	;# 
   711  0113                     	;# 
   712  0114                     	;# 
   713  0115                     	;# 
   714  0116                     	;# 
   715  0117                     	;# 
   716  0118                     	;# 
   717  0119                     	;# 
   718  011A                     	;# 
   719  011B                     	;# 
   720  011D                     	;# 
   721  018C                     	;# 
   722  018D                     	;# 
   723  018F                     	;# 
   724  0190                     	;# 
   725  0191                     	;# 
   726  0191                     	;# 
   727  0192                     	;# 
   728  0193                     	;# 
   729  0193                     	;# 
   730  0193                     	;# 
   731  0194                     	;# 
   732  0195                     	;# 
   733  0196                     	;# 
   734  0199                     	;# 
   735  019A                     	;# 
   736  019B                     	;# 
   737  019B                     	;# 
   738  019B                     	;# 
   739  019B                     	;# 
   740  019C                     	;# 
   741  019C                     	;# 
   742  019D                     	;# 
   743  019E                     	;# 
   744  019F                     	;# 
   745  020D                     	;# 
   746  0210                     	;# 
   747  0211                     	;# 
   748  0212                     	;# 
   749  0213                     	;# 
   750  0214                     	;# 
   751  0215                     	;# 
   752  0215                     	;# 
   753  0216                     	;# 
   754  0217                     	;# 
   755  0291                     	;# 
   756  0291                     	;# 
   757  0292                     	;# 
   758  0293                     	;# 
   759  0294                     	;# 
   760  0295                     	;# 
   761  0295                     	;# 
   762  0296                     	;# 
   763  0298                     	;# 
   764  0298                     	;# 
   765  0299                     	;# 
   766  029A                     	;# 
   767  029B                     	;# 
   768  029C                     	;# 
   769  029C                     	;# 
   770  029D                     	;# 
   771  029E                     	;# 
   772  029F                     	;# 
   773  0311                     	;# 
   774  0311                     	;# 
   775  0312                     	;# 
   776  0313                     	;# 
   777  0314                     	;# 
   778  0315                     	;# 
   779  0315                     	;# 
   780  0316                     	;# 
   781  0318                     	;# 
   782  0318                     	;# 
   783  0319                     	;# 
   784  031A                     	;# 
   785  031C                     	;# 
   786  031C                     	;# 
   787  031D                     	;# 
   788  031E                     	;# 
   789  0394                     	;# 
   790  0395                     	;# 
   791  0396                     	;# 
   792  0415                     	;# 
   793  0416                     	;# 
   794  0417                     	;# 
   795  041C                     	;# 
   796  041D                     	;# 
   797  041E                     	;# 
   798  0791                     	;# 
   799  0792                     	;# 
   800  0793                     	;# 
   801  0794                     	;# 
   802  0795                     	;# 
   803  0798                     	;# 
   804  0799                     	;# 
   805  079A                     	;# 
   806  07A0                     	;# 
   807  07A1                     	;# 
   808  07A2                     	;# 
   809  07A3                     	;# 
   810  07A4                     	;# 
   811  07A5                     	;# 
   812  07A6                     	;# 
   813  07A7                     	;# 
   814  07A8                     	;# 
   815  07A9                     	;# 
   816  07AA                     	;# 
   817  07AB                     	;# 
   818  0FE4                     	;# 
   819  0FE5                     	;# 
   820  0FE6                     	;# 
   821  0FE7                     	;# 
   822  0FE8                     	;# 
   823  0FE9                     	;# 
   824  0FEA                     	;# 
   825  0FEB                     	;# 
   826  0FED                     	;# 
   827  0FEE                     	;# 
   828  0FEF                     	;# 
   829  0000                     	;# 
   830  0001                     	;# 
   831  0002                     	;# 
   832  0003                     	;# 
   833  0004                     	;# 
   834  0005                     	;# 
   835  0006                     	;# 
   836  0007                     	;# 
   837  0008                     	;# 
   838  0009                     	;# 
   839  000A                     	;# 
   840  000B                     	;# 
   841  000C                     	;# 
   842  000D                     	;# 
   843  000E                     	;# 
   844  000F                     	;# 
   845  0010                     	;# 
   846  0011                     	;# 
   847  0012                     	;# 
   848  0013                     	;# 
   849  0015                     	;# 
   850  0016                     	;# 
   851  0016                     	;# 
   852  0017                     	;# 
   853  0018                     	;# 
   854  0019                     	;# 
   855  001A                     	;# 
   856  001B                     	;# 
   857  001C                     	;# 
   858  001E                     	;# 
   859  001F                     	;# 
   860  008C                     	;# 
   861  008D                     	;# 
   862  008E                     	;# 
   863  008F                     	;# 
   864  0090                     	;# 
   865  0091                     	;# 
   866  0092                     	;# 
   867  0093                     	;# 
   868  0095                     	;# 
   869  0096                     	;# 
   870  0097                     	;# 
   871  0098                     	;# 
   872  0099                     	;# 
   873  009A                     	;# 
   874  009B                     	;# 
   875  009B                     	;# 
   876  009C                     	;# 
   877  009D                     	;# 
   878  009E                     	;# 
   879  010C                     	;# 
   880  010D                     	;# 
   881  010E                     	;# 
   882  010F                     	;# 
   883  0110                     	;# 
   884  0111                     	;# 
   885  0112                     	;# 
   886  0113                     	;# 
   887  0114                     	;# 
   888  0115                     	;# 
   889  0116                     	;# 
   890  0117                     	;# 
   891  0118                     	;# 
   892  0119                     	;# 
   893  011A                     	;# 
   894  011B                     	;# 
   895  011D                     	;# 
   896  018C                     	;# 
   897  018D                     	;# 
   898  018F                     	;# 
   899  0190                     	;# 
   900  0191                     	;# 
   901  0191                     	;# 
   902  0192                     	;# 
   903  0193                     	;# 
   904  0193                     	;# 
   905  0193                     	;# 
   906  0194                     	;# 
   907  0195                     	;# 
   908  0196                     	;# 
   909  0199                     	;# 
   910  019A                     	;# 
   911  019B                     	;# 
   912  019B                     	;# 
   913  019B                     	;# 
   914  019B                     	;# 
   915  019C                     	;# 
   916  019C                     	;# 
   917  019D                     	;# 
   918  019E                     	;# 
   919  019F                     	;# 
   920  020D                     	;# 
   921  0210                     	;# 
   922  0211                     	;# 
   923  0212                     	;# 
   924  0213                     	;# 
   925  0214                     	;# 
   926  0215                     	;# 
   927  0215                     	;# 
   928  0216                     	;# 
   929  0217                     	;# 
   930  0291                     	;# 
   931  0291                     	;# 
   932  0292                     	;# 
   933  0293                     	;# 
   934  0294                     	;# 
   935  0295                     	;# 
   936  0295                     	;# 
   937  0296                     	;# 
   938  0298                     	;# 
   939  0298                     	;# 
   940  0299                     	;# 
   941  029A                     	;# 
   942  029B                     	;# 
   943  029C                     	;# 
   944  029C                     	;# 
   945  029D                     	;# 
   946  029E                     	;# 
   947  029F                     	;# 
   948  0311                     	;# 
   949  0311                     	;# 
   950  0312                     	;# 
   951  0313                     	;# 
   952  0314                     	;# 
   953  0315                     	;# 
   954  0315                     	;# 
   955  0316                     	;# 
   956  0318                     	;# 
   957  0318                     	;# 
   958  0319                     	;# 
   959  031A                     	;# 
   960  031C                     	;# 
   961  031C                     	;# 
   962  031D                     	;# 
   963  031E                     	;# 
   964  0394                     	;# 
   965  0395                     	;# 
   966  0396                     	;# 
   967  0415                     	;# 
   968  0416                     	;# 
   969  0417                     	;# 
   970  041C                     	;# 
   971  041D                     	;# 
   972  041E                     	;# 
   973  0791                     	;# 
   974  0792                     	;# 
   975  0793                     	;# 
   976  0794                     	;# 
   977  0795                     	;# 
   978  0798                     	;# 
   979  0799                     	;# 
   980  079A                     	;# 
   981  07A0                     	;# 
   982  07A1                     	;# 
   983  07A2                     	;# 
   984  07A3                     	;# 
   985  07A4                     	;# 
   986  07A5                     	;# 
   987  07A6                     	;# 
   988  07A7                     	;# 
   989  07A8                     	;# 
   990  07A9                     	;# 
   991  07AA                     	;# 
   992  07AB                     	;# 
   993  0FE4                     	;# 
   994  0FE5                     	;# 
   995  0FE6                     	;# 
   996  0FE7                     	;# 
   997  0FE8                     	;# 
   998  0FE9                     	;# 
   999  0FEA                     	;# 
  1000  0FEB                     	;# 
  1001  0FED                     	;# 
  1002  0FEE                     	;# 
  1003  0FEF                     	;# 
  1004  0000                     	;# 
  1005  0001                     	;# 
  1006  0002                     	;# 
  1007  0003                     	;# 
  1008  0004                     	;# 
  1009  0005                     	;# 
  1010  0006                     	;# 
  1011  0007                     	;# 
  1012  0008                     	;# 
  1013  0009                     	;# 
  1014  000A                     	;# 
  1015  000B                     	;# 
  1016  000C                     	;# 
  1017  000D                     	;# 
  1018  000E                     	;# 
  1019  000F                     	;# 
  1020  0010                     	;# 
  1021  0011                     	;# 
  1022  0012                     	;# 
  1023  0013                     	;# 
  1024  0015                     	;# 
  1025  0016                     	;# 
  1026  0016                     	;# 
  1027  0017                     	;# 
  1028  0018                     	;# 
  1029  0019                     	;# 
  1030  001A                     	;# 
  1031  001B                     	;# 
  1032  001C                     	;# 
  1033  001E                     	;# 
  1034  001F                     	;# 
  1035  008C                     	;# 
  1036  008D                     	;# 
  1037  008E                     	;# 
  1038  008F                     	;# 
  1039  0090                     	;# 
  1040  0091                     	;# 
  1041  0092                     	;# 
  1042  0093                     	;# 
  1043  0095                     	;# 
  1044  0096                     	;# 
  1045  0097                     	;# 
  1046  0098                     	;# 
  1047  0099                     	;# 
  1048  009A                     	;# 
  1049  009B                     	;# 
  1050  009B                     	;# 
  1051  009C                     	;# 
  1052  009D                     	;# 
  1053  009E                     	;# 
  1054  010C                     	;# 
  1055  010D                     	;# 
  1056  010E                     	;# 
  1057  010F                     	;# 
  1058  0110                     	;# 
  1059  0111                     	;# 
  1060  0112                     	;# 
  1061  0113                     	;# 
  1062  0114                     	;# 
  1063  0115                     	;# 
  1064  0116                     	;# 
  1065  0117                     	;# 
  1066  0118                     	;# 
  1067  0119                     	;# 
  1068  011A                     	;# 
  1069  011B                     	;# 
  1070  011D                     	;# 
  1071  018C                     	;# 
  1072  018D                     	;# 
  1073  018F                     	;# 
  1074  0190                     	;# 
  1075  0191                     	;# 
  1076  0191                     	;# 
  1077  0192                     	;# 
  1078  0193                     	;# 
  1079  0193                     	;# 
  1080  0193                     	;# 
  1081  0194                     	;# 
  1082  0195                     	;# 
  1083  0196                     	;# 
  1084  0199                     	;# 
  1085  019A                     	;# 
  1086  019B                     	;# 
  1087  019B                     	;# 
  1088  019B                     	;# 
  1089  019B                     	;# 
  1090  019C                     	;# 
  1091  019C                     	;# 
  1092  019D                     	;# 
  1093  019E                     	;# 
  1094  019F                     	;# 
  1095  020D                     	;# 
  1096  0210                     	;# 
  1097  0211                     	;# 
  1098  0212                     	;# 
  1099  0213                     	;# 
  1100  0214                     	;# 
  1101  0215                     	;# 
  1102  0215                     	;# 
  1103  0216                     	;# 
  1104  0217                     	;# 
  1105  0291                     	;# 
  1106  0291                     	;# 
  1107  0292                     	;# 
  1108  0293                     	;# 
  1109  0294                     	;# 
  1110  0295                     	;# 
  1111  0295                     	;# 
  1112  0296                     	;# 
  1113  0298                     	;# 
  1114  0298                     	;# 
  1115  0299                     	;# 
  1116  029A                     	;# 
  1117  029B                     	;# 
  1118  029C                     	;# 
  1119  029C                     	;# 
  1120  029D                     	;# 
  1121  029E                     	;# 
  1122  029F                     	;# 
  1123  0311                     	;# 
  1124  0311                     	;# 
  1125  0312                     	;# 
  1126  0313                     	;# 
  1127  0314                     	;# 
  1128  0315                     	;# 
  1129  0315                     	;# 
  1130  0316                     	;# 
  1131  0318                     	;# 
  1132  0318                     	;# 
  1133  0319                     	;# 
  1134  031A                     	;# 
  1135  031C                     	;# 
  1136  031C                     	;# 
  1137  031D                     	;# 
  1138  031E                     	;# 
  1139  0394                     	;# 
  1140  0395                     	;# 
  1141  0396                     	;# 
  1142  0415                     	;# 
  1143  0416                     	;# 
  1144  0417                     	;# 
  1145  041C                     	;# 
  1146  041D                     	;# 
  1147  041E                     	;# 
  1148  0791                     	;# 
  1149  0792                     	;# 
  1150  0793                     	;# 
  1151  0794                     	;# 
  1152  0795                     	;# 
  1153  0798                     	;# 
  1154  0799                     	;# 
  1155  079A                     	;# 
  1156  07A0                     	;# 
  1157  07A1                     	;# 
  1158  07A2                     	;# 
  1159  07A3                     	;# 
  1160  07A4                     	;# 
  1161  07A5                     	;# 
  1162  07A6                     	;# 
  1163  07A7                     	;# 
  1164  07A8                     	;# 
  1165  07A9                     	;# 
  1166  07AA                     	;# 
  1167  07AB                     	;# 
  1168  0FE4                     	;# 
  1169  0FE5                     	;# 
  1170  0FE6                     	;# 
  1171  0FE7                     	;# 
  1172  0FE8                     	;# 
  1173  0FE9                     	;# 
  1174  0FEA                     	;# 
  1175  0FEB                     	;# 
  1176  0FED                     	;# 
  1177  0FEE                     	;# 
  1178  0FEF                     	;# 
  1179  0000                     	;# 
  1180  0001                     	;# 
  1181  0002                     	;# 
  1182  0003                     	;# 
  1183  0004                     	;# 
  1184  0005                     	;# 
  1185  0006                     	;# 
  1186  0007                     	;# 
  1187  0008                     	;# 
  1188  0009                     	;# 
  1189  000A                     	;# 
  1190  000B                     	;# 
  1191  000C                     	;# 
  1192  000D                     	;# 
  1193  000E                     	;# 
  1194  000F                     	;# 
  1195  0010                     	;# 
  1196  0011                     	;# 
  1197  0012                     	;# 
  1198  0013                     	;# 
  1199  0015                     	;# 
  1200  0016                     	;# 
  1201  0016                     	;# 
  1202  0017                     	;# 
  1203  0018                     	;# 
  1204  0019                     	;# 
  1205  001A                     	;# 
  1206  001B                     	;# 
  1207  001C                     	;# 
  1208  001E                     	;# 
  1209  001F                     	;# 
  1210  008C                     	;# 
  1211  008D                     	;# 
  1212  008E                     	;# 
  1213  008F                     	;# 
  1214  0090                     	;# 
  1215  0091                     	;# 
  1216  0092                     	;# 
  1217  0093                     	;# 
  1218  0095                     	;# 
  1219  0096                     	;# 
  1220  0097                     	;# 
  1221  0098                     	;# 
  1222  0099                     	;# 
  1223  009A                     	;# 
  1224  009B                     	;# 
  1225  009B                     	;# 
  1226  009C                     	;# 
  1227  009D                     	;# 
  1228  009E                     	;# 
  1229  010C                     	;# 
  1230  010D                     	;# 
  1231  010E                     	;# 
  1232  010F                     	;# 
  1233  0110                     	;# 
  1234  0111                     	;# 
  1235  0112                     	;# 
  1236  0113                     	;# 
  1237  0114                     	;# 
  1238  0115                     	;# 
  1239  0116                     	;# 
  1240  0117                     	;# 
  1241  0118                     	;# 
  1242  0119                     	;# 
  1243  011A                     	;# 
  1244  011B                     	;# 
  1245  011D                     	;# 
  1246  018C                     	;# 
  1247  018D                     	;# 
  1248  018F                     	;# 
  1249  0190                     	;# 
  1250  0191                     	;# 
  1251  0191                     	;# 
  1252  0192                     	;# 
  1253  0193                     	;# 
  1254  0193                     	;# 
  1255  0193                     	;# 
  1256  0194                     	;# 
  1257  0195                     	;# 
  1258  0196                     	;# 
  1259  0199                     	;# 
  1260  019A                     	;# 
  1261  019B                     	;# 
  1262  019B                     	;# 
  1263  019B                     	;# 
  1264  019B                     	;# 
  1265  019C                     	;# 
  1266  019C                     	;# 
  1267  019D                     	;# 
  1268  019E                     	;# 
  1269  019F                     	;# 
  1270  020D                     	;# 
  1271  0210                     	;# 
  1272  0211                     	;# 
  1273  0212                     	;# 
  1274  0213                     	;# 
  1275  0214                     	;# 
  1276  0215                     	;# 
  1277  0215                     	;# 
  1278  0216                     	;# 
  1279  0217                     	;# 
  1280  0291                     	;# 
  1281  0291                     	;# 
  1282  0292                     	;# 
  1283  0293                     	;# 
  1284  0294                     	;# 
  1285  0295                     	;# 
  1286  0295                     	;# 
  1287  0296                     	;# 
  1288  0298                     	;# 
  1289  0298                     	;# 
  1290  0299                     	;# 
  1291  029A                     	;# 
  1292  029B                     	;# 
  1293  029C                     	;# 
  1294  029C                     	;# 
  1295  029D                     	;# 
  1296  029E                     	;# 
  1297  029F                     	;# 
  1298  0311                     	;# 
  1299  0311                     	;# 
  1300  0312                     	;# 
  1301  0313                     	;# 
  1302  0314                     	;# 
  1303  0315                     	;# 
  1304  0315                     	;# 
  1305  0316                     	;# 
  1306  0318                     	;# 
  1307  0318                     	;# 
  1308  0319                     	;# 
  1309  031A                     	;# 
  1310  031C                     	;# 
  1311  031C                     	;# 
  1312  031D                     	;# 
  1313  031E                     	;# 
  1314  0394                     	;# 
  1315  0395                     	;# 
  1316  0396                     	;# 
  1317  0415                     	;# 
  1318  0416                     	;# 
  1319  0417                     	;# 
  1320  041C                     	;# 
  1321  041D                     	;# 
  1322  041E                     	;# 
  1323  0791                     	;# 
  1324  0792                     	;# 
  1325  0793                     	;# 
  1326  0794                     	;# 
  1327  0795                     	;# 
  1328  0798                     	;# 
  1329  0799                     	;# 
  1330  079A                     	;# 
  1331  07A0                     	;# 
  1332  07A1                     	;# 
  1333  07A2                     	;# 
  1334  07A3                     	;# 
  1335  07A4                     	;# 
  1336  07A5                     	;# 
  1337  07A6                     	;# 
  1338  07A7                     	;# 
  1339  07A8                     	;# 
  1340  07A9                     	;# 
  1341  07AA                     	;# 
  1342  07AB                     	;# 
  1343  0FE4                     	;# 
  1344  0FE5                     	;# 
  1345  0FE6                     	;# 
  1346  0FE7                     	;# 
  1347  0FE8                     	;# 
  1348  0FE9                     	;# 
  1349  0FEA                     	;# 
  1350  0FEB                     	;# 
  1351  0FED                     	;# 
  1352  0FEE                     	;# 
  1353  0FEF                     	;# 
  1354  0000                     	;# 
  1355  0001                     	;# 
  1356  0002                     	;# 
  1357  0003                     	;# 
  1358  0004                     	;# 
  1359  0005                     	;# 
  1360  0006                     	;# 
  1361  0007                     	;# 
  1362  0008                     	;# 
  1363  0009                     	;# 
  1364  000A                     	;# 
  1365  000B                     	;# 
  1366  000C                     	;# 
  1367  000D                     	;# 
  1368  000E                     	;# 
  1369  000F                     	;# 
  1370  0010                     	;# 
  1371  0011                     	;# 
  1372  0012                     	;# 
  1373  0013                     	;# 
  1374  0015                     	;# 
  1375  0016                     	;# 
  1376  0016                     	;# 
  1377  0017                     	;# 
  1378  0018                     	;# 
  1379  0019                     	;# 
  1380  001A                     	;# 
  1381  001B                     	;# 
  1382  001C                     	;# 
  1383  001E                     	;# 
  1384  001F                     	;# 
  1385  008C                     	;# 
  1386  008D                     	;# 
  1387  008E                     	;# 
  1388  008F                     	;# 
  1389  0090                     	;# 
  1390  0091                     	;# 
  1391  0092                     	;# 
  1392  0093                     	;# 
  1393  0095                     	;# 
  1394  0096                     	;# 
  1395  0097                     	;# 
  1396  0098                     	;# 
  1397  0099                     	;# 
  1398  009A                     	;# 
  1399  009B                     	;# 
  1400  009B                     	;# 
  1401  009C                     	;# 
  1402  009D                     	;# 
  1403  009E                     	;# 
  1404  010C                     	;# 
  1405  010D                     	;# 
  1406  010E                     	;# 
  1407  010F                     	;# 
  1408  0110                     	;# 
  1409  0111                     	;# 
  1410  0112                     	;# 
  1411  0113                     	;# 
  1412  0114                     	;# 
  1413  0115                     	;# 
  1414  0116                     	;# 
  1415  0117                     	;# 
  1416  0118                     	;# 
  1417  0119                     	;# 
  1418  011A                     	;# 
  1419  011B                     	;# 
  1420  011D                     	;# 
  1421  018C                     	;# 
  1422  018D                     	;# 
  1423  018F                     	;# 
  1424  0190                     	;# 
  1425  0191                     	;# 
  1426  0191                     	;# 
  1427  0192                     	;# 
  1428  0193                     	;# 
  1429  0193                     	;# 
  1430  0193                     	;# 
  1431  0194                     	;# 
  1432  0195                     	;# 
  1433  0196                     	;# 
  1434  0199                     	;# 
  1435  019A                     	;# 
  1436  019B                     	;# 
  1437  019B                     	;# 
  1438  019B                     	;# 
  1439  019B                     	;# 
  1440  019C                     	;# 
  1441  019C                     	;# 
  1442  019D                     	;# 
  1443  019E                     	;# 
  1444  019F                     	;# 
  1445  020D                     	;# 
  1446  0210                     	;# 
  1447  0211                     	;# 
  1448  0212                     	;# 
  1449  0213                     	;# 
  1450  0214                     	;# 
  1451  0215                     	;# 
  1452  0215                     	;# 
  1453  0216                     	;# 
  1454  0217                     	;# 
  1455  0291                     	;# 
  1456  0291                     	;# 
  1457  0292                     	;# 
  1458  0293                     	;# 
  1459  0294                     	;# 
  1460  0295                     	;# 
  1461  0295                     	;# 
  1462  0296                     	;# 
  1463  0298                     	;# 
  1464  0298                     	;# 
  1465  0299                     	;# 
  1466  029A                     	;# 
  1467  029B                     	;# 
  1468  029C                     	;# 
  1469  029C                     	;# 
  1470  029D                     	;# 
  1471  029E                     	;# 
  1472  029F                     	;# 
  1473  0311                     	;# 
  1474  0311                     	;# 
  1475  0312                     	;# 
  1476  0313                     	;# 
  1477  0314                     	;# 
  1478  0315                     	;# 
  1479  0315                     	;# 
  1480  0316                     	;# 
  1481  0318                     	;# 
  1482  0318                     	;# 
  1483  0319                     	;# 
  1484  031A                     	;# 
  1485  031C                     	;# 
  1486  031C                     	;# 
  1487  031D                     	;# 
  1488  031E                     	;# 
  1489  0394                     	;# 
  1490  0395                     	;# 
  1491  0396                     	;# 
  1492  0415                     	;# 
  1493  0416                     	;# 
  1494  0417                     	;# 
  1495  041C                     	;# 
  1496  041D                     	;# 
  1497  041E                     	;# 
  1498  0791                     	;# 
  1499  0792                     	;# 
  1500  0793                     	;# 
  1501  0794                     	;# 
  1502  0795                     	;# 
  1503  0798                     	;# 
  1504  0799                     	;# 
  1505  079A                     	;# 
  1506  07A0                     	;# 
  1507  07A1                     	;# 
  1508  07A2                     	;# 
  1509  07A3                     	;# 
  1510  07A4                     	;# 
  1511  07A5                     	;# 
  1512  07A6                     	;# 
  1513  07A7                     	;# 
  1514  07A8                     	;# 
  1515  07A9                     	;# 
  1516  07AA                     	;# 
  1517  07AB                     	;# 
  1518  0FE4                     	;# 
  1519  0FE5                     	;# 
  1520  0FE6                     	;# 
  1521  0FE7                     	;# 
  1522  0FE8                     	;# 
  1523  0FE9                     	;# 
  1524  0FEA                     	;# 
  1525  0FEB                     	;# 
  1526  0FED                     	;# 
  1527  0FEE                     	;# 
  1528  0FEF                     	;# 
  1529  0000                     	;# 
  1530  0001                     	;# 
  1531  0002                     	;# 
  1532  0003                     	;# 
  1533  0004                     	;# 
  1534  0005                     	;# 
  1535  0006                     	;# 
  1536  0007                     	;# 
  1537  0008                     	;# 
  1538  0009                     	;# 
  1539  000A                     	;# 
  1540  000B                     	;# 
  1541  000C                     	;# 
  1542  000D                     	;# 
  1543  000E                     	;# 
  1544  000F                     	;# 
  1545  0010                     	;# 
  1546  0011                     	;# 
  1547  0012                     	;# 
  1548  0013                     	;# 
  1549  0015                     	;# 
  1550  0016                     	;# 
  1551  0016                     	;# 
  1552  0017                     	;# 
  1553  0018                     	;# 
  1554  0019                     	;# 
  1555  001A                     	;# 
  1556  001B                     	;# 
  1557  001C                     	;# 
  1558  001E                     	;# 
  1559  001F                     	;# 
  1560  008C                     	;# 
  1561  008D                     	;# 
  1562  008E                     	;# 
  1563  008F                     	;# 
  1564  0090                     	;# 
  1565  0091                     	;# 
  1566  0092                     	;# 
  1567  0093                     	;# 
  1568  0095                     	;# 
  1569  0096                     	;# 
  1570  0097                     	;# 
  1571  0098                     	;# 
  1572  0099                     	;# 
  1573  009A                     	;# 
  1574  009B                     	;# 
  1575  009B                     	;# 
  1576  009C                     	;# 
  1577  009D                     	;# 
  1578  009E                     	;# 
  1579  010C                     	;# 
  1580  010D                     	;# 
  1581  010E                     	;# 
  1582  010F                     	;# 
  1583  0110                     	;# 
  1584  0111                     	;# 
  1585  0112                     	;# 
  1586  0113                     	;# 
  1587  0114                     	;# 
  1588  0115                     	;# 
  1589  0116                     	;# 
  1590  0117                     	;# 
  1591  0118                     	;# 
  1592  0119                     	;# 
  1593  011A                     	;# 
  1594  011B                     	;# 
  1595  011D                     	;# 
  1596  018C                     	;# 
  1597  018D                     	;# 
  1598  018F                     	;# 
  1599  0190                     	;# 
  1600  0191                     	;# 
  1601  0191                     	;# 
  1602  0192                     	;# 
  1603  0193                     	;# 
  1604  0193                     	;# 
  1605  0193                     	;# 
  1606  0194                     	;# 
  1607  0195                     	;# 
  1608  0196                     	;# 
  1609  0199                     	;# 
  1610  019A                     	;# 
  1611  019B                     	;# 
  1612  019B                     	;# 
  1613  019B                     	;# 
  1614  019B                     	;# 
  1615  019C                     	;# 
  1616  019C                     	;# 
  1617  019D                     	;# 
  1618  019E                     	;# 
  1619  019F                     	;# 
  1620  020D                     	;# 
  1621  0210                     	;# 
  1622  0211                     	;# 
  1623  0212                     	;# 
  1624  0213                     	;# 
  1625  0214                     	;# 
  1626  0215                     	;# 
  1627  0215                     	;# 
  1628  0216                     	;# 
  1629  0217                     	;# 
  1630  0291                     	;# 
  1631  0291                     	;# 
  1632  0292                     	;# 
  1633  0293                     	;# 
  1634  0294                     	;# 
  1635  0295                     	;# 
  1636  0295                     	;# 
  1637  0296                     	;# 
  1638  0298                     	;# 
  1639  0298                     	;# 
  1640  0299                     	;# 
  1641  029A                     	;# 
  1642  029B                     	;# 
  1643  029C                     	;# 
  1644  029C                     	;# 
  1645  029D                     	;# 
  1646  029E                     	;# 
  1647  029F                     	;# 
  1648  0311                     	;# 
  1649  0311                     	;# 
  1650  0312                     	;# 
  1651  0313                     	;# 
  1652  0314                     	;# 
  1653  0315                     	;# 
  1654  0315                     	;# 
  1655  0316                     	;# 
  1656  0318                     	;# 
  1657  0318                     	;# 
  1658  0319                     	;# 
  1659  031A                     	;# 
  1660  031C                     	;# 
  1661  031C                     	;# 
  1662  031D                     	;# 
  1663  031E                     	;# 
  1664  0394                     	;# 
  1665  0395                     	;# 
  1666  0396                     	;# 
  1667  0415                     	;# 
  1668  0416                     	;# 
  1669  0417                     	;# 
  1670  041C                     	;# 
  1671  041D                     	;# 
  1672  041E                     	;# 
  1673  0791                     	;# 
  1674  0792                     	;# 
  1675  0793                     	;# 
  1676  0794                     	;# 
  1677  0795                     	;# 
  1678  0798                     	;# 
  1679  0799                     	;# 
  1680  079A                     	;# 
  1681  07A0                     	;# 
  1682  07A1                     	;# 
  1683  07A2                     	;# 
  1684  07A3                     	;# 
  1685  07A4                     	;# 
  1686  07A5                     	;# 
  1687  07A6                     	;# 
  1688  07A7                     	;# 
  1689  07A8                     	;# 
  1690  07A9                     	;# 
  1691  07AA                     	;# 
  1692  07AB                     	;# 
  1693  0FE4                     	;# 
  1694  0FE5                     	;# 
  1695  0FE6                     	;# 
  1696  0FE7                     	;# 
  1697  0FE8                     	;# 
  1698  0FE9                     	;# 
  1699  0FEA                     	;# 
  1700  0FEB                     	;# 
  1701  0FED                     	;# 
  1702  0FEE                     	;# 
  1703  0FEF                     	;# 
  1704  0000                     	;# 
  1705  0001                     	;# 
  1706  0002                     	;# 
  1707  0003                     	;# 
  1708  0004                     	;# 
  1709  0005                     	;# 
  1710  0006                     	;# 
  1711  0007                     	;# 
  1712  0008                     	;# 
  1713  0009                     	;# 
  1714  000A                     	;# 
  1715  000B                     	;# 
  1716  000C                     	;# 
  1717  000D                     	;# 
  1718  000E                     	;# 
  1719  000F                     	;# 
  1720  0010                     	;# 
  1721  0011                     	;# 
  1722  0012                     	;# 
  1723  0013                     	;# 
  1724  0015                     	;# 
  1725  0016                     	;# 
  1726  0016                     	;# 
  1727  0017                     	;# 
  1728  0018                     	;# 
  1729  0019                     	;# 
  1730  001A                     	;# 
  1731  001B                     	;# 
  1732  001C                     	;# 
  1733  001E                     	;# 
  1734  001F                     	;# 
  1735  008C                     	;# 
  1736  008D                     	;# 
  1737  008E                     	;# 
  1738  008F                     	;# 
  1739  0090                     	;# 
  1740  0091                     	;# 
  1741  0092                     	;# 
  1742  0093                     	;# 
  1743  0095                     	;# 
  1744  0096                     	;# 
  1745  0097                     	;# 
  1746  0098                     	;# 
  1747  0099                     	;# 
  1748  009A                     	;# 
  1749  009B                     	;# 
  1750  009B                     	;# 
  1751  009C                     	;# 
  1752  009D                     	;# 
  1753  009E                     	;# 
  1754  010C                     	;# 
  1755  010D                     	;# 
  1756  010E                     	;# 
  1757  010F                     	;# 
  1758  0110                     	;# 
  1759  0111                     	;# 
  1760  0112                     	;# 
  1761  0113                     	;# 
  1762  0114                     	;# 
  1763  0115                     	;# 
  1764  0116                     	;# 
  1765  0117                     	;# 
  1766  0118                     	;# 
  1767  0119                     	;# 
  1768  011A                     	;# 
  1769  011B                     	;# 
  1770  011D                     	;# 
  1771  018C                     	;# 
  1772  018D                     	;# 
  1773  018F                     	;# 
  1774  0190                     	;# 
  1775  0191                     	;# 
  1776  0191                     	;# 
  1777  0192                     	;# 
  1778  0193                     	;# 
  1779  0193                     	;# 
  1780  0193                     	;# 
  1781  0194                     	;# 
  1782  0195                     	;# 
  1783  0196                     	;# 
  1784  0199                     	;# 
  1785  019A                     	;# 
  1786  019B                     	;# 
  1787  019B                     	;# 
  1788  019B                     	;# 
  1789  019B                     	;# 
  1790  019C                     	;# 
  1791  019C                     	;# 
  1792  019D                     	;# 
  1793  019E                     	;# 
  1794  019F                     	;# 
  1795  020D                     	;# 
  1796  0210                     	;# 
  1797  0211                     	;# 
  1798  0212                     	;# 
  1799  0213                     	;# 
  1800  0214                     	;# 
  1801  0215                     	;# 
  1802  0215                     	;# 
  1803  0216                     	;# 
  1804  0217                     	;# 
  1805  0291                     	;# 
  1806  0291                     	;# 
  1807  0292                     	;# 
  1808  0293                     	;# 
  1809  0294                     	;# 
  1810  0295                     	;# 
  1811  0295                     	;# 
  1812  0296                     	;# 
  1813  0298                     	;# 
  1814  0298                     	;# 
  1815  0299                     	;# 
  1816  029A                     	;# 
  1817  029B                     	;# 
  1818  029C                     	;# 
  1819  029C                     	;# 
  1820  029D                     	;# 
  1821  029E                     	;# 
  1822  029F                     	;# 
  1823  0311                     	;# 
  1824  0311                     	;# 
  1825  0312                     	;# 
  1826  0313                     	;# 
  1827  0314                     	;# 
  1828  0315                     	;# 
  1829  0315                     	;# 
  1830  0316                     	;# 
  1831  0318                     	;# 
  1832  0318                     	;# 
  1833  0319                     	;# 
  1834  031A                     	;# 
  1835  031C                     	;# 
  1836  031C                     	;# 
  1837  031D                     	;# 
  1838  031E                     	;# 
  1839  0394                     	;# 
  1840  0395                     	;# 
  1841  0396                     	;# 
  1842  0415                     	;# 
  1843  0416                     	;# 
  1844  0417                     	;# 
  1845  041C                     	;# 
  1846  041D                     	;# 
  1847  041E                     	;# 
  1848  0791                     	;# 
  1849  0792                     	;# 
  1850  0793                     	;# 
  1851  0794                     	;# 
  1852  0795                     	;# 
  1853  0798                     	;# 
  1854  0799                     	;# 
  1855  079A                     	;# 
  1856  07A0                     	;# 
  1857  07A1                     	;# 
  1858  07A2                     	;# 
  1859  07A3                     	;# 
  1860  07A4                     	;# 
  1861  07A5                     	;# 
  1862  07A6                     	;# 
  1863  07A7                     	;# 
  1864  07A8                     	;# 
  1865  07A9                     	;# 
  1866  07AA                     	;# 
  1867  07AB                     	;# 
  1868  0FE4                     	;# 
  1869  0FE5                     	;# 
  1870  0FE6                     	;# 
  1871  0FE7                     	;# 
  1872  0FE8                     	;# 
  1873  0FE9                     	;# 
  1874  0FEA                     	;# 
  1875  0FEB                     	;# 
  1876  0FED                     	;# 
  1877  0FEE                     	;# 
  1878  0FEF                     	;# 
  1879                           
  1880                           	psect	stringtext1
  1881  045A                     __pstringtext1:
  1882  045A                     _i2c_fsmStateTable:
  1883  045A  3437               	retlw	low _I2C_DO_IDLE
  1884  045B  3407               	retlw	high _I2C_DO_IDLE
  1885  045C  34BE               	retlw	low _I2C_DO_SEND_ADR_READ
  1886  045D  3406               	retlw	high _I2C_DO_SEND_ADR_READ
  1887  045E  34CF               	retlw	low _I2C_DO_SEND_ADR_WRITE
  1888  045F  3406               	retlw	high _I2C_DO_SEND_ADR_WRITE
  1889  0460  3476               	retlw	low _I2C_DO_TX
  1890  0461  3402               	retlw	high _I2C_DO_TX
  1891  0462  34CB               	retlw	low _I2C_DO_RX
  1892  0463  3402               	retlw	high _I2C_DO_RX
  1893  0464  34DE               	retlw	low _I2C_DO_RCEN
  1894  0465  3406               	retlw	high _I2C_DO_RCEN
  1895  0466  34D1               	retlw	low _I2C_DO_TX_EMPTY
  1896  0467  3403               	retlw	high _I2C_DO_TX_EMPTY
  1897  0468  3432               	retlw	low _I2C_DO_SEND_RESTART_READ
  1898  0469  3407               	retlw	high _I2C_DO_SEND_RESTART_READ
  1899  046A  342D               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  1900  046B  3407               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  1901  046C  3428               	retlw	low _I2C_DO_SEND_RESTART
  1902  046D  3407               	retlw	high _I2C_DO_SEND_RESTART
  1903  046E  3423               	retlw	low _I2C_DO_SEND_STOP
  1904  046F  3407               	retlw	high _I2C_DO_SEND_STOP
  1905  0470  341E               	retlw	low _I2C_DO_RX_ACK
  1906  0471  3407               	retlw	high _I2C_DO_RX_ACK
  1907  0472  3419               	retlw	low _I2C_DO_RX_NACK_STOP
  1908  0473  3407               	retlw	high _I2C_DO_RX_NACK_STOP
  1909  0474  3414               	retlw	low _I2C_DO_RX_NACK_RESTART
  1910  0475  3407               	retlw	high _I2C_DO_RX_NACK_RESTART
  1911  0476  340F               	retlw	low _I2C_DO_RESET
  1912  0477  3407               	retlw	high _I2C_DO_RESET
  1913  0478  342E               	retlw	low _I2C_DO_ADDRESS_NACK
  1914  0479  3404               	retlw	high _I2C_DO_ADDRESS_NACK
  1915  047A                     __end_of_i2c_fsmStateTable:
  1916  0012                     _PIR2bits	set	18
  1917  0011                     _PIR1bits	set	17
  1918  000B                     _INTCONbits	set	11
  1919  0092                     _PIE2bits	set	146
  1920  0091                     _PIE1bits	set	145
  1921  009D                     _ADCON0bits	set	157
  1922  009D                     _ADCON0	set	157
  1923  009C                     _ADRESH	set	156
  1924  009B                     _ADRESL	set	155
  1925  009E                     _ADCON1	set	158
  1926  0097                     _WDTCON	set	151
  1927  0098                     _OSCTUNE	set	152
  1928  0099                     _OSCCON	set	153
  1929  0095                     _OPTION_REGbits	set	149
  1930  008F                     _TRISD	set	143
  1931  008E                     _TRISC	set	142
  1932  008D                     _TRISB	set	141
  1933  008C                     _TRISA	set	140
  1934  0090                     _TRISE	set	144
  1935  04D6                     _PLLR	set	1238
  1936  010D                     _LATBbits	set	269
  1937  010C                     _LATAbits	set	268
  1938  0116                     _BORCON	set	278
  1939  011D                     _APFCON	set	285
  1940  010E                     _LATC	set	270
  1941  010D                     _LATB	set	269
  1942  010C                     _LATA	set	268
  1943  010F                     _LATD	set	271
  1944  0110                     _LATE	set	272
  1945  0196                     _EECON2	set	406
  1946  0193                     _EEDATL	set	403
  1947  0194                     _EEDATH	set	404
  1948  0195                     _EECON1bits	set	405
  1949  0192                     _EEADRH	set	402
  1950  0191                     _EEADRL	set	401
  1951  0199                     _RCREG	set	409
  1952  019D                     _RCSTAbits	set	413
  1953  019A                     _TXREG	set	410
  1954  019E                     _TXSTAbits	set	414
  1955  019C                     _SPBRGH	set	412
  1956  019B                     _SPBRGL	set	411
  1957  019E                     _TXSTA	set	414
  1958  019D                     _RCSTA	set	413
  1959  019F                     _BAUDCON	set	415
  1960  018C                     _ANSELA	set	396
  1961  0190                     _ANSELE	set	400
  1962  018D                     _ANSELB	set	397
  1963  018F                     _ANSELD	set	399
  1964  0214                     _SSPSTATbits	set	532
  1965  0216                     _SSPCON2bits	set	534
  1966  0211                     _SSPBUF	set	529
  1967  0215                     _SSPCON1bits	set	533
  1968  0212                     _SSPADD	set	530
  1969  0216                     _SSPCON2	set	534
  1970  0215                     _SSPCON1	set	533
  1971  0214                     _SSPSTAT	set	532
  1972  020D                     _WPUB	set	525
  1973  0210                     _WPUE	set	528
  1974  047A                     STR_1:
  1975  047A  342D               	retlw	45	;'-'
  1976  047B  343E               	retlw	62	;'>'
  1977  047C  3447               	retlw	71	;'G'
  1978  047D  3452               	retlw	82	;'R'
  1979  047E  343A               	retlw	58	;':'
  1980  047F  3478               	retlw	120	;'x'
  1981  0480  343A               	retlw	58	;':'
  1982  0481  344F               	retlw	79	;'O'
  1983  0482  3446               	retlw	70	;'F'
  1984  0483  3446               	retlw	70	;'F'
  1985  0484  3400               	retlw	0
  1986                           
  1987                           	psect	stringtext2
  1988  0639                     __pstringtext2:
  1989  0639                     STR_11:
  1990  0639  342D               	retlw	45	;'-'
  1991  063A  343E               	retlw	62	;'>'
  1992  063B  3447               	retlw	71	;'G'
  1993  063C  3452               	retlw	82	;'R'
  1994  063D  343A               	retlw	58	;':'
  1995  063E  3431               	retlw	49	;'1'
  1996  063F  3430               	retlw	48	;'0'
  1997  0640  343A               	retlw	58	;':'
  1998  0641  344F               	retlw	79	;'O'
  1999  0642  344E               	retlw	78	;'N'
  2000  0643  3400               	retlw	0
  2001                           
  2002                           	psect	stringtext3
  2003  0644                     __pstringtext3:
  2004  0644                     STR_12:
  2005  0644  342D               	retlw	45	;'-'
  2006  0645  343E               	retlw	62	;'>'
  2007  0646  3447               	retlw	71	;'G'
  2008  0647  3452               	retlw	82	;'R'
  2009  0648  343A               	retlw	58	;':'
  2010  0649  3431               	retlw	49	;'1'
  2011  064A  3431               	retlw	49	;'1'
  2012  064B  343A               	retlw	58	;':'
  2013  064C  344F               	retlw	79	;'O'
  2014  064D  344E               	retlw	78	;'N'
  2015  064E  3400               	retlw	0
  2016                           
  2017                           	psect	stringtext4
  2018  064F                     __pstringtext4:
  2019  064F                     STR_13:
  2020  064F  342D               	retlw	45	;'-'
  2021  0650  343E               	retlw	62	;'>'
  2022  0651  3447               	retlw	71	;'G'
  2023  0652  3452               	retlw	82	;'R'
  2024  0653  343A               	retlw	58	;':'
  2025  0654  3431               	retlw	49	;'1'
  2026  0655  3432               	retlw	50	;'2'
  2027  0656  343A               	retlw	58	;':'
  2028  0657  344F               	retlw	79	;'O'
  2029  0658  344E               	retlw	78	;'N'
  2030  0659  3400               	retlw	0
  2031                           
  2032                           	psect	stringtext5
  2033  065A                     __pstringtext5:
  2034  065A                     STR_2:
  2035  065A  342D               	retlw	45	;'-'
  2036  065B  343E               	retlw	62	;'>'
  2037  065C  3447               	retlw	71	;'G'
  2038  065D  3452               	retlw	82	;'R'
  2039  065E  343A               	retlw	58	;':'
  2040  065F  3431               	retlw	49	;'1'
  2041  0660  343A               	retlw	58	;':'
  2042  0661  344F               	retlw	79	;'O'
  2043  0662  344E               	retlw	78	;'N'
  2044  0663  3400               	retlw	0
  2045                           
  2046                           	psect	stringtext6
  2047  0664                     __pstringtext6:
  2048  0664                     STR_3:
  2049  0664  342D               	retlw	45	;'-'
  2050  0665  343E               	retlw	62	;'>'
  2051  0666  3447               	retlw	71	;'G'
  2052  0667  3452               	retlw	82	;'R'
  2053  0668  343A               	retlw	58	;':'
  2054  0669  3432               	retlw	50	;'2'
  2055  066A  343A               	retlw	58	;':'
  2056  066B  344F               	retlw	79	;'O'
  2057  066C  344E               	retlw	78	;'N'
  2058  066D  3400               	retlw	0
  2059                           
  2060                           	psect	stringtext7
  2061  066E                     __pstringtext7:
  2062  066E                     STR_4:
  2063  066E  342D               	retlw	45	;'-'
  2064  066F  343E               	retlw	62	;'>'
  2065  0670  3447               	retlw	71	;'G'
  2066  0671  3452               	retlw	82	;'R'
  2067  0672  343A               	retlw	58	;':'
  2068  0673  3433               	retlw	51	;'3'
  2069  0674  343A               	retlw	58	;':'
  2070  0675  344F               	retlw	79	;'O'
  2071  0676  344E               	retlw	78	;'N'
  2072  0677  3400               	retlw	0
  2073                           
  2074                           	psect	stringtext8
  2075  0678                     __pstringtext8:
  2076  0678                     STR_5:
  2077  0678  342D               	retlw	45	;'-'
  2078  0679  343E               	retlw	62	;'>'
  2079  067A  3447               	retlw	71	;'G'
  2080  067B  3452               	retlw	82	;'R'
  2081  067C  343A               	retlw	58	;':'
  2082  067D  3434               	retlw	52	;'4'
  2083  067E  343A               	retlw	58	;':'
  2084  067F  344F               	retlw	79	;'O'
  2085  0680  344E               	retlw	78	;'N'
  2086  0681  3400               	retlw	0
  2087                           
  2088                           	psect	stringtext9
  2089  0682                     __pstringtext9:
  2090  0682                     STR_6:
  2091  0682  342D               	retlw	45	;'-'
  2092  0683  343E               	retlw	62	;'>'
  2093  0684  3447               	retlw	71	;'G'
  2094  0685  3452               	retlw	82	;'R'
  2095  0686  343A               	retlw	58	;':'
  2096  0687  3435               	retlw	53	;'5'
  2097  0688  343A               	retlw	58	;':'
  2098  0689  344F               	retlw	79	;'O'
  2099  068A  344E               	retlw	78	;'N'
  2100  068B  3400               	retlw	0
  2101                           
  2102                           	psect	stringtext10
  2103  068C                     __pstringtext10:
  2104  068C                     STR_7:
  2105  068C  342D               	retlw	45	;'-'
  2106  068D  343E               	retlw	62	;'>'
  2107  068E  3447               	retlw	71	;'G'
  2108  068F  3452               	retlw	82	;'R'
  2109  0690  343A               	retlw	58	;':'
  2110  0691  3436               	retlw	54	;'6'
  2111  0692  343A               	retlw	58	;':'
  2112  0693  344F               	retlw	79	;'O'
  2113  0694  344E               	retlw	78	;'N'
  2114  0695  3400               	retlw	0
  2115                           
  2116                           	psect	stringtext11
  2117  0696                     __pstringtext11:
  2118  0696                     STR_8:
  2119  0696  342D               	retlw	45	;'-'
  2120  0697  343E               	retlw	62	;'>'
  2121  0698  3447               	retlw	71	;'G'
  2122  0699  3452               	retlw	82	;'R'
  2123  069A  343A               	retlw	58	;':'
  2124  069B  3437               	retlw	55	;'7'
  2125  069C  343A               	retlw	58	;':'
  2126  069D  344F               	retlw	79	;'O'
  2127  069E  344E               	retlw	78	;'N'
  2128  069F  3400               	retlw	0
  2129                           
  2130                           	psect	stringtext12
  2131  06A0                     __pstringtext12:
  2132  06A0                     STR_9:
  2133  06A0  342D               	retlw	45	;'-'
  2134  06A1  343E               	retlw	62	;'>'
  2135  06A2  3447               	retlw	71	;'G'
  2136  06A3  3452               	retlw	82	;'R'
  2137  06A4  343A               	retlw	58	;':'
  2138  06A5  3438               	retlw	56	;'8'
  2139  06A6  343A               	retlw	58	;':'
  2140  06A7  344F               	retlw	79	;'O'
  2141  06A8  344E               	retlw	78	;'N'
  2142  06A9  3400               	retlw	0
  2143                           
  2144                           	psect	stringtext13
  2145  06AA                     __pstringtext13:
  2146  06AA                     STR_10:
  2147  06AA  342D               	retlw	45	;'-'
  2148  06AB  343E               	retlw	62	;'>'
  2149  06AC  3447               	retlw	71	;'G'
  2150  06AD  3452               	retlw	82	;'R'
  2151  06AE  343A               	retlw	58	;':'
  2152  06AF  3439               	retlw	57	;'9'
  2153  06B0  343A               	retlw	58	;':'
  2154  06B1  344F               	retlw	79	;'O'
  2155  06B2  344E               	retlw	78	;'N'
  2156  06B3  3400               	retlw	0
  2157                           
  2158                           	psect	stringtext14
  2159  0000                     __pstringtext14:
  2160                           
  2161                           	psect	cinit
  2162  0049                     start_initialization:	
  2163                           ; #config settings
  2164                           
  2165  0049                     __initialization:
  2166                           
  2167                           ; Clear objects allocated to BANK0
  2168  0049  3020               	movlw	low __pbssBANK0
  2169  004A  0084               	movwf	4
  2170  004B  3000               	movlw	high __pbssBANK0
  2171  004C  0085               	movwf	5
  2172  004D  3025               	movlw	37
  2173  004E  3186  26E5  3180   	fcall	clear_ram0
  2174                           
  2175                           ; Clear objects allocated to BANK1
  2176  0051  30A0               	movlw	low __pbssBANK1
  2177  0052  0084               	movwf	4
  2178  0053  3000               	movlw	high __pbssBANK1
  2179  0054  0085               	movwf	5
  2180  0055  304D               	movlw	77
  2181  0056  3186  26E5  3180   	fcall	clear_ram0
  2182  0059                     end_of_initialization:	
  2183                           ;End of C runtime variable initialization code
  2184                           
  2185  0059                     __end_of__initialization:
  2186  0059  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2187  005A  0020               	movlb	0
  2188  005B  3180  285D         	ljmp	_main	;jump to C main() function
  2189                           
  2190                           	psect	bssBANK0
  2191  0020                     __pbssBANK0:
  2192  0020                     _eusartRxStatusBuffer:
  2193  0020                     	ds	8
  2194  0028                     _nout:
  2195  0028                     	ds	2
  2196  002A                     _width:
  2197  002A                     	ds	2
  2198  002C                     _prec:
  2199  002C                     	ds	2
  2200  002E                     _flags:
  2201  002E                     	ds	2
  2202  0030                     _EUSART_ErrorHandler:
  2203  0030                     	ds	2
  2204  0032                     _EUSART_OverrunErrorHandler:
  2205  0032                     	ds	2
  2206  0034                     _EUSART_FramingErrorHandler:
  2207  0034                     	ds	2
  2208  0036                     _EUSART_RxDefaultInterruptHandler:
  2209  0036                     	ds	2
  2210  0038                     _EUSART_TxDefaultInterruptHandler:
  2211  0038                     	ds	2
  2212  003A                     _ADC_InterruptHandler:
  2213  003A                     	ds	2
  2214  003C                     _MSSP_InterruptHandler:
  2215  003C                     	ds	2
  2216  003E                     _eusartRxLastError:
  2217  003E                     	ds	1
  2218  003F                     _eusartRxCount:
  2219  003F                     	ds	1
  2220  0040                     _eusartRxTail:
  2221  0040                     	ds	1
  2222  0041                     _eusartRxHead:
  2223  0041                     	ds	1
  2224  0042                     _eusartTxBufferRemaining:
  2225  0042                     	ds	1
  2226  0043                     _eusartTxTail:
  2227  0043                     	ds	1
  2228  0044                     _eusartTxHead:
  2229  0044                     	ds	1
  2230                           
  2231                           	psect	bssBANK1
  2232  00A0                     __pbssBANK1:
  2233  00A0                     _dbuf:
  2234  00A0                     	ds	32
  2235  00C0                     _I2C_Status:
  2236  00C0                     	ds	29
  2237  00DD                     _eusartRxBuffer:
  2238  00DD                     	ds	8
  2239  00E5                     _eusartTxBuffer:
  2240  00E5                     	ds	8
  2241                           
  2242                           	psect	clrtext
  2243  06E5                     clear_ram0:	
  2244                           ;	Called with FSR0 containing the base address, and
  2245                           ;	WREG with the size to clear
  2246                           
  2247  06E5  0064               	clrwdt	;clear the watchdog before getting into this loop
  2248  06E6                     clrloop0:
  2249  06E6  0180               	clrf	0	;clear RAM location pointed to by FSR
  2250  06E7  3101               	addfsr 0,1
  2251  06E8  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2252  06E9  2EE6               	goto	clrloop0	;have we reached the end yet?
  2253  06EA  3400               	retlw	0	;all done for this memory range, return
  2254                           
  2255                           	psect	cstackCOMMON
  2256  0070                     __pcstackCOMMON:
  2257  0070                     ?_I2C_SetBuffer:
  2258  0070                     ?_I2C_Initialize:	
  2259                           ; 1 bytes @ 0x0
  2260                           
  2261  0070                     ?_OSCILLATOR_Initialize:	
  2262                           ; 1 bytes @ 0x0
  2263                           
  2264  0070                     ?_WDT_Initialize:	
  2265                           ; 1 bytes @ 0x0
  2266                           
  2267  0070                     ?_ADC_Initialize:	
  2268                           ; 1 bytes @ 0x0
  2269                           
  2270  0070                     ?_EUSART_Initialize:	
  2271                           ; 1 bytes @ 0x0
  2272                           
  2273  0070                     ?_EUSART_Receive_ISR:	
  2274                           ; 1 bytes @ 0x0
  2275                           
  2276  0070                     ?_EUSART_Transmit_ISR:	
  2277                           ; 1 bytes @ 0x0
  2278                           
  2279  0070                     ??_EUSART_Transmit_ISR:	
  2280                           ; 1 bytes @ 0x0
  2281                           
  2282  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  2283                           ; 1 bytes @ 0x0
  2284                           
  2285  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  2286                           ; 1 bytes @ 0x0
  2287                           
  2288  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  2289                           ; 1 bytes @ 0x0
  2290                           
  2291  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  2292                           ; 1 bytes @ 0x0
  2293                           
  2294  0070                     ?_EUSART_DefaultErrorHandler:	
  2295                           ; 1 bytes @ 0x0
  2296                           
  2297  0070                     ?_EUSART_RxDataHandler:	
  2298                           ; 1 bytes @ 0x0
  2299                           
  2300  0070                     ??_EUSART_RxDataHandler:	
  2301                           ; 1 bytes @ 0x0
  2302                           
  2303  0070                     ?_I2C_DO_IDLE:	
  2304                           ; 1 bytes @ 0x0
  2305                           
  2306  0070                     ??_I2C_DO_IDLE:	
  2307                           ; 1 bytes @ 0x0
  2308                           
  2309  0070                     ?_I2C_DO_SEND_ADR_READ:	
  2310                           ; 1 bytes @ 0x0
  2311                           
  2312  0070                     ??_I2C_DO_SEND_ADR_READ:	
  2313                           ; 1 bytes @ 0x0
  2314                           
  2315  0070                     ?_I2C_DO_SEND_ADR_WRITE:	
  2316                           ; 1 bytes @ 0x0
  2317                           
  2318  0070                     ?_I2C_DO_TX:	
  2319                           ; 1 bytes @ 0x0
  2320                           
  2321  0070                     ?_I2C_DO_RX:	
  2322                           ; 1 bytes @ 0x0
  2323                           
  2324  0070                     ?_I2C_DO_RCEN:	
  2325                           ; 1 bytes @ 0x0
  2326                           
  2327  0070                     ??_I2C_DO_RCEN:	
  2328                           ; 1 bytes @ 0x0
  2329                           
  2330  0070                     ?_I2C_DO_TX_EMPTY:	
  2331                           ; 1 bytes @ 0x0
  2332                           
  2333  0070                     ?_I2C_DO_SEND_RESTART_READ:	
  2334                           ; 1 bytes @ 0x0
  2335                           
  2336  0070                     ??_I2C_DO_SEND_RESTART_READ:	
  2337                           ; 1 bytes @ 0x0
  2338                           
  2339  0070                     ?_I2C_DO_SEND_RESTART_WRITE:	
  2340                           ; 1 bytes @ 0x0
  2341                           
  2342  0070                     ??_I2C_DO_SEND_RESTART_WRITE:	
  2343                           ; 1 bytes @ 0x0
  2344                           
  2345  0070                     ?_I2C_DO_SEND_RESTART:	
  2346                           ; 1 bytes @ 0x0
  2347                           
  2348  0070                     ??_I2C_DO_SEND_RESTART:	
  2349                           ; 1 bytes @ 0x0
  2350                           
  2351  0070                     ?_I2C_DO_SEND_STOP:	
  2352                           ; 1 bytes @ 0x0
  2353                           
  2354  0070                     ??_I2C_DO_SEND_STOP:	
  2355                           ; 1 bytes @ 0x0
  2356                           
  2357  0070                     ?_I2C_DO_RX_ACK:	
  2358                           ; 1 bytes @ 0x0
  2359                           
  2360  0070                     ??_I2C_DO_RX_ACK:	
  2361                           ; 1 bytes @ 0x0
  2362                           
  2363  0070                     ?_I2C_DO_RX_NACK_STOP:	
  2364                           ; 1 bytes @ 0x0
  2365                           
  2366  0070                     ??_I2C_DO_RX_NACK_STOP:	
  2367                           ; 1 bytes @ 0x0
  2368                           
  2369  0070                     ?_I2C_DO_RX_NACK_RESTART:	
  2370                           ; 1 bytes @ 0x0
  2371                           
  2372  0070                     ??_I2C_DO_RX_NACK_RESTART:	
  2373                           ; 1 bytes @ 0x0
  2374                           
  2375  0070                     ?_I2C_DO_RESET:	
  2376                           ; 1 bytes @ 0x0
  2377                           
  2378  0070                     ??_I2C_DO_RESET:	
  2379                           ; 1 bytes @ 0x0
  2380                           
  2381  0070                     ?_I2C_DO_ADDRESS_NACK:	
  2382                           ; 1 bytes @ 0x0
  2383                           
  2384  0070                     ?_I2C_MasterIsr:	
  2385                           ; 1 bytes @ 0x0
  2386                           
  2387  0070                     ?_I2C_MasterClearIrq:	
  2388                           ; 1 bytes @ 0x0
  2389                           
  2390  0070                     ??_I2C_MasterClearIrq:	
  2391                           ; 1 bytes @ 0x0
  2392                           
  2393  0070                     ?_I2C_SetCallback:	
  2394                           ; 1 bytes @ 0x0
  2395                           
  2396  0070                     ?_I2C_MasterFsm:	
  2397                           ; 1 bytes @ 0x0
  2398                           
  2399  0070                     ?_I2C_MasterIsNack:	
  2400                           ; 1 bytes @ 0x0
  2401                           
  2402  0070                     ??_I2C_MasterIsNack:	
  2403                           ; 1 bytes @ 0x0
  2404                           
  2405  0070                     ?_I2C_MasterSendTxData:	
  2406                           ; 1 bytes @ 0x0
  2407                           
  2408  0070                     ??_I2C_MasterSendTxData:	
  2409                           ; 1 bytes @ 0x0
  2410                           
  2411  0070                     ?_I2C_MasterGetRxData:	
  2412                           ; 1 bytes @ 0x0
  2413                           
  2414  0070                     ??_I2C_MasterGetRxData:	
  2415                           ; 1 bytes @ 0x0
  2416                           
  2417  0070                     ?_I2C_MasterSendAck:	
  2418                           ; 1 bytes @ 0x0
  2419                           
  2420  0070                     ??_I2C_MasterSendAck:	
  2421                           ; 1 bytes @ 0x0
  2422                           
  2423  0070                     ?_I2C_MasterStartRx:	
  2424                           ; 1 bytes @ 0x0
  2425                           
  2426  0070                     ??_I2C_MasterStartRx:	
  2427                           ; 1 bytes @ 0x0
  2428                           
  2429  0070                     ?_I2C_MasterSetIrq:	
  2430                           ; 1 bytes @ 0x0
  2431                           
  2432  0070                     ??_I2C_MasterSetIrq:	
  2433                           ; 1 bytes @ 0x0
  2434                           
  2435  0070                     ?_I2C_MasterEnableRestart:	
  2436                           ; 1 bytes @ 0x0
  2437                           
  2438  0070                     ??_I2C_MasterEnableRestart:	
  2439                           ; 1 bytes @ 0x0
  2440                           
  2441  0070                     ?_I2C_MasterStop:	
  2442                           ; 1 bytes @ 0x0
  2443                           
  2444  0070                     ??_I2C_MasterStop:	
  2445                           ; 1 bytes @ 0x0
  2446                           
  2447  0070                     ?_I2C_MasterSendNack:	
  2448                           ; 1 bytes @ 0x0
  2449                           
  2450  0070                     ??_I2C_MasterSendNack:	
  2451                           ; 1 bytes @ 0x0
  2452                           
  2453  0070                     ?_reset:	
  2454                           ; 1 bytes @ 0x0
  2455                           
  2456  0070                     ?_PIN_MANAGER_Initialize:	
  2457                           ; 1 bytes @ 0x0
  2458                           
  2459  0070                     ?_SYSTEM_Initialize:	
  2460                           ; 1 bytes @ 0x0
  2461                           
  2462  0070                     ?_EUSART_Read:	
  2463                           ; 1 bytes @ 0x0
  2464                           
  2465  0070                     ?_EUSART_Write:	
  2466                           ; 1 bytes @ 0x0
  2467                           
  2468  0070                     ?_putch:	
  2469                           ; 1 bytes @ 0x0
  2470                           
  2471  0070                     ?_INTERRUPT_InterruptManager:	
  2472                           ; 1 bytes @ 0x0
  2473                           
  2474  0070                     ?_main:	
  2475                           ; 1 bytes @ 0x0
  2476                           
  2477  0070                     I2C_MasterSendTxData@data:	
  2478                           ; 1 bytes @ 0x0
  2479                           
  2480  0070                     I2C_SetBuffer@bufferSize:	
  2481                           ; 1 bytes @ 0x0
  2482                           
  2483  0070                     I2C_SetCallback@cb:	
  2484                           ; 2 bytes @ 0x0
  2485                           
  2486                           
  2487                           ; 2 bytes @ 0x0
  2488  0070                     	ds	1
  2489  0071                     ??_EUSART_Receive_ISR:
  2490  0071                     ??_EUSART_DefaultErrorHandler:	
  2491                           ; 1 bytes @ 0x1
  2492                           
  2493  0071                     ??_I2C_DO_SEND_ADR_WRITE:	
  2494                           ; 1 bytes @ 0x1
  2495                           
  2496                           
  2497                           ; 1 bytes @ 0x1
  2498  0071                     	ds	1
  2499  0072                     ??_I2C_SetBuffer:
  2500  0072                     I2C_SetCallback@ptr:	
  2501                           ; 1 bytes @ 0x2
  2502                           
  2503                           
  2504                           ; 1 bytes @ 0x2
  2505  0072                     	ds	1
  2506  0073                     ??_I2C_SetCallback:
  2507  0073                     I2C_SetBuffer@buffer:	
  2508                           ; 1 bytes @ 0x3
  2509                           
  2510                           
  2511                           ; 1 bytes @ 0x3
  2512  0073                     	ds	1
  2513  0074                     I2C_SetCallback@idx:
  2514                           
  2515                           ; 1 bytes @ 0x4
  2516  0074                     	ds	1
  2517  0075                     ?_I2C_SetDataCompleteCallback:
  2518  0075                     I2C_SetDataCompleteCallback@cb:	
  2519                           ; 1 bytes @ 0x5
  2520                           
  2521                           
  2522                           ; 2 bytes @ 0x5
  2523  0075                     	ds	2
  2524  0077                     I2C_SetDataCompleteCallback@ptr:
  2525                           
  2526                           ; 1 bytes @ 0x7
  2527  0077                     	ds	1
  2528  0078                     ??_I2C_SetDataCompleteCallback:
  2529                           
  2530                           ; 1 bytes @ 0x8
  2531  0078                     	ds	1
  2532  0079                     ?_rd1RegCompleteHandler:
  2533  0079                     ?_rd2RegCompleteHandler:	
  2534                           ; 1 bytes @ 0x9
  2535                           
  2536  0079                     ?_wr1RegCompleteHandler:	
  2537                           ; 1 bytes @ 0x9
  2538                           
  2539  0079                     ?_wr2RegCompleteHandler:	
  2540                           ; 1 bytes @ 0x9
  2541                           
  2542  0079                     ?_rdBlkRegCompleteHandler:	
  2543                           ; 1 bytes @ 0x9
  2544                           
  2545  0079                     ?_I2C_CallbackReturnStop:	
  2546                           ; 1 bytes @ 0x9
  2547                           
  2548  0079                     ?_I2C_CallbackReturnReset:	
  2549                           ; 1 bytes @ 0x9
  2550                           
  2551  0079                     rd1RegCompleteHandler@ptr:	
  2552                           ; 1 bytes @ 0x9
  2553                           
  2554  0079                     rd2RegCompleteHandler@ptr:	
  2555                           ; 1 bytes @ 0x9
  2556                           
  2557  0079                     wr1RegCompleteHandler@ptr:	
  2558                           ; 1 bytes @ 0x9
  2559                           
  2560  0079                     wr2RegCompleteHandler@ptr:	
  2561                           ; 1 bytes @ 0x9
  2562                           
  2563  0079                     rdBlkRegCompleteHandler@ptr:	
  2564                           ; 1 bytes @ 0x9
  2565                           
  2566  0079                     I2C_CallbackReturnStop@funPtr:	
  2567                           ; 1 bytes @ 0x9
  2568                           
  2569  0079                     I2C_CallbackReturnReset@funPtr:	
  2570                           ; 1 bytes @ 0x9
  2571                           
  2572                           
  2573                           ; 1 bytes @ 0x9
  2574  0079                     	ds	1
  2575  007A                     ??_rd1RegCompleteHandler:
  2576  007A                     ??_rd2RegCompleteHandler:	
  2577                           ; 1 bytes @ 0xA
  2578                           
  2579  007A                     ??_wr1RegCompleteHandler:	
  2580                           ; 1 bytes @ 0xA
  2581                           
  2582  007A                     ??_wr2RegCompleteHandler:	
  2583                           ; 1 bytes @ 0xA
  2584                           
  2585  007A                     ??_rdBlkRegCompleteHandler:	
  2586                           ; 1 bytes @ 0xA
  2587                           
  2588  007A                     ??_I2C_DO_TX:	
  2589                           ; 1 bytes @ 0xA
  2590                           
  2591  007A                     ??_I2C_DO_RX:	
  2592                           ; 1 bytes @ 0xA
  2593                           
  2594  007A                     ??_I2C_DO_TX_EMPTY:	
  2595                           ; 1 bytes @ 0xA
  2596                           
  2597  007A                     ??_I2C_DO_ADDRESS_NACK:	
  2598                           ; 1 bytes @ 0xA
  2599                           
  2600  007A                     ??_I2C_CallbackReturnStop:	
  2601                           ; 1 bytes @ 0xA
  2602                           
  2603  007A                     ??_I2C_CallbackReturnReset:	
  2604                           ; 1 bytes @ 0xA
  2605                           
  2606                           
  2607                           ; 1 bytes @ 0xA
  2608  007A                     	ds	3
  2609  007D                     ??_I2C_MasterIsr:
  2610  007D                     ??_INTERRUPT_InterruptManager:	
  2611                           ; 1 bytes @ 0xD
  2612                           
  2613                           
  2614                           	psect	cstackBANK0
  2615  0045                     __pcstackBANK0:	
  2616                           ; 1 bytes @ 0xD
  2617                           
  2618  0045                     ??_I2C_MasterFsm:
  2619                           
  2620                           ; 1 bytes @ 0x0
  2621  0045                     	ds	3
  2622  0048                     ??_I2C_Initialize:
  2623  0048                     ??_OSCILLATOR_Initialize:	
  2624                           ; 1 bytes @ 0x3
  2625                           
  2626  0048                     ??_WDT_Initialize:	
  2627                           ; 1 bytes @ 0x3
  2628                           
  2629  0048                     ??_ADC_Initialize:	
  2630                           ; 1 bytes @ 0x3
  2631                           
  2632  0048                     ?_EUSART_SetRxInterruptHandler:	
  2633                           ; 1 bytes @ 0x3
  2634                           
  2635  0048                     ?_EUSART_SetTxInterruptHandler:	
  2636                           ; 1 bytes @ 0x3
  2637                           
  2638  0048                     ?_EUSART_SetFramingErrorHandler:	
  2639                           ; 1 bytes @ 0x3
  2640                           
  2641  0048                     ?_EUSART_SetOverrunErrorHandler:	
  2642                           ; 1 bytes @ 0x3
  2643                           
  2644  0048                     ?_EUSART_SetErrorHandler:	
  2645                           ; 1 bytes @ 0x3
  2646                           
  2647  0048                     ??_reset:	
  2648                           ; 1 bytes @ 0x3
  2649                           
  2650  0048                     ??_PIN_MANAGER_Initialize:	
  2651                           ; 1 bytes @ 0x3
  2652                           
  2653  0048                     ??_EUSART_Read:	
  2654                           ; 1 bytes @ 0x3
  2655                           
  2656  0048                     ??_EUSART_Write:	
  2657                           ; 1 bytes @ 0x3
  2658                           
  2659  0048                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2660                           ; 1 bytes @ 0x3
  2661                           
  2662  0048                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2663                           ; 2 bytes @ 0x3
  2664                           
  2665  0048                     EUSART_SetErrorHandler@interruptHandler:	
  2666                           ; 2 bytes @ 0x3
  2667                           
  2668  0048                     EUSART_SetTxInterruptHandler@interruptHandler:	
  2669                           ; 2 bytes @ 0x3
  2670                           
  2671  0048                     EUSART_SetRxInterruptHandler@interruptHandler:	
  2672                           ; 2 bytes @ 0x3
  2673                           
  2674                           
  2675                           ; 2 bytes @ 0x3
  2676  0048                     	ds	1
  2677  0049                     EUSART_Read@readValue:
  2678  0049                     EUSART_Write@txData:	
  2679                           ; 1 bytes @ 0x4
  2680                           
  2681                           
  2682                           ; 1 bytes @ 0x4
  2683  0049                     	ds	1
  2684  004A                     ??_EUSART_Initialize:
  2685  004A                     ??_EUSART_SetRxInterruptHandler:	
  2686                           ; 1 bytes @ 0x5
  2687                           
  2688  004A                     ??_EUSART_SetTxInterruptHandler:	
  2689                           ; 1 bytes @ 0x5
  2690                           
  2691  004A                     ??_EUSART_SetFramingErrorHandler:	
  2692                           ; 1 bytes @ 0x5
  2693                           
  2694  004A                     ??_EUSART_SetOverrunErrorHandler:	
  2695                           ; 1 bytes @ 0x5
  2696                           
  2697  004A                     ??_EUSART_SetErrorHandler:	
  2698                           ; 1 bytes @ 0x5
  2699                           
  2700  004A                     ??_putch:	
  2701                           ; 1 bytes @ 0x5
  2702                           
  2703  004A                     putch@txData:	
  2704                           ; 1 bytes @ 0x5
  2705                           
  2706                           
  2707                           ; 1 bytes @ 0x5
  2708  004A                     	ds	1
  2709  004B                     ??_SYSTEM_Initialize:
  2710  004B                     ?_fputc:	
  2711                           ; 1 bytes @ 0x6
  2712                           
  2713  004B                     fputc@c:	
  2714                           ; 2 bytes @ 0x6
  2715                           
  2716                           
  2717                           ; 2 bytes @ 0x6
  2718  004B                     	ds	2
  2719  004D                     fputc@fp:
  2720                           
  2721                           ; 1 bytes @ 0x8
  2722  004D                     	ds	1
  2723  004E                     ??_fputc:
  2724                           
  2725                           ; 1 bytes @ 0x9
  2726  004E                     	ds	5
  2727  0053                     ?_vfpfcnvrt:
  2728  0053                     vfpfcnvrt@fmt:	
  2729                           ; 2 bytes @ 0xE
  2730                           
  2731                           
  2732                           ; 1 bytes @ 0xE
  2733  0053                     	ds	1
  2734  0054                     vfpfcnvrt@ap:
  2735                           
  2736                           ; 1 bytes @ 0xF
  2737  0054                     	ds	1
  2738  0055                     ??_vfpfcnvrt:
  2739                           
  2740                           ; 1 bytes @ 0x10
  2741  0055                     	ds	5
  2742  005A                     vfpfcnvrt@fp:
  2743                           
  2744                           ; 1 bytes @ 0x15
  2745  005A                     	ds	1
  2746  005B                     ?_vfprintf:
  2747  005B                     vfprintf@fmt:	
  2748                           ; 2 bytes @ 0x16
  2749                           
  2750                           
  2751                           ; 2 bytes @ 0x16
  2752  005B                     	ds	2
  2753  005D                     vfprintf@ap:
  2754                           
  2755                           ; 1 bytes @ 0x18
  2756  005D                     	ds	1
  2757  005E                     ??_vfprintf:
  2758                           
  2759                           ; 1 bytes @ 0x19
  2760  005E                     	ds	2
  2761  0060                     vfprintf@fp:
  2762                           
  2763                           ; 1 bytes @ 0x1B
  2764  0060                     	ds	1
  2765  0061                     vfprintf@cfmt:
  2766                           
  2767                           ; 2 bytes @ 0x1C
  2768  0061                     	ds	2
  2769  0063                     ?_printf:
  2770  0063                     printf@fmt:	
  2771                           ; 2 bytes @ 0x1E
  2772                           
  2773                           
  2774                           ; 2 bytes @ 0x1E
  2775  0063                     	ds	2
  2776  0065                     ??_printf:
  2777                           
  2778                           ; 1 bytes @ 0x20
  2779  0065                     	ds	1
  2780  0066                     printf@ap:
  2781                           
  2782                           ; 1 bytes @ 0x21
  2783  0066                     	ds	1
  2784  0067                     ??_main:
  2785                           
  2786                           ; 1 bytes @ 0x22
  2787  0067                     	ds	2
  2788  0069                     main@reception:
  2789                           
  2790                           ; 1 bytes @ 0x24
  2791  0069                     	ds	1
  2792                           
  2793                           	psect	maintext
  2794  005D                     __pmaintext:	
  2795 ;;
  2796 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2797 ;;
  2798 ;; *************** function _main *****************
  2799 ;; Defined at:
  2800 ;;		line 50 in file "main.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;		None
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;  reception       1   36[BANK0 ] unsigned char 
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  1    wreg      void 
  2807 ;; Registers used:
  2808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2809 ;; Tracked objects:
  2810 ;;		On entry : B1F/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2815 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2816 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2817 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2818 ;;Total ram usage:        3 bytes
  2819 ;; Hardware stack levels required when called: 13
  2820 ;; This function calls:
  2821 ;;		_EUSART_Read
  2822 ;;		_SYSTEM_Initialize
  2823 ;;		_printf
  2824 ;;		_reset
  2825 ;; This function is called by:
  2826 ;;		Startup code after reset
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           
  2831                           ;psect for function _main
  2832  005D                     _main:
  2833  005D                     l3590:	
  2834                           ;incstack = 0
  2835                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2836                           
  2837                           
  2838                           ;main.c: 52:     SYSTEM_Initialize();
  2839  005D  3185  2599  3180   	fcall	_SYSTEM_Initialize
  2840  0060                     l3592:
  2841                           
  2842                           ;main.c: 58:     (INTCONbits.GIE = 1);
  2843  0060  178B               	bsf	11,7	;volatile
  2844  0061                     l3594:
  2845                           
  2846                           ;main.c: 61:     (INTCONbits.PEIE = 1);
  2847  0061  170B               	bsf	11,6	;volatile
  2848  0062                     l3596:
  2849                           
  2850                           ;main.c: 74:         if (eusartRxCount != 0) {
  2851  0062  0020               	movlb	0	; select bank0
  2852  0063  083F               	movf	_eusartRxCount,w	;volatile
  2853  0064  1903               	btfsc	3,2
  2854  0065  2867               	goto	u1201
  2855  0066  2868               	goto	u1200
  2856  0067                     u1201:
  2857  0067  2862               	goto	l3596
  2858  0068                     u1200:
  2859  0068                     l3598:
  2860                           
  2861                           ;main.c: 76:             reception = EUSART_Read();
  2862  0068  3184  24B0  3180   	fcall	_EUSART_Read
  2863  006B  0020               	movlb	0	; select bank0
  2864  006C  00E7               	movwf	??_main
  2865  006D  0867               	movf	??_main,w
  2866  006E  00E9               	movwf	main@reception
  2867                           
  2868                           ;main.c: 78:             switch (reception)
  2869  006F  29C4               	goto	l3706
  2870  0070                     l3600:
  2871                           
  2872                           ;main.c: 82:                 {;main.c: 83:                     reset();
  2873  0070  3186  2612  3180   	fcall	_reset
  2874  0073                     l3602:
  2875  0073  0022               	movlb	2	; select bank2
  2876  0074  140C               	bsf	12,0	;volatile
  2877  0075                     l3604:
  2878                           
  2879                           ;main.c: 85:                     _delay((unsigned long)((100)*(32000000/4000.0)));
  2880  0075  3005               	movlw	5
  2881  0076  0020               	movlb	0	; select bank0
  2882  0077  00E8               	movwf	??_main+1
  2883  0078  300F               	movlw	15
  2884  0079  00E7               	movwf	??_main
  2885  007A  30F1               	movlw	241
  2886  007B                     u1217:
  2887  007B  0B89               	decfsz	9,f
  2888  007C  287B               	goto	u1217
  2889  007D  0BE7               	decfsz	??_main,f
  2890  007E  287B               	goto	u1217
  2891  007F  0BE8               	decfsz	??_main+1,f
  2892  0080  287B               	goto	u1217
  2893  0081                     l3606:
  2894                           
  2895                           ;main.c: 86:                     printf("->GR:x:OFF");
  2896  0081  307A               	movlw	low (STR_1| (0+32768))
  2897  0082  0020               	movlb	0	; select bank0
  2898  0083  00E3               	movwf	printf@fmt
  2899  0084  3084               	movlw	high (STR_1| (0+32768))
  2900  0085  00E4               	movwf	printf@fmt+1
  2901  0086  3185  25AC  3180   	fcall	_printf
  2902                           
  2903                           ;main.c: 87:                     break;
  2904  0089  2862               	goto	l3596
  2905  008A                     l3608:
  2906                           
  2907                           ;main.c: 91:                 {;main.c: 92:                     reset();
  2908  008A  3186  2612  3180   	fcall	_reset
  2909  008D                     l3610:
  2910  008D  0022               	movlb	2	; select bank2
  2911  008E  140C               	bsf	12,0	;volatile
  2912  008F                     l3612:
  2913                           
  2914                           ;main.c: 94:                     _delay((unsigned long)((100)*(32000000/4000.0)));
  2915  008F  3005               	movlw	5
  2916  0090  0020               	movlb	0	; select bank0
  2917  0091  00E8               	movwf	??_main+1
  2918  0092  300F               	movlw	15
  2919  0093  00E7               	movwf	??_main
  2920  0094  30F1               	movlw	241
  2921  0095                     u1227:
  2922  0095  0B89               	decfsz	9,f
  2923  0096  2895               	goto	u1227
  2924  0097  0BE7               	decfsz	??_main,f
  2925  0098  2895               	goto	u1227
  2926  0099  0BE8               	decfsz	??_main+1,f
  2927  009A  2895               	goto	u1227
  2928  009B                     l3614:
  2929                           
  2930                           ;main.c: 95:                     printf("->GR:1:ON");
  2931  009B  305A               	movlw	low (STR_2| (0+32768))
  2932  009C  0020               	movlb	0	; select bank0
  2933  009D  00E3               	movwf	printf@fmt
  2934  009E  3086               	movlw	high (STR_2| (0+32768))
  2935  009F  00E4               	movwf	printf@fmt+1
  2936  00A0  3185  25AC  3180   	fcall	_printf
  2937                           
  2938                           ;main.c: 96:                     break;
  2939  00A3  2862               	goto	l3596
  2940  00A4                     l3616:
  2941                           
  2942                           ;main.c: 100:                 {;main.c: 101:                     reset();
  2943  00A4  3186  2612  3180   	fcall	_reset
  2944  00A7                     l3618:
  2945  00A7  0022               	movlb	2	; select bank2
  2946  00A8  148C               	bsf	12,1	;volatile
  2947  00A9                     l3620:
  2948                           
  2949                           ;main.c: 103:                     _delay((unsigned long)((100)*(32000000/4000.0)));
  2950  00A9  3005               	movlw	5
  2951  00AA  0020               	movlb	0	; select bank0
  2952  00AB  00E8               	movwf	??_main+1
  2953  00AC  300F               	movlw	15
  2954  00AD  00E7               	movwf	??_main
  2955  00AE  30F1               	movlw	241
  2956  00AF                     u1237:
  2957  00AF  0B89               	decfsz	9,f
  2958  00B0  28AF               	goto	u1237
  2959  00B1  0BE7               	decfsz	??_main,f
  2960  00B2  28AF               	goto	u1237
  2961  00B3  0BE8               	decfsz	??_main+1,f
  2962  00B4  28AF               	goto	u1237
  2963  00B5                     l3622:
  2964                           
  2965                           ;main.c: 104:                     printf("->GR:2:ON");
  2966  00B5  3064               	movlw	low (STR_3| (0+32768))
  2967  00B6  0020               	movlb	0	; select bank0
  2968  00B7  00E3               	movwf	printf@fmt
  2969  00B8  3086               	movlw	high (STR_3| (0+32768))
  2970  00B9  00E4               	movwf	printf@fmt+1
  2971  00BA  3185  25AC  3180   	fcall	_printf
  2972                           
  2973                           ;main.c: 105:                     break;
  2974  00BD  2862               	goto	l3596
  2975  00BE                     l3624:
  2976                           
  2977                           ;main.c: 109:                 {;main.c: 110:                     reset();
  2978  00BE  3186  2612  3180   	fcall	_reset
  2979  00C1                     l3626:
  2980  00C1  0022               	movlb	2	; select bank2
  2981  00C2  150C               	bsf	12,2	;volatile
  2982  00C3                     l3628:
  2983                           
  2984                           ;main.c: 112:                     _delay((unsigned long)((100)*(32000000/4000.0)));
  2985  00C3  3005               	movlw	5
  2986  00C4  0020               	movlb	0	; select bank0
  2987  00C5  00E8               	movwf	??_main+1
  2988  00C6  300F               	movlw	15
  2989  00C7  00E7               	movwf	??_main
  2990  00C8  30F1               	movlw	241
  2991  00C9                     u1247:
  2992  00C9  0B89               	decfsz	9,f
  2993  00CA  28C9               	goto	u1247
  2994  00CB  0BE7               	decfsz	??_main,f
  2995  00CC  28C9               	goto	u1247
  2996  00CD  0BE8               	decfsz	??_main+1,f
  2997  00CE  28C9               	goto	u1247
  2998  00CF                     l3630:
  2999                           
  3000                           ;main.c: 113:                     printf("->GR:3:ON");
  3001  00CF  306E               	movlw	low (STR_4| (0+32768))
  3002  00D0  0020               	movlb	0	; select bank0
  3003  00D1  00E3               	movwf	printf@fmt
  3004  00D2  3086               	movlw	high (STR_4| (0+32768))
  3005  00D3  00E4               	movwf	printf@fmt+1
  3006  00D4  3185  25AC  3180   	fcall	_printf
  3007                           
  3008                           ;main.c: 114:                     break;
  3009  00D7  2862               	goto	l3596
  3010  00D8                     l3632:
  3011                           
  3012                           ;main.c: 118:                 {;main.c: 119:                     reset();
  3013  00D8  3186  2612  3180   	fcall	_reset
  3014  00DB                     l3634:
  3015  00DB  0022               	movlb	2	; select bank2
  3016  00DC  158C               	bsf	12,3	;volatile
  3017  00DD                     l3636:
  3018                           
  3019                           ;main.c: 121:                     _delay((unsigned long)((100)*(32000000/4000.0)));
  3020  00DD  3005               	movlw	5
  3021  00DE  0020               	movlb	0	; select bank0
  3022  00DF  00E8               	movwf	??_main+1
  3023  00E0  300F               	movlw	15
  3024  00E1  00E7               	movwf	??_main
  3025  00E2  30F1               	movlw	241
  3026  00E3                     u1257:
  3027  00E3  0B89               	decfsz	9,f
  3028  00E4  28E3               	goto	u1257
  3029  00E5  0BE7               	decfsz	??_main,f
  3030  00E6  28E3               	goto	u1257
  3031  00E7  0BE8               	decfsz	??_main+1,f
  3032  00E8  28E3               	goto	u1257
  3033  00E9                     l3638:
  3034                           
  3035                           ;main.c: 122:                     printf("->GR:4:ON");
  3036  00E9  3078               	movlw	low (STR_5| (0+32768))
  3037  00EA  0020               	movlb	0	; select bank0
  3038  00EB  00E3               	movwf	printf@fmt
  3039  00EC  3086               	movlw	high (STR_5| (0+32768))
  3040  00ED  00E4               	movwf	printf@fmt+1
  3041  00EE  3185  25AC  3180   	fcall	_printf
  3042                           
  3043                           ;main.c: 123:                     break;
  3044  00F1  2862               	goto	l3596
  3045  00F2                     l3640:
  3046                           
  3047                           ;main.c: 127:                 {;main.c: 128:                     reset();
  3048  00F2  3186  2612  3180   	fcall	_reset
  3049  00F5                     l3642:
  3050  00F5  0022               	movlb	2	; select bank2
  3051  00F6  160C               	bsf	12,4	;volatile
  3052  00F7                     l3644:
  3053                           
  3054                           ;main.c: 130:                     _delay((unsigned long)((100)*(32000000/4000.0)));
  3055  00F7  3005               	movlw	5
  3056  00F8  0020               	movlb	0	; select bank0
  3057  00F9  00E8               	movwf	??_main+1
  3058  00FA  300F               	movlw	15
  3059  00FB  00E7               	movwf	??_main
  3060  00FC  30F1               	movlw	241
  3061  00FD                     u1267:
  3062  00FD  0B89               	decfsz	9,f
  3063  00FE  28FD               	goto	u1267
  3064  00FF  0BE7               	decfsz	??_main,f
  3065  0100  28FD               	goto	u1267
  3066  0101  0BE8               	decfsz	??_main+1,f
  3067  0102  28FD               	goto	u1267
  3068  0103                     l3646:
  3069                           
  3070                           ;main.c: 131:                     printf("->GR:5:ON");
  3071  0103  3082               	movlw	low (STR_6| (0+32768))
  3072  0104  0020               	movlb	0	; select bank0
  3073  0105  00E3               	movwf	printf@fmt
  3074  0106  3086               	movlw	high (STR_6| (0+32768))
  3075  0107  00E4               	movwf	printf@fmt+1
  3076  0108  3185  25AC  3180   	fcall	_printf
  3077                           
  3078                           ;main.c: 132:                     break;
  3079  010B  2862               	goto	l3596
  3080  010C                     l3648:
  3081                           
  3082                           ;main.c: 136:                 {;main.c: 137:                     reset();
  3083  010C  3186  2612  3180   	fcall	_reset
  3084  010F                     l3650:
  3085  010F  0022               	movlb	2	; select bank2
  3086  0110  168C               	bsf	12,5	;volatile
  3087  0111                     l3652:
  3088                           
  3089                           ;main.c: 139:                     _delay((unsigned long)((100)*(32000000/4000.0)));
  3090  0111  3005               	movlw	5
  3091  0112  0020               	movlb	0	; select bank0
  3092  0113  00E8               	movwf	??_main+1
  3093  0114  300F               	movlw	15
  3094  0115  00E7               	movwf	??_main
  3095  0116  30F1               	movlw	241
  3096  0117                     u1277:
  3097  0117  0B89               	decfsz	9,f
  3098  0118  2917               	goto	u1277
  3099  0119  0BE7               	decfsz	??_main,f
  3100  011A  2917               	goto	u1277
  3101  011B  0BE8               	decfsz	??_main+1,f
  3102  011C  2917               	goto	u1277
  3103  011D                     l3654:
  3104                           
  3105                           ;main.c: 140:                     printf("->GR:6:ON");
  3106  011D  308C               	movlw	low (STR_7| (0+32768))
  3107  011E  0020               	movlb	0	; select bank0
  3108  011F  00E3               	movwf	printf@fmt
  3109  0120  3086               	movlw	high (STR_7| (0+32768))
  3110  0121  00E4               	movwf	printf@fmt+1
  3111  0122  3185  25AC  3180   	fcall	_printf
  3112                           
  3113                           ;main.c: 141:                     break;
  3114  0125  2862               	goto	l3596
  3115  0126                     l3656:
  3116                           
  3117                           ;main.c: 145:                 {;main.c: 146:                     reset();
  3118  0126  3186  2612  3180   	fcall	_reset
  3119  0129                     l3658:
  3120  0129  0022               	movlb	2	; select bank2
  3121  012A  170C               	bsf	12,6	;volatile
  3122  012B                     l3660:
  3123                           
  3124                           ;main.c: 148:                     _delay((unsigned long)((100)*(32000000/4000.0)));
  3125  012B  3005               	movlw	5
  3126  012C  0020               	movlb	0	; select bank0
  3127  012D  00E8               	movwf	??_main+1
  3128  012E  300F               	movlw	15
  3129  012F  00E7               	movwf	??_main
  3130  0130  30F1               	movlw	241
  3131  0131                     u1287:
  3132  0131  0B89               	decfsz	9,f
  3133  0132  2931               	goto	u1287
  3134  0133  0BE7               	decfsz	??_main,f
  3135  0134  2931               	goto	u1287
  3136  0135  0BE8               	decfsz	??_main+1,f
  3137  0136  2931               	goto	u1287
  3138  0137                     l3662:
  3139                           
  3140                           ;main.c: 149:                     printf("->GR:7:ON");
  3141  0137  3096               	movlw	low (STR_8| (0+32768))
  3142  0138  0020               	movlb	0	; select bank0
  3143  0139  00E3               	movwf	printf@fmt
  3144  013A  3086               	movlw	high (STR_8| (0+32768))
  3145  013B  00E4               	movwf	printf@fmt+1
  3146  013C  3185  25AC  3180   	fcall	_printf
  3147                           
  3148                           ;main.c: 150:                     break;
  3149  013F  2862               	goto	l3596
  3150  0140                     l3664:
  3151                           
  3152                           ;main.c: 154:                 {;main.c: 155:                     reset();
  3153  0140  3186  2612  3180   	fcall	_reset
  3154  0143                     l3666:
  3155  0143  0022               	movlb	2	; select bank2
  3156  0144  178C               	bsf	12,7	;volatile
  3157  0145                     l3668:
  3158                           
  3159                           ;main.c: 157:                     _delay((unsigned long)((100)*(32000000/4000.0)));
  3160  0145  3005               	movlw	5
  3161  0146  0020               	movlb	0	; select bank0
  3162  0147  00E8               	movwf	??_main+1
  3163  0148  300F               	movlw	15
  3164  0149  00E7               	movwf	??_main
  3165  014A  30F1               	movlw	241
  3166  014B                     u1297:
  3167  014B  0B89               	decfsz	9,f
  3168  014C  294B               	goto	u1297
  3169  014D  0BE7               	decfsz	??_main,f
  3170  014E  294B               	goto	u1297
  3171  014F  0BE8               	decfsz	??_main+1,f
  3172  0150  294B               	goto	u1297
  3173  0151                     l3670:
  3174                           
  3175                           ;main.c: 158:                     printf("->GR:8:ON");
  3176  0151  30A0               	movlw	low (STR_9| (0+32768))
  3177  0152  0020               	movlb	0	; select bank0
  3178  0153  00E3               	movwf	printf@fmt
  3179  0154  3086               	movlw	high (STR_9| (0+32768))
  3180  0155  00E4               	movwf	printf@fmt+1
  3181  0156  3185  25AC  3180   	fcall	_printf
  3182                           
  3183                           ;main.c: 159:                     break;
  3184  0159  2862               	goto	l3596
  3185  015A                     l3672:
  3186                           
  3187                           ;main.c: 163:                 {;main.c: 164:                     reset();
  3188  015A  3186  2612  3180   	fcall	_reset
  3189  015D                     l3674:
  3190  015D  0022               	movlb	2	; select bank2
  3191  015E  158C               	bsf	12,3	;volatile
  3192  015F                     l3676:
  3193                           
  3194                           ;main.c: 166:                     _delay((unsigned long)((100)*(32000000/4000.0)));
  3195  015F  3005               	movlw	5
  3196  0160  0020               	movlb	0	; select bank0
  3197  0161  00E8               	movwf	??_main+1
  3198  0162  300F               	movlw	15
  3199  0163  00E7               	movwf	??_main
  3200  0164  30F1               	movlw	241
  3201  0165                     u1307:
  3202  0165  0B89               	decfsz	9,f
  3203  0166  2965               	goto	u1307
  3204  0167  0BE7               	decfsz	??_main,f
  3205  0168  2965               	goto	u1307
  3206  0169  0BE8               	decfsz	??_main+1,f
  3207  016A  2965               	goto	u1307
  3208  016B                     l3678:
  3209                           
  3210                           ;main.c: 167:                     printf("->GR:9:ON");
  3211  016B  30AA               	movlw	low (STR_10| (0+32768))
  3212  016C  0020               	movlb	0	; select bank0
  3213  016D  00E3               	movwf	printf@fmt
  3214  016E  3086               	movlw	high (STR_10| (0+32768))
  3215  016F  00E4               	movwf	printf@fmt+1
  3216  0170  3185  25AC  3180   	fcall	_printf
  3217                           
  3218                           ;main.c: 168:                     break;
  3219  0173  2862               	goto	l3596
  3220  0174                     l3680:
  3221                           
  3222                           ;main.c: 172:                 {;main.c: 173:                     reset();
  3223  0174  3186  2612  3180   	fcall	_reset
  3224  0177                     l3682:
  3225  0177  0022               	movlb	2	; select bank2
  3226  0178  148D               	bsf	13,1	;volatile
  3227  0179                     l3684:
  3228                           
  3229                           ;main.c: 175:                     _delay((unsigned long)((100)*(32000000/4000.0)));
  3230  0179  3005               	movlw	5
  3231  017A  0020               	movlb	0	; select bank0
  3232  017B  00E8               	movwf	??_main+1
  3233  017C  300F               	movlw	15
  3234  017D  00E7               	movwf	??_main
  3235  017E  30F1               	movlw	241
  3236  017F                     u1317:
  3237  017F  0B89               	decfsz	9,f
  3238  0180  297F               	goto	u1317
  3239  0181  0BE7               	decfsz	??_main,f
  3240  0182  297F               	goto	u1317
  3241  0183  0BE8               	decfsz	??_main+1,f
  3242  0184  297F               	goto	u1317
  3243  0185                     l3686:
  3244                           
  3245                           ;main.c: 176:                     printf("->GR:10:ON");
  3246  0185  3039               	movlw	low (STR_11| (0+32768))
  3247  0186  0020               	movlb	0	; select bank0
  3248  0187  00E3               	movwf	printf@fmt
  3249  0188  3086               	movlw	high (STR_11| (0+32768))
  3250  0189  00E4               	movwf	printf@fmt+1
  3251  018A  3185  25AC  3180   	fcall	_printf
  3252                           
  3253                           ;main.c: 177:                     break;
  3254  018D  2862               	goto	l3596
  3255  018E                     l3688:
  3256                           
  3257                           ;main.c: 181:                 {;main.c: 182:                     reset();
  3258  018E  3186  2612  3180   	fcall	_reset
  3259  0191                     l3690:
  3260  0191  0022               	movlb	2	; select bank2
  3261  0192  150D               	bsf	13,2	;volatile
  3262  0193                     l3692:
  3263                           
  3264                           ;main.c: 184:                     _delay((unsigned long)((100)*(32000000/4000.0)));
  3265  0193  3005               	movlw	5
  3266  0194  0020               	movlb	0	; select bank0
  3267  0195  00E8               	movwf	??_main+1
  3268  0196  300F               	movlw	15
  3269  0197  00E7               	movwf	??_main
  3270  0198  30F1               	movlw	241
  3271  0199                     u1327:
  3272  0199  0B89               	decfsz	9,f
  3273  019A  2999               	goto	u1327
  3274  019B  0BE7               	decfsz	??_main,f
  3275  019C  2999               	goto	u1327
  3276  019D  0BE8               	decfsz	??_main+1,f
  3277  019E  2999               	goto	u1327
  3278  019F                     l3694:
  3279                           
  3280                           ;main.c: 185:                     printf("->GR:11:ON");
  3281  019F  3044               	movlw	low (STR_12| (0+32768))
  3282  01A0  0020               	movlb	0	; select bank0
  3283  01A1  00E3               	movwf	printf@fmt
  3284  01A2  3086               	movlw	high (STR_12| (0+32768))
  3285  01A3  00E4               	movwf	printf@fmt+1
  3286  01A4  3185  25AC  3180   	fcall	_printf
  3287                           
  3288                           ;main.c: 186:                     break;
  3289  01A7  2862               	goto	l3596
  3290  01A8                     l3696:
  3291                           
  3292                           ;main.c: 190:                 {;main.c: 191:                     reset();
  3293  01A8  3186  2612  3180   	fcall	_reset
  3294  01AB                     l3698:
  3295  01AB  0022               	movlb	2	; select bank2
  3296  01AC  158D               	bsf	13,3	;volatile
  3297  01AD                     l3700:
  3298                           
  3299                           ;main.c: 193:                     _delay((unsigned long)((100)*(32000000/4000.0)));
  3300  01AD  3005               	movlw	5
  3301  01AE  0020               	movlb	0	; select bank0
  3302  01AF  00E8               	movwf	??_main+1
  3303  01B0  300F               	movlw	15
  3304  01B1  00E7               	movwf	??_main
  3305  01B2  30F1               	movlw	241
  3306  01B3                     u1337:
  3307  01B3  0B89               	decfsz	9,f
  3308  01B4  29B3               	goto	u1337
  3309  01B5  0BE7               	decfsz	??_main,f
  3310  01B6  29B3               	goto	u1337
  3311  01B7  0BE8               	decfsz	??_main+1,f
  3312  01B8  29B3               	goto	u1337
  3313  01B9                     l3702:
  3314                           
  3315                           ;main.c: 194:                     printf("->GR:12:ON");
  3316  01B9  304F               	movlw	low (STR_13| (0+32768))
  3317  01BA  0020               	movlb	0	; select bank0
  3318  01BB  00E3               	movwf	printf@fmt
  3319  01BC  3086               	movlw	high (STR_13| (0+32768))
  3320  01BD  00E4               	movwf	printf@fmt+1
  3321  01BE  3185  25AC  3180   	fcall	_printf
  3322                           
  3323                           ;main.c: 195:                     break;
  3324  01C1  2862               	goto	l3596
  3325  01C2                     l858:	
  3326                           ;main.c: 196:                 };main.c: 198:                 case 'Z':
  3327                           
  3328  01C2  0001               	reset	;# 
  3329                           
  3330                           ;main.c: 201:                     break;
  3331  01C3  2862               	goto	l3596
  3332  01C4                     l3706:
  3333  01C4  0869               	movf	main@reception,w
  3334  01C5  00E7               	movwf	??_main
  3335  01C6  01E8               	clrf	??_main+1
  3336                           
  3337                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3338                           ; Switch size 1, requested type "simple"
  3339                           ; Number of cases is 1, Range of values is 0 to 0
  3340                           ; switch strategies available:
  3341                           ; Name         Instructions Cycles
  3342                           ; simple_byte            4     3 (average)
  3343                           ; direct_byte            8     6 (fixed)
  3344                           ; jumptable            260     6 (fixed)
  3345                           ;	Chosen strategy is simple_byte
  3346  01C7  0868               	movf	??_main+1,w
  3347  01C8  3A00               	xorlw	0	; case 0
  3348  01C9  1903               	skipnz
  3349  01CA  29CC               	goto	l3842
  3350  01CB  2862               	goto	l3596
  3351  01CC                     l3842:
  3352                           
  3353                           ; Switch size 1, requested type "simple"
  3354                           ; Number of cases is 14, Range of values is 48 to 90
  3355                           ; switch strategies available:
  3356                           ; Name         Instructions Cycles
  3357                           ; simple_byte           43    22 (average)
  3358                           ; direct_byte           95     9 (fixed)
  3359                           ; jumptable            263     9 (fixed)
  3360                           ;	Chosen strategy is simple_byte
  3361  01CC  0867               	movf	??_main,w
  3362  01CD  3A30               	xorlw	48	; case 48
  3363  01CE  1903               	skipnz
  3364  01CF  2870               	goto	l3600
  3365  01D0  3A01               	xorlw	1	; case 49
  3366  01D1  1903               	skipnz
  3367  01D2  288A               	goto	l3608
  3368  01D3  3A03               	xorlw	3	; case 50
  3369  01D4  1903               	skipnz
  3370  01D5  28A4               	goto	l3616
  3371  01D6  3A01               	xorlw	1	; case 51
  3372  01D7  1903               	skipnz
  3373  01D8  28BE               	goto	l3624
  3374  01D9  3A07               	xorlw	7	; case 52
  3375  01DA  1903               	skipnz
  3376  01DB  28D8               	goto	l3632
  3377  01DC  3A01               	xorlw	1	; case 53
  3378  01DD  1903               	skipnz
  3379  01DE  28F2               	goto	l3640
  3380  01DF  3A03               	xorlw	3	; case 54
  3381  01E0  1903               	skipnz
  3382  01E1  290C               	goto	l3648
  3383  01E2  3A01               	xorlw	1	; case 55
  3384  01E3  1903               	skipnz
  3385  01E4  2926               	goto	l3656
  3386  01E5  3A0F               	xorlw	15	; case 56
  3387  01E6  1903               	skipnz
  3388  01E7  2940               	goto	l3664
  3389  01E8  3A01               	xorlw	1	; case 57
  3390  01E9  1903               	skipnz
  3391  01EA  295A               	goto	l3672
  3392  01EB  3A78               	xorlw	120	; case 65
  3393  01EC  1903               	skipnz
  3394  01ED  2974               	goto	l3680
  3395  01EE  3A03               	xorlw	3	; case 66
  3396  01EF  1903               	skipnz
  3397  01F0  298E               	goto	l3688
  3398  01F1  3A01               	xorlw	1	; case 67
  3399  01F2  1903               	skipnz
  3400  01F3  29A8               	goto	l3696
  3401  01F4  3A19               	xorlw	25	; case 90
  3402  01F5  1903               	skipnz
  3403  01F6  29C2               	goto	l858
  3404  01F7  2862               	goto	l3596
  3405  01F8  3180  2847         	ljmp	start
  3406  01FA                     __end_of_main:
  3407                           
  3408                           	psect	text1
  3409  0612                     __ptext1:	
  3410 ;; *************** function _reset *****************
  3411 ;; Defined at:
  3412 ;;		line 6 in file "commande.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;		None
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;		None
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      void 
  3419 ;; Registers used:
  3420 ;;		None
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3430 ;;Total ram usage:        0 bytes
  3431 ;; Hardware stack levels used: 1
  3432 ;; Hardware stack levels required when called: 7
  3433 ;; This function calls:
  3434 ;;		Nothing
  3435 ;; This function is called by:
  3436 ;;		_main
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440                           
  3441                           ;psect for function _reset
  3442  0612                     _reset:
  3443  0612                     l870:	
  3444                           ;incstack = 0
  3445                           ; Regs used in _reset: []
  3446                           ;commande.c: 8:     do { LATAbits.LATA0 = 0; } while(0);
  3447                           
  3448  0612  0022               	movlb	2	; select bank2
  3449  0613  100C               	bcf	12,0	;volatile
  3450  0614                     l872:	
  3451                           ;commande.c: 9:     do { LATAbits.LATA1 = 0; } while(0);
  3452                           
  3453  0614  108C               	bcf	12,1	;volatile
  3454  0615                     l874:	
  3455                           ;commande.c: 10:     do { LATAbits.LATA2 = 0; } while(0);
  3456                           
  3457  0615  110C               	bcf	12,2	;volatile
  3458  0616                     l876:	
  3459                           ;commande.c: 11:     do { LATAbits.LATA3 = 0; } while(0);
  3460                           
  3461  0616  118C               	bcf	12,3	;volatile
  3462  0617                     l878:	
  3463                           ;commande.c: 12:     do { LATAbits.LATA4 = 0; } while(0);
  3464                           
  3465  0617  120C               	bcf	12,4	;volatile
  3466  0618                     l880:	
  3467                           ;commande.c: 13:     do { LATAbits.LATA5 = 0; } while(0);
  3468                           
  3469  0618  128C               	bcf	12,5	;volatile
  3470  0619                     l882:	
  3471                           ;commande.c: 14:     do { LATAbits.LATA6 = 0; } while(0);
  3472                           
  3473  0619  130C               	bcf	12,6	;volatile
  3474  061A                     l884:	
  3475                           ;commande.c: 15:     do { LATAbits.LATA7 = 0; } while(0);
  3476                           
  3477  061A  138C               	bcf	12,7	;volatile
  3478  061B                     l886:	
  3479                           ;commande.c: 16:     do { LATBbits.LATB0 = 0; } while(0);
  3480                           
  3481  061B  100D               	bcf	13,0	;volatile
  3482  061C                     l888:	
  3483                           ;commande.c: 17:     do { LATBbits.LATB1 = 0; } while(0);
  3484                           
  3485  061C  108D               	bcf	13,1	;volatile
  3486  061D                     l890:	
  3487                           ;commande.c: 18:     do { LATBbits.LATB2 = 0; } while(0);
  3488                           
  3489  061D  110D               	bcf	13,2	;volatile
  3490  061E                     l892:	
  3491                           ;commande.c: 19:     do { LATBbits.LATB3 = 0; } while(0);
  3492                           
  3493  061E  118D               	bcf	13,3	;volatile
  3494  061F                     l894:
  3495  061F  0008               	return
  3496  0620                     __end_of_reset:
  3497                           
  3498                           	psect	text2
  3499  05AC                     __ptext2:	
  3500 ;; *************** function _printf *****************
  3501 ;; Defined at:
  3502 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  3503 ;; Parameters:    Size  Location     Type
  3504 ;;  fmt             2   30[BANK0 ] PTR const unsigned char 
  3505 ;;		 -> STR_13(11), STR_12(11), STR_11(11), STR_10(10), 
  3506 ;;		 -> STR_9(10), STR_8(10), STR_7(10), STR_6(10), 
  3507 ;;		 -> STR_5(10), STR_4(10), STR_3(10), STR_2(10), 
  3508 ;;		 -> STR_1(11), 
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;  ret             2    0        int 
  3511 ;;  ap              1   33[BANK0 ] PTR void [1]
  3512 ;;		 -> ?_printf(2), 
  3513 ;; Return value:  Size  Location     Type
  3514 ;;                  2   30[BANK0 ] int 
  3515 ;; Registers used:
  3516 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3522 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3523 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3524 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3525 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3526 ;;Total ram usage:        4 bytes
  3527 ;; Hardware stack levels used: 1
  3528 ;; Hardware stack levels required when called: 12
  3529 ;; This function calls:
  3530 ;;		_vfprintf
  3531 ;; This function is called by:
  3532 ;;		_main
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           
  3537                           ;psect for function _printf
  3538  05AC                     _printf:
  3539  05AC                     l3344:	
  3540                           ;incstack = 0
  3541                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3542                           
  3543  05AC  3065               	movlw	(low ((?_printf| 0+2)))& (0+255)
  3544  05AD  0020               	movlb	0	; select bank0
  3545  05AE  00E5               	movwf	??_printf
  3546  05AF  0865               	movf	??_printf,w
  3547  05B0  00E6               	movwf	printf@ap
  3548  05B1                     l3346:
  3549  05B1  0864               	movf	printf@fmt+1,w
  3550  05B2  00DC               	movwf	vfprintf@fmt+1
  3551  05B3  0863               	movf	printf@fmt,w
  3552  05B4  00DB               	movwf	vfprintf@fmt
  3553  05B5  3066               	movlw	(low (printf@ap| 0))& (0+255)
  3554  05B6  00E5               	movwf	??_printf
  3555  05B7  0865               	movf	??_printf,w
  3556  05B8  00DD               	movwf	vfprintf@ap
  3557  05B9  3000               	movlw	0
  3558  05BA  3184  24DB  3185   	fcall	_vfprintf
  3559  05BD                     l1507:
  3560  05BD  0008               	return
  3561  05BE                     __end_of_printf:
  3562                           
  3563                           	psect	text3
  3564  04DB                     __ptext3:	
  3565 ;; *************** function _vfprintf *****************
  3566 ;; Defined at:
  3567 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;  fp              1    wreg     PTR struct _IO_FILE
  3570 ;;		 -> NULL(0), 
  3571 ;;  fmt             2   22[BANK0 ] PTR const unsigned char 
  3572 ;;		 -> STR_13(11), STR_12(11), STR_11(11), STR_10(10), 
  3573 ;;		 -> STR_9(10), STR_8(10), STR_7(10), STR_6(10), 
  3574 ;;		 -> STR_5(10), STR_4(10), STR_3(10), STR_2(10), 
  3575 ;;		 -> STR_1(11), 
  3576 ;;  ap              1   24[BANK0 ] PTR PTR void 
  3577 ;;		 -> printf@ap(1), 
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
  3580 ;;		 -> NULL(0), 
  3581 ;;  cfmt            2   28[BANK0 ] PTR unsigned char 
  3582 ;;		 -> STR_13(11), STR_12(11), STR_11(11), STR_10(10), 
  3583 ;;		 -> STR_9(10), STR_8(10), STR_7(10), STR_6(10), 
  3584 ;;		 -> STR_5(10), STR_4(10), STR_3(10), STR_2(10), 
  3585 ;;		 -> STR_1(11), 
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  2   22[BANK0 ] int 
  3588 ;; Registers used:
  3589 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3595 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3596 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3597 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3598 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3599 ;;Total ram usage:        8 bytes
  3600 ;; Hardware stack levels used: 1
  3601 ;; Hardware stack levels required when called: 11
  3602 ;; This function calls:
  3603 ;;		_vfpfcnvrt
  3604 ;; This function is called by:
  3605 ;;		_printf
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           
  3610                           ;psect for function _vfprintf
  3611  04DB                     _vfprintf:
  3612                           
  3613                           ;incstack = 0
  3614                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3615                           ;vfprintf@fp stored from wreg
  3616  04DB  0020               	movlb	0	; select bank0
  3617  04DC  00E0               	movwf	vfprintf@fp
  3618  04DD                     l3256:
  3619                           
  3620                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3621  04DD  085C               	movf	vfprintf@fmt+1,w
  3622  04DE  00E2               	movwf	vfprintf@cfmt+1
  3623  04DF  085B               	movf	vfprintf@fmt,w
  3624  04E0  00E1               	movwf	vfprintf@cfmt
  3625  04E1                     l3258:
  3626                           
  3627                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3628  04E1  01A8               	clrf	_nout
  3629  04E2  01A9               	clrf	_nout+1
  3630                           
  3631                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3632  04E3  2CF5               	goto	l3262
  3633  04E4                     l3260:
  3634                           
  3635                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3636  04E4  3061               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3637  04E5  00DE               	movwf	??_vfprintf
  3638  04E6  085E               	movf	??_vfprintf,w
  3639  04E7  00D3               	movwf	vfpfcnvrt@fmt
  3640  04E8  085D               	movf	vfprintf@ap,w
  3641  04E9  00DF               	movwf	??_vfprintf+1
  3642  04EA  085F               	movf	??_vfprintf+1,w
  3643  04EB  00D4               	movwf	vfpfcnvrt@ap
  3644  04EC  0860               	movf	vfprintf@fp,w
  3645  04ED  3181  21FA  3184   	fcall	_vfpfcnvrt
  3646  04F0  0020               	movlb	0	; select bank0
  3647  04F1  0853               	movf	?_vfpfcnvrt,w
  3648  04F2  07A8               	addwf	_nout,f
  3649  04F3  0854               	movf	?_vfpfcnvrt+1,w
  3650  04F4  3DA9               	addwfc	_nout+1,f
  3651  04F5                     l3262:
  3652                           
  3653                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3654  04F5  0861               	movf	vfprintf@cfmt,w
  3655  04F6  0084               	movwf	4
  3656  04F7  0862               	movf	vfprintf@cfmt+1,w
  3657  04F8  0085               	movwf	5
  3658  04F9  0012               	moviw fsr0++
  3659  04FA  1D03               	btfss	3,2
  3660  04FB  2CFD               	goto	u831
  3661  04FC  2CFE               	goto	u830
  3662  04FD                     u831:
  3663  04FD  2CE4               	goto	l3260
  3664  04FE                     u830:
  3665  04FE                     l3264:
  3666                           
  3667                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3668  04FE  0829               	movf	_nout+1,w
  3669  04FF  00DC               	movwf	?_vfprintf+1
  3670  0500  0828               	movf	_nout,w
  3671  0501  00DB               	movwf	?_vfprintf
  3672  0502                     l1546:
  3673  0502  0008               	return
  3674  0503                     __end_of_vfprintf:
  3675                           
  3676                           	psect	text4
  3677  01FA                     __ptext4:	
  3678 ;; *************** function _vfpfcnvrt *****************
  3679 ;; Defined at:
  3680 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3681 ;; Parameters:    Size  Location     Type
  3682 ;;  fp              1    wreg     PTR struct _IO_FILE
  3683 ;;		 -> NULL(0), 
  3684 ;;  fmt             1   14[BANK0 ] PTR PTR unsigned char 
  3685 ;;		 -> vfprintf@cfmt(2), 
  3686 ;;  ap              1   15[BANK0 ] PTR PTR void 
  3687 ;;		 -> printf@ap(1), 
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;  fp              1   21[BANK0 ] PTR struct _IO_FILE
  3690 ;;		 -> NULL(0), 
  3691 ;;  llu             8    0        unsigned long long 
  3692 ;;  ll              8    0        long long 
  3693 ;;  f               4    0        long long 
  3694 ;;  ct              3    0        unsigned char [3]
  3695 ;;  vp              2    0        PTR void 
  3696 ;;  i               2    0        int 
  3697 ;;  done            2    0        int 
  3698 ;;  cp              2    0        PTR unsigned char 
  3699 ;;  c               1    0        unsigned char 
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  2   14[BANK0 ] int 
  3702 ;; Registers used:
  3703 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3709 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3710 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3711 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3712 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3713 ;;Total ram usage:        8 bytes
  3714 ;; Hardware stack levels used: 1
  3715 ;; Hardware stack levels required when called: 10
  3716 ;; This function calls:
  3717 ;;		_fputc
  3718 ;; This function is called by:
  3719 ;;		_vfprintf
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723                           
  3724                           ;psect for function _vfpfcnvrt
  3725  01FA                     _vfpfcnvrt:
  3726                           
  3727                           ;incstack = 0
  3728                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3729                           ;vfpfcnvrt@fp stored from wreg
  3730  01FA  0020               	movlb	0	; select bank0
  3731  01FB  00DA               	movwf	vfpfcnvrt@fp
  3732  01FC                     l3132:
  3733                           
  3734                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3735  01FC  0853               	movf	vfpfcnvrt@fmt,w
  3736  01FD  0086               	movwf	6
  3737  01FE  0187               	clrf	7
  3738  01FF  3F40               	moviw [0]fsr1
  3739  0200  00D5               	movwf	??_vfpfcnvrt
  3740  0201  3F41               	moviw [1]fsr1
  3741  0202  00D6               	movwf	??_vfpfcnvrt+1
  3742  0203  0855               	movf	??_vfpfcnvrt,w
  3743  0204  0084               	movwf	4
  3744  0205  0856               	movf	??_vfpfcnvrt+1,w
  3745  0206  0085               	movwf	5
  3746  0207  0012               	moviw fsr0++
  3747  0208  3A25               	xorlw	37
  3748  0209  1D03               	btfss	3,2
  3749  020A  2A0C               	goto	u781
  3750  020B  2A0D               	goto	u780
  3751  020C                     u781:
  3752  020C  2A52               	goto	l3156
  3753  020D                     u780:
  3754  020D                     l3134:
  3755                           
  3756                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3757  020D  0853               	movf	vfpfcnvrt@fmt,w
  3758  020E  0086               	movwf	6
  3759  020F  0187               	clrf	7
  3760  0210  3001               	movlw	1
  3761  0211  0781               	addwf	1,f
  3762  0212  3141               	addfsr 1,1
  3763  0213  1803               	skipnc
  3764  0214  0A81               	incf	1,f
  3765  0215                     l3136:
  3766                           
  3767                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3768  0215  01AA               	clrf	_width
  3769  0216  01AB               	clrf	_width+1
  3770  0217  01AE               	clrf	_flags
  3771  0218  01AF               	clrf	_flags+1
  3772  0219                     l3138:
  3773                           
  3774                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3775  0219  30FF               	movlw	255
  3776  021A  00AC               	movwf	_prec
  3777  021B  30FF               	movlw	255
  3778  021C  00AD               	movwf	_prec+1
  3779  021D                     l3140:
  3780                           
  3781                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3782  021D  0853               	movf	vfpfcnvrt@fmt,w
  3783  021E  0086               	movwf	6
  3784  021F  0187               	clrf	7
  3785  0220  3F40               	moviw [0]fsr1
  3786  0221  00D5               	movwf	??_vfpfcnvrt
  3787  0222  3F41               	moviw [1]fsr1
  3788  0223  00D6               	movwf	??_vfpfcnvrt+1
  3789  0224  0855               	movf	??_vfpfcnvrt,w
  3790  0225  0084               	movwf	4
  3791  0226  0856               	movf	??_vfpfcnvrt+1,w
  3792  0227  0085               	movwf	5
  3793  0228  0012               	moviw fsr0++
  3794  0229  3A25               	xorlw	37
  3795  022A  1D03               	btfss	3,2
  3796  022B  2A2D               	goto	u791
  3797  022C  2A2E               	goto	u790
  3798  022D                     u791:
  3799  022D  2A47               	goto	l3150
  3800  022E                     u790:
  3801  022E                     l3142:
  3802                           
  3803                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3804  022E  0853               	movf	vfpfcnvrt@fmt,w
  3805  022F  0086               	movwf	6
  3806  0230  0187               	clrf	7
  3807  0231  3001               	movlw	1
  3808  0232  0781               	addwf	1,f
  3809  0233  3141               	addfsr 1,1
  3810  0234  1803               	skipnc
  3811  0235  0A81               	incf	1,f
  3812  0236                     l3144:
  3813                           
  3814                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3815  0236  3025               	movlw	37
  3816  0237  00CB               	movwf	fputc@c
  3817  0238  3000               	movlw	0
  3818  0239  00CC               	movwf	fputc@c+1
  3819  023A  085A               	movf	vfpfcnvrt@fp,w
  3820  023B  00D5               	movwf	??_vfpfcnvrt
  3821  023C  0855               	movf	??_vfpfcnvrt,w
  3822  023D  00CD               	movwf	fputc@fp
  3823  023E  3183  2356  3181   	fcall	_fputc
  3824  0241                     l3146:
  3825                           
  3826                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3827  0241  3001               	movlw	1
  3828  0242  0020               	movlb	0	; select bank0
  3829  0243  00D3               	movwf	?_vfpfcnvrt
  3830  0244  3000               	movlw	0
  3831  0245  00D4               	movwf	?_vfpfcnvrt+1
  3832  0246  2A75               	goto	l1540
  3833  0247                     l3150:
  3834                           
  3835                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3836  0247  0853               	movf	vfpfcnvrt@fmt,w
  3837  0248  0086               	movwf	6
  3838  0249  0187               	clrf	7
  3839  024A  3001               	movlw	1
  3840  024B  0781               	addwf	1,f
  3841  024C  3141               	addfsr 1,1
  3842  024D  1803               	skipnc
  3843  024E  0A81               	incf	1,f
  3844  024F                     l3152:
  3845                           
  3846                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3847  024F  01D3               	clrf	?_vfpfcnvrt
  3848  0250  01D4               	clrf	?_vfpfcnvrt+1
  3849  0251  2A75               	goto	l1540
  3850  0252                     l3156:
  3851                           
  3852                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3853  0252  0853               	movf	vfpfcnvrt@fmt,w
  3854  0253  0086               	movwf	6
  3855  0254  0187               	clrf	7
  3856  0255  3F40               	moviw [0]fsr1
  3857  0256  00D5               	movwf	??_vfpfcnvrt
  3858  0257  3F41               	moviw [1]fsr1
  3859  0258  00D6               	movwf	??_vfpfcnvrt+1
  3860  0259  0855               	movf	??_vfpfcnvrt,w
  3861  025A  0084               	movwf	4
  3862  025B  0856               	movf	??_vfpfcnvrt+1,w
  3863  025C  0085               	movwf	5
  3864  025D  0800               	movf	0,w	;code access
  3865  025E  00D7               	movwf	??_vfpfcnvrt+2
  3866  025F  01D8               	clrf	??_vfpfcnvrt+3
  3867  0260  0857               	movf	??_vfpfcnvrt+2,w
  3868  0261  00CB               	movwf	fputc@c
  3869  0262  0858               	movf	??_vfpfcnvrt+3,w
  3870  0263  00CC               	movwf	fputc@c+1
  3871  0264  085A               	movf	vfpfcnvrt@fp,w
  3872  0265  00D9               	movwf	??_vfpfcnvrt+4
  3873  0266  0859               	movf	??_vfpfcnvrt+4,w
  3874  0267  00CD               	movwf	fputc@fp
  3875  0268  3183  2356  3181   	fcall	_fputc
  3876  026B                     l3158:
  3877                           
  3878                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3879  026B  0020               	movlb	0	; select bank0
  3880  026C  0853               	movf	vfpfcnvrt@fmt,w
  3881  026D  0086               	movwf	6
  3882  026E  0187               	clrf	7
  3883  026F  3001               	movlw	1
  3884  0270  0781               	addwf	1,f
  3885  0271  3141               	addfsr 1,1
  3886  0272  1803               	skipnc
  3887  0273  0A81               	incf	1,f
  3888  0274  2A41               	goto	l3146
  3889  0275                     l1540:
  3890  0275  0008               	return
  3891  0276                     __end_of_vfpfcnvrt:
  3892                           
  3893                           	psect	text5
  3894  0356                     __ptext5:	
  3895 ;; *************** function _fputc *****************
  3896 ;; Defined at:
  3897 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  3898 ;; Parameters:    Size  Location     Type
  3899 ;;  c               2    6[BANK0 ] int 
  3900 ;;  fp              1    8[BANK0 ] PTR struct _IO_FILE
  3901 ;;		 -> NULL(0), 
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;		None
  3904 ;; Return value:  Size  Location     Type
  3905 ;;                  2    6[BANK0 ] int 
  3906 ;; Registers used:
  3907 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3908 ;; Tracked objects:
  3909 ;;		On entry : 0/0
  3910 ;;		On exit  : 0/0
  3911 ;;		Unchanged: 0/0
  3912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3913 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3915 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3916 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3917 ;;Total ram usage:        8 bytes
  3918 ;; Hardware stack levels used: 1
  3919 ;; Hardware stack levels required when called: 9
  3920 ;; This function calls:
  3921 ;;		_putch
  3922 ;; This function is called by:
  3923 ;;		_vfpfcnvrt
  3924 ;; This function uses a non-reentrant model
  3925 ;;
  3926                           
  3927                           
  3928                           ;psect for function _fputc
  3929  0356                     _fputc:
  3930  0356                     l2936:	
  3931                           ;incstack = 0
  3932                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3933                           
  3934  0356  0020               	movlb	0	; select bank0
  3935  0357  084D               	movf	fputc@fp,w
  3936  0358  1903               	btfsc	3,2
  3937  0359  2B5B               	goto	u701
  3938  035A  2B5C               	goto	u700
  3939  035B                     u701:
  3940  035B  2B61               	goto	l2940
  3941  035C                     u700:
  3942  035C                     l2938:
  3943  035C  084D               	movf	fputc@fp,w
  3944  035D  1D03               	btfss	3,2
  3945  035E  2B60               	goto	u711
  3946  035F  2B61               	goto	u710
  3947  0360                     u711:
  3948  0360  2B66               	goto	l2942
  3949  0361                     u710:
  3950  0361                     l2940:
  3951  0361  084B               	movf	fputc@c,w
  3952  0362  3186  26D7  3183   	fcall	_putch
  3953  0365  2B96               	goto	l1558
  3954  0366                     l2942:
  3955  0366  084D               	movf	fputc@fp,w
  3956  0367  3E03               	addlw	3
  3957  0368  0086               	movwf	6
  3958  0369  0187               	clrf	7
  3959  036A  0016               	moviw fsr1++
  3960  036B  0401               	iorwf	1,w
  3961  036C  1903               	btfsc	3,2
  3962  036D  2B6F               	goto	u721
  3963  036E  2B70               	goto	u720
  3964  036F                     u721:
  3965  036F  2B8D               	goto	l2946
  3966  0370                     u720:
  3967  0370                     l2944:
  3968  0370  084D               	movf	fputc@fp,w
  3969  0371  3E03               	addlw	3
  3970  0372  0086               	movwf	6
  3971  0373  0187               	clrf	7
  3972  0374  3F40               	moviw [0]fsr1
  3973  0375  00CE               	movwf	??_fputc
  3974  0376  3F41               	moviw [1]fsr1
  3975  0377  00CF               	movwf	??_fputc+1
  3976  0378  0A4D               	incf	fputc@fp,w
  3977  0379  0086               	movwf	6
  3978  037A  0187               	clrf	7
  3979  037B  3F40               	moviw [0]fsr1
  3980  037C  00D0               	movwf	??_fputc+2
  3981  037D  3F41               	moviw [1]fsr1
  3982  037E  00D1               	movwf	??_fputc+3
  3983  037F  0851               	movf	??_fputc+3,w
  3984  0380  3A80               	xorlw	128
  3985  0381  00D2               	movwf	??_fputc+4
  3986  0382  084F               	movf	??_fputc+1,w
  3987  0383  3A80               	xorlw	128
  3988  0384  0252               	subwf	??_fputc+4,w
  3989  0385  1D03               	skipz
  3990  0386  2B89               	goto	u735
  3991  0387  084E               	movf	??_fputc,w
  3992  0388  0250               	subwf	??_fputc+2,w
  3993  0389                     u735:
  3994  0389  1803               	skipnc
  3995  038A  2B8C               	goto	u731
  3996  038B  2B8D               	goto	u730
  3997  038C                     u731:
  3998  038C  2B96               	goto	l1558
  3999  038D                     u730:
  4000  038D                     l2946:
  4001  038D  0020               	movlb	0	; select bank0
  4002  038E  0A4D               	incf	fputc@fp,w
  4003  038F  0086               	movwf	6
  4004  0390  0187               	clrf	7
  4005  0391  3001               	movlw	1
  4006  0392  0781               	addwf	1,f
  4007  0393  3141               	addfsr 1,1
  4008  0394  1803               	skipnc
  4009  0395  0A81               	incf	1,f
  4010  0396                     l1558:
  4011  0396  0008               	return
  4012  0397                     __end_of_fputc:
  4013                           
  4014                           	psect	text6
  4015  06D7                     __ptext6:	
  4016 ;; *************** function _putch *****************
  4017 ;; Defined at:
  4018 ;;		line 201 in file "mcc_generated_files/eusart.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;  txData          1    wreg     unsigned char 
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;  txData          1    5[BANK0 ] unsigned char 
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  1    wreg      void 
  4025 ;; Registers used:
  4026 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4033 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4035 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4036 ;;Total ram usage:        1 bytes
  4037 ;; Hardware stack levels used: 1
  4038 ;; Hardware stack levels required when called: 8
  4039 ;; This function calls:
  4040 ;;		_EUSART_Write
  4041 ;; This function is called by:
  4042 ;;		_fputc
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           
  4047                           ;psect for function _putch
  4048  06D7                     _putch:
  4049                           
  4050                           ;incstack = 0
  4051                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4052                           ;putch@txData stored from wreg
  4053  06D7  0020               	movlb	0	; select bank0
  4054  06D8  00CA               	movwf	putch@txData
  4055  06D9                     l2830:
  4056                           
  4057                           ;mcc_generated_files/eusart.c: 201: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 202: {;mcc_generated_files/eusart.c: 203:     EUSART_Write(txData);
  4058  06D9  084A               	movf	putch@txData,w
  4059  06DA  3184  2485  3186   	fcall	_EUSART_Write
  4060  06DD                     l329:
  4061  06DD  0008               	return
  4062  06DE                     __end_of_putch:
  4063                           
  4064                           	psect	text7
  4065  0485                     __ptext7:	
  4066 ;; *************** function _EUSART_Write *****************
  4067 ;; Defined at:
  4068 ;;		line 173 in file "mcc_generated_files/eusart.c"
  4069 ;; Parameters:    Size  Location     Type
  4070 ;;  txData          1    wreg     unsigned char 
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;  txData          1    4[BANK0 ] unsigned char 
  4073 ;; Return value:  Size  Location     Type
  4074 ;;                  1    wreg      void 
  4075 ;; Registers used:
  4076 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4077 ;; Tracked objects:
  4078 ;;		On entry : 0/0
  4079 ;;		On exit  : 0/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4083 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4084 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4085 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4086 ;;Total ram usage:        2 bytes
  4087 ;; Hardware stack levels used: 1
  4088 ;; Hardware stack levels required when called: 7
  4089 ;; This function calls:
  4090 ;;		Nothing
  4091 ;; This function is called by:
  4092 ;;		_putch
  4093 ;; This function uses a non-reentrant model
  4094 ;;
  4095                           
  4096                           
  4097                           ;psect for function _EUSART_Write
  4098  0485                     _EUSART_Write:
  4099                           
  4100                           ;incstack = 0
  4101                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  4102                           ;EUSART_Write@txData stored from wreg
  4103  0485  0020               	movlb	0	; select bank0
  4104  0486  00C9               	movwf	EUSART_Write@txData
  4105  0487                     l2798:
  4106  0487                     l2800:	
  4107                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
  4108                           
  4109                           
  4110                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  4111  0487  0842               	movf	_eusartTxBufferRemaining,w	;volatile
  4112  0488  1903               	btfsc	3,2
  4113  0489  2C8B               	goto	u651
  4114  048A  2C8C               	goto	u650
  4115  048B                     u651:
  4116  048B  2C87               	goto	l2800
  4117  048C                     u650:
  4118  048C                     l319:
  4119                           
  4120                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TXIE)
  4121  048C  0021               	movlb	1	; select bank1
  4122  048D  1A11               	btfsc	17,4	;volatile
  4123  048E  2C90               	goto	u661
  4124  048F  2C91               	goto	u660
  4125  0490                     u661:
  4126  0490  2C96               	goto	l320
  4127  0491                     u660:
  4128  0491                     l2802:
  4129                           
  4130                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
  4131  0491  0020               	movlb	0	; select bank0
  4132  0492  0849               	movf	EUSART_Write@txData,w
  4133  0493  0023               	movlb	3	; select bank3
  4134  0494  009A               	movwf	26	;volatile
  4135                           
  4136                           ;mcc_generated_files/eusart.c: 182:     }
  4137  0495  2CAD               	goto	l2814
  4138  0496                     l320:	
  4139                           ;mcc_generated_files/eusart.c: 183:     else
  4140                           
  4141                           
  4142                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TXIE = 0;
  4143  0496  1211               	bcf	17,4	;volatile
  4144  0497                     l2804:
  4145                           
  4146                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  4147  0497  0020               	movlb	0	; select bank0
  4148  0498  0849               	movf	EUSART_Write@txData,w
  4149  0499  00C8               	movwf	??_EUSART_Write
  4150  049A  0844               	movf	_eusartTxHead,w
  4151  049B  3EE5               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4152  049C  0086               	movwf	6
  4153  049D  0187               	clrf	7
  4154  049E  0848               	movf	??_EUSART_Write,w
  4155  049F  0081               	movwf	1
  4156  04A0                     l2806:
  4157  04A0  3001               	movlw	1
  4158  04A1  00C8               	movwf	??_EUSART_Write
  4159  04A2  0848               	movf	??_EUSART_Write,w
  4160  04A3  07C4               	addwf	_eusartTxHead,f	;volatile
  4161  04A4                     l2808:
  4162                           
  4163                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  4164  04A4  3008               	movlw	8
  4165  04A5  0244               	subwf	_eusartTxHead,w	;volatile
  4166  04A6  1C03               	skipc
  4167  04A7  2CA9               	goto	u671
  4168  04A8  2CAA               	goto	u670
  4169  04A9                     u671:
  4170  04A9  2CAB               	goto	l2812
  4171  04AA                     u670:
  4172  04AA                     l2810:
  4173                           
  4174                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  4175  04AA  01C4               	clrf	_eusartTxHead	;volatile
  4176  04AB                     l2812:
  4177                           
  4178                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  4179  04AB  3001               	movlw	1
  4180  04AC  02C2               	subwf	_eusartTxBufferRemaining,f	;volatile
  4181  04AD                     l2814:
  4182                           
  4183                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TXIE = 1;
  4184  04AD  0021               	movlb	1	; select bank1
  4185  04AE  1611               	bsf	17,4	;volatile
  4186  04AF                     l323:
  4187  04AF  0008               	return
  4188  04B0                     __end_of_EUSART_Write:
  4189                           
  4190                           	psect	text8
  4191  0599                     __ptext8:	
  4192 ;; *************** function _SYSTEM_Initialize *****************
  4193 ;; Defined at:
  4194 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4195 ;; Parameters:    Size  Location     Type
  4196 ;;		None
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;		None
  4199 ;; Return value:  Size  Location     Type
  4200 ;;                  1    wreg      void 
  4201 ;; Registers used:
  4202 ;;		wreg, status,2, status,0, pclath, cstack
  4203 ;; Tracked objects:
  4204 ;;		On entry : 0/0
  4205 ;;		On exit  : 0/0
  4206 ;;		Unchanged: 0/0
  4207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4212 ;;Total ram usage:        0 bytes
  4213 ;; Hardware stack levels used: 1
  4214 ;; Hardware stack levels required when called: 9
  4215 ;; This function calls:
  4216 ;;		_ADC_Initialize
  4217 ;;		_EUSART_Initialize
  4218 ;;		_I2C_Initialize
  4219 ;;		_OSCILLATOR_Initialize
  4220 ;;		_PIN_MANAGER_Initialize
  4221 ;;		_WDT_Initialize
  4222 ;; This function is called by:
  4223 ;;		_main
  4224 ;; This function uses a non-reentrant model
  4225 ;;
  4226                           
  4227                           
  4228                           ;psect for function _SYSTEM_Initialize
  4229  0599                     _SYSTEM_Initialize:
  4230  0599                     l3268:	
  4231                           ;incstack = 0
  4232                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4233                           
  4234                           
  4235                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  4236  0599  3186  26B4  3185   	fcall	_I2C_Initialize
  4237                           
  4238                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4239  059C  3185  254B  3185   	fcall	_PIN_MANAGER_Initialize
  4240                           
  4241                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4242  059F  3186  262D  3185   	fcall	_OSCILLATOR_Initialize
  4243                           
  4244                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  4245  05A2  3187  2741  3185   	fcall	_WDT_Initialize
  4246                           
  4247                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  4248  05A5  3186  26C7  3185   	fcall	_ADC_Initialize
  4249                           
  4250                           ;mcc_generated_files/mcc.c: 58:     EUSART_Initialize();
  4251  05A8  3183  2311  3185   	fcall	_EUSART_Initialize
  4252  05AB                     l173:
  4253  05AB  0008               	return
  4254  05AC                     __end_of_SYSTEM_Initialize:
  4255                           
  4256                           	psect	text9
  4257  0741                     __ptext9:	
  4258 ;; *************** function _WDT_Initialize *****************
  4259 ;; Defined at:
  4260 ;;		line 75 in file "mcc_generated_files/mcc.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;		None
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;		None
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  1    wreg      void 
  4267 ;; Registers used:
  4268 ;;		wreg
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4278 ;;Total ram usage:        0 bytes
  4279 ;; Hardware stack levels used: 1
  4280 ;; Hardware stack levels required when called: 7
  4281 ;; This function calls:
  4282 ;;		Nothing
  4283 ;; This function is called by:
  4284 ;;		_SYSTEM_Initialize
  4285 ;; This function uses a non-reentrant model
  4286 ;;
  4287                           
  4288                           
  4289                           ;psect for function _WDT_Initialize
  4290  0741                     _WDT_Initialize:
  4291  0741                     l3202:	
  4292                           ;incstack = 0
  4293                           ; Regs used in _WDT_Initialize: [wreg]
  4294                           
  4295                           
  4296                           ;mcc_generated_files/mcc.c: 78:     WDTCON = 0x16;
  4297  0741  3016               	movlw	22
  4298  0742  0021               	movlb	1	; select bank1
  4299  0743  0097               	movwf	23	;volatile
  4300  0744                     l182:
  4301  0744  0008               	return
  4302  0745                     __end_of_WDT_Initialize:
  4303                           
  4304                           	psect	text10
  4305  054B                     __ptext10:	
  4306 ;; *************** function _PIN_MANAGER_Initialize *****************
  4307 ;; Defined at:
  4308 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;		None
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;		None
  4313 ;; Return value:  Size  Location     Type
  4314 ;;                  1    wreg      void 
  4315 ;; Registers used:
  4316 ;;		wreg, status,2
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4326 ;;Total ram usage:        0 bytes
  4327 ;; Hardware stack levels used: 1
  4328 ;; Hardware stack levels required when called: 7
  4329 ;; This function calls:
  4330 ;;		Nothing
  4331 ;; This function is called by:
  4332 ;;		_SYSTEM_Initialize
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           
  4337                           ;psect for function _PIN_MANAGER_Initialize
  4338  054B                     _PIN_MANAGER_Initialize:
  4339  054B                     l3164:	
  4340                           ;incstack = 0
  4341                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4342                           
  4343                           
  4344                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  4345  054B  0022               	movlb	2	; select bank2
  4346  054C  0190               	clrf	16	;volatile
  4347                           
  4348                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  4349  054D  018F               	clrf	15	;volatile
  4350                           
  4351                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  4352  054E  018C               	clrf	12	;volatile
  4353                           
  4354                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  4355  054F  018D               	clrf	13	;volatile
  4356                           
  4357                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  4358  0550  018E               	clrf	14	;volatile
  4359  0551                     l3166:
  4360                           
  4361                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x08;
  4362  0551  3008               	movlw	8
  4363  0552  0021               	movlb	1	; select bank1
  4364  0553  0090               	movwf	16	;volatile
  4365  0554                     l3168:
  4366                           
  4367                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x00;
  4368  0554  018C               	clrf	12	;volatile
  4369                           
  4370                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xC0;
  4371  0555  30C0               	movlw	192
  4372  0556  008D               	movwf	13	;volatile
  4373                           
  4374                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x99;
  4375  0557  3099               	movlw	153
  4376  0558  008E               	movwf	14	;volatile
  4377  0559                     l3170:
  4378                           
  4379                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x00;
  4380  0559  018F               	clrf	15	;volatile
  4381  055A                     l3172:
  4382                           
  4383                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
  4384  055A  0023               	movlb	3	; select bank3
  4385  055B  018F               	clrf	15	;volatile
  4386  055C                     l3174:
  4387                           
  4388                           ;mcc_generated_files/pin_manager.c: 79:     ANSELB = 0x00;
  4389  055C  018D               	clrf	13	;volatile
  4390  055D                     l3176:
  4391                           
  4392                           ;mcc_generated_files/pin_manager.c: 80:     ANSELE = 0x00;
  4393  055D  0190               	clrf	16	;volatile
  4394  055E                     l3178:
  4395                           
  4396                           ;mcc_generated_files/pin_manager.c: 81:     ANSELA = 0x00;
  4397  055E  018C               	clrf	12	;volatile
  4398  055F                     l3180:
  4399                           
  4400                           ;mcc_generated_files/pin_manager.c: 86:     WPUE = 0x00;
  4401  055F  0024               	movlb	4	; select bank4
  4402  0560  0190               	clrf	16	;volatile
  4403  0561                     l3182:
  4404                           
  4405                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  4406  0561  018D               	clrf	13	;volatile
  4407  0562                     l3184:
  4408                           
  4409                           ;mcc_generated_files/pin_manager.c: 88:     OPTION_REGbits.nWPUEN = 1;
  4410  0562  0021               	movlb	1	; select bank1
  4411  0563  1795               	bsf	21,7	;volatile
  4412  0564                     l3186:
  4413                           
  4414                           ;mcc_generated_files/pin_manager.c: 94:     APFCON = 0x00;
  4415  0564  0022               	movlb	2	; select bank2
  4416  0565  019D               	clrf	29	;volatile
  4417  0566                     l143:
  4418  0566  0008               	return
  4419  0567                     __end_of_PIN_MANAGER_Initialize:
  4420                           
  4421                           	psect	text11
  4422  062D                     __ptext11:	
  4423 ;; *************** function _OSCILLATOR_Initialize *****************
  4424 ;; Defined at:
  4425 ;;		line 61 in file "mcc_generated_files/mcc.c"
  4426 ;; Parameters:    Size  Location     Type
  4427 ;;		None
  4428 ;; Auto vars:     Size  Location     Type
  4429 ;;		None
  4430 ;; Return value:  Size  Location     Type
  4431 ;;                  1    wreg      void 
  4432 ;; Registers used:
  4433 ;;		wreg, status,2
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4443 ;;Total ram usage:        0 bytes
  4444 ;; Hardware stack levels used: 1
  4445 ;; Hardware stack levels required when called: 7
  4446 ;; This function calls:
  4447 ;;		Nothing
  4448 ;; This function is called by:
  4449 ;;		_SYSTEM_Initialize
  4450 ;; This function uses a non-reentrant model
  4451 ;;
  4452                           
  4453                           
  4454                           ;psect for function _OSCILLATOR_Initialize
  4455  062D                     _OSCILLATOR_Initialize:
  4456  062D                     l3196:	
  4457                           ;incstack = 0
  4458                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4459                           
  4460                           
  4461                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  4462  062D  3070               	movlw	112
  4463  062E  0021               	movlb	1	; select bank1
  4464  062F  0099               	movwf	25	;volatile
  4465  0630                     l3198:
  4466                           
  4467                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  4468  0630  0198               	clrf	24	;volatile
  4469  0631                     l3200:
  4470                           
  4471                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  4472  0631  0022               	movlb	2	; select bank2
  4473  0632  0196               	clrf	22	;volatile
  4474  0633                     l176:	
  4475                           ;mcc_generated_files/mcc.c: 71:     {;mcc_generated_files/mcc.c: 72:     }
  4476                           
  4477                           
  4478                           ;mcc_generated_files/mcc.c: 70:     while(PLLR == 0)
  4479  0633  0021               	movlb	1	; select bank1
  4480  0634  1F1A               	btfss	26,6	;volatile
  4481  0635  2E37               	goto	u801
  4482  0636  2E38               	goto	u800
  4483  0637                     u801:
  4484  0637  2E33               	goto	l176
  4485  0638                     u800:
  4486  0638                     l179:
  4487  0638  0008               	return
  4488  0639                     __end_of_OSCILLATOR_Initialize:
  4489                           
  4490                           	psect	text12
  4491  06B4                     __ptext12:	
  4492 ;; *************** function _I2C_Initialize *****************
  4493 ;; Defined at:
  4494 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;		None
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;		None
  4499 ;; Return value:  Size  Location     Type
  4500 ;;                  1    wreg      void 
  4501 ;; Registers used:
  4502 ;;		wreg, status,2
  4503 ;; Tracked objects:
  4504 ;;		On entry : 0/0
  4505 ;;		On exit  : 0/0
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4512 ;;Total ram usage:        0 bytes
  4513 ;; Hardware stack levels used: 1
  4514 ;; Hardware stack levels required when called: 7
  4515 ;; This function calls:
  4516 ;;		Nothing
  4517 ;; This function is called by:
  4518 ;;		_SYSTEM_Initialize
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522                           
  4523                           ;psect for function _I2C_Initialize
  4524  06B4                     _I2C_Initialize:
  4525  06B4                     l3188:	
  4526                           ;incstack = 0
  4527                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  4528                           
  4529                           
  4530                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0xC0;
  4531  06B4  30C0               	movlw	192
  4532  06B5  0024               	movlb	4	; select bank4
  4533  06B6  0094               	movwf	20	;volatile
  4534                           
  4535                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  4536  06B7  3008               	movlw	8
  4537  06B8  0095               	movwf	21	;volatile
  4538  06B9                     l3190:
  4539                           
  4540                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  4541  06B9  0196               	clrf	22	;volatile
  4542  06BA                     l3192:
  4543                           
  4544                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x4F;
  4545  06BA  304F               	movlw	79
  4546  06BB  0092               	movwf	18	;volatile
  4547  06BC                     l3194:
  4548                           
  4549                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  4550  06BC  1295               	bcf	21,5	;volatile
  4551  06BD                     l510:
  4552  06BD  0008               	return
  4553  06BE                     __end_of_I2C_Initialize:
  4554                           
  4555                           	psect	text13
  4556  0311                     __ptext13:	
  4557 ;; *************** function _EUSART_Initialize *****************
  4558 ;; Defined at:
  4559 ;;		line 88 in file "mcc_generated_files/eusart.c"
  4560 ;; Parameters:    Size  Location     Type
  4561 ;;		None
  4562 ;; Auto vars:     Size  Location     Type
  4563 ;;		None
  4564 ;; Return value:  Size  Location     Type
  4565 ;;                  1    wreg      void 
  4566 ;; Registers used:
  4567 ;;		wreg, status,2, status,0, pclath, cstack
  4568 ;; Tracked objects:
  4569 ;;		On entry : 0/0
  4570 ;;		On exit  : 0/0
  4571 ;;		Unchanged: 0/0
  4572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4575 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4576 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4577 ;;Total ram usage:        1 bytes
  4578 ;; Hardware stack levels used: 1
  4579 ;; Hardware stack levels required when called: 8
  4580 ;; This function calls:
  4581 ;;		_EUSART_SetErrorHandler
  4582 ;;		_EUSART_SetFramingErrorHandler
  4583 ;;		_EUSART_SetOverrunErrorHandler
  4584 ;;		_EUSART_SetRxInterruptHandler
  4585 ;;		_EUSART_SetTxInterruptHandler
  4586 ;; This function is called by:
  4587 ;;		_SYSTEM_Initialize
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591                           
  4592                           ;psect for function _EUSART_Initialize
  4593  0311                     _EUSART_Initialize:
  4594  0311                     l3210:	
  4595                           ;incstack = 0
  4596                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4597                           
  4598                           
  4599                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  4600  0311  0021               	movlb	1	; select bank1
  4601  0312  1291               	bcf	17,5	;volatile
  4602  0313                     l3212:
  4603                           
  4604                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  4605  0313  3097               	movlw	low _EUSART_Receive_ISR
  4606  0314  0020               	movlb	0	; select bank0
  4607  0315  00C8               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  4608  0316  3003               	movlw	high _EUSART_Receive_ISR
  4609  0317  00C9               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  4610  0318  3186  26F1  3183   	fcall	_EUSART_SetRxInterruptHandler
  4611  031B                     l3214:
  4612                           
  4613                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  4614  031B  0021               	movlb	1	; select bank1
  4615  031C  1211               	bcf	17,4	;volatile
  4616                           
  4617                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  4618  031D  3029               	movlw	low _EUSART_Transmit_ISR
  4619  031E  0020               	movlb	0	; select bank0
  4620  031F  00C8               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  4621  0320  3005               	movlw	high _EUSART_Transmit_ISR
  4622  0321  00C9               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  4623  0322  3186  26EB  3183   	fcall	_EUSART_SetTxInterruptHandler
  4624  0325                     l3216:
  4625                           
  4626                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  4627  0325  3008               	movlw	8
  4628  0326  0023               	movlb	3	; select bank3
  4629  0327  009F               	movwf	31	;volatile
  4630  0328                     l3218:
  4631                           
  4632                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  4633  0328  3090               	movlw	144
  4634  0329  009D               	movwf	29	;volatile
  4635  032A                     l3220:
  4636                           
  4637                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  4638  032A  3024               	movlw	36
  4639  032B  009E               	movwf	30	;volatile
  4640  032C                     l3222:
  4641                           
  4642                           ;mcc_generated_files/eusart.c: 107:     SPBRGL = 0x40;
  4643  032C  3040               	movlw	64
  4644  032D  009B               	movwf	27	;volatile
  4645  032E                     l3224:
  4646                           
  4647                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x03;
  4648  032E  3003               	movlw	3
  4649  032F  009C               	movwf	28	;volatile
  4650  0330                     l3226:
  4651                           
  4652                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  4653  0330  306F               	movlw	low _EUSART_DefaultFramingErrorHandler
  4654  0331  0020               	movlb	0	; select bank0
  4655  0332  00C8               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  4656  0333  3007               	movlw	high _EUSART_DefaultFramingErrorHandler
  4657  0334  00C9               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  4658  0335  3186  26FD  3183   	fcall	_EUSART_SetFramingErrorHandler
  4659  0338                     l3228:
  4660                           
  4661                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  4662  0338  3051               	movlw	low _EUSART_DefaultOverrunErrorHandler
  4663  0339  0020               	movlb	0	; select bank0
  4664  033A  00C8               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  4665  033B  3007               	movlw	high _EUSART_DefaultOverrunErrorHandler
  4666  033C  00C9               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  4667  033D  3186  26F7  3183   	fcall	_EUSART_SetOverrunErrorHandler
  4668  0340                     l3230:
  4669                           
  4670                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  4671  0340  3055               	movlw	low _EUSART_DefaultErrorHandler
  4672  0341  0020               	movlb	0	; select bank0
  4673  0342  00C8               	movwf	EUSART_SetErrorHandler@interruptHandler
  4674  0343  3007               	movlw	high _EUSART_DefaultErrorHandler
  4675  0344  00C9               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  4676  0345  3187  2703  3183   	fcall	_EUSART_SetErrorHandler
  4677  0348                     l3232:
  4678                           
  4679                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  4680  0348  0020               	movlb	0	; select bank0
  4681  0349  01BE               	clrf	_eusartRxLastError	;volatile
  4682  034A                     l3234:
  4683                           
  4684                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  4685  034A  01C4               	clrf	_eusartTxHead	;volatile
  4686  034B                     l3236:
  4687                           
  4688                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  4689  034B  01C3               	clrf	_eusartTxTail	;volatile
  4690  034C                     l3238:
  4691                           
  4692                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  4693  034C  3008               	movlw	8
  4694  034D  00CA               	movwf	??_EUSART_Initialize
  4695  034E  084A               	movf	??_EUSART_Initialize,w
  4696  034F  00C2               	movwf	_eusartTxBufferRemaining	;volatile
  4697                           
  4698                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  4699  0350  01C1               	clrf	_eusartRxHead	;volatile
  4700                           
  4701                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  4702  0351  01C0               	clrf	_eusartRxTail	;volatile
  4703                           
  4704                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  4705  0352  01BF               	clrf	_eusartRxCount	;volatile
  4706  0353                     l3240:
  4707                           
  4708                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  4709  0353  0021               	movlb	1	; select bank1
  4710  0354  1691               	bsf	17,5	;volatile
  4711  0355                     l295:
  4712  0355  0008               	return
  4713  0356                     __end_of_EUSART_Initialize:
  4714                           
  4715                           	psect	text14
  4716  06EB                     __ptext14:	
  4717 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  4718 ;; Defined at:
  4719 ;;		line 285 in file "mcc_generated_files/eusart.c"
  4720 ;; Parameters:    Size  Location     Type
  4721 ;;  interruptHan    2    3[BANK0 ] PTR FTN()void 
  4722 ;;		 -> EUSART_Transmit_ISR(1), 
  4723 ;; Auto vars:     Size  Location     Type
  4724 ;;		None
  4725 ;; Return value:  Size  Location     Type
  4726 ;;                  1    wreg      void 
  4727 ;; Registers used:
  4728 ;;		wreg
  4729 ;; Tracked objects:
  4730 ;;		On entry : 0/0
  4731 ;;		On exit  : 0/0
  4732 ;;		Unchanged: 0/0
  4733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4734 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4737 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4738 ;;Total ram usage:        2 bytes
  4739 ;; Hardware stack levels used: 1
  4740 ;; Hardware stack levels required when called: 7
  4741 ;; This function calls:
  4742 ;;		Nothing
  4743 ;; This function is called by:
  4744 ;;		_EUSART_Initialize
  4745 ;; This function uses a non-reentrant model
  4746 ;;
  4747                           
  4748                           
  4749                           ;psect for function _EUSART_SetTxInterruptHandler
  4750  06EB                     _EUSART_SetTxInterruptHandler:
  4751  06EB                     l2952:	
  4752                           ;incstack = 0
  4753                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  4754                           
  4755                           
  4756                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  4757  06EB  0020               	movlb	0	; select bank0
  4758  06EC  0849               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  4759  06ED  00B9               	movwf	_EUSART_TxDefaultInterruptHandler+1
  4760  06EE  0848               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  4761  06EF  00B8               	movwf	_EUSART_TxDefaultInterruptHandler
  4762  06F0                     l367:
  4763  06F0  0008               	return
  4764  06F1                     __end_of_EUSART_SetTxInterruptHandler:
  4765                           
  4766                           	psect	text15
  4767  06F1                     __ptext15:	
  4768 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  4769 ;; Defined at:
  4770 ;;		line 289 in file "mcc_generated_files/eusart.c"
  4771 ;; Parameters:    Size  Location     Type
  4772 ;;  interruptHan    2    3[BANK0 ] PTR FTN()void 
  4773 ;;		 -> EUSART_Receive_ISR(1), 
  4774 ;; Auto vars:     Size  Location     Type
  4775 ;;		None
  4776 ;; Return value:  Size  Location     Type
  4777 ;;                  1    wreg      void 
  4778 ;; Registers used:
  4779 ;;		wreg
  4780 ;; Tracked objects:
  4781 ;;		On entry : 0/0
  4782 ;;		On exit  : 0/0
  4783 ;;		Unchanged: 0/0
  4784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4785 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4788 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4789 ;;Total ram usage:        2 bytes
  4790 ;; Hardware stack levels used: 1
  4791 ;; Hardware stack levels required when called: 7
  4792 ;; This function calls:
  4793 ;;		Nothing
  4794 ;; This function is called by:
  4795 ;;		_EUSART_Initialize
  4796 ;; This function uses a non-reentrant model
  4797 ;;
  4798                           
  4799                           
  4800                           ;psect for function _EUSART_SetRxInterruptHandler
  4801  06F1                     _EUSART_SetRxInterruptHandler:
  4802  06F1                     l2950:	
  4803                           ;incstack = 0
  4804                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  4805                           
  4806                           
  4807                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  4808  06F1  0020               	movlb	0	; select bank0
  4809  06F2  0849               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  4810  06F3  00B7               	movwf	_EUSART_RxDefaultInterruptHandler+1
  4811  06F4  0848               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  4812  06F5  00B6               	movwf	_EUSART_RxDefaultInterruptHandler
  4813  06F6                     l370:
  4814  06F6  0008               	return
  4815  06F7                     __end_of_EUSART_SetRxInterruptHandler:
  4816                           
  4817                           	psect	text16
  4818  06F7                     __ptext16:	
  4819 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  4820 ;; Defined at:
  4821 ;;		line 277 in file "mcc_generated_files/eusart.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;  interruptHan    2    3[BANK0 ] PTR FTN()void 
  4824 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;		None
  4827 ;; Return value:  Size  Location     Type
  4828 ;;                  1    wreg      void 
  4829 ;; Registers used:
  4830 ;;		wreg
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/0
  4833 ;;		On exit  : 0/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4836 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4839 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4840 ;;Total ram usage:        2 bytes
  4841 ;; Hardware stack levels used: 1
  4842 ;; Hardware stack levels required when called: 7
  4843 ;; This function calls:
  4844 ;;		Nothing
  4845 ;; This function is called by:
  4846 ;;		_EUSART_Initialize
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           
  4850                           
  4851                           ;psect for function _EUSART_SetOverrunErrorHandler
  4852  06F7                     _EUSART_SetOverrunErrorHandler:
  4853  06F7                     l2956:	
  4854                           ;incstack = 0
  4855                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  4856                           
  4857                           
  4858                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
  4859  06F7  0020               	movlb	0	; select bank0
  4860  06F8  0849               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  4861  06F9  00B3               	movwf	_EUSART_OverrunErrorHandler+1
  4862  06FA  0848               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  4863  06FB  00B2               	movwf	_EUSART_OverrunErrorHandler
  4864  06FC                     l361:
  4865  06FC  0008               	return
  4866  06FD                     __end_of_EUSART_SetOverrunErrorHandler:
  4867                           
  4868                           	psect	text17
  4869  06FD                     __ptext17:	
  4870 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  4871 ;; Defined at:
  4872 ;;		line 273 in file "mcc_generated_files/eusart.c"
  4873 ;; Parameters:    Size  Location     Type
  4874 ;;  interruptHan    2    3[BANK0 ] PTR FTN()void 
  4875 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;		None
  4878 ;; Return value:  Size  Location     Type
  4879 ;;                  1    wreg      void 
  4880 ;; Registers used:
  4881 ;;		wreg
  4882 ;; Tracked objects:
  4883 ;;		On entry : 0/0
  4884 ;;		On exit  : 0/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4887 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4890 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4891 ;;Total ram usage:        2 bytes
  4892 ;; Hardware stack levels used: 1
  4893 ;; Hardware stack levels required when called: 7
  4894 ;; This function calls:
  4895 ;;		Nothing
  4896 ;; This function is called by:
  4897 ;;		_EUSART_Initialize
  4898 ;; This function uses a non-reentrant model
  4899 ;;
  4900                           
  4901                           
  4902                           ;psect for function _EUSART_SetFramingErrorHandler
  4903  06FD                     _EUSART_SetFramingErrorHandler:
  4904  06FD                     l2954:	
  4905                           ;incstack = 0
  4906                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  4907                           
  4908                           
  4909                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
  4910  06FD  0020               	movlb	0	; select bank0
  4911  06FE  0849               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  4912  06FF  00B5               	movwf	_EUSART_FramingErrorHandler+1
  4913  0700  0848               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  4914  0701  00B4               	movwf	_EUSART_FramingErrorHandler
  4915  0702                     l358:
  4916  0702  0008               	return
  4917  0703                     __end_of_EUSART_SetFramingErrorHandler:
  4918                           
  4919                           	psect	text18
  4920  0703                     __ptext18:	
  4921 ;; *************** function _EUSART_SetErrorHandler *****************
  4922 ;; Defined at:
  4923 ;;		line 281 in file "mcc_generated_files/eusart.c"
  4924 ;; Parameters:    Size  Location     Type
  4925 ;;  interruptHan    2    3[BANK0 ] PTR FTN()void 
  4926 ;;		 -> EUSART_DefaultErrorHandler(1), 
  4927 ;; Auto vars:     Size  Location     Type
  4928 ;;		None
  4929 ;; Return value:  Size  Location     Type
  4930 ;;                  1    wreg      void 
  4931 ;; Registers used:
  4932 ;;		wreg
  4933 ;; Tracked objects:
  4934 ;;		On entry : 0/0
  4935 ;;		On exit  : 0/0
  4936 ;;		Unchanged: 0/0
  4937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4938 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4941 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4942 ;;Total ram usage:        2 bytes
  4943 ;; Hardware stack levels used: 1
  4944 ;; Hardware stack levels required when called: 7
  4945 ;; This function calls:
  4946 ;;		Nothing
  4947 ;; This function is called by:
  4948 ;;		_EUSART_Initialize
  4949 ;; This function uses a non-reentrant model
  4950 ;;
  4951                           
  4952                           
  4953                           ;psect for function _EUSART_SetErrorHandler
  4954  0703                     _EUSART_SetErrorHandler:
  4955  0703                     l2958:	
  4956                           ;incstack = 0
  4957                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  4958                           
  4959                           
  4960                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
  4961  0703  0020               	movlb	0	; select bank0
  4962  0704  0849               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  4963  0705  00B1               	movwf	_EUSART_ErrorHandler+1
  4964  0706  0848               	movf	EUSART_SetErrorHandler@interruptHandler,w
  4965  0707  00B0               	movwf	_EUSART_ErrorHandler
  4966  0708                     l364:
  4967  0708  0008               	return
  4968  0709                     __end_of_EUSART_SetErrorHandler:
  4969                           
  4970                           	psect	text19
  4971  06C7                     __ptext19:	
  4972 ;; *************** function _ADC_Initialize *****************
  4973 ;; Defined at:
  4974 ;;		line 67 in file "mcc_generated_files/adc.c"
  4975 ;; Parameters:    Size  Location     Type
  4976 ;;		None
  4977 ;; Auto vars:     Size  Location     Type
  4978 ;;		None
  4979 ;; Return value:  Size  Location     Type
  4980 ;;                  1    wreg      void 
  4981 ;; Registers used:
  4982 ;;		wreg, status,2
  4983 ;; Tracked objects:
  4984 ;;		On entry : 0/0
  4985 ;;		On exit  : 0/0
  4986 ;;		Unchanged: 0/0
  4987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4992 ;;Total ram usage:        0 bytes
  4993 ;; Hardware stack levels used: 1
  4994 ;; Hardware stack levels required when called: 7
  4995 ;; This function calls:
  4996 ;;		Nothing
  4997 ;; This function is called by:
  4998 ;;		_SYSTEM_Initialize
  4999 ;; This function uses a non-reentrant model
  5000 ;;
  5001                           
  5002                           
  5003                           ;psect for function _ADC_Initialize
  5004  06C7                     _ADC_Initialize:
  5005  06C7                     l3204:	
  5006                           ;incstack = 0
  5007                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  5008                           
  5009                           
  5010                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xF0;
  5011  06C7  30F0               	movlw	240
  5012  06C8  0021               	movlb	1	; select bank1
  5013  06C9  009E               	movwf	30	;volatile
  5014  06CA                     l3206:
  5015                           
  5016                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  5017  06CA  019B               	clrf	27	;volatile
  5018  06CB                     l3208:
  5019                           
  5020                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  5021  06CB  019C               	clrf	28	;volatile
  5022                           
  5023                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  5024  06CC  3001               	movlw	1
  5025  06CD  009D               	movwf	29	;volatile
  5026  06CE                     l199:
  5027  06CE  0008               	return
  5028  06CF                     __end_of_ADC_Initialize:
  5029                           
  5030                           	psect	text20
  5031  04B0                     __ptext20:	
  5032 ;; *************** function _EUSART_Read *****************
  5033 ;; Defined at:
  5034 ;;		line 151 in file "mcc_generated_files/eusart.c"
  5035 ;; Parameters:    Size  Location     Type
  5036 ;;		None
  5037 ;; Auto vars:     Size  Location     Type
  5038 ;;  readValue       1    4[BANK0 ] unsigned char 
  5039 ;; Return value:  Size  Location     Type
  5040 ;;                  1    wreg      unsigned char 
  5041 ;; Registers used:
  5042 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5043 ;; Tracked objects:
  5044 ;;		On entry : 0/0
  5045 ;;		On exit  : 0/0
  5046 ;;		Unchanged: 0/0
  5047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5049 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5050 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5051 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5052 ;;Total ram usage:        2 bytes
  5053 ;; Hardware stack levels used: 1
  5054 ;; Hardware stack levels required when called: 7
  5055 ;; This function calls:
  5056 ;;		Nothing
  5057 ;; This function is called by:
  5058 ;;		_main
  5059 ;;		_getch
  5060 ;; This function uses a non-reentrant model
  5061 ;;
  5062                           
  5063                           
  5064                           ;psect for function _EUSART_Read
  5065  04B0                     _EUSART_Read:
  5066  04B0                     l3270:	
  5067                           ;incstack = 0
  5068                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  5069                           
  5070  04B0                     l3272:	
  5071                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  5072                           
  5073                           
  5074                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  5075  04B0  0020               	movlb	0	; select bank0
  5076  04B1  083F               	movf	_eusartRxCount,w	;volatile
  5077  04B2  1903               	btfsc	3,2
  5078  04B3  2CB5               	goto	u841
  5079  04B4  2CB6               	goto	u840
  5080  04B5                     u841:
  5081  04B5  2CB0               	goto	l3272
  5082  04B6                     u840:
  5083  04B6                     l3274:
  5084                           
  5085                           ;mcc_generated_files/eusart.c: 159:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
  5086  04B6  0840               	movf	_eusartRxTail,w	;volatile
  5087  04B7  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5088  04B8  0086               	movwf	6
  5089  04B9  0187               	clrf	7
  5090  04BA  0801               	movf	1,w
  5091  04BB  00C8               	movwf	??_EUSART_Read
  5092  04BC  0848               	movf	??_EUSART_Read,w
  5093  04BD  00BE               	movwf	_eusartRxLastError	;volatile
  5094                           
  5095                           ;mcc_generated_files/eusart.c: 161:     readValue = eusartRxBuffer[eusartRxTail++];
  5096  04BE  0840               	movf	_eusartRxTail,w
  5097  04BF  3EDD               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  5098  04C0  0086               	movwf	6
  5099  04C1  0187               	clrf	7
  5100  04C2  0801               	movf	1,w
  5101  04C3  00C8               	movwf	??_EUSART_Read
  5102  04C4  0848               	movf	??_EUSART_Read,w
  5103  04C5  00C9               	movwf	EUSART_Read@readValue
  5104  04C6                     l3276:
  5105  04C6  3001               	movlw	1
  5106  04C7  00C8               	movwf	??_EUSART_Read
  5107  04C8  0848               	movf	??_EUSART_Read,w
  5108  04C9  07C0               	addwf	_eusartRxTail,f	;volatile
  5109  04CA                     l3278:
  5110                           
  5111                           ;mcc_generated_files/eusart.c: 162:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
  5112  04CA  3008               	movlw	8
  5113  04CB  0240               	subwf	_eusartRxTail,w	;volatile
  5114  04CC  1C03               	skipc
  5115  04CD  2CCF               	goto	u851
  5116  04CE  2CD0               	goto	u850
  5117  04CF                     u851:
  5118  04CF  2CD1               	goto	l3282
  5119  04D0                     u850:
  5120  04D0                     l3280:
  5121                           
  5122                           ;mcc_generated_files/eusart.c: 163:     {;mcc_generated_files/eusart.c: 164:         eus
      +                          artRxTail = 0;
  5123  04D0  01C0               	clrf	_eusartRxTail	;volatile
  5124  04D1                     l3282:
  5125                           
  5126                           ;mcc_generated_files/eusart.c: 166:     PIE1bits.RCIE = 0;
  5127  04D1  0021               	movlb	1	; select bank1
  5128  04D2  1291               	bcf	17,5	;volatile
  5129  04D3                     l3284:
  5130                           
  5131                           ;mcc_generated_files/eusart.c: 167:     eusartRxCount--;
  5132  04D3  3001               	movlw	1
  5133  04D4  0020               	movlb	0	; select bank0
  5134  04D5  02BF               	subwf	_eusartRxCount,f	;volatile
  5135  04D6                     l3286:
  5136                           
  5137                           ;mcc_generated_files/eusart.c: 168:     PIE1bits.RCIE = 1;
  5138  04D6  0021               	movlb	1	; select bank1
  5139  04D7  1691               	bsf	17,5	;volatile
  5140  04D8                     l3288:
  5141                           
  5142                           ;mcc_generated_files/eusart.c: 170:     return readValue;
  5143  04D8  0020               	movlb	0	; select bank0
  5144  04D9  0849               	movf	EUSART_Read@readValue,w
  5145  04DA                     l314:
  5146  04DA  0008               	return
  5147  04DB                     __end_of_EUSART_Read:
  5148                           
  5149                           	psect	intentry
  5150  0004                     __pintentry:	
  5151 ;; *************** function _INTERRUPT_InterruptManager *****************
  5152 ;; Defined at:
  5153 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5154 ;; Parameters:    Size  Location     Type
  5155 ;;		None
  5156 ;; Auto vars:     Size  Location     Type
  5157 ;;		None
  5158 ;; Return value:  Size  Location     Type
  5159 ;;                  1    wreg      void 
  5160 ;; Registers used:
  5161 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5162 ;; Tracked objects:
  5163 ;;		On entry : 0/0
  5164 ;;		On exit  : 0/0
  5165 ;;		Unchanged: 0/0
  5166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5171 ;;Total ram usage:        0 bytes
  5172 ;; Hardware stack levels used: 1
  5173 ;; Hardware stack levels required when called: 6
  5174 ;; This function calls:
  5175 ;;		Absolute function
  5176 ;;		_EUSART_Receive_ISR
  5177 ;;		_EUSART_Transmit_ISR
  5178 ;;		_I2C_MasterIsr
  5179 ;; This function is called by:
  5180 ;;		Interrupt level 1
  5181 ;; This function uses a non-reentrant model
  5182 ;;
  5183                           
  5184  0004                     _INTERRUPT_InterruptManager:
  5185                           
  5186                           ;incstack = 0
  5187  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5188                           
  5189                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5190  0005  3180               	pagesel	$
  5191  0006                     i1l3502:
  5192                           
  5193                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  5194  0006  1F0B               	btfss	11,6	;volatile
  5195  0007  2809               	goto	u109_21
  5196  0008  280A               	goto	u109_20
  5197  0009                     u109_21:
  5198  0009  2845               	goto	i1l401
  5199  000A                     u109_20:
  5200  000A                     i1l3504:
  5201                           
  5202                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  5203  000A  0021               	movlb	1	; select bank1
  5204  000B  1E11               	btfss	17,4	;volatile
  5205  000C  280E               	goto	u110_21
  5206  000D  280F               	goto	u110_20
  5207  000E                     u110_21:
  5208  000E  281A               	goto	i1l392
  5209  000F                     u110_20:
  5210  000F                     i1l3506:
  5211  000F  0020               	movlb	0	; select bank0
  5212  0010  1E11               	btfss	17,4	;volatile
  5213  0011  2813               	goto	u111_21
  5214  0012  2814               	goto	u111_20
  5215  0013                     u111_21:
  5216  0013  281A               	goto	i1l392
  5217  0014                     u111_20:
  5218  0014                     i1l3508:
  5219                           
  5220                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
  5221  0014  0839               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  5222  0015  008A               	movwf	10
  5223  0016  0838               	movf	_EUSART_TxDefaultInterruptHandler,w
  5224  0017  000A               	callw
  5225  0018  3180               	pagesel	$
  5226                           
  5227                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  5228  0019  2845               	goto	i1l401
  5229  001A                     i1l392:	
  5230                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  5231                           
  5232  001A  0021               	movlb	1	; select bank1
  5233  001B  1E91               	btfss	17,5	;volatile
  5234  001C  281E               	goto	u112_21
  5235  001D  281F               	goto	u112_20
  5236  001E                     u112_21:
  5237  001E  282A               	goto	i1l394
  5238  001F                     u112_20:
  5239  001F                     i1l3510:
  5240  001F  0020               	movlb	0	; select bank0
  5241  0020  1E91               	btfss	17,5	;volatile
  5242  0021  2823               	goto	u113_21
  5243  0022  2824               	goto	u113_20
  5244  0023                     u113_21:
  5245  0023  282A               	goto	i1l394
  5246  0024                     u113_20:
  5247  0024                     i1l3512:
  5248                           
  5249                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
  5250  0024  0837               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  5251  0025  008A               	movwf	10
  5252  0026  0836               	movf	_EUSART_RxDefaultInterruptHandler,w
  5253  0027  000A               	callw
  5254  0028  3180               	pagesel	$
  5255                           
  5256                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  5257  0029  2845               	goto	i1l401
  5258  002A                     i1l394:	
  5259                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE2bits.BCLIE == 1 && PIR
      +                          2bits.BCLIF == 1)
  5260                           
  5261  002A  0021               	movlb	1	; select bank1
  5262  002B  1D92               	btfss	18,3	;volatile
  5263  002C  282E               	goto	u114_21
  5264  002D  282F               	goto	u114_20
  5265  002E                     u114_21:
  5266  002E  283A               	goto	i1l396
  5267  002F                     u114_20:
  5268  002F                     i1l3514:
  5269  002F  0020               	movlb	0	; select bank0
  5270  0030  1D92               	btfss	18,3	;volatile
  5271  0031  2833               	goto	u115_21
  5272  0032  2834               	goto	u115_20
  5273  0033                     u115_21:
  5274  0033  283A               	goto	i1l396
  5275  0034                     u115_20:
  5276  0034                     i1l3516:
  5277                           
  5278                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             MSSP_InterruptHandler();
  5279  0034  083D               	movf	_MSSP_InterruptHandler+1,w
  5280  0035  008A               	movwf	10
  5281  0036  083C               	movf	_MSSP_InterruptHandler,w
  5282  0037  000A               	callw
  5283  0038  3180               	pagesel	$
  5284                           
  5285                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  5286  0039  2845               	goto	i1l401
  5287  003A                     i1l396:	
  5288                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.SSPIE == 1 && PIR
      +                          1bits.SSPIF == 1)
  5289                           
  5290  003A  0021               	movlb	1	; select bank1
  5291  003B  1D91               	btfss	17,3	;volatile
  5292  003C  283E               	goto	u116_21
  5293  003D  283F               	goto	u116_20
  5294  003E                     u116_21:
  5295  003E  2845               	goto	i1l395
  5296  003F                     u116_20:
  5297  003F                     i1l3518:
  5298  003F  0020               	movlb	0	; select bank0
  5299  0040  1D91               	btfss	17,3	;volatile
  5300  0041  2843               	goto	u117_21
  5301  0042  2844               	goto	u117_20
  5302  0043                     u117_21:
  5303  0043  2845               	goto	i1l395
  5304  0044                     u117_20:
  5305  0044  2834               	goto	i1l3516
  5306  0045                     i1l395:
  5307  0045                     i1l401:
  5308  0045  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5309  0046  0009               	retfie
  5310  0047                     __end_of_INTERRUPT_InterruptManager:
  5311                           
  5312                           	psect	text22
  5313  0745                     __ptext22:	
  5314 ;; *************** function _I2C_MasterIsr *****************
  5315 ;; Defined at:
  5316 ;;		line 318 in file "mcc_generated_files/i2c_master.c"
  5317 ;; Parameters:    Size  Location     Type
  5318 ;;		None
  5319 ;; Auto vars:     Size  Location     Type
  5320 ;;		None
  5321 ;; Return value:  Size  Location     Type
  5322 ;;                  1    wreg      void 
  5323 ;; Registers used:
  5324 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5325 ;; Tracked objects:
  5326 ;;		On entry : 0/0
  5327 ;;		On exit  : 0/0
  5328 ;;		Unchanged: 0/0
  5329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5334 ;;Total ram usage:        0 bytes
  5335 ;; Hardware stack levels used: 1
  5336 ;; Hardware stack levels required when called: 5
  5337 ;; This function calls:
  5338 ;;		_I2C_MasterFsm
  5339 ;; This function is called by:
  5340 ;;		_I2C_Open
  5341 ;;		_INTERRUPT_InterruptManager
  5342 ;; This function uses a non-reentrant model
  5343 ;;
  5344                           
  5345                           
  5346                           ;psect for function _I2C_MasterIsr
  5347  0745                     _I2C_MasterIsr:
  5348  0745                     i1l3342:	
  5349                           ;incstack = 0
  5350                           ; Regs used in _I2C_MasterIsr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5351                           
  5352                           
  5353                           ;mcc_generated_files/i2c_master.c: 320:     I2C_MasterFsm();
  5354  0745  3184  2400  3187   	fcall	_I2C_MasterFsm
  5355  0748                     i1l563:
  5356  0748  0008               	return
  5357  0749                     __end_of_I2C_MasterIsr:
  5358                           
  5359                           	psect	text23
  5360  0400                     __ptext23:	
  5361 ;; *************** function _I2C_MasterFsm *****************
  5362 ;; Defined at:
  5363 ;;		line 323 in file "mcc_generated_files/i2c_master.c"
  5364 ;; Parameters:    Size  Location     Type
  5365 ;;		None
  5366 ;; Auto vars:     Size  Location     Type
  5367 ;;		None
  5368 ;; Return value:  Size  Location     Type
  5369 ;;                  1    wreg      void 
  5370 ;; Registers used:
  5371 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5372 ;; Tracked objects:
  5373 ;;		On entry : 0/0
  5374 ;;		On exit  : 0/0
  5375 ;;		Unchanged: 0/0
  5376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5379 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5380 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5381 ;;Total ram usage:        3 bytes
  5382 ;; Hardware stack levels used: 1
  5383 ;; Hardware stack levels required when called: 4
  5384 ;; This function calls:
  5385 ;;		_I2C_DO_ADDRESS_NACK
  5386 ;;		_I2C_DO_IDLE
  5387 ;;		_I2C_DO_RCEN
  5388 ;;		_I2C_DO_RESET
  5389 ;;		_I2C_DO_RX
  5390 ;;		_I2C_DO_RX_ACK
  5391 ;;		_I2C_DO_RX_NACK_RESTART
  5392 ;;		_I2C_DO_RX_NACK_STOP
  5393 ;;		_I2C_DO_SEND_ADR_READ
  5394 ;;		_I2C_DO_SEND_ADR_WRITE
  5395 ;;		_I2C_DO_SEND_RESTART
  5396 ;;		_I2C_DO_SEND_RESTART_READ
  5397 ;;		_I2C_DO_SEND_RESTART_WRITE
  5398 ;;		_I2C_DO_SEND_STOP
  5399 ;;		_I2C_DO_TX
  5400 ;;		_I2C_DO_TX_EMPTY
  5401 ;;		_I2C_MasterClearIrq
  5402 ;;		_I2C_MasterIsNack
  5403 ;; This function is called by:
  5404 ;;		_I2C_MasterIsr
  5405 ;; This function uses a non-reentrant model
  5406 ;;
  5407                           
  5408                           
  5409                           ;psect for function _I2C_MasterFsm
  5410  0400                     _I2C_MasterFsm:
  5411  0400                     i1l3246:	
  5412                           ;incstack = 0
  5413                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5414                           
  5415                           
  5416                           ;mcc_generated_files/i2c_master.c: 325:     I2C_MasterClearIrq();
  5417  0400  3187  2759  3184   	fcall	_I2C_MasterClearIrq
  5418  0403                     i1l3248:
  5419                           
  5420                           ;mcc_generated_files/i2c_master.c: 327:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  5421  0403  0021               	movlb	1	; select bank1
  5422  0404  1C5C               	btfss	(_I2C_Status^(0+128)+28),0
  5423  0405  2C07               	goto	u81_21
  5424  0406  2C08               	goto	u81_20
  5425  0407                     u81_21:
  5426  0407  2C16               	goto	i1l3254
  5427  0408                     u81_20:
  5428  0408                     i1l3250:
  5429  0408  3187  2709  3184   	fcall	_I2C_MasterIsNack
  5430  040B  3A00               	xorlw	0
  5431  040C  1903               	skipnz
  5432  040D  2C0F               	goto	u82_21
  5433  040E  2C10               	goto	u82_20
  5434  040F                     u82_21:
  5435  040F  2C16               	goto	i1l3254
  5436  0410                     u82_20:
  5437  0410                     i1l3252:
  5438                           
  5439                           ;mcc_generated_files/i2c_master.c: 328:     {;mcc_generated_files/i2c_master.c: 329:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  5440  0410  300F               	movlw	15
  5441  0411  0020               	movlb	0	; select bank0
  5442  0412  00C5               	movwf	??_I2C_MasterFsm
  5443  0413  0845               	movf	??_I2C_MasterFsm,w
  5444  0414  0021               	movlb	1	; select bank1
  5445  0415  00DA               	movwf	(_I2C_Status^(0+128)+26)
  5446  0416                     i1l3254:
  5447                           
  5448                           ;mcc_generated_files/i2c_master.c: 331:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
  5449  0416  0021               	movlb	1	; select bank1
  5450  0417  085A               	movf	(_I2C_Status^(0+128)+26),w
  5451  0418  0020               	movlb	0	; select bank0
  5452  0419  00C5               	movwf	??_I2C_MasterFsm
  5453  041A  01C6               	clrf	??_I2C_MasterFsm+1
  5454  041B  35C5               	lslf	??_I2C_MasterFsm,f
  5455  041C  0DC6               	rlf	??_I2C_MasterFsm+1,f
  5456  041D  305A               	movlw	low (_i2c_fsmStateTable| (0+32768))
  5457  041E  0745               	addwf	??_I2C_MasterFsm,w
  5458  041F  0084               	movwf	4
  5459  0420  3084               	movlw	high (_i2c_fsmStateTable| (0+32768))
  5460  0421  3D46               	addwfc	??_I2C_MasterFsm+1,w
  5461  0422  0085               	movwf	5
  5462  0423  3F01               	moviw [1]fsr0
  5463  0424  008A               	movwf	10
  5464  0425  3F00               	moviw [0]fsr0
  5465  0426  000A               	callw
  5466  0427  3184               	pagesel	$
  5467  0428  0020               	movlb	0	; select bank0
  5468  0429  00C7               	movwf	??_I2C_MasterFsm+2
  5469  042A  0847               	movf	??_I2C_MasterFsm+2,w
  5470  042B  0021               	movlb	1	; select bank1
  5471  042C  00DA               	movwf	(_I2C_Status^(0+128)+26)
  5472  042D                     i1l567:
  5473  042D  0008               	return
  5474  042E                     __end_of_I2C_MasterFsm:
  5475                           
  5476                           	psect	text24
  5477  0759                     __ptext24:	
  5478 ;; *************** function _I2C_MasterClearIrq *****************
  5479 ;; Defined at:
  5480 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;		None
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;		None
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  1    wreg      void 
  5487 ;; Registers used:
  5488 ;;		None
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5498 ;;Total ram usage:        0 bytes
  5499 ;; Hardware stack levels used: 1
  5500 ;; This function calls:
  5501 ;;		Nothing
  5502 ;; This function is called by:
  5503 ;;		_I2C_MasterFsm
  5504 ;;		_I2C_Open
  5505 ;;		_I2C_Close
  5506 ;; This function uses a non-reentrant model
  5507 ;;
  5508                           
  5509                           
  5510                           ;psect for function _I2C_MasterClearIrq
  5511  0759                     _I2C_MasterClearIrq:
  5512  0759                     i1l2970:	
  5513                           ;incstack = 0
  5514                           ; Regs used in _I2C_MasterClearIrq: []
  5515                           
  5516                           
  5517                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
  5518  0759  0020               	movlb	0	; select bank0
  5519  075A  1191               	bcf	17,3	;volatile
  5520  075B                     i1l730:
  5521  075B  0008               	return
  5522  075C                     __end_of_I2C_MasterClearIrq:
  5523                           
  5524                           	psect	text25
  5525  042E                     __ptext25:	
  5526 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  5527 ;; Defined at:
  5528 ;;		line 501 in file "mcc_generated_files/i2c_master.c"
  5529 ;; Parameters:    Size  Location     Type
  5530 ;;		None
  5531 ;; Auto vars:     Size  Location     Type
  5532 ;;		None
  5533 ;; Return value:  Size  Location     Type
  5534 ;;                  1    wreg      enum E3338
  5535 ;; Registers used:
  5536 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5537 ;; Tracked objects:
  5538 ;;		On entry : 0/0
  5539 ;;		On exit  : 0/0
  5540 ;;		Unchanged: 0/0
  5541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5544 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5545 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5546 ;;Total ram usage:        3 bytes
  5547 ;; Hardware stack levels used: 1
  5548 ;; Hardware stack levels required when called: 3
  5549 ;; This function calls:
  5550 ;;		Absolute function
  5551 ;;		_I2C_CallbackReturnReset
  5552 ;;		_I2C_CallbackReturnStop
  5553 ;;		_I2C_DO_SEND_RESTART
  5554 ;;		_I2C_DO_SEND_STOP
  5555 ;;		_rd1RegCompleteHandler
  5556 ;;		_rd2RegCompleteHandler
  5557 ;;		_rdBlkRegCompleteHandler
  5558 ;;		_wr1RegCompleteHandler
  5559 ;;		_wr2RegCompleteHandler
  5560 ;; This function is called by:
  5561 ;;		_I2C_MasterFsm
  5562 ;; This function uses a non-reentrant model
  5563 ;;
  5564                           
  5565                           
  5566                           ;psect for function _I2C_DO_ADDRESS_NACK
  5567  042E                     _I2C_DO_ADDRESS_NACK:
  5568  042E                     i1l3110:	
  5569                           ;incstack = 0
  5570                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5571                           
  5572                           
  5573                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.addressNackCheck = 0;
  5574  042E  0021               	movlb	1	; select bank1
  5575  042F  105C               	bcf	(_I2C_Status^(0+128)+28),0
  5576  0430                     i1l3112:
  5577                           
  5578                           ;mcc_generated_files/i2c_master.c: 504:     I2C_Status.error = I2C_FAIL;
  5579  0430  3002               	movlw	2
  5580  0431  00FA               	movwf	??_I2C_DO_ADDRESS_NACK
  5581  0432  087A               	movf	??_I2C_DO_ADDRESS_NACK,w
  5582  0433  00DB               	movwf	(_I2C_Status^(0+128)+27)
  5583                           
  5584                           ;mcc_generated_files/i2c_master.c: 505:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  5585  0434  2C3D               	goto	i1l3124
  5586  0435                     i1l3114:
  5587                           
  5588                           ;mcc_generated_files/i2c_master.c: 509:             return I2C_DO_SEND_RESTART();
  5589  0435  3187  2728  3184   	fcall	_I2C_DO_SEND_RESTART
  5590  0438  2C59               	goto	i1l658
  5591  0439                     i1l3118:
  5592                           
  5593                           ;mcc_generated_files/i2c_master.c: 511:             return I2C_DO_SEND_STOP();
  5594  0439  3187  2723  3184   	fcall	_I2C_DO_SEND_STOP
  5595  043C  2C59               	goto	i1l658
  5596  043D                     i1l3124:
  5597  043D  084E               	movf	(low ((_I2C_Status| 0+14)))^(0+128),w
  5598  043E  00FA               	movwf	??_I2C_DO_ADDRESS_NACK
  5599  043F  087A               	movf	??_I2C_DO_ADDRESS_NACK,w
  5600  0440  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  5601  0441  3004               	movlw	4
  5602  0442  3EC0               	addlw	(low (_I2C_Status| 0))& (0+255)
  5603  0443  0086               	movwf	6
  5604  0444  0187               	clrf	7
  5605  0445  3F41               	moviw [1]fsr1
  5606  0446  008A               	movwf	10
  5607  0447  3F40               	moviw [0]fsr1
  5608  0448  000A               	callw
  5609  0449  3184               	pagesel	$
  5610  044A  00FB               	movwf	??_I2C_DO_ADDRESS_NACK+1
  5611  044B  01FC               	clrf	??_I2C_DO_ADDRESS_NACK+2
  5612                           
  5613                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5614                           ; Switch size 1, requested type "simple"
  5615                           ; Number of cases is 1, Range of values is 0 to 0
  5616                           ; switch strategies available:
  5617                           ; Name         Instructions Cycles
  5618                           ; simple_byte            4     3 (average)
  5619                           ; direct_byte            8     6 (fixed)
  5620                           ; jumptable            260     6 (fixed)
  5621                           ;	Chosen strategy is simple_byte
  5622  044C  087C               	movf	??_I2C_DO_ADDRESS_NACK+2,w
  5623  044D  3A00               	xorlw	0	; case 0
  5624  044E  1903               	skipnz
  5625  044F  2C51               	goto	i1l3844
  5626  0450  2C39               	goto	i1l3118
  5627  0451                     i1l3844:
  5628                           
  5629                           ; Switch size 1, requested type "simple"
  5630                           ; Number of cases is 2, Range of values is 2 to 3
  5631                           ; switch strategies available:
  5632                           ; Name         Instructions Cycles
  5633                           ; simple_byte            7     4 (average)
  5634                           ; direct_byte           13     9 (fixed)
  5635                           ; jumptable            263     9 (fixed)
  5636                           ;	Chosen strategy is simple_byte
  5637  0451  087B               	movf	??_I2C_DO_ADDRESS_NACK+1,w
  5638  0452  3A02               	xorlw	2	; case 2
  5639  0453  1903               	skipnz
  5640  0454  2C35               	goto	i1l3114
  5641  0455  3A01               	xorlw	1	; case 3
  5642  0456  1903               	skipnz
  5643  0457  2C35               	goto	i1l3114
  5644  0458  2C39               	goto	i1l3118
  5645  0459                     i1l658:
  5646  0459  0008               	return
  5647  045A                     __end_of_I2C_DO_ADDRESS_NACK:
  5648                           
  5649                           	psect	text26
  5650  070F                     __ptext26:	
  5651 ;; *************** function _I2C_DO_RESET *****************
  5652 ;; Defined at:
  5653 ;;		line 495 in file "mcc_generated_files/i2c_master.c"
  5654 ;; Parameters:    Size  Location     Type
  5655 ;;		None
  5656 ;; Auto vars:     Size  Location     Type
  5657 ;;		None
  5658 ;; Return value:  Size  Location     Type
  5659 ;;                  1    wreg      enum E3338
  5660 ;; Registers used:
  5661 ;;		wreg, status,2
  5662 ;; Tracked objects:
  5663 ;;		On entry : 0/0
  5664 ;;		On exit  : 0/0
  5665 ;;		Unchanged: 0/0
  5666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5671 ;;Total ram usage:        0 bytes
  5672 ;; Hardware stack levels used: 1
  5673 ;; This function calls:
  5674 ;;		Nothing
  5675 ;; This function is called by:
  5676 ;;		_I2C_MasterFsm
  5677 ;; This function uses a non-reentrant model
  5678 ;;
  5679                           
  5680                           
  5681                           ;psect for function _I2C_DO_RESET
  5682  070F                     _I2C_DO_RESET:
  5683  070F                     i1l3102:	
  5684                           ;incstack = 0
  5685                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
  5686                           
  5687                           
  5688                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.busy = 0;
  5689  070F  0021               	movlb	1	; select bank1
  5690  0710  10DC               	bcf	(_I2C_Status^(0+128)+28),1
  5691  0711                     i1l3104:
  5692                           
  5693                           ;mcc_generated_files/i2c_master.c: 498:     I2C_Status.error = I2C_NOERR;
  5694  0711  01DB               	clrf	(_I2C_Status^(0+128)+27)
  5695  0712                     i1l3106:
  5696                           
  5697                           ;mcc_generated_files/i2c_master.c: 499:     return I2C_RESET;
  5698  0712  300E               	movlw	14
  5699  0713                     i1l652:
  5700  0713  0008               	return
  5701  0714                     __end_of_I2C_DO_RESET:
  5702                           
  5703                           	psect	text27
  5704  0714                     __ptext27:	
  5705 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  5706 ;; Defined at:
  5707 ;;		line 489 in file "mcc_generated_files/i2c_master.c"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;		None
  5710 ;; Auto vars:     Size  Location     Type
  5711 ;;		None
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  1    wreg      enum E3338
  5714 ;; Registers used:
  5715 ;;		wreg, status,2, status,0, pclath, cstack
  5716 ;; Tracked objects:
  5717 ;;		On entry : 0/0
  5718 ;;		On exit  : 0/0
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5725 ;;Total ram usage:        0 bytes
  5726 ;; Hardware stack levels used: 1
  5727 ;; Hardware stack levels required when called: 1
  5728 ;; This function calls:
  5729 ;;		_I2C_MasterSendNack
  5730 ;; This function is called by:
  5731 ;;		_I2C_DO_RX
  5732 ;;		_I2C_MasterFsm
  5733 ;; This function uses a non-reentrant model
  5734 ;;
  5735                           
  5736                           
  5737                           ;psect for function _I2C_DO_RX_NACK_RESTART
  5738  0714                     _I2C_DO_RX_NACK_RESTART:
  5739  0714                     i1l2906:	
  5740                           ;incstack = 0
  5741                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  5742                           
  5743                           
  5744                           ;mcc_generated_files/i2c_master.c: 491:     I2C_MasterSendNack();
  5745  0714  3187  274D  3187   	fcall	_I2C_MasterSendNack
  5746  0717                     i1l2908:
  5747                           
  5748                           ;mcc_generated_files/i2c_master.c: 492:     return I2C_SEND_RESTART;
  5749  0717  3009               	movlw	9
  5750  0718                     i1l649:
  5751  0718  0008               	return
  5752  0719                     __end_of_I2C_DO_RX_NACK_RESTART:
  5753                           
  5754                           	psect	text28
  5755  0719                     __ptext28:	
  5756 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  5757 ;; Defined at:
  5758 ;;		line 483 in file "mcc_generated_files/i2c_master.c"
  5759 ;; Parameters:    Size  Location     Type
  5760 ;;		None
  5761 ;; Auto vars:     Size  Location     Type
  5762 ;;		None
  5763 ;; Return value:  Size  Location     Type
  5764 ;;                  1    wreg      enum E3338
  5765 ;; Registers used:
  5766 ;;		wreg, status,2, status,0, pclath, cstack
  5767 ;; Tracked objects:
  5768 ;;		On entry : 0/0
  5769 ;;		On exit  : 0/0
  5770 ;;		Unchanged: 0/0
  5771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5776 ;;Total ram usage:        0 bytes
  5777 ;; Hardware stack levels used: 1
  5778 ;; Hardware stack levels required when called: 1
  5779 ;; This function calls:
  5780 ;;		_I2C_MasterSendNack
  5781 ;; This function is called by:
  5782 ;;		_I2C_DO_RX
  5783 ;;		_I2C_MasterFsm
  5784 ;; This function uses a non-reentrant model
  5785 ;;
  5786                           
  5787                           
  5788                           ;psect for function _I2C_DO_RX_NACK_STOP
  5789  0719                     _I2C_DO_RX_NACK_STOP:
  5790  0719                     i1l2912:	
  5791                           ;incstack = 0
  5792                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  5793                           
  5794                           
  5795                           ;mcc_generated_files/i2c_master.c: 485:     I2C_MasterSendNack();
  5796  0719  3187  274D  3187   	fcall	_I2C_MasterSendNack
  5797  071C                     i1l2914:
  5798                           
  5799                           ;mcc_generated_files/i2c_master.c: 486:     return I2C_SEND_STOP;
  5800  071C  300A               	movlw	10
  5801  071D                     i1l646:
  5802  071D  0008               	return
  5803  071E                     __end_of_I2C_DO_RX_NACK_STOP:
  5804                           
  5805                           	psect	text29
  5806  071E                     __ptext29:	
  5807 ;; *************** function _I2C_DO_RX_ACK *****************
  5808 ;; Defined at:
  5809 ;;		line 476 in file "mcc_generated_files/i2c_master.c"
  5810 ;; Parameters:    Size  Location     Type
  5811 ;;		None
  5812 ;; Auto vars:     Size  Location     Type
  5813 ;;		None
  5814 ;; Return value:  Size  Location     Type
  5815 ;;                  1    wreg      enum E3338
  5816 ;; Registers used:
  5817 ;;		wreg, status,2, status,0, pclath, cstack
  5818 ;; Tracked objects:
  5819 ;;		On entry : 0/0
  5820 ;;		On exit  : 0/0
  5821 ;;		Unchanged: 0/0
  5822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5827 ;;Total ram usage:        0 bytes
  5828 ;; Hardware stack levels used: 1
  5829 ;; Hardware stack levels required when called: 1
  5830 ;; This function calls:
  5831 ;;		_I2C_MasterSendAck
  5832 ;; This function is called by:
  5833 ;;		_I2C_MasterFsm
  5834 ;; This function uses a non-reentrant model
  5835 ;;
  5836                           
  5837                           
  5838                           ;psect for function _I2C_DO_RX_ACK
  5839  071E                     _I2C_DO_RX_ACK:
  5840  071E                     i1l3096:	
  5841                           ;incstack = 0
  5842                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
  5843                           
  5844                           
  5845                           ;mcc_generated_files/i2c_master.c: 478:     I2C_MasterSendAck();
  5846  071E  3187  2749  3187   	fcall	_I2C_MasterSendAck
  5847  0721                     i1l3098:
  5848                           
  5849                           ;mcc_generated_files/i2c_master.c: 479:     return I2C_RCEN;
  5850  0721  3005               	movlw	5
  5851  0722                     i1l643:
  5852  0722  0008               	return
  5853  0723                     __end_of_I2C_DO_RX_ACK:
  5854                           
  5855                           	psect	text30
  5856  0723                     __ptext30:	
  5857 ;; *************** function _I2C_DO_SEND_STOP *****************
  5858 ;; Defined at:
  5859 ;;		line 470 in file "mcc_generated_files/i2c_master.c"
  5860 ;; Parameters:    Size  Location     Type
  5861 ;;		None
  5862 ;; Auto vars:     Size  Location     Type
  5863 ;;		None
  5864 ;; Return value:  Size  Location     Type
  5865 ;;                  1    wreg      enum E3338
  5866 ;; Registers used:
  5867 ;;		wreg, status,2, status,0, pclath, cstack
  5868 ;; Tracked objects:
  5869 ;;		On entry : 0/0
  5870 ;;		On exit  : 0/0
  5871 ;;		Unchanged: 0/0
  5872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5877 ;;Total ram usage:        0 bytes
  5878 ;; Hardware stack levels used: 1
  5879 ;; Hardware stack levels required when called: 1
  5880 ;; This function calls:
  5881 ;;		_I2C_MasterStop
  5882 ;; This function is called by:
  5883 ;;		_I2C_DO_TX
  5884 ;;		_I2C_DO_TX_EMPTY
  5885 ;;		_I2C_DO_ADDRESS_NACK
  5886 ;;		_I2C_MasterFsm
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889                           
  5890                           
  5891                           ;psect for function _I2C_DO_SEND_STOP
  5892  0723                     _I2C_DO_SEND_STOP:
  5893  0723                     i1l2894:	
  5894                           ;incstack = 0
  5895                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  5896                           
  5897                           
  5898                           ;mcc_generated_files/i2c_master.c: 472:     I2C_MasterStop();
  5899  0723  3187  2765  3187   	fcall	_I2C_MasterStop
  5900  0726                     i1l2896:
  5901                           
  5902                           ;mcc_generated_files/i2c_master.c: 473:     return I2C_IDLE;
  5903  0726  3000               	movlw	0
  5904  0727                     i1l640:
  5905  0727  0008               	return
  5906  0728                     __end_of_I2C_DO_SEND_STOP:
  5907                           
  5908                           	psect	text31
  5909  0728                     __ptext31:	
  5910 ;; *************** function _I2C_DO_SEND_RESTART *****************
  5911 ;; Defined at:
  5912 ;;		line 464 in file "mcc_generated_files/i2c_master.c"
  5913 ;; Parameters:    Size  Location     Type
  5914 ;;		None
  5915 ;; Auto vars:     Size  Location     Type
  5916 ;;		None
  5917 ;; Return value:  Size  Location     Type
  5918 ;;                  1    wreg      enum E3338
  5919 ;; Registers used:
  5920 ;;		wreg, status,2, status,0, pclath, cstack
  5921 ;; Tracked objects:
  5922 ;;		On entry : 0/0
  5923 ;;		On exit  : 0/0
  5924 ;;		Unchanged: 0/0
  5925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5930 ;;Total ram usage:        0 bytes
  5931 ;; Hardware stack levels used: 1
  5932 ;; Hardware stack levels required when called: 1
  5933 ;; This function calls:
  5934 ;;		_I2C_MasterEnableRestart
  5935 ;; This function is called by:
  5936 ;;		_I2C_DO_TX_EMPTY
  5937 ;;		_I2C_DO_ADDRESS_NACK
  5938 ;;		_I2C_MasterFsm
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942                           
  5943                           ;psect for function _I2C_DO_SEND_RESTART
  5944  0728                     _I2C_DO_SEND_RESTART:
  5945  0728                     i1l2920:	
  5946                           ;incstack = 0
  5947                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  5948                           
  5949                           
  5950                           ;mcc_generated_files/i2c_master.c: 466:     I2C_MasterEnableRestart();
  5951  0728  3187  2768  3187   	fcall	_I2C_MasterEnableRestart
  5952  072B                     i1l2922:
  5953                           
  5954                           ;mcc_generated_files/i2c_master.c: 467:     return I2C_SEND_ADR_READ;
  5955  072B  3001               	movlw	1
  5956  072C                     i1l637:
  5957  072C  0008               	return
  5958  072D                     __end_of_I2C_DO_SEND_RESTART:
  5959                           
  5960                           	psect	text32
  5961  072D                     __ptext32:	
  5962 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  5963 ;; Defined at:
  5964 ;;		line 457 in file "mcc_generated_files/i2c_master.c"
  5965 ;; Parameters:    Size  Location     Type
  5966 ;;		None
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;		None
  5969 ;; Return value:  Size  Location     Type
  5970 ;;                  1    wreg      enum E3338
  5971 ;; Registers used:
  5972 ;;		wreg, status,2, status,0, pclath, cstack
  5973 ;; Tracked objects:
  5974 ;;		On entry : 0/0
  5975 ;;		On exit  : 0/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5982 ;;Total ram usage:        0 bytes
  5983 ;; Hardware stack levels used: 1
  5984 ;; Hardware stack levels required when called: 1
  5985 ;; This function calls:
  5986 ;;		_I2C_MasterEnableRestart
  5987 ;; This function is called by:
  5988 ;;		_I2C_DO_TX
  5989 ;;		_I2C_MasterFsm
  5990 ;; This function uses a non-reentrant model
  5991 ;;
  5992                           
  5993                           
  5994                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
  5995  072D                     _I2C_DO_SEND_RESTART_WRITE:
  5996  072D                     i1l2888:	
  5997                           ;incstack = 0
  5998                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  5999                           
  6000                           
  6001                           ;mcc_generated_files/i2c_master.c: 459:     I2C_MasterEnableRestart();
  6002  072D  3187  2768  3187   	fcall	_I2C_MasterEnableRestart
  6003  0730                     i1l2890:
  6004                           
  6005                           ;mcc_generated_files/i2c_master.c: 460:     return I2C_SEND_ADR_WRITE;
  6006  0730  3002               	movlw	2
  6007  0731                     i1l634:
  6008  0731  0008               	return
  6009  0732                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  6010                           
  6011                           	psect	text33
  6012  0732                     __ptext33:	
  6013 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  6014 ;; Defined at:
  6015 ;;		line 451 in file "mcc_generated_files/i2c_master.c"
  6016 ;; Parameters:    Size  Location     Type
  6017 ;;		None
  6018 ;; Auto vars:     Size  Location     Type
  6019 ;;		None
  6020 ;; Return value:  Size  Location     Type
  6021 ;;                  1    wreg      enum E3338
  6022 ;; Registers used:
  6023 ;;		wreg, status,2, status,0, pclath, cstack
  6024 ;; Tracked objects:
  6025 ;;		On entry : 0/0
  6026 ;;		On exit  : 0/0
  6027 ;;		Unchanged: 0/0
  6028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6033 ;;Total ram usage:        0 bytes
  6034 ;; Hardware stack levels used: 1
  6035 ;; Hardware stack levels required when called: 1
  6036 ;; This function calls:
  6037 ;;		_I2C_MasterEnableRestart
  6038 ;; This function is called by:
  6039 ;;		_I2C_DO_TX
  6040 ;;		_I2C_MasterFsm
  6041 ;; This function uses a non-reentrant model
  6042 ;;
  6043                           
  6044                           
  6045                           ;psect for function _I2C_DO_SEND_RESTART_READ
  6046  0732                     _I2C_DO_SEND_RESTART_READ:
  6047  0732                     i1l2882:	
  6048                           ;incstack = 0
  6049                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  6050                           
  6051                           
  6052                           ;mcc_generated_files/i2c_master.c: 453:     I2C_MasterEnableRestart();
  6053  0732  3187  2768  3187   	fcall	_I2C_MasterEnableRestart
  6054  0735                     i1l2884:
  6055                           
  6056                           ;mcc_generated_files/i2c_master.c: 454:     return I2C_SEND_ADR_READ;
  6057  0735  3001               	movlw	1
  6058  0736                     i1l631:
  6059  0736  0008               	return
  6060  0737                     __end_of_I2C_DO_SEND_RESTART_READ:
  6061                           
  6062                           	psect	text34
  6063  06DE                     __ptext34:	
  6064 ;; *************** function _I2C_DO_RCEN *****************
  6065 ;; Defined at:
  6066 ;;		line 404 in file "mcc_generated_files/i2c_master.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;		None
  6069 ;; Auto vars:     Size  Location     Type
  6070 ;;		None
  6071 ;; Return value:  Size  Location     Type
  6072 ;;                  1    wreg      enum E3338
  6073 ;; Registers used:
  6074 ;;		wreg, status,2, status,0, pclath, cstack
  6075 ;; Tracked objects:
  6076 ;;		On entry : 0/0
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6084 ;;Total ram usage:        0 bytes
  6085 ;; Hardware stack levels used: 1
  6086 ;; Hardware stack levels required when called: 1
  6087 ;; This function calls:
  6088 ;;		_I2C_MasterStartRx
  6089 ;; This function is called by:
  6090 ;;		_I2C_MasterFsm
  6091 ;; This function uses a non-reentrant model
  6092 ;;
  6093                           
  6094                           
  6095                           ;psect for function _I2C_DO_RCEN
  6096  06DE                     _I2C_DO_RCEN:
  6097  06DE                     i1l3062:	
  6098                           ;incstack = 0
  6099                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
  6100                           
  6101                           
  6102                           ;mcc_generated_files/i2c_master.c: 406:     I2C_Status.addressNackCheck = 0;
  6103  06DE  0021               	movlb	1	; select bank1
  6104  06DF  105C               	bcf	(_I2C_Status^(0+128)+28),0
  6105  06E0                     i1l3064:
  6106                           
  6107                           ;mcc_generated_files/i2c_master.c: 407:     I2C_MasterStartRx();
  6108  06E0  3187  2762  3186   	fcall	_I2C_MasterStartRx
  6109  06E3                     i1l3066:
  6110                           
  6111                           ;mcc_generated_files/i2c_master.c: 408:     return I2C_RX;
  6112  06E3  3004               	movlw	4
  6113  06E4                     i1l607:
  6114  06E4  0008               	return
  6115  06E5                     __end_of_I2C_DO_RCEN:
  6116                           
  6117                           	psect	text35
  6118  02CB                     __ptext35:	
  6119 ;; *************** function _I2C_DO_RX *****************
  6120 ;; Defined at:
  6121 ;;		line 380 in file "mcc_generated_files/i2c_master.c"
  6122 ;; Parameters:    Size  Location     Type
  6123 ;;		None
  6124 ;; Auto vars:     Size  Location     Type
  6125 ;;		None
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  1    wreg      enum E3338
  6128 ;; Registers used:
  6129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6130 ;; Tracked objects:
  6131 ;;		On entry : 0/0
  6132 ;;		On exit  : 0/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6137 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6138 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6139 ;;Total ram usage:        3 bytes
  6140 ;; Hardware stack levels used: 1
  6141 ;; Hardware stack levels required when called: 3
  6142 ;; This function calls:
  6143 ;;		Absolute function
  6144 ;;		_I2C_CallbackReturnReset
  6145 ;;		_I2C_CallbackReturnStop
  6146 ;;		_I2C_DO_RX_NACK_RESTART
  6147 ;;		_I2C_DO_RX_NACK_STOP
  6148 ;;		_I2C_MasterGetRxData
  6149 ;;		_I2C_MasterSendAck
  6150 ;;		_rd1RegCompleteHandler
  6151 ;;		_rd2RegCompleteHandler
  6152 ;;		_rdBlkRegCompleteHandler
  6153 ;;		_wr1RegCompleteHandler
  6154 ;;		_wr2RegCompleteHandler
  6155 ;; This function is called by:
  6156 ;;		_I2C_MasterFsm
  6157 ;; This function uses a non-reentrant model
  6158 ;;
  6159                           
  6160                           
  6161                           ;psect for function _I2C_DO_RX
  6162  02CB                     _I2C_DO_RX:
  6163  02CB                     i1l3030:	
  6164                           ;incstack = 0
  6165                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6166                           
  6167                           
  6168                           ;mcc_generated_files/i2c_master.c: 382:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  6169  02CB  3187  275F  3182   	fcall	_I2C_MasterGetRxData
  6170  02CE  00FA               	movwf	??_I2C_DO_RX
  6171  02CF  0021               	movlb	1	; select bank1
  6172  02D0  0857               	movf	(low ((_I2C_Status| 0+23)))^(0+128),w
  6173  02D1  0086               	movwf	6
  6174  02D2  0187               	clrf	7
  6175  02D3  087A               	movf	??_I2C_DO_RX,w
  6176  02D4  0081               	movwf	1
  6177  02D5                     i1l3032:
  6178  02D5  3001               	movlw	1
  6179  02D6  00FA               	movwf	??_I2C_DO_RX
  6180  02D7  087A               	movf	??_I2C_DO_RX,w
  6181  02D8  07D7               	addwf	(low ((_I2C_Status| 0+23)))^(0+128),f
  6182  02D9                     i1l3034:
  6183                           
  6184                           ;mcc_generated_files/i2c_master.c: 383:     if(--I2C_Status.data_length)
  6185  02D9  3001               	movlw	1
  6186  02DA  02D8               	subwf	(_I2C_Status^(0+128)+24),f
  6187  02DB  3000               	movlw	0
  6188  02DC  3BD9               	subwfb	((_I2C_Status+1)^(0+128)+24),f
  6189  02DD  0858               	movf	(_I2C_Status^(0+128)+24),w
  6190  02DE  0459               	iorwf	((_I2C_Status+1)^(0+128)+24),w
  6191  02DF  1903               	btfsc	3,2
  6192  02E0  2AE2               	goto	u77_21
  6193  02E1  2AE3               	goto	u77_20
  6194  02E2                     u77_21:
  6195  02E2  2AE8               	goto	i1l595
  6196  02E3                     u77_20:
  6197  02E3                     i1l3036:
  6198                           
  6199                           ;mcc_generated_files/i2c_master.c: 384:     {;mcc_generated_files/i2c_master.c: 385:    
      +                               I2C_MasterSendAck();
  6200  02E3  3187  2749  3182   	fcall	_I2C_MasterSendAck
  6201  02E6                     i1l3038:
  6202                           
  6203                           ;mcc_generated_files/i2c_master.c: 386:         return I2C_RCEN;
  6204  02E6  3005               	movlw	5
  6205  02E7  2B10               	goto	i1l596
  6206  02E8                     i1l595:	
  6207                           ;mcc_generated_files/i2c_master.c: 388:     else
  6208                           
  6209                           
  6210                           ;mcc_generated_files/i2c_master.c: 389:     {;mcc_generated_files/i2c_master.c: 390:    
      +                               I2C_Status.bufferFree = 1;
  6211  02E8  15DC               	bsf	(_I2C_Status^(0+128)+28),3
  6212                           
  6213                           ;mcc_generated_files/i2c_master.c: 391:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  6214  02E9  2AF2               	goto	i1l3054
  6215  02EA                     i1l3044:
  6216                           
  6217                           ;mcc_generated_files/i2c_master.c: 395:                 return I2C_DO_RX_NACK_RESTART();
  6218  02EA  3187  2714  3182   	fcall	_I2C_DO_RX_NACK_RESTART
  6219  02ED  2B10               	goto	i1l596
  6220  02EE                     i1l3048:
  6221                           
  6222                           ;mcc_generated_files/i2c_master.c: 399:                 return I2C_DO_RX_NACK_STOP();
  6223  02EE  3187  2719  3182   	fcall	_I2C_DO_RX_NACK_STOP
  6224  02F1  2B10               	goto	i1l596
  6225  02F2                     i1l3054:
  6226  02F2  084C               	movf	(low ((_I2C_Status| 0+12)))^(0+128),w
  6227  02F3  00FA               	movwf	??_I2C_DO_RX
  6228  02F4  087A               	movf	??_I2C_DO_RX,w
  6229  02F5  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  6230  02F6  0841               	movf	(_I2C_Status+1)^(0+128),w
  6231  02F7  008A               	movwf	10
  6232  02F8  0840               	movf	_I2C_Status^(0+128),w
  6233  02F9  000A               	callw
  6234  02FA  3182               	pagesel	$
  6235  02FB  00FB               	movwf	??_I2C_DO_RX+1
  6236  02FC  01FC               	clrf	??_I2C_DO_RX+2
  6237                           
  6238                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6239                           ; Switch size 1, requested type "simple"
  6240                           ; Number of cases is 1, Range of values is 0 to 0
  6241                           ; switch strategies available:
  6242                           ; Name         Instructions Cycles
  6243                           ; simple_byte            4     3 (average)
  6244                           ; direct_byte            8     6 (fixed)
  6245                           ; jumptable            260     6 (fixed)
  6246                           ;	Chosen strategy is simple_byte
  6247  02FD  087C               	movf	??_I2C_DO_RX+2,w
  6248  02FE  3A00               	xorlw	0	; case 0
  6249  02FF  1903               	skipnz
  6250  0300  2B02               	goto	i1l3846
  6251  0301  2AEE               	goto	i1l3048
  6252  0302                     i1l3846:
  6253                           
  6254                           ; Switch size 1, requested type "simple"
  6255                           ; Number of cases is 4, Range of values is 1 to 4
  6256                           ; switch strategies available:
  6257                           ; Name         Instructions Cycles
  6258                           ; simple_byte           13     7 (average)
  6259                           ; direct_byte           17     9 (fixed)
  6260                           ; jumptable            263     9 (fixed)
  6261                           ;	Chosen strategy is simple_byte
  6262  0302  087B               	movf	??_I2C_DO_RX+1,w
  6263  0303  3A01               	xorlw	1	; case 1
  6264  0304  1903               	skipnz
  6265  0305  2AEE               	goto	i1l3048
  6266  0306  3A03               	xorlw	3	; case 2
  6267  0307  1903               	skipnz
  6268  0308  2AEA               	goto	i1l3044
  6269  0309  3A01               	xorlw	1	; case 3
  6270  030A  1903               	skipnz
  6271  030B  2AEA               	goto	i1l3044
  6272  030C  3A07               	xorlw	7	; case 4
  6273  030D  1903               	skipnz
  6274  030E  2AEE               	goto	i1l3048
  6275  030F  2AEE               	goto	i1l3048
  6276  0310                     i1l596:
  6277  0310  0008               	return
  6278  0311                     __end_of_I2C_DO_RX:
  6279                           
  6280                           	psect	text36
  6281  0276                     __ptext36:	
  6282 ;; *************** function _I2C_DO_TX *****************
  6283 ;; Defined at:
  6284 ;;		line 356 in file "mcc_generated_files/i2c_master.c"
  6285 ;; Parameters:    Size  Location     Type
  6286 ;;		None
  6287 ;; Auto vars:     Size  Location     Type
  6288 ;;		None
  6289 ;; Return value:  Size  Location     Type
  6290 ;;                  1    wreg      enum E3338
  6291 ;; Registers used:
  6292 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6293 ;; Tracked objects:
  6294 ;;		On entry : 0/0
  6295 ;;		On exit  : 0/0
  6296 ;;		Unchanged: 0/0
  6297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6300 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6301 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6302 ;;Total ram usage:        3 bytes
  6303 ;; Hardware stack levels used: 1
  6304 ;; Hardware stack levels required when called: 3
  6305 ;; This function calls:
  6306 ;;		Absolute function
  6307 ;;		_I2C_CallbackReturnReset
  6308 ;;		_I2C_CallbackReturnStop
  6309 ;;		_I2C_DO_SEND_RESTART_READ
  6310 ;;		_I2C_DO_SEND_RESTART_WRITE
  6311 ;;		_I2C_DO_SEND_STOP
  6312 ;;		_I2C_MasterIsNack
  6313 ;;		_I2C_MasterSendTxData
  6314 ;;		_rd1RegCompleteHandler
  6315 ;;		_rd2RegCompleteHandler
  6316 ;;		_rdBlkRegCompleteHandler
  6317 ;;		_wr1RegCompleteHandler
  6318 ;;		_wr2RegCompleteHandler
  6319 ;; This function is called by:
  6320 ;;		_I2C_MasterFsm
  6321 ;; This function uses a non-reentrant model
  6322 ;;
  6323                           
  6324                           
  6325                           ;psect for function _I2C_DO_TX
  6326  0276                     _I2C_DO_TX:
  6327  0276                     i1l2996:	
  6328                           ;incstack = 0
  6329                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6330                           
  6331                           
  6332                           ;mcc_generated_files/i2c_master.c: 358:     if(I2C_MasterIsNack())
  6333  0276  3187  2709  3182   	fcall	_I2C_MasterIsNack
  6334  0279  3A00               	xorlw	0
  6335  027A  1903               	skipnz
  6336  027B  2A7D               	goto	u75_21
  6337  027C  2A7E               	goto	u75_20
  6338  027D                     u75_21:
  6339  027D  2AAE               	goto	i1l579
  6340  027E                     u75_20:
  6341  027E  2A8B               	goto	i1l3014
  6342  027F                     i1l3000:
  6343                           
  6344                           ;mcc_generated_files/i2c_master.c: 363:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  6345  027F  3187  2732  3182   	fcall	_I2C_DO_SEND_RESTART_READ
  6346  0282  2ACA               	goto	i1l582
  6347  0283                     i1l3004:
  6348                           
  6349                           ;mcc_generated_files/i2c_master.c: 365:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  6350  0283  3187  272D  3182   	fcall	_I2C_DO_SEND_RESTART_WRITE
  6351  0286  2ACA               	goto	i1l582
  6352  0287                     i1l3008:
  6353                           
  6354                           ;mcc_generated_files/i2c_master.c: 369:                 return I2C_DO_SEND_STOP();
  6355  0287  3187  2723  3182   	fcall	_I2C_DO_SEND_STOP
  6356  028A  2ACA               	goto	i1l582
  6357  028B                     i1l3014:
  6358  028B  0021               	movlb	1	; select bank1
  6359  028C  084F               	movf	(low ((_I2C_Status| 0+15)))^(0+128),w
  6360  028D  00FA               	movwf	??_I2C_DO_TX
  6361  028E  087A               	movf	??_I2C_DO_TX,w
  6362  028F  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  6363  0290  3006               	movlw	6
  6364  0291  3EC0               	addlw	(low (_I2C_Status| 0))& (0+255)
  6365  0292  0086               	movwf	6
  6366  0293  0187               	clrf	7
  6367  0294  3F41               	moviw [1]fsr1
  6368  0295  008A               	movwf	10
  6369  0296  3F40               	moviw [0]fsr1
  6370  0297  000A               	callw
  6371  0298  3182               	pagesel	$
  6372  0299  00FB               	movwf	??_I2C_DO_TX+1
  6373  029A  01FC               	clrf	??_I2C_DO_TX+2
  6374                           
  6375                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6376                           ; Switch size 1, requested type "simple"
  6377                           ; Number of cases is 1, Range of values is 0 to 0
  6378                           ; switch strategies available:
  6379                           ; Name         Instructions Cycles
  6380                           ; simple_byte            4     3 (average)
  6381                           ; direct_byte            8     6 (fixed)
  6382                           ; jumptable            260     6 (fixed)
  6383                           ;	Chosen strategy is simple_byte
  6384  029B  087C               	movf	??_I2C_DO_TX+2,w
  6385  029C  3A00               	xorlw	0	; case 0
  6386  029D  1903               	skipnz
  6387  029E  2AA0               	goto	i1l3848
  6388  029F  2A87               	goto	i1l3008
  6389  02A0                     i1l3848:
  6390                           
  6391                           ; Switch size 1, requested type "simple"
  6392                           ; Number of cases is 4, Range of values is 1 to 4
  6393                           ; switch strategies available:
  6394                           ; Name         Instructions Cycles
  6395                           ; simple_byte           13     7 (average)
  6396                           ; direct_byte           17     9 (fixed)
  6397                           ; jumptable            263     9 (fixed)
  6398                           ;	Chosen strategy is simple_byte
  6399  02A0  087B               	movf	??_I2C_DO_TX+1,w
  6400  02A1  3A01               	xorlw	1	; case 1
  6401  02A2  1903               	skipnz
  6402  02A3  2A87               	goto	i1l3008
  6403  02A4  3A03               	xorlw	3	; case 2
  6404  02A5  1903               	skipnz
  6405  02A6  2A7F               	goto	i1l3000
  6406  02A7  3A01               	xorlw	1	; case 3
  6407  02A8  1903               	skipnz
  6408  02A9  2A83               	goto	i1l3004
  6409  02AA  3A07               	xorlw	7	; case 4
  6410  02AB  1903               	skipnz
  6411  02AC  2A87               	goto	i1l3008
  6412  02AD  2A87               	goto	i1l3008
  6413  02AE                     i1l579:	
  6414                           ;mcc_generated_files/i2c_master.c: 372:     else
  6415                           
  6416                           
  6417                           ;mcc_generated_files/i2c_master.c: 373:     {;mcc_generated_files/i2c_master.c: 374:    
      +                               I2C_Status.addressNackCheck = 0;
  6418  02AE  0021               	movlb	1	; select bank1
  6419  02AF  105C               	bcf	(_I2C_Status^(0+128)+28),0
  6420  02B0                     i1l3016:
  6421                           
  6422                           ;mcc_generated_files/i2c_master.c: 375:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  6423  02B0  3017               	movlw	23
  6424  02B1  3EC0               	addlw	(low (_I2C_Status| 0))& (0+255)
  6425  02B2  0086               	movwf	6
  6426  02B3  0187               	clrf	7
  6427  02B4  3F40               	moviw [0]fsr1
  6428  02B5  0084               	movwf	4
  6429  02B6  0185               	clrf	5
  6430  02B7  0A81               	incf	1,f
  6431  02B8  0800               	movf	0,w
  6432  02B9  3187  273C  3182   	fcall	_I2C_MasterSendTxData
  6433  02BC                     i1l3018:
  6434                           
  6435                           ;mcc_generated_files/i2c_master.c: 376:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  6436  02BC  3001               	movlw	1
  6437  02BD  0021               	movlb	1	; select bank1
  6438  02BE  02D8               	subwf	(_I2C_Status^(0+128)+24),f
  6439  02BF  3000               	movlw	0
  6440  02C0  3BD9               	subwfb	((_I2C_Status+1)^(0+128)+24),f
  6441  02C1  0858               	movf	(_I2C_Status^(0+128)+24),w
  6442  02C2  0459               	iorwf	((_I2C_Status+1)^(0+128)+24),w
  6443  02C3  1D03               	btfss	3,2
  6444  02C4  2AC6               	goto	u76_21
  6445  02C5  2AC7               	goto	u76_20
  6446  02C6                     u76_21:
  6447  02C6  2AC9               	goto	i1l3022
  6448  02C7                     u76_20:
  6449  02C7                     i1l3020:
  6450  02C7  3006               	movlw	6
  6451  02C8  2ACA               	goto	i1l582
  6452  02C9                     i1l3022:
  6453  02C9  3003               	movlw	3
  6454  02CA                     i1l582:
  6455  02CA  0008               	return
  6456  02CB                     __end_of_I2C_DO_TX:
  6457                           
  6458                           	psect	text37
  6459  06CF                     __ptext37:	
  6460 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  6461 ;; Defined at:
  6462 ;;		line 349 in file "mcc_generated_files/i2c_master.c"
  6463 ;; Parameters:    Size  Location     Type
  6464 ;;		None
  6465 ;; Auto vars:     Size  Location     Type
  6466 ;;		None
  6467 ;; Return value:  Size  Location     Type
  6468 ;;                  1    wreg      enum E3338
  6469 ;; Registers used:
  6470 ;;		wreg, status,2, status,0, pclath, cstack
  6471 ;; Tracked objects:
  6472 ;;		On entry : 0/0
  6473 ;;		On exit  : 0/0
  6474 ;;		Unchanged: 0/0
  6475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6480 ;;Total ram usage:        0 bytes
  6481 ;; Hardware stack levels used: 1
  6482 ;; Hardware stack levels required when called: 1
  6483 ;; This function calls:
  6484 ;;		_I2C_MasterSendTxData
  6485 ;; This function is called by:
  6486 ;;		_I2C_MasterFsm
  6487 ;; This function uses a non-reentrant model
  6488 ;;
  6489                           
  6490                           
  6491                           ;psect for function _I2C_DO_SEND_ADR_WRITE
  6492  06CF                     _I2C_DO_SEND_ADR_WRITE:
  6493  06CF                     i1l2988:	
  6494                           ;incstack = 0
  6495                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  6496                           
  6497                           
  6498                           ;mcc_generated_files/i2c_master.c: 351:     I2C_Status.addressNackCheck = 1;
  6499  06CF  0021               	movlb	1	; select bank1
  6500  06D0  145C               	bsf	(_I2C_Status^(0+128)+28),0
  6501  06D1                     i1l2990:
  6502                           
  6503                           ;mcc_generated_files/i2c_master.c: 352:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
  6504  06D1  3556               	lslf	(_I2C_Status^(0+128)+22),w
  6505  06D2  3187  273C  3186   	fcall	_I2C_MasterSendTxData
  6506  06D5                     i1l2992:
  6507                           
  6508                           ;mcc_generated_files/i2c_master.c: 353:     return I2C_TX;
  6509  06D5  3003               	movlw	3
  6510  06D6                     i1l576:
  6511  06D6  0008               	return
  6512  06D7                     __end_of_I2C_DO_SEND_ADR_WRITE:
  6513                           
  6514                           	psect	text38
  6515  06BE                     __ptext38:	
  6516 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  6517 ;; Defined at:
  6518 ;;		line 342 in file "mcc_generated_files/i2c_master.c"
  6519 ;; Parameters:    Size  Location     Type
  6520 ;;		None
  6521 ;; Auto vars:     Size  Location     Type
  6522 ;;		None
  6523 ;; Return value:  Size  Location     Type
  6524 ;;                  1    wreg      enum E3338
  6525 ;; Registers used:
  6526 ;;		wreg, status,2, status,0, pclath, cstack
  6527 ;; Tracked objects:
  6528 ;;		On entry : 0/0
  6529 ;;		On exit  : 0/0
  6530 ;;		Unchanged: 0/0
  6531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6536 ;;Total ram usage:        0 bytes
  6537 ;; Hardware stack levels used: 1
  6538 ;; Hardware stack levels required when called: 1
  6539 ;; This function calls:
  6540 ;;		_I2C_MasterSendTxData
  6541 ;; This function is called by:
  6542 ;;		_I2C_MasterFsm
  6543 ;; This function uses a non-reentrant model
  6544 ;;
  6545                           
  6546                           
  6547                           ;psect for function _I2C_DO_SEND_ADR_READ
  6548  06BE                     _I2C_DO_SEND_ADR_READ:
  6549  06BE                     i1l2980:	
  6550                           ;incstack = 0
  6551                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  6552                           
  6553                           
  6554                           ;mcc_generated_files/i2c_master.c: 344:     I2C_Status.addressNackCheck = 1;
  6555  06BE  0021               	movlb	1	; select bank1
  6556  06BF  145C               	bsf	(_I2C_Status^(0+128)+28),0
  6557  06C0                     i1l2982:
  6558                           
  6559                           ;mcc_generated_files/i2c_master.c: 345:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
  6560  06C0  1403               	setc
  6561  06C1  0D56               	rlf	(_I2C_Status^(0+128)+22),w
  6562  06C2  3187  273C  3186   	fcall	_I2C_MasterSendTxData
  6563  06C5                     i1l2984:
  6564                           
  6565                           ;mcc_generated_files/i2c_master.c: 346:     return I2C_RCEN;
  6566  06C5  3005               	movlw	5
  6567  06C6                     i1l573:
  6568  06C6  0008               	return
  6569  06C7                     __end_of_I2C_DO_SEND_ADR_READ:
  6570                           
  6571                           	psect	text39
  6572  0737                     __ptext39:	
  6573 ;; *************** function _I2C_DO_IDLE *****************
  6574 ;; Defined at:
  6575 ;;		line 335 in file "mcc_generated_files/i2c_master.c"
  6576 ;; Parameters:    Size  Location     Type
  6577 ;;		None
  6578 ;; Auto vars:     Size  Location     Type
  6579 ;;		None
  6580 ;; Return value:  Size  Location     Type
  6581 ;;                  1    wreg      enum E3338
  6582 ;; Registers used:
  6583 ;;		wreg, status,2
  6584 ;; Tracked objects:
  6585 ;;		On entry : 0/0
  6586 ;;		On exit  : 0/0
  6587 ;;		Unchanged: 0/0
  6588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6593 ;;Total ram usage:        0 bytes
  6594 ;; Hardware stack levels used: 1
  6595 ;; This function calls:
  6596 ;;		Nothing
  6597 ;; This function is called by:
  6598 ;;		_I2C_MasterFsm
  6599 ;; This function uses a non-reentrant model
  6600 ;;
  6601                           
  6602                           
  6603                           ;psect for function _I2C_DO_IDLE
  6604  0737                     _I2C_DO_IDLE:
  6605  0737                     i1l2972:	
  6606                           ;incstack = 0
  6607                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
  6608                           
  6609                           
  6610                           ;mcc_generated_files/i2c_master.c: 337:     I2C_Status.busy = 0;
  6611  0737  0021               	movlb	1	; select bank1
  6612  0738  10DC               	bcf	(_I2C_Status^(0+128)+28),1
  6613  0739                     i1l2974:
  6614                           
  6615                           ;mcc_generated_files/i2c_master.c: 338:     I2C_Status.error = I2C_NOERR;
  6616  0739  01DB               	clrf	(_I2C_Status^(0+128)+27)
  6617  073A                     i1l2976:
  6618                           
  6619                           ;mcc_generated_files/i2c_master.c: 339:     return I2C_RESET;
  6620  073A  300E               	movlw	14
  6621  073B                     i1l570:
  6622  073B  0008               	return
  6623  073C                     __end_of_I2C_DO_IDLE:
  6624                           
  6625                           	psect	text40
  6626  03D1                     __ptext40:	
  6627 ;; *************** function _I2C_DO_TX_EMPTY *****************
  6628 ;; Defined at:
  6629 ;;		line 411 in file "mcc_generated_files/i2c_master.c"
  6630 ;; Parameters:    Size  Location     Type
  6631 ;;		None
  6632 ;; Auto vars:     Size  Location     Type
  6633 ;;		None
  6634 ;; Return value:  Size  Location     Type
  6635 ;;                  1    wreg      enum E3338
  6636 ;; Registers used:
  6637 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6638 ;; Tracked objects:
  6639 ;;		On entry : 0/0
  6640 ;;		On exit  : 0/0
  6641 ;;		Unchanged: 0/0
  6642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6645 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6646 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6647 ;;Total ram usage:        3 bytes
  6648 ;; Hardware stack levels used: 1
  6649 ;; Hardware stack levels required when called: 3
  6650 ;; This function calls:
  6651 ;;		Absolute function
  6652 ;;		_I2C_CallbackReturnReset
  6653 ;;		_I2C_CallbackReturnStop
  6654 ;;		_I2C_DO_SEND_RESTART
  6655 ;;		_I2C_DO_SEND_STOP
  6656 ;;		_I2C_MasterSetIrq
  6657 ;;		_rd1RegCompleteHandler
  6658 ;;		_rd2RegCompleteHandler
  6659 ;;		_rdBlkRegCompleteHandler
  6660 ;;		_wr1RegCompleteHandler
  6661 ;;		_wr2RegCompleteHandler
  6662 ;; This function is called by:
  6663 ;;		_I2C_MasterFsm
  6664 ;; This function uses a non-reentrant model
  6665 ;;
  6666                           
  6667                           
  6668                           ;psect for function _I2C_DO_TX_EMPTY
  6669  03D1                     _I2C_DO_TX_EMPTY:
  6670  03D1                     i1l3070:	
  6671                           ;incstack = 0
  6672                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6673                           
  6674                           
  6675                           ;mcc_generated_files/i2c_master.c: 413:     I2C_Status.bufferFree = 1;
  6676  03D1  0021               	movlb	1	; select bank1
  6677  03D2  15DC               	bsf	(_I2C_Status^(0+128)+28),3
  6678                           
  6679                           ;mcc_generated_files/i2c_master.c: 414:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  6680  03D3  2BE1               	goto	i1l3088
  6681  03D4                     i1l3072:
  6682                           
  6683                           ;mcc_generated_files/i2c_master.c: 418:             return I2C_DO_SEND_RESTART();
  6684  03D4  3187  2728  3183   	fcall	_I2C_DO_SEND_RESTART
  6685  03D7  2BFF               	goto	i1l613
  6686  03D8                     i1l3076:
  6687                           
  6688                           ;mcc_generated_files/i2c_master.c: 420:             I2C_MasterSetIrq();
  6689  03D8  3187  275C  3183   	fcall	_I2C_MasterSetIrq
  6690  03DB                     i1l3078:
  6691                           
  6692                           ;mcc_generated_files/i2c_master.c: 421:             return I2C_TX;
  6693  03DB  3003               	movlw	3
  6694  03DC  2BFF               	goto	i1l613
  6695  03DD                     i1l3082:
  6696                           
  6697                           ;mcc_generated_files/i2c_master.c: 424:             return I2C_DO_SEND_STOP();
  6698  03DD  3187  2723  3183   	fcall	_I2C_DO_SEND_STOP
  6699  03E0  2BFF               	goto	i1l613
  6700  03E1                     i1l3088:
  6701  03E1  084C               	movf	(low ((_I2C_Status| 0+12)))^(0+128),w
  6702  03E2  00FA               	movwf	??_I2C_DO_TX_EMPTY
  6703  03E3  087A               	movf	??_I2C_DO_TX_EMPTY,w
  6704  03E4  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  6705  03E5  0841               	movf	(_I2C_Status+1)^(0+128),w
  6706  03E6  008A               	movwf	10
  6707  03E7  0840               	movf	_I2C_Status^(0+128),w
  6708  03E8  000A               	callw
  6709  03E9  3183               	pagesel	$
  6710  03EA  00FB               	movwf	??_I2C_DO_TX_EMPTY+1
  6711  03EB  01FC               	clrf	??_I2C_DO_TX_EMPTY+2
  6712                           
  6713                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6714                           ; Switch size 1, requested type "simple"
  6715                           ; Number of cases is 1, Range of values is 0 to 0
  6716                           ; switch strategies available:
  6717                           ; Name         Instructions Cycles
  6718                           ; simple_byte            4     3 (average)
  6719                           ; direct_byte            8     6 (fixed)
  6720                           ; jumptable            260     6 (fixed)
  6721                           ;	Chosen strategy is simple_byte
  6722  03EC  087C               	movf	??_I2C_DO_TX_EMPTY+2,w
  6723  03ED  3A00               	xorlw	0	; case 0
  6724  03EE  1903               	skipnz
  6725  03EF  2BF1               	goto	i1l3850
  6726  03F0  2BDD               	goto	i1l3082
  6727  03F1                     i1l3850:
  6728                           
  6729                           ; Switch size 1, requested type "simple"
  6730                           ; Number of cases is 4, Range of values is 1 to 4
  6731                           ; switch strategies available:
  6732                           ; Name         Instructions Cycles
  6733                           ; simple_byte           13     7 (average)
  6734                           ; direct_byte           17     9 (fixed)
  6735                           ; jumptable            263     9 (fixed)
  6736                           ;	Chosen strategy is simple_byte
  6737  03F1  087B               	movf	??_I2C_DO_TX_EMPTY+1,w
  6738  03F2  3A01               	xorlw	1	; case 1
  6739  03F3  1903               	skipnz
  6740  03F4  2BDD               	goto	i1l3082
  6741  03F5  3A03               	xorlw	3	; case 2
  6742  03F6  1903               	skipnz
  6743  03F7  2BD4               	goto	i1l3072
  6744  03F8  3A01               	xorlw	1	; case 3
  6745  03F9  1903               	skipnz
  6746  03FA  2BD4               	goto	i1l3072
  6747  03FB  3A07               	xorlw	7	; case 4
  6748  03FC  1903               	skipnz
  6749  03FD  2BD8               	goto	i1l3076
  6750  03FE  2BDD               	goto	i1l3082
  6751  03FF                     i1l613:
  6752  03FF  0008               	return
  6753  0400                     __end_of_I2C_DO_TX_EMPTY:
  6754                           
  6755                           	psect	text41
  6756  075C                     __ptext41:	
  6757 ;; *************** function _I2C_MasterSetIrq *****************
  6758 ;; Defined at:
  6759 ;;		line 647 in file "mcc_generated_files/i2c_master.c"
  6760 ;; Parameters:    Size  Location     Type
  6761 ;;		None
  6762 ;; Auto vars:     Size  Location     Type
  6763 ;;		None
  6764 ;; Return value:  Size  Location     Type
  6765 ;;                  1    wreg      void 
  6766 ;; Registers used:
  6767 ;;		None
  6768 ;; Tracked objects:
  6769 ;;		On entry : 0/0
  6770 ;;		On exit  : 0/0
  6771 ;;		Unchanged: 0/0
  6772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6777 ;;Total ram usage:        0 bytes
  6778 ;; Hardware stack levels used: 1
  6779 ;; This function calls:
  6780 ;;		Nothing
  6781 ;; This function is called by:
  6782 ;;		_I2C_DO_TX_EMPTY
  6783 ;; This function uses a non-reentrant model
  6784 ;;
  6785                           
  6786                           
  6787                           ;psect for function _I2C_MasterSetIrq
  6788  075C                     _I2C_MasterSetIrq:
  6789  075C                     i1l2926:	
  6790                           ;incstack = 0
  6791                           ; Regs used in _I2C_MasterSetIrq: []
  6792                           
  6793                           
  6794                           ;mcc_generated_files/i2c_master.c: 649:     PIR1bits.SSPIF = 1;
  6795  075C  0020               	movlb	0	; select bank0
  6796  075D  1591               	bsf	17,3	;volatile
  6797  075E                     i1l733:
  6798  075E  0008               	return
  6799  075F                     __end_of_I2C_MasterSetIrq:
  6800                           
  6801                           	psect	text42
  6802  0709                     __ptext42:	
  6803 ;; *************** function _I2C_MasterIsNack *****************
  6804 ;; Defined at:
  6805 ;;		line 599 in file "mcc_generated_files/i2c_master.c"
  6806 ;; Parameters:    Size  Location     Type
  6807 ;;		None
  6808 ;; Auto vars:     Size  Location     Type
  6809 ;;		None
  6810 ;; Return value:  Size  Location     Type
  6811 ;;                  1    wreg      _Bool 
  6812 ;; Registers used:
  6813 ;;		wreg, status,2, status,0
  6814 ;; Tracked objects:
  6815 ;;		On entry : 0/0
  6816 ;;		On exit  : 0/0
  6817 ;;		Unchanged: 0/0
  6818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6823 ;;Total ram usage:        0 bytes
  6824 ;; Hardware stack levels used: 1
  6825 ;; This function calls:
  6826 ;;		Nothing
  6827 ;; This function is called by:
  6828 ;;		_I2C_MasterFsm
  6829 ;;		_I2C_DO_TX
  6830 ;; This function uses a non-reentrant model
  6831 ;;
  6832                           
  6833                           
  6834                           ;psect for function _I2C_MasterIsNack
  6835  0709                     _I2C_MasterIsNack:
  6836  0709                     i1l2876:	
  6837                           ;incstack = 0
  6838                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
  6839                           
  6840                           
  6841                           ;mcc_generated_files/i2c_master.c: 601:     return SSPCON2bits.ACKSTAT;
  6842  0709  0024               	movlb	4	; select bank4
  6843  070A  0E16               	swapf	22,w	;volatile
  6844  070B  0C89               	rrf	9,f
  6845  070C  0C89               	rrf	9,f
  6846  070D  3901               	andlw	1
  6847  070E                     i1l706:
  6848  070E  0008               	return
  6849  070F                     __end_of_I2C_MasterIsNack:
  6850                           
  6851                           	psect	text43
  6852  073C                     __ptext43:	
  6853 ;; *************** function _I2C_MasterSendTxData *****************
  6854 ;; Defined at:
  6855 ;;		line 569 in file "mcc_generated_files/i2c_master.c"
  6856 ;; Parameters:    Size  Location     Type
  6857 ;;  data            1    wreg     unsigned char 
  6858 ;; Auto vars:     Size  Location     Type
  6859 ;;  data            1    0[COMMON] unsigned char 
  6860 ;; Return value:  Size  Location     Type
  6861 ;;                  1    wreg      void 
  6862 ;; Registers used:
  6863 ;;		wreg
  6864 ;; Tracked objects:
  6865 ;;		On entry : 0/0
  6866 ;;		On exit  : 0/0
  6867 ;;		Unchanged: 0/0
  6868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6870 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6872 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6873 ;;Total ram usage:        1 bytes
  6874 ;; Hardware stack levels used: 1
  6875 ;; This function calls:
  6876 ;;		Nothing
  6877 ;; This function is called by:
  6878 ;;		_I2C_DO_SEND_ADR_READ
  6879 ;;		_I2C_DO_SEND_ADR_WRITE
  6880 ;;		_I2C_DO_TX
  6881 ;; This function uses a non-reentrant model
  6882 ;;
  6883                           
  6884                           
  6885                           ;psect for function _I2C_MasterSendTxData
  6886  073C                     _I2C_MasterSendTxData:
  6887                           
  6888                           ;incstack = 0
  6889                           ; Regs used in _I2C_MasterSendTxData: [wreg]
  6890                           ;I2C_MasterSendTxData@data stored from wreg
  6891  073C  00F0               	movwf	I2C_MasterSendTxData@data
  6892  073D                     i1l2880:
  6893                           
  6894                           ;mcc_generated_files/i2c_master.c: 569: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 570: {;mcc_generated_files/i2c_
      +                          master.c: 571:     SSPBUF = data;
  6895  073D  0870               	movf	I2C_MasterSendTxData@data,w
  6896  073E  0024               	movlb	4	; select bank4
  6897  073F  0091               	movwf	17	;volatile
  6898  0740                     i1l688:
  6899  0740  0008               	return
  6900  0741                     __end_of_I2C_MasterSendTxData:
  6901                           
  6902                           	psect	text44
  6903  0749                     __ptext44:	
  6904 ;; *************** function _I2C_MasterSendAck *****************
  6905 ;; Defined at:
  6906 ;;		line 604 in file "mcc_generated_files/i2c_master.c"
  6907 ;; Parameters:    Size  Location     Type
  6908 ;;		None
  6909 ;; Auto vars:     Size  Location     Type
  6910 ;;		None
  6911 ;; Return value:  Size  Location     Type
  6912 ;;                  1    wreg      void 
  6913 ;; Registers used:
  6914 ;;		None
  6915 ;; Tracked objects:
  6916 ;;		On entry : 0/0
  6917 ;;		On exit  : 0/0
  6918 ;;		Unchanged: 0/0
  6919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6924 ;;Total ram usage:        0 bytes
  6925 ;; Hardware stack levels used: 1
  6926 ;; This function calls:
  6927 ;;		Nothing
  6928 ;; This function is called by:
  6929 ;;		_I2C_DO_RX
  6930 ;;		_I2C_DO_RX_ACK
  6931 ;; This function uses a non-reentrant model
  6932 ;;
  6933                           
  6934                           
  6935                           ;psect for function _I2C_MasterSendAck
  6936  0749                     _I2C_MasterSendAck:
  6937  0749                     i1l2904:	
  6938                           ;incstack = 0
  6939                           ; Regs used in _I2C_MasterSendAck: []
  6940                           
  6941                           
  6942                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKDT = 0;
  6943  0749  0024               	movlb	4	; select bank4
  6944  074A  1296               	bcf	22,5	;volatile
  6945                           
  6946                           ;mcc_generated_files/i2c_master.c: 607:     SSPCON2bits.ACKEN = 1;
  6947  074B  1616               	bsf	22,4	;volatile
  6948  074C                     i1l709:
  6949  074C  0008               	return
  6950  074D                     __end_of_I2C_MasterSendAck:
  6951                           
  6952                           	psect	text45
  6953  075F                     __ptext45:	
  6954 ;; *************** function _I2C_MasterGetRxData *****************
  6955 ;; Defined at:
  6956 ;;		line 564 in file "mcc_generated_files/i2c_master.c"
  6957 ;; Parameters:    Size  Location     Type
  6958 ;;		None
  6959 ;; Auto vars:     Size  Location     Type
  6960 ;;		None
  6961 ;; Return value:  Size  Location     Type
  6962 ;;                  1    wreg      unsigned char 
  6963 ;; Registers used:
  6964 ;;		wreg
  6965 ;; Tracked objects:
  6966 ;;		On entry : 0/0
  6967 ;;		On exit  : 0/0
  6968 ;;		Unchanged: 0/0
  6969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6974 ;;Total ram usage:        0 bytes
  6975 ;; Hardware stack levels used: 1
  6976 ;; This function calls:
  6977 ;;		Nothing
  6978 ;; This function is called by:
  6979 ;;		_I2C_DO_RX
  6980 ;; This function uses a non-reentrant model
  6981 ;;
  6982                           
  6983                           
  6984                           ;psect for function _I2C_MasterGetRxData
  6985  075F                     _I2C_MasterGetRxData:
  6986  075F                     i1l2900:	
  6987                           ;incstack = 0
  6988                           ; Regs used in _I2C_MasterGetRxData: [wreg]
  6989                           
  6990                           
  6991                           ;mcc_generated_files/i2c_master.c: 566:     return SSPBUF;
  6992  075F  0024               	movlb	4	; select bank4
  6993  0760  0811               	movf	17,w	;volatile
  6994  0761                     i1l685:
  6995  0761  0008               	return
  6996  0762                     __end_of_I2C_MasterGetRxData:
  6997                           
  6998                           	psect	text46
  6999  074D                     __ptext46:	
  7000 ;; *************** function _I2C_MasterSendNack *****************
  7001 ;; Defined at:
  7002 ;;		line 610 in file "mcc_generated_files/i2c_master.c"
  7003 ;; Parameters:    Size  Location     Type
  7004 ;;		None
  7005 ;; Auto vars:     Size  Location     Type
  7006 ;;		None
  7007 ;; Return value:  Size  Location     Type
  7008 ;;                  1    wreg      void 
  7009 ;; Registers used:
  7010 ;;		None
  7011 ;; Tracked objects:
  7012 ;;		On entry : 0/0
  7013 ;;		On exit  : 0/0
  7014 ;;		Unchanged: 0/0
  7015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7020 ;;Total ram usage:        0 bytes
  7021 ;; Hardware stack levels used: 1
  7022 ;; This function calls:
  7023 ;;		Nothing
  7024 ;; This function is called by:
  7025 ;;		_I2C_DO_RX_NACK_STOP
  7026 ;;		_I2C_DO_RX_NACK_RESTART
  7027 ;; This function uses a non-reentrant model
  7028 ;;
  7029                           
  7030                           
  7031                           ;psect for function _I2C_MasterSendNack
  7032  074D                     _I2C_MasterSendNack:
  7033  074D                     i1l2836:	
  7034                           ;incstack = 0
  7035                           ; Regs used in _I2C_MasterSendNack: []
  7036                           
  7037                           
  7038                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKDT = 1;
  7039  074D  0024               	movlb	4	; select bank4
  7040  074E  1696               	bsf	22,5	;volatile
  7041                           
  7042                           ;mcc_generated_files/i2c_master.c: 613:     SSPCON2bits.ACKEN = 1;
  7043  074F  1616               	bsf	22,4	;volatile
  7044  0750                     i1l712:
  7045  0750  0008               	return
  7046  0751                     __end_of_I2C_MasterSendNack:
  7047                           
  7048                           	psect	text47
  7049  0762                     __ptext47:	
  7050 ;; *************** function _I2C_MasterStartRx *****************
  7051 ;; Defined at:
  7052 ;;		line 584 in file "mcc_generated_files/i2c_master.c"
  7053 ;; Parameters:    Size  Location     Type
  7054 ;;		None
  7055 ;; Auto vars:     Size  Location     Type
  7056 ;;		None
  7057 ;; Return value:  Size  Location     Type
  7058 ;;                  1    wreg      void 
  7059 ;; Registers used:
  7060 ;;		None
  7061 ;; Tracked objects:
  7062 ;;		On entry : 0/0
  7063 ;;		On exit  : 0/0
  7064 ;;		Unchanged: 0/0
  7065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7070 ;;Total ram usage:        0 bytes
  7071 ;; Hardware stack levels used: 1
  7072 ;; This function calls:
  7073 ;;		Nothing
  7074 ;; This function is called by:
  7075 ;;		_I2C_DO_RCEN
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           
  7079                           
  7080                           ;psect for function _I2C_MasterStartRx
  7081  0762                     _I2C_MasterStartRx:
  7082  0762                     i1l2918:	
  7083                           ;incstack = 0
  7084                           ; Regs used in _I2C_MasterStartRx: []
  7085                           
  7086                           
  7087                           ;mcc_generated_files/i2c_master.c: 586:     SSPCON2bits.RCEN = 1;
  7088  0762  0024               	movlb	4	; select bank4
  7089  0763  1596               	bsf	22,3	;volatile
  7090  0764                     i1l697:
  7091  0764  0008               	return
  7092  0765                     __end_of_I2C_MasterStartRx:
  7093                           
  7094                           	psect	text48
  7095  076B                     __ptext48:	
  7096 ;; *************** function _I2C_CallbackReturnReset *****************
  7097 ;; Defined at:
  7098 ;;		line 526 in file "mcc_generated_files/i2c_master.c"
  7099 ;; Parameters:    Size  Location     Type
  7100 ;;  funPtr          1    9[COMMON] PTR void 
  7101 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7102 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7103 ;; Auto vars:     Size  Location     Type
  7104 ;;		None
  7105 ;; Return value:  Size  Location     Type
  7106 ;;                  1    wreg      enum E360
  7107 ;; Registers used:
  7108 ;;		wreg
  7109 ;; Tracked objects:
  7110 ;;		On entry : 0/0
  7111 ;;		On exit  : 0/0
  7112 ;;		Unchanged: 0/0
  7113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7114 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7117 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7118 ;;Total ram usage:        1 bytes
  7119 ;; Hardware stack levels used: 1
  7120 ;; This function calls:
  7121 ;;		Nothing
  7122 ;; This function is called by:
  7123 ;;		_I2C_Open
  7124 ;;		_I2C_DO_TX
  7125 ;;		_I2C_DO_RX
  7126 ;;		_I2C_DO_TX_EMPTY
  7127 ;;		_I2C_DO_ADDRESS_NACK
  7128 ;;		_I2C_DO_RX_EMPTY
  7129 ;; This function uses a non-reentrant model
  7130 ;;
  7131                           
  7132                           
  7133                           ;psect for function _I2C_CallbackReturnReset
  7134  076B                     _I2C_CallbackReturnReset:
  7135  076B                     i1l2932:	
  7136                           ;incstack = 0
  7137                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
  7138                           
  7139                           
  7140                           ;mcc_generated_files/i2c_master.c: 526: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 527: {;mcc_generated_files/i2c_master.c: 528:  
      +                             return I2C_RESET_LINK;
  7141  076B  3005               	movlw	5
  7142  076C                     i1l669:
  7143  076C  0008               	return
  7144  076D                     __end_of_I2C_CallbackReturnReset:
  7145                           
  7146                           	psect	text49
  7147  076D                     __ptext49:	
  7148 ;; *************** function _I2C_CallbackReturnStop *****************
  7149 ;; Defined at:
  7150 ;;		line 521 in file "mcc_generated_files/i2c_master.c"
  7151 ;; Parameters:    Size  Location     Type
  7152 ;;  funPtr          1    9[COMMON] PTR void 
  7153 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7154 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7155 ;; Auto vars:     Size  Location     Type
  7156 ;;		None
  7157 ;; Return value:  Size  Location     Type
  7158 ;;                  1    wreg      enum E360
  7159 ;; Registers used:
  7160 ;;		wreg
  7161 ;; Tracked objects:
  7162 ;;		On entry : 0/0
  7163 ;;		On exit  : 0/0
  7164 ;;		Unchanged: 0/0
  7165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7166 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7169 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7170 ;;Total ram usage:        1 bytes
  7171 ;; Hardware stack levels used: 1
  7172 ;; This function calls:
  7173 ;;		Nothing
  7174 ;; This function is called by:
  7175 ;;		_I2C_SetCallback
  7176 ;;		_I2C_Open
  7177 ;;		_I2C_DO_TX
  7178 ;;		_I2C_DO_RX
  7179 ;;		_I2C_DO_TX_EMPTY
  7180 ;;		_I2C_DO_ADDRESS_NACK
  7181 ;;		_I2C_DO_RX_EMPTY
  7182 ;; This function uses a non-reentrant model
  7183 ;;
  7184                           
  7185                           
  7186                           ;psect for function _I2C_CallbackReturnStop
  7187  076D                     _I2C_CallbackReturnStop:
  7188  076D                     i1l2928:	
  7189                           ;incstack = 0
  7190                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
  7191                           
  7192                           
  7193                           ;mcc_generated_files/i2c_master.c: 521: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 522: {;mcc_generated_files/i2c_master.c: 523:   
      +                            return I2C_STOP;
  7194  076D  3001               	movlw	1
  7195  076E                     i1l666:
  7196  076E  0008               	return
  7197  076F                     __end_of_I2C_CallbackReturnStop:
  7198                           
  7199                           	psect	text50
  7200  0581                     __ptext50:	
  7201 ;; *************** function _rdBlkRegCompleteHandler *****************
  7202 ;; Defined at:
  7203 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
  7204 ;; Parameters:    Size  Location     Type
  7205 ;;  ptr             1    9[COMMON] PTR void 
  7206 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7207 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7208 ;; Auto vars:     Size  Location     Type
  7209 ;;		None
  7210 ;; Return value:  Size  Location     Type
  7211 ;;                  1    wreg      enum E360
  7212 ;; Registers used:
  7213 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7214 ;; Tracked objects:
  7215 ;;		On entry : 0/0
  7216 ;;		On exit  : 0/0
  7217 ;;		Unchanged: 0/0
  7218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7219 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7222 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7223 ;;Total ram usage:        1 bytes
  7224 ;; Hardware stack levels used: 1
  7225 ;; Hardware stack levels required when called: 2
  7226 ;; This function calls:
  7227 ;;		_I2C_SetBuffer
  7228 ;;		_I2C_SetDataCompleteCallback
  7229 ;; This function is called by:
  7230 ;;		_I2C_ReadDataBlock
  7231 ;;		_I2C_DO_TX
  7232 ;;		_I2C_DO_RX
  7233 ;;		_I2C_DO_TX_EMPTY
  7234 ;;		_I2C_DO_ADDRESS_NACK
  7235 ;;		_I2C_DO_RX_EMPTY
  7236 ;; This function uses a non-reentrant model
  7237 ;;
  7238                           
  7239                           
  7240                           ;psect for function _rdBlkRegCompleteHandler
  7241  0581                     _rdBlkRegCompleteHandler:
  7242  0581                     i1l2870:	
  7243                           ;incstack = 0
  7244                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  7245                           
  7246                           
  7247                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
  7248  0581  0879               	movf	rdBlkRegCompleteHandler@ptr,w
  7249  0582  0086               	movwf	6
  7250  0583  0187               	clrf	7
  7251  0584  3F40               	moviw [0]fsr1
  7252  0585  00F0               	movwf	I2C_SetBuffer@bufferSize
  7253  0586  3F41               	moviw [1]fsr1
  7254  0587  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7255  0588  0879               	movf	rdBlkRegCompleteHandler@ptr,w
  7256  0589  3E02               	addlw	2
  7257  058A  0086               	movwf	6
  7258  058B  0187               	clrf	7
  7259  058C  0801               	movf	1,w
  7260  058D  3186  2602  3185   	fcall	_I2C_SetBuffer
  7261                           
  7262                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7263  0590  3000               	movlw	0
  7264  0591  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7265  0592  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7266  0593  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7267  0594  3186  2620  3185   	fcall	_I2C_SetDataCompleteCallback
  7268  0597                     i1l2872:
  7269                           
  7270                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
  7271  0597  3002               	movlw	2
  7272  0598                     i1l104:
  7273  0598  0008               	return
  7274  0599                     __end_of_rdBlkRegCompleteHandler:
  7275                           
  7276                           	psect	text51
  7277  05BE                     __ptext51:	
  7278 ;; *************** function _wr1RegCompleteHandler *****************
  7279 ;; Defined at:
  7280 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
  7281 ;; Parameters:    Size  Location     Type
  7282 ;;  ptr             1    9[COMMON] PTR void 
  7283 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7284 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7285 ;; Auto vars:     Size  Location     Type
  7286 ;;		None
  7287 ;; Return value:  Size  Location     Type
  7288 ;;                  1    wreg      enum E360
  7289 ;; Registers used:
  7290 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7291 ;; Tracked objects:
  7292 ;;		On entry : 0/0
  7293 ;;		On exit  : 0/0
  7294 ;;		Unchanged: 0/0
  7295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7296 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7299 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7300 ;;Total ram usage:        1 bytes
  7301 ;; Hardware stack levels used: 1
  7302 ;; Hardware stack levels required when called: 2
  7303 ;; This function calls:
  7304 ;;		_I2C_SetBuffer
  7305 ;;		_I2C_SetDataCompleteCallback
  7306 ;; This function is called by:
  7307 ;;		_I2C_Write1ByteRegister
  7308 ;;		_I2C_DO_TX
  7309 ;;		_I2C_DO_RX
  7310 ;;		_I2C_DO_TX_EMPTY
  7311 ;;		_I2C_DO_ADDRESS_NACK
  7312 ;;		_I2C_DO_RX_EMPTY
  7313 ;; This function uses a non-reentrant model
  7314 ;;
  7315                           
  7316                           
  7317                           ;psect for function _wr1RegCompleteHandler
  7318  05BE                     _wr1RegCompleteHandler:
  7319  05BE                     i1l2854:	
  7320                           ;incstack = 0
  7321                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7322                           
  7323                           
  7324                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
  7325  05BE  3001               	movlw	1
  7326  05BF  00F0               	movwf	I2C_SetBuffer@bufferSize
  7327  05C0  3000               	movlw	0
  7328  05C1  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7329  05C2  0879               	movf	wr1RegCompleteHandler@ptr,w
  7330  05C3  3186  2602  3185   	fcall	_I2C_SetBuffer
  7331  05C6                     i1l2856:
  7332                           
  7333                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7334  05C6  3000               	movlw	0
  7335  05C7  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7336  05C8  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7337  05C9  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7338  05CA  3186  2620  3185   	fcall	_I2C_SetDataCompleteCallback
  7339  05CD                     i1l2858:
  7340                           
  7341                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
  7342  05CD  3004               	movlw	4
  7343  05CE                     i1l98:
  7344  05CE  0008               	return
  7345  05CF                     __end_of_wr1RegCompleteHandler:
  7346                           
  7347                           	psect	text52
  7348  05CF                     __ptext52:	
  7349 ;; *************** function _rd2RegCompleteHandler *****************
  7350 ;; Defined at:
  7351 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
  7352 ;; Parameters:    Size  Location     Type
  7353 ;;  ptr             1    9[COMMON] PTR void 
  7354 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7355 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7356 ;; Auto vars:     Size  Location     Type
  7357 ;;		None
  7358 ;; Return value:  Size  Location     Type
  7359 ;;                  1    wreg      enum E360
  7360 ;; Registers used:
  7361 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7362 ;; Tracked objects:
  7363 ;;		On entry : 0/0
  7364 ;;		On exit  : 0/0
  7365 ;;		Unchanged: 0/0
  7366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7367 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7370 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7371 ;;Total ram usage:        1 bytes
  7372 ;; Hardware stack levels used: 1
  7373 ;; Hardware stack levels required when called: 2
  7374 ;; This function calls:
  7375 ;;		_I2C_SetBuffer
  7376 ;;		_I2C_SetDataCompleteCallback
  7377 ;; This function is called by:
  7378 ;;		_I2C_Read2ByteRegister
  7379 ;;		_I2C_DO_TX
  7380 ;;		_I2C_DO_RX
  7381 ;;		_I2C_DO_TX_EMPTY
  7382 ;;		_I2C_DO_ADDRESS_NACK
  7383 ;;		_I2C_DO_RX_EMPTY
  7384 ;; This function uses a non-reentrant model
  7385 ;;
  7386                           
  7387                           
  7388                           ;psect for function _rd2RegCompleteHandler
  7389  05CF                     _rd2RegCompleteHandler:
  7390  05CF                     i1l2846:	
  7391                           ;incstack = 0
  7392                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7393                           
  7394                           
  7395                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
  7396  05CF  3002               	movlw	2
  7397  05D0  00F0               	movwf	I2C_SetBuffer@bufferSize
  7398  05D1  3000               	movlw	0
  7399  05D2  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7400  05D3  0879               	movf	rd2RegCompleteHandler@ptr,w
  7401  05D4  3186  2602  3185   	fcall	_I2C_SetBuffer
  7402  05D7                     i1l2848:
  7403                           
  7404                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7405  05D7  3000               	movlw	0
  7406  05D8  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7407  05D9  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7408  05DA  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7409  05DB  3186  2620  3185   	fcall	_I2C_SetDataCompleteCallback
  7410  05DE                     i1l2850:
  7411                           
  7412                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
  7413  05DE  3002               	movlw	2
  7414  05DF                     i1l95:
  7415  05DF  0008               	return
  7416  05E0                     __end_of_rd2RegCompleteHandler:
  7417                           
  7418                           	psect	text53
  7419  05E0                     __ptext53:	
  7420 ;; *************** function _rd1RegCompleteHandler *****************
  7421 ;; Defined at:
  7422 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
  7423 ;; Parameters:    Size  Location     Type
  7424 ;;  ptr             1    9[COMMON] PTR void 
  7425 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7426 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7427 ;; Auto vars:     Size  Location     Type
  7428 ;;		None
  7429 ;; Return value:  Size  Location     Type
  7430 ;;                  1    wreg      enum E360
  7431 ;; Registers used:
  7432 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7433 ;; Tracked objects:
  7434 ;;		On entry : 0/0
  7435 ;;		On exit  : 0/0
  7436 ;;		Unchanged: 0/0
  7437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7438 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7441 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7442 ;;Total ram usage:        1 bytes
  7443 ;; Hardware stack levels used: 1
  7444 ;; Hardware stack levels required when called: 2
  7445 ;; This function calls:
  7446 ;;		_I2C_SetBuffer
  7447 ;;		_I2C_SetDataCompleteCallback
  7448 ;; This function is called by:
  7449 ;;		_I2C_Read1ByteRegister
  7450 ;;		_I2C_DO_TX
  7451 ;;		_I2C_DO_RX
  7452 ;;		_I2C_DO_TX_EMPTY
  7453 ;;		_I2C_DO_ADDRESS_NACK
  7454 ;;		_I2C_DO_RX_EMPTY
  7455 ;; This function uses a non-reentrant model
  7456 ;;
  7457                           
  7458                           
  7459                           ;psect for function _rd1RegCompleteHandler
  7460  05E0                     _rd1RegCompleteHandler:
  7461  05E0                     i1l2838:	
  7462                           ;incstack = 0
  7463                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7464                           
  7465                           
  7466                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
  7467  05E0  3001               	movlw	1
  7468  05E1  00F0               	movwf	I2C_SetBuffer@bufferSize
  7469  05E2  3000               	movlw	0
  7470  05E3  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7471  05E4  0879               	movf	rd1RegCompleteHandler@ptr,w
  7472  05E5  3186  2602  3185   	fcall	_I2C_SetBuffer
  7473  05E8                     i1l2840:
  7474                           
  7475                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7476  05E8  3000               	movlw	0
  7477  05E9  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7478  05EA  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7479  05EB  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7480  05EC  3186  2620  3185   	fcall	_I2C_SetDataCompleteCallback
  7481  05EF                     i1l2842:
  7482                           
  7483                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
  7484  05EF  3002               	movlw	2
  7485  05F0                     i1l92:
  7486  05F0  0008               	return
  7487  05F1                     __end_of_rd1RegCompleteHandler:
  7488                           
  7489                           	psect	text54
  7490  05F1                     __ptext54:	
  7491 ;; *************** function _wr2RegCompleteHandler *****************
  7492 ;; Defined at:
  7493 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
  7494 ;; Parameters:    Size  Location     Type
  7495 ;;  ptr             1    9[COMMON] PTR void 
  7496 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7497 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7498 ;; Auto vars:     Size  Location     Type
  7499 ;;		None
  7500 ;; Return value:  Size  Location     Type
  7501 ;;                  1    wreg      enum E360
  7502 ;; Registers used:
  7503 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7504 ;; Tracked objects:
  7505 ;;		On entry : 0/0
  7506 ;;		On exit  : 0/0
  7507 ;;		Unchanged: 0/0
  7508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7509 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7512 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7513 ;;Total ram usage:        1 bytes
  7514 ;; Hardware stack levels used: 1
  7515 ;; Hardware stack levels required when called: 2
  7516 ;; This function calls:
  7517 ;;		_I2C_SetBuffer
  7518 ;;		_I2C_SetDataCompleteCallback
  7519 ;; This function is called by:
  7520 ;;		_I2C_Write2ByteRegister
  7521 ;;		_I2C_DO_TX
  7522 ;;		_I2C_DO_RX
  7523 ;;		_I2C_DO_TX_EMPTY
  7524 ;;		_I2C_DO_ADDRESS_NACK
  7525 ;;		_I2C_DO_RX_EMPTY
  7526 ;; This function uses a non-reentrant model
  7527 ;;
  7528                           
  7529                           
  7530                           ;psect for function _wr2RegCompleteHandler
  7531  05F1                     _wr2RegCompleteHandler:
  7532  05F1                     i1l2862:	
  7533                           ;incstack = 0
  7534                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7535                           
  7536                           
  7537                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
  7538  05F1  3002               	movlw	2
  7539  05F2  00F0               	movwf	I2C_SetBuffer@bufferSize
  7540  05F3  3000               	movlw	0
  7541  05F4  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7542  05F5  0879               	movf	wr2RegCompleteHandler@ptr,w
  7543  05F6  3186  2602  3185   	fcall	_I2C_SetBuffer
  7544  05F9                     i1l2864:
  7545                           
  7546                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7547  05F9  3000               	movlw	0
  7548  05FA  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7549  05FB  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7550  05FC  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7551  05FD  3186  2620  3185   	fcall	_I2C_SetDataCompleteCallback
  7552  0600                     i1l2866:
  7553                           
  7554                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
  7555  0600  3004               	movlw	4
  7556  0601                     i1l101:
  7557  0601  0008               	return
  7558  0602                     __end_of_wr2RegCompleteHandler:
  7559                           
  7560                           	psect	text55
  7561  0620                     __ptext55:	
  7562 ;; *************** function _I2C_SetDataCompleteCallback *****************
  7563 ;; Defined at:
  7564 ;;		line 274 in file "mcc_generated_files/i2c_master.c"
  7565 ;; Parameters:    Size  Location     Type
  7566 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
  7567 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  7568 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  7569 ;;  ptr             1    7[COMMON] PTR void 
  7570 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7571 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7572 ;; Auto vars:     Size  Location     Type
  7573 ;;		None
  7574 ;; Return value:  Size  Location     Type
  7575 ;;                  1    wreg      void 
  7576 ;; Registers used:
  7577 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7578 ;; Tracked objects:
  7579 ;;		On entry : 0/0
  7580 ;;		On exit  : 0/0
  7581 ;;		Unchanged: 0/0
  7582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7583 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7585 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7586 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7587 ;;Total ram usage:        4 bytes
  7588 ;; Hardware stack levels used: 1
  7589 ;; Hardware stack levels required when called: 1
  7590 ;; This function calls:
  7591 ;;		_I2C_SetCallback
  7592 ;; This function is called by:
  7593 ;;		_rd1RegCompleteHandler
  7594 ;;		_rd2RegCompleteHandler
  7595 ;;		_wr1RegCompleteHandler
  7596 ;;		_wr2RegCompleteHandler
  7597 ;;		_rdBlkRegCompleteHandler
  7598 ;;		_I2C_Read1ByteRegister
  7599 ;;		_I2C_Read2ByteRegister
  7600 ;;		_I2C_Write1ByteRegister
  7601 ;;		_I2C_Write2ByteRegister
  7602 ;;		_I2C_ReadDataBlock
  7603 ;; This function uses a non-reentrant model
  7604 ;;
  7605                           
  7606                           
  7607                           ;psect for function _I2C_SetDataCompleteCallback
  7608  0620                     _I2C_SetDataCompleteCallback:
  7609  0620                     i1l2822:	
  7610                           ;incstack = 0
  7611                           ; Regs used in _I2C_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  7612                           
  7613                           
  7614                           ;mcc_generated_files/i2c_master.c: 274: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 275: {;mcc_generated_files/i2c_master.c
      +                          : 276:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  7615  0620  0876               	movf	I2C_SetDataCompleteCallback@cb+1,w
  7616  0621  00F1               	movwf	I2C_SetCallback@cb+1
  7617  0622  0875               	movf	I2C_SetDataCompleteCallback@cb,w
  7618  0623  00F0               	movwf	I2C_SetCallback@cb
  7619  0624  0877               	movf	I2C_SetDataCompleteCallback@ptr,w
  7620  0625  00F8               	movwf	??_I2C_SetDataCompleteCallback
  7621  0626  0878               	movf	??_I2C_SetDataCompleteCallback,w
  7622  0627  00F2               	movwf	I2C_SetCallback@ptr
  7623  0628  3000               	movlw	0
  7624  0629  3185  2503  3186   	fcall	_I2C_SetCallback
  7625  062C                     i1l540:
  7626  062C  0008               	return
  7627  062D                     __end_of_I2C_SetDataCompleteCallback:
  7628                           
  7629                           	psect	text56
  7630  0503                     __ptext56:	
  7631 ;; *************** function _I2C_SetCallback *****************
  7632 ;; Defined at:
  7633 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
  7634 ;; Parameters:    Size  Location     Type
  7635 ;;  idx             1    wreg     enum E3356
  7636 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
  7637 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  7638 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  7639 ;;  ptr             1    2[COMMON] PTR void 
  7640 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7641 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7642 ;; Auto vars:     Size  Location     Type
  7643 ;;  idx             1    4[COMMON] enum E3356
  7644 ;; Return value:  Size  Location     Type
  7645 ;;                  1    wreg      void 
  7646 ;; Registers used:
  7647 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7648 ;; Tracked objects:
  7649 ;;		On entry : 0/0
  7650 ;;		On exit  : 0/0
  7651 ;;		Unchanged: 0/0
  7652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7653 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7654 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7655 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7656 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7657 ;;Total ram usage:        5 bytes
  7658 ;; Hardware stack levels used: 1
  7659 ;; This function calls:
  7660 ;;		Nothing
  7661 ;; This function is called by:
  7662 ;;		_I2C_SetDataCompleteCallback
  7663 ;;		_I2C_SetWriteCollisionCallback
  7664 ;;		_I2C_SetAddressNackCallback
  7665 ;;		_I2C_SetDataNackCallback
  7666 ;;		_I2C_SetTimeoutCallback
  7667 ;; This function uses a non-reentrant model
  7668 ;;
  7669                           
  7670                           
  7671                           ;psect for function _I2C_SetCallback
  7672  0503                     _I2C_SetCallback:
  7673                           
  7674                           ;incstack = 0
  7675                           ; Regs used in _I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
  7676                           ;I2C_SetCallback@idx stored from wreg
  7677  0503  00F4               	movwf	I2C_SetCallback@idx
  7678  0504                     i1l2816:
  7679                           
  7680                           ;mcc_generated_files/i2c_master.c: 304: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 305: {;mcc_generate
      +                          d_files/i2c_master.c: 306:     if(cb)
  7681  0504  0870               	movf	I2C_SetCallback@cb,w
  7682  0505  0471               	iorwf	I2C_SetCallback@cb+1,w
  7683  0506  1903               	btfsc	3,2
  7684  0507  2D09               	goto	u68_21
  7685  0508  2D0A               	goto	u68_20
  7686  0509                     u68_21:
  7687  0509  2D1B               	goto	i1l2820
  7688  050A                     u68_20:
  7689  050A                     i1l2818:
  7690                           
  7691                           ;mcc_generated_files/i2c_master.c: 307:     {;mcc_generated_files/i2c_master.c: 308:    
      +                               I2C_Status.callbackTable[idx] = cb;
  7692  050A  3574               	lslf	I2C_SetCallback@idx,w
  7693  050B  3EC0               	addlw	(low (_I2C_Status| 0))& (0+255)
  7694  050C  0086               	movwf	6
  7695  050D  0187               	clrf	7
  7696  050E  0870               	movf	I2C_SetCallback@cb,w
  7697  050F  3FC0               	movwi [0]fsr1
  7698  0510  0871               	movf	I2C_SetCallback@cb+1,w
  7699  0511  3FC1               	movwi [1]fsr1
  7700                           
  7701                           ;mcc_generated_files/i2c_master.c: 309:         I2C_Status.callbackPayload[idx] = ptr;
  7702  0512  0872               	movf	I2C_SetCallback@ptr,w
  7703  0513  00F3               	movwf	??_I2C_SetCallback
  7704  0514  0874               	movf	I2C_SetCallback@idx,w
  7705  0515  3ECC               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  7706  0516  0086               	movwf	6
  7707  0517  0187               	clrf	7
  7708  0518  0873               	movf	??_I2C_SetCallback,w
  7709  0519  0081               	movwf	1
  7710                           
  7711                           ;mcc_generated_files/i2c_master.c: 310:     }
  7712  051A  2D28               	goto	i1l560
  7713  051B                     i1l2820:
  7714                           
  7715                           ;mcc_generated_files/i2c_master.c: 312:     {;mcc_generated_files/i2c_master.c: 313:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  7716  051B  3574               	lslf	I2C_SetCallback@idx,w
  7717  051C  3EC0               	addlw	(low (_I2C_Status| 0))& (0+255)
  7718  051D  0086               	movwf	6
  7719  051E  0187               	clrf	7
  7720  051F  306D               	movlw	low _I2C_CallbackReturnStop
  7721  0520  3FC0               	movwi [0]fsr1
  7722  0521  3007               	movlw	high _I2C_CallbackReturnStop
  7723  0522  3FC1               	movwi [1]fsr1
  7724                           
  7725                           ;mcc_generated_files/i2c_master.c: 314:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  7726  0523  0874               	movf	I2C_SetCallback@idx,w
  7727  0524  3ECC               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  7728  0525  0086               	movwf	6
  7729  0526  0187               	clrf	7
  7730  0527  0181               	clrf	1
  7731  0528                     i1l560:
  7732  0528  0008               	return
  7733  0529                     __end_of_I2C_SetCallback:
  7734                           
  7735                           	psect	text57
  7736  0602                     __ptext57:	
  7737 ;; *************** function _I2C_SetBuffer *****************
  7738 ;; Defined at:
  7739 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
  7740 ;; Parameters:    Size  Location     Type
  7741 ;;  buffer          1    wreg     PTR void 
  7742 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
  7743 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  7744 ;;		 -> NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
  7745 ;;  bufferSize      2    0[COMMON] unsigned int 
  7746 ;; Auto vars:     Size  Location     Type
  7747 ;;  buffer          1    3[COMMON] PTR void 
  7748 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
  7749 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  7750 ;;		 -> NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
  7751 ;; Return value:  Size  Location     Type
  7752 ;;                  1    wreg      void 
  7753 ;; Registers used:
  7754 ;;		wreg
  7755 ;; Tracked objects:
  7756 ;;		On entry : 0/0
  7757 ;;		On exit  : 0/0
  7758 ;;		Unchanged: 0/0
  7759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7760 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7761 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7762 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7763 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7764 ;;Total ram usage:        4 bytes
  7765 ;; Hardware stack levels used: 1
  7766 ;; This function calls:
  7767 ;;		Nothing
  7768 ;; This function is called by:
  7769 ;;		_rd1RegCompleteHandler
  7770 ;;		_rd2RegCompleteHandler
  7771 ;;		_wr1RegCompleteHandler
  7772 ;;		_wr2RegCompleteHandler
  7773 ;;		_rdBlkRegCompleteHandler
  7774 ;;		_I2C_Read1ByteRegister
  7775 ;;		_I2C_Read2ByteRegister
  7776 ;;		_I2C_Write1ByteRegister
  7777 ;;		_I2C_Write2ByteRegister
  7778 ;;		_I2C_WriteNBytes
  7779 ;;		_I2C_ReadNBytes
  7780 ;;		_I2C_ReadDataBlock
  7781 ;; This function uses a non-reentrant model
  7782 ;;
  7783                           
  7784                           
  7785                           ;psect for function _I2C_SetBuffer
  7786  0602                     _I2C_SetBuffer:
  7787                           
  7788                           ;incstack = 0
  7789                           ; Regs used in _I2C_SetBuffer: [wreg]
  7790                           ;I2C_SetBuffer@buffer stored from wreg
  7791  0602  00F3               	movwf	I2C_SetBuffer@buffer
  7792  0603                     i1l2824:
  7793                           
  7794                           ;mcc_generated_files/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 265: {;mcc_generated_files/i2c_master.c: 266:     
      +                          if(I2C_Status.bufferFree)
  7795  0603  0021               	movlb	1	; select bank1
  7796  0604  1DDC               	btfss	(_I2C_Status^(0+128)+28),3
  7797  0605  2E07               	goto	u69_21
  7798  0606  2E08               	goto	u69_20
  7799  0607                     u69_21:
  7800  0607  2E11               	goto	i1l537
  7801  0608                     u69_20:
  7802  0608                     i1l2826:
  7803                           
  7804                           ;mcc_generated_files/i2c_master.c: 267:     {;mcc_generated_files/i2c_master.c: 268:    
      +                               I2C_Status.data_ptr = buffer;
  7805  0608  0873               	movf	I2C_SetBuffer@buffer,w
  7806  0609  00F2               	movwf	??_I2C_SetBuffer
  7807  060A  0872               	movf	??_I2C_SetBuffer,w
  7808  060B  00D7               	movwf	(low ((_I2C_Status| 0+23)))^(0+128)
  7809                           
  7810                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.data_length = bufferSize;
  7811  060C  0871               	movf	I2C_SetBuffer@bufferSize+1,w
  7812  060D  00D9               	movwf	((_I2C_Status+1)^(0+128)+24)
  7813  060E  0870               	movf	I2C_SetBuffer@bufferSize,w
  7814  060F  00D8               	movwf	(_I2C_Status^(0+128)+24)
  7815  0610                     i1l2828:
  7816                           
  7817                           ;mcc_generated_files/i2c_master.c: 270:         I2C_Status.bufferFree = 0;
  7818  0610  11DC               	bcf	(_I2C_Status^(0+128)+28),3
  7819  0611                     i1l537:
  7820  0611  0008               	return
  7821  0612                     __end_of_I2C_SetBuffer:
  7822                           
  7823                           	psect	text58
  7824  0765                     __ptext58:	
  7825 ;; *************** function _I2C_MasterStop *****************
  7826 ;; Defined at:
  7827 ;;		line 594 in file "mcc_generated_files/i2c_master.c"
  7828 ;; Parameters:    Size  Location     Type
  7829 ;;		None
  7830 ;; Auto vars:     Size  Location     Type
  7831 ;;		None
  7832 ;; Return value:  Size  Location     Type
  7833 ;;                  1    wreg      void 
  7834 ;; Registers used:
  7835 ;;		None
  7836 ;; Tracked objects:
  7837 ;;		On entry : 0/0
  7838 ;;		On exit  : 0/0
  7839 ;;		Unchanged: 0/0
  7840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7845 ;;Total ram usage:        0 bytes
  7846 ;; Hardware stack levels used: 1
  7847 ;; This function calls:
  7848 ;;		Nothing
  7849 ;; This function is called by:
  7850 ;;		_I2C_DO_SEND_STOP
  7851 ;; This function uses a non-reentrant model
  7852 ;;
  7853                           
  7854                           
  7855                           ;psect for function _I2C_MasterStop
  7856  0765                     _I2C_MasterStop:
  7857  0765                     i1l2834:	
  7858                           ;incstack = 0
  7859                           ; Regs used in _I2C_MasterStop: []
  7860                           
  7861                           
  7862                           ;mcc_generated_files/i2c_master.c: 596:     SSPCON2bits.PEN = 1;
  7863  0765  0024               	movlb	4	; select bank4
  7864  0766  1516               	bsf	22,2	;volatile
  7865  0767                     i1l703:
  7866  0767  0008               	return
  7867  0768                     __end_of_I2C_MasterStop:
  7868                           
  7869                           	psect	text59
  7870  0768                     __ptext59:	
  7871 ;; *************** function _I2C_MasterEnableRestart *****************
  7872 ;; Defined at:
  7873 ;;		line 574 in file "mcc_generated_files/i2c_master.c"
  7874 ;; Parameters:    Size  Location     Type
  7875 ;;		None
  7876 ;; Auto vars:     Size  Location     Type
  7877 ;;		None
  7878 ;; Return value:  Size  Location     Type
  7879 ;;                  1    wreg      void 
  7880 ;; Registers used:
  7881 ;;		None
  7882 ;; Tracked objects:
  7883 ;;		On entry : 0/0
  7884 ;;		On exit  : 0/0
  7885 ;;		Unchanged: 0/0
  7886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7891 ;;Total ram usage:        0 bytes
  7892 ;; Hardware stack levels used: 1
  7893 ;; This function calls:
  7894 ;;		Nothing
  7895 ;; This function is called by:
  7896 ;;		_I2C_DO_SEND_RESTART_READ
  7897 ;;		_I2C_DO_SEND_RESTART_WRITE
  7898 ;;		_I2C_DO_SEND_RESTART
  7899 ;;		_I2C_DO_RX_EMPTY
  7900 ;; This function uses a non-reentrant model
  7901 ;;
  7902                           
  7903                           
  7904                           ;psect for function _I2C_MasterEnableRestart
  7905  0768                     _I2C_MasterEnableRestart:
  7906  0768                     i1l2832:	
  7907                           ;incstack = 0
  7908                           ; Regs used in _I2C_MasterEnableRestart: []
  7909                           
  7910                           
  7911                           ;mcc_generated_files/i2c_master.c: 576:     SSPCON2bits.RSEN = 1;
  7912  0768  0024               	movlb	4	; select bank4
  7913  0769  1496               	bsf	22,1	;volatile
  7914  076A                     i1l691:
  7915  076A  0008               	return
  7916  076B                     __end_of_I2C_MasterEnableRestart:
  7917                           
  7918                           	psect	text60
  7919  0529                     __ptext60:	
  7920 ;; *************** function _EUSART_Transmit_ISR *****************
  7921 ;; Defined at:
  7922 ;;		line 206 in file "mcc_generated_files/eusart.c"
  7923 ;; Parameters:    Size  Location     Type
  7924 ;;		None
  7925 ;; Auto vars:     Size  Location     Type
  7926 ;;		None
  7927 ;; Return value:  Size  Location     Type
  7928 ;;                  1    wreg      void 
  7929 ;; Registers used:
  7930 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7931 ;; Tracked objects:
  7932 ;;		On entry : 0/0
  7933 ;;		On exit  : 0/0
  7934 ;;		Unchanged: 0/0
  7935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7938 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7939 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7940 ;;Total ram usage:        1 bytes
  7941 ;; Hardware stack levels used: 1
  7942 ;; This function calls:
  7943 ;;		Nothing
  7944 ;; This function is called by:
  7945 ;;		_EUSART_Initialize
  7946 ;;		_INTERRUPT_InterruptManager
  7947 ;; This function uses a non-reentrant model
  7948 ;;
  7949                           
  7950                           
  7951                           ;psect for function _EUSART_Transmit_ISR
  7952  0529                     _EUSART_Transmit_ISR:
  7953  0529                     i1l3292:	
  7954                           ;incstack = 0
  7955                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  7956                           
  7957                           
  7958                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  7959  0529  3008               	movlw	8
  7960  052A  0020               	movlb	0	; select bank0
  7961  052B  0242               	subwf	_eusartTxBufferRemaining,w	;volatile
  7962  052C  1803               	skipnc
  7963  052D  2D2F               	goto	u86_21
  7964  052E  2D30               	goto	u86_20
  7965  052F                     u86_21:
  7966  052F  2D48               	goto	i1l332
  7967  0530                     u86_20:
  7968  0530                     i1l3294:
  7969                           
  7970                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  7971  0530  0843               	movf	_eusartTxTail,w
  7972  0531  3EE5               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  7973  0532  0086               	movwf	6
  7974  0533  0187               	clrf	7
  7975  0534  0801               	movf	1,w
  7976  0535  0023               	movlb	3	; select bank3
  7977  0536  009A               	movwf	26	;volatile
  7978  0537                     i1l3296:
  7979  0537  3001               	movlw	1
  7980  0538  00F0               	movwf	??_EUSART_Transmit_ISR
  7981  0539  0870               	movf	??_EUSART_Transmit_ISR,w
  7982  053A  0020               	movlb	0	; select bank0
  7983  053B  07C3               	addwf	_eusartTxTail,f	;volatile
  7984  053C                     i1l3298:
  7985                           
  7986                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  7987  053C  3008               	movlw	8
  7988  053D  0243               	subwf	_eusartTxTail,w	;volatile
  7989  053E  1C03               	skipc
  7990  053F  2D41               	goto	u87_21
  7991  0540  2D42               	goto	u87_20
  7992  0541                     u87_21:
  7993  0541  2D43               	goto	i1l3302
  7994  0542                     u87_20:
  7995  0542                     i1l3300:
  7996                           
  7997                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
  7998  0542  01C3               	clrf	_eusartTxTail	;volatile
  7999  0543                     i1l3302:
  8000                           
  8001                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
  8002  0543  3001               	movlw	1
  8003  0544  00F0               	movwf	??_EUSART_Transmit_ISR
  8004  0545  0870               	movf	??_EUSART_Transmit_ISR,w
  8005  0546  07C2               	addwf	_eusartTxBufferRemaining,f	;volatile
  8006                           
  8007                           ;mcc_generated_files/eusart.c: 218:     }
  8008  0547  2D4A               	goto	i1l335
  8009  0548                     i1l332:	
  8010                           ;mcc_generated_files/eusart.c: 219:     else
  8011                           
  8012                           
  8013                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TXIE = 0;
  8014  0548  0021               	movlb	1	; select bank1
  8015  0549  1211               	bcf	17,4	;volatile
  8016  054A                     i1l335:
  8017  054A  0008               	return
  8018  054B                     __end_of_EUSART_Transmit_ISR:
  8019                           
  8020                           	psect	text61
  8021  0397                     __ptext61:	
  8022 ;; *************** function _EUSART_Receive_ISR *****************
  8023 ;; Defined at:
  8024 ;;		line 225 in file "mcc_generated_files/eusart.c"
  8025 ;; Parameters:    Size  Location     Type
  8026 ;;		None
  8027 ;; Auto vars:     Size  Location     Type
  8028 ;;		None
  8029 ;; Return value:  Size  Location     Type
  8030 ;;                  1    wreg      void 
  8031 ;; Registers used:
  8032 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8033 ;; Tracked objects:
  8034 ;;		On entry : 0/0
  8035 ;;		On exit  : 0/0
  8036 ;;		Unchanged: 0/0
  8037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8042 ;;Total ram usage:        0 bytes
  8043 ;; Hardware stack levels used: 1
  8044 ;; Hardware stack levels required when called: 2
  8045 ;; This function calls:
  8046 ;;		Absolute function
  8047 ;;		_EUSART_DefaultErrorHandler
  8048 ;;		_EUSART_DefaultFramingErrorHandler
  8049 ;;		_EUSART_DefaultOverrunErrorHandler
  8050 ;;		_EUSART_RxDataHandler
  8051 ;; This function is called by:
  8052 ;;		_EUSART_Initialize
  8053 ;;		_INTERRUPT_InterruptManager
  8054 ;; This function uses a non-reentrant model
  8055 ;;
  8056                           
  8057                           
  8058                           ;psect for function _EUSART_Receive_ISR
  8059  0397                     _EUSART_Receive_ISR:
  8060  0397                     i1l3304:	
  8061                           ;incstack = 0
  8062                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8063                           
  8064                           
  8065                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  8066  0397  0020               	movlb	0	; select bank0
  8067  0398  0841               	movf	_eusartRxHead,w	;volatile
  8068  0399  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  8069  039A  0086               	movwf	6
  8070  039B  0187               	clrf	7
  8071  039C  0181               	clrf	1
  8072  039D                     i1l3306:
  8073                           
  8074                           ;mcc_generated_files/eusart.c: 230:     if(RCSTAbits.FERR){
  8075  039D  0023               	movlb	3	; select bank3
  8076  039E  1D1D               	btfss	29,2	;volatile
  8077  039F  2BA1               	goto	u88_21
  8078  03A0  2BA2               	goto	u88_20
  8079  03A1                     u88_21:
  8080  03A1  2BAD               	goto	i1l3312
  8081  03A2                     u88_20:
  8082  03A2                     i1l3308:
  8083                           
  8084                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  8085  03A2  0020               	movlb	0	; select bank0
  8086  03A3  0841               	movf	_eusartRxHead,w	;volatile
  8087  03A4  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  8088  03A5  0086               	movwf	6
  8089  03A6  0187               	clrf	7
  8090  03A7  1481               	bsf	1,1
  8091  03A8                     i1l3310:
  8092                           
  8093                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
  8094  03A8  0835               	movf	_EUSART_FramingErrorHandler+1,w
  8095  03A9  008A               	movwf	10
  8096  03AA  0834               	movf	_EUSART_FramingErrorHandler,w
  8097  03AB  000A               	callw
  8098  03AC  3183               	pagesel	$
  8099  03AD                     i1l3312:
  8100                           
  8101                           ;mcc_generated_files/eusart.c: 235:     if(RCSTAbits.OERR){
  8102  03AD  0023               	movlb	3	; select bank3
  8103  03AE  1C9D               	btfss	29,1	;volatile
  8104  03AF  2BB1               	goto	u89_21
  8105  03B0  2BB2               	goto	u89_20
  8106  03B1                     u89_21:
  8107  03B1  2BBD               	goto	i1l3318
  8108  03B2                     u89_20:
  8109  03B2                     i1l3314:
  8110                           
  8111                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  8112  03B2  0020               	movlb	0	; select bank0
  8113  03B3  0841               	movf	_eusartRxHead,w	;volatile
  8114  03B4  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  8115  03B5  0086               	movwf	6
  8116  03B6  0187               	clrf	7
  8117  03B7  1501               	bsf	1,2
  8118  03B8                     i1l3316:
  8119                           
  8120                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
  8121  03B8  0833               	movf	_EUSART_OverrunErrorHandler+1,w
  8122  03B9  008A               	movwf	10
  8123  03BA  0832               	movf	_EUSART_OverrunErrorHandler,w
  8124  03BB  000A               	callw
  8125  03BC  3183               	pagesel	$
  8126  03BD                     i1l3318:
  8127                           
  8128                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
  8129  03BD  0020               	movlb	0	; select bank0
  8130  03BE  0841               	movf	_eusartRxHead,w	;volatile
  8131  03BF  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  8132  03C0  0086               	movwf	6
  8133  03C1  0187               	clrf	7
  8134  03C2  0801               	movf	1,w
  8135  03C3  1903               	btfsc	3,2
  8136  03C4  2BC6               	goto	u90_21
  8137  03C5  2BC7               	goto	u90_20
  8138  03C6                     u90_21:
  8139  03C6  2BCD               	goto	i1l3322
  8140  03C7                     u90_20:
  8141  03C7                     i1l3320:
  8142                           
  8143                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
  8144  03C7  0831               	movf	_EUSART_ErrorHandler+1,w
  8145  03C8  008A               	movwf	10
  8146  03C9  0830               	movf	_EUSART_ErrorHandler,w
  8147  03CA  000A               	callw
  8148  03CB  3183               	pagesel	$
  8149                           
  8150                           ;mcc_generated_files/eusart.c: 242:     } else {
  8151  03CC  2BD0               	goto	i1l342
  8152  03CD                     i1l3322:
  8153                           
  8154                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
  8155  03CD  3185  2567  3183   	fcall	_EUSART_RxDataHandler
  8156  03D0                     i1l342:
  8157  03D0  0008               	return
  8158  03D1                     __end_of_EUSART_Receive_ISR:
  8159                           
  8160                           	psect	text62
  8161  0751                     __ptext62:	
  8162 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  8163 ;; Defined at:
  8164 ;;		line 261 in file "mcc_generated_files/eusart.c"
  8165 ;; Parameters:    Size  Location     Type
  8166 ;;		None
  8167 ;; Auto vars:     Size  Location     Type
  8168 ;;		None
  8169 ;; Return value:  Size  Location     Type
  8170 ;;                  1    wreg      void 
  8171 ;; Registers used:
  8172 ;;		None
  8173 ;; Tracked objects:
  8174 ;;		On entry : 0/0
  8175 ;;		On exit  : 0/0
  8176 ;;		Unchanged: 0/0
  8177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8182 ;;Total ram usage:        0 bytes
  8183 ;; Hardware stack levels used: 1
  8184 ;; This function calls:
  8185 ;;		Nothing
  8186 ;; This function is called by:
  8187 ;;		_EUSART_Initialize
  8188 ;;		_EUSART_Receive_ISR
  8189 ;; This function uses a non-reentrant model
  8190 ;;
  8191                           
  8192                           
  8193                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  8194  0751                     _EUSART_DefaultOverrunErrorHandler:
  8195  0751                     i1l3242:	
  8196                           ;incstack = 0
  8197                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  8198                           
  8199                           
  8200                           ;mcc_generated_files/eusart.c: 264:     RCSTAbits.CREN = 0;
  8201  0751  0023               	movlb	3	; select bank3
  8202  0752  121D               	bcf	29,4	;volatile
  8203                           
  8204                           ;mcc_generated_files/eusart.c: 265:     RCSTAbits.CREN = 1;
  8205  0753  161D               	bsf	29,4	;volatile
  8206  0754                     i1l352:
  8207  0754  0008               	return
  8208  0755                     __end_of_EUSART_DefaultOverrunErrorHandler:
  8209                           
  8210                           	psect	text63
  8211  076F                     __ptext63:	
  8212 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  8213 ;; Defined at:
  8214 ;;		line 259 in file "mcc_generated_files/eusart.c"
  8215 ;; Parameters:    Size  Location     Type
  8216 ;;		None
  8217 ;; Auto vars:     Size  Location     Type
  8218 ;;		None
  8219 ;; Return value:  Size  Location     Type
  8220 ;;                  1    wreg      void 
  8221 ;; Registers used:
  8222 ;;		None
  8223 ;; Tracked objects:
  8224 ;;		On entry : 0/0
  8225 ;;		On exit  : 0/0
  8226 ;;		Unchanged: 0/0
  8227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8232 ;;Total ram usage:        0 bytes
  8233 ;; Hardware stack levels used: 1
  8234 ;; This function calls:
  8235 ;;		Nothing
  8236 ;; This function is called by:
  8237 ;;		_EUSART_Initialize
  8238 ;;		_EUSART_Receive_ISR
  8239 ;; This function uses a non-reentrant model
  8240 ;;
  8241                           
  8242                           
  8243                           ;psect for function _EUSART_DefaultFramingErrorHandler
  8244  076F                     _EUSART_DefaultFramingErrorHandler:
  8245  076F                     i1l349:	
  8246                           ;incstack = 0
  8247                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  8248                           
  8249  076F  0008               	return
  8250  0770                     __end_of_EUSART_DefaultFramingErrorHandler:
  8251                           
  8252                           	psect	text64
  8253  0755                     __ptext64:	
  8254 ;; *************** function _EUSART_DefaultErrorHandler *****************
  8255 ;; Defined at:
  8256 ;;		line 269 in file "mcc_generated_files/eusart.c"
  8257 ;; Parameters:    Size  Location     Type
  8258 ;;		None
  8259 ;; Auto vars:     Size  Location     Type
  8260 ;;		None
  8261 ;; Return value:  Size  Location     Type
  8262 ;;                  1    wreg      void 
  8263 ;; Registers used:
  8264 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8265 ;; Tracked objects:
  8266 ;;		On entry : 0/0
  8267 ;;		On exit  : 0/0
  8268 ;;		Unchanged: 0/0
  8269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8274 ;;Total ram usage:        0 bytes
  8275 ;; Hardware stack levels used: 1
  8276 ;; Hardware stack levels required when called: 1
  8277 ;; This function calls:
  8278 ;;		_EUSART_RxDataHandler
  8279 ;; This function is called by:
  8280 ;;		_EUSART_Initialize
  8281 ;;		_EUSART_Receive_ISR
  8282 ;; This function uses a non-reentrant model
  8283 ;;
  8284                           
  8285                           
  8286                           ;psect for function _EUSART_DefaultErrorHandler
  8287  0755                     _EUSART_DefaultErrorHandler:
  8288  0755                     i1l3244:	
  8289                           ;incstack = 0
  8290                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  8291                           
  8292                           
  8293                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
  8294  0755  3185  2567  3187   	fcall	_EUSART_RxDataHandler
  8295  0758                     i1l355:
  8296  0758  0008               	return
  8297  0759                     __end_of_EUSART_DefaultErrorHandler:
  8298                           
  8299                           	psect	text65
  8300  0567                     __ptext65:	
  8301 ;; *************** function _EUSART_RxDataHandler *****************
  8302 ;; Defined at:
  8303 ;;		line 249 in file "mcc_generated_files/eusart.c"
  8304 ;; Parameters:    Size  Location     Type
  8305 ;;		None
  8306 ;; Auto vars:     Size  Location     Type
  8307 ;;		None
  8308 ;; Return value:  Size  Location     Type
  8309 ;;                  1    wreg      void 
  8310 ;; Registers used:
  8311 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8312 ;; Tracked objects:
  8313 ;;		On entry : 0/0
  8314 ;;		On exit  : 0/0
  8315 ;;		Unchanged: 0/0
  8316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8319 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8320 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8321 ;;Total ram usage:        1 bytes
  8322 ;; Hardware stack levels used: 1
  8323 ;; This function calls:
  8324 ;;		Nothing
  8325 ;; This function is called by:
  8326 ;;		_EUSART_Receive_ISR
  8327 ;;		_EUSART_DefaultErrorHandler
  8328 ;; This function uses a non-reentrant model
  8329 ;;
  8330                           
  8331                           
  8332                           ;psect for function _EUSART_RxDataHandler
  8333  0567                     _EUSART_RxDataHandler:
  8334  0567                     i1l2960:	
  8335                           ;incstack = 0
  8336                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  8337                           
  8338                           
  8339                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RCREG;
  8340  0567  0023               	movlb	3	; select bank3
  8341  0568  0819               	movf	25,w	;volatile
  8342  0569  00F0               	movwf	??_EUSART_RxDataHandler
  8343  056A  0020               	movlb	0	; select bank0
  8344  056B  0841               	movf	_eusartRxHead,w
  8345  056C  3EDD               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  8346  056D  0086               	movwf	6
  8347  056E  0187               	clrf	7
  8348  056F  0870               	movf	??_EUSART_RxDataHandler,w
  8349  0570  0081               	movwf	1
  8350  0571                     i1l2962:
  8351  0571  3001               	movlw	1
  8352  0572  00F0               	movwf	??_EUSART_RxDataHandler
  8353  0573  0870               	movf	??_EUSART_RxDataHandler,w
  8354  0574  07C1               	addwf	_eusartRxHead,f	;volatile
  8355  0575                     i1l2964:
  8356                           
  8357                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  8358  0575  3008               	movlw	8
  8359  0576  0241               	subwf	_eusartRxHead,w	;volatile
  8360  0577  1C03               	skipc
  8361  0578  2D7A               	goto	u74_21
  8362  0579  2D7B               	goto	u74_20
  8363  057A                     u74_21:
  8364  057A  2D7C               	goto	i1l2968
  8365  057B                     u74_20:
  8366  057B                     i1l2966:
  8367                           
  8368                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
  8369  057B  01C1               	clrf	_eusartRxHead	;volatile
  8370  057C                     i1l2968:
  8371                           
  8372                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
  8373  057C  3001               	movlw	1
  8374  057D  00F0               	movwf	??_EUSART_RxDataHandler
  8375  057E  0870               	movf	??_EUSART_RxDataHandler,w
  8376  057F  07BF               	addwf	_eusartRxCount,f	;volatile
  8377  0580                     i1l346:
  8378  0580  0008               	return
  8379  0581                     __end_of_EUSART_RxDataHandler:
  8380  007E                     btemp	set	126	;btemp
  8381  007E                     int$flags	set	126
  8382  007E                     wtemp0	set	126
  8383                           
  8384                           	psect	idloc
  8385                           
  8386                           ;Config register IDLOC0 @ 0x8000
  8387                           ;	unspecified, using default values
  8388  8000                     	org	32768
  8389  8000  3FFF               	dw	16383
  8390                           
  8391                           ;Config register IDLOC1 @ 0x8001
  8392                           ;	unspecified, using default values
  8393  8001                     	org	32769
  8394  8001  3FFF               	dw	16383
  8395                           
  8396                           ;Config register IDLOC2 @ 0x8002
  8397                           ;	unspecified, using default values
  8398  8002                     	org	32770
  8399  8002  3FFF               	dw	16383
  8400                           
  8401                           ;Config register IDLOC3 @ 0x8003
  8402                           ;	unspecified, using default values
  8403  8003                     	org	32771
  8404  8003  3FFF               	dw	16383
  8405                           
  8406                           	psect	config
  8407                           
  8408                           ;Config register CONFIG1 @ 0x8007
  8409                           ;	Oscillator Selection
  8410                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  8411                           ;	Watchdog Timer Enable
  8412                           ;	WDTE = OFF, WDT disabled
  8413                           ;	Power-up Timer Enable
  8414                           ;	PWRTE = OFF, PWRT disabled
  8415                           ;	MCLR Pin Function Select
  8416                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  8417                           ;	Flash Program Memory Code Protection
  8418                           ;	CP = OFF, Program memory code protection is disabled
  8419                           ;	Data Memory Code Protection
  8420                           ;	CPD = OFF, Data memory code protection is disabled
  8421                           ;	Brown-out Reset Enable
  8422                           ;	BOREN = ON, Brown-out Reset enabled
  8423                           ;	Clock Out Enable
  8424                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  8425                           ;	Internal/External Switchover
  8426                           ;	IESO = ON, Internal/External Switchover mode is enabled
  8427                           ;	Fail-Safe Clock Monitor Enable
  8428                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  8429  8007                     	org	32775
  8430  8007  3FE4               	dw	16356
  8431                           
  8432                           ;Config register CONFIG2 @ 0x8008
  8433                           ;	Flash Memory Self-Write Protection
  8434                           ;	WRT = OFF, Write protection off
  8435                           ;	Voltage Regulator Capacitor Enable
  8436                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  8437                           ;	PLL Enable
  8438                           ;	PLLEN = ON, 4x PLL enabled
  8439                           ;	Stack Overflow/Underflow Reset Enable
  8440                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  8441                           ;	Brown-out Reset Voltage Selection
  8442                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  8443                           ;	Low-Voltage Programming Enable
  8444                           ;	LVP = ON, Low-voltage programming enabled
  8445  8008                     	org	32776
  8446  8008  3FFF               	dw	16383

Data Sizes:
    Strings     134
    Constant    32
    Data        0
    BSS         114
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     37      74
    BANK1            80      0      77
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_DO_TX$2286$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$2291	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$2286	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2285	const PTR FTN()enum E3338 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    S799$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S1916_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_13(CODE[11]), STR_12(CODE[11]), STR_11(CODE[11]), STR_10(CODE[10]), 
		 -> STR_9(CODE[10]), STR_8(CODE[10]), STR_7(CODE[10]), STR_6(CODE[10]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[10]), STR_2(CODE[10]), 
		 -> STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 11
		 -> STR_13(CODE[11]), STR_12(CODE[11]), STR_11(CODE[11]), STR_10(CODE[10]), 
		 -> STR_9(CODE[10]), STR_8(CODE[10]), STR_7(CODE[10]), STR_6(CODE[10]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[10]), STR_2(CODE[10]), 
		 -> STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_13(CODE[11]), STR_12(CODE[11]), STR_11(CODE[11]), STR_10(CODE[10]), 
		 -> STR_9(CODE[10]), STR_8(CODE[10]), STR_7(CODE[10]), STR_6(CODE[10]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[10]), STR_2(CODE[10]), 
		 -> STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    I2C_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S799$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S799$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S799$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c_fsmStateTable	const PTR FTN()enum E3338[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), Absolute function(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S95$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _SYSTEM_Initialize->_EUSART_Initialize
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _I2C_MasterIsr->_I2C_MasterFsm

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3083
                                             34 BANK0      3     3      0
                        _EUSART_Read
                  _SYSTEM_Initialize
                             _printf
                              _reset
 ---------------------------------------------------------------------------------
 (1) _reset                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     4      2    2546
                                             30 BANK0      4     2      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    1506
                                             22 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    1182
                                             14 BANK0      8     6      2
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     782
                                              6 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      66
                                              5 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         2     2      0      44
                                              3 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                     _ADC_Initialize
                  _EUSART_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     490
                                              5 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          2     2      0      24
                                              3 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0   78254
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                      _I2C_MasterIsr *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterIsr                                        0     0      0   78254
                      _I2C_MasterFsm
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterFsm                                        3     3      0   78254
                                              0 BANK0      3     3      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_TX_EMPTY                                     3     3      0   19547
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterSetIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_TX                                           3     3      0   19569
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_RESTART_WRITE                           0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_RESTART_READ                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_ADR_WRITE                               0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_ADR_READ                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterSendTxData                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_RX_ACK                                       0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_RX                                           3     3      0   19547
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterSendAck                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_RX_NACK_STOP                                 0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_RX_NACK_RESTART                              0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterSendNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_RCEN                                         0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_ADDRESS_NACK                                 3     3      0   19547
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler                             1     0      1    3874
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (12) _I2C_SetDataCompleteCallback                         4     1      3    2478
                                              5 COMMON     4     1      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (13) _I2C_SetCallback                                     5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (12) _I2C_SetBuffer                                       4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_STOP                                    0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_RESTART                                 0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_CallbackReturnStop                              1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (11) _I2C_CallbackReturnReset                             1     0      1     265
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _EUSART_Receive_ISR                                   0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (9) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (9) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
             _EUSART_Write
   _reset

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _I2C_MasterIsr *
     _I2C_MasterFsm
       _I2C_DO_ADDRESS_NACK *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
         _rd1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rd2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
         _rdBlkRegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
         _wr1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
         _wr2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
       _I2C_DO_IDLE *
       _I2C_DO_RCEN *
         _I2C_MasterStartRx
       _I2C_DO_RESET *
       _I2C_DO_RX *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_RX_NACK_RESTART *
           _I2C_MasterSendNack
         _I2C_DO_RX_NACK_STOP *
           _I2C_MasterSendNack
         _I2C_MasterGetRxData *
         _I2C_MasterSendAck *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_RX_ACK *
         _I2C_MasterSendAck
       _I2C_DO_RX_NACK_RESTART *
       _I2C_DO_RX_NACK_STOP *
       _I2C_DO_SEND_ADR_READ *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_ADR_WRITE *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_RESTART *
       _I2C_DO_SEND_RESTART_READ *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_WRITE *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_STOP *
       _I2C_DO_TX *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART_READ *
         _I2C_DO_SEND_RESTART_WRITE *
         _I2C_DO_SEND_STOP *
         _I2C_MasterIsNack *
         _I2C_MasterSendTxData *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_TX_EMPTY *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
         _I2C_DO_SEND_STOP *
         _I2C_MasterSetIrq *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_MasterClearIrq *
       _I2C_MasterIsNack *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     25      4A       5       92.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4D       7       96.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      A4      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      A4      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Feb 06 15:44:41 2025

                ?_EUSART_SetRxInterruptHandler 0048                         ??_I2C_DO_SEND_ADR_READ 0070  
                  __size_of_I2C_MasterSendNack 0004                        ??_I2C_DO_SEND_ADR_WRITE 0071  
                                  _SSPSTATbits 0214                          ??_I2C_DO_SEND_RESTART 0070  
                                          l143 0566                                            l320 0496  
                __size_of_I2C_MasterSendTxData 0005                                            l314 04DA  
                                          l323 04AF                                            l173 05AB  
                                          l510 06BD                                            l182 0744  
                                          l319 048C                                            l176 0633  
                                          l361 06FC                                            l329 06DD  
                                          l370 06F6                                            l179 0638  
                                          l364 0708                                            l358 0702  
                                          l199 06CE                                            l367 06F0  
                                          l295 0355                                            l870 0612  
                                          l880 0618                                            l872 0614  
                                          l890 061D                                            l882 0619  
                                          l874 0615                                            l858 01C2  
                                          l892 061E                                            l884 061A  
                                          l876 0616                                            l894 061F  
                                          l886 061B                                            l878 0617  
                                          l888 061C                                            u700 035C  
                                          u701 035B                                            u710 0361  
                                          u711 0360                                            u800 0638  
                                          u720 0370                                            u801 0637  
                                          u721 036F                                            u650 048C  
                                          u730 038D                                            u651 048B  
                                          u731 038C                                            u660 0491  
                                          u661 0490                                            u670 04AA  
                                          u830 04FE                                            u671 04A9  
                                          u735 0389                                            u831 04FD  
                                          u840 04B6                                            u841 04B5  
                                          u850 04D0                                            u851 04CF  
                                          u780 020D                                            u781 020C  
                                          u790 022E                                            u791 022D  
                       ??_EUSART_RxDataHandler 0070                 ?_EUSART_SetFramingErrorHandler 0048  
                                          wreg 0009                                   ?_EUSART_Read 0070  
                     ??_I2C_CallbackReturnStop 007A                                   _I2C_DO_RESET 070F  
                      ??_rd2RegCompleteHandler 007A                                           l3200 0631  
                                         l3210 0311                                           l3202 0741  
                                         l1507 05BD                                           l3204 06C7  
                                         l3220 032A                                           l3212 0313  
                                         l1540 0275                                           l3140 021D  
                                         l3132 01FC                                           l3206 06CA  
                                         l3230 0340                                           l3222 032C  
                                         l3214 031B                                           l3142 022E  
                                         l3150 0247                                           l3134 020D  
                                         l3208 06CB                                           l3240 0353  
                                         l3232 0348                                           l3224 032E  
                                         l3216 0325                                           l3152 024F  
                                         l3144 0236                                           l3136 0215  
                                         l3234 034A                                           l3226 0330  
                                         l3218 0328                                           l3170 0559  
                                         l3146 0241                                           l3138 0219  
                                         l1546 0502                                           l3236 034B  
                                         l3228 0338                                           l3180 055F  
                                         l3172 055A                                           l3164 054B  
                                         l3156 0252                                           l3260 04E4  
                                         l3270 04B0                                           l3238 034C  
                                         l3190 06B9                                           l3182 0561  
                                         l3174 055C                                           l3166 0551  
                                         l1558 0396                                           l3158 026B  
                                         l3262 04F5                                           l3280 04D0  
                                         l3272 04B0                                           l3192 06BA  
                                         l3184 0562                                           l3176 055D  
                                         l3168 0554                                           l2800 0487  
                                         l3264 04FE                                           l3256 04DD  
                                         l3344 05AC                                           l3600 0070  
                                         l3282 04D1                                           l3274 04B6  
                                         l3194 06BC                                           l3186 0564  
                                         l3178 055E                                           l2810 04AA  
                                         l2802 0491                                           l3258 04E1  
                                         l3346 05B1                                           l3610 008D  
                                         l3602 0073                                           l3284 04D3  
                                         l3276 04C6                                           l3188 06B4  
                                         l3196 062D                                           l3268 0599  
                                         l2812 04AB                                           l2804 0497  
                                         l3700 01AD                                           l3620 00A9  
                                         l3612 008F                                           l3604 0075  
                                         l3286 04D6                                           l3278 04CA  
                                         l3198 0630                                           l2806 04A0  
                                         l2814 04AD                                           l2830 06D9  
                                         l3702 01B9                                           l3630 00CF  
                                         l3622 00B5                                           l3614 009B  
                                         l3606 0081                                           l3288 04D8  
                                         l2808 04A4                                           l3640 00F2  
                                         l3632 00D8                                           l3624 00BE  
                                         l3616 00A4                                           l3608 008A  
                                         l3650 010F                                           l3642 00F5  
                                         l3634 00DB                                           l3626 00C1  
                                         l3618 00A7                                           l3706 01C4  
                                         l2940 0361                                           l3660 012B  
                                         l3652 0111                                           l3644 00F7  
                                         l3636 00DD                                           l3628 00C3  
                                         l2950 06F1                                           l2942 0366  
                                         l3670 0151                                           l3662 0137  
                                         l3654 011D                                           l3646 0103  
                                         l3638 00E9                                           l3590 005D  
                                         l2952 06EB                                           l2944 0370  
                                         l2936 0356                                           l3680 0174  
                                         l3672 015A                                           l3664 0140  
                                         l3656 0126                                           l3648 010C  
                                         l3592 0060                                           l2954 06FD  
                                         l2946 038D                                           l2938 035C  
                                         l3842 01CC                                           l3690 0191  
                                         l3682 0177                                           l3674 015D  
                                         l3666 0143                                           l3658 0129  
                                         l3594 0061                                           l2956 06F7  
                                         l3692 0193                                           l3684 0179  
                                         l3676 015F                                           l3668 0145  
                                         l3596 0062                                           l2958 0703  
                                         l2798 0487                                           l3694 019F  
                                         l3686 0185                                           l3678 016B  
                                         l3598 0068                                           l3696 01A8  
                                         l3688 018E                                           l3698 01AB  
                                         STR_1 047A                                           STR_2 065A  
                                         STR_3 0664                                           STR_4 066E  
                                         STR_5 0678                                           STR_6 0682  
                                         STR_7 068C                                           STR_8 0696  
                                         STR_9 06A0                                           u1200 0068  
                                         u1201 0067                                           u1217 007B  
                                         u1307 0165                                           u1227 0095  
                                         u1317 017F                                           u1237 00AF  
                                         _LATA 010C                                           _LATB 010D  
                                         u1327 0199                                           u1247 00C9  
                                         _LATC 010E                                           _LATD 010F  
                                         u1337 01B3                                           u1257 00E3  
                                         _LATE 0110                                           u1267 00FD  
                                         u1277 0117                                           u1287 0131  
                                         u1297 014B                                           i1l92 05F0  
                                         i1l95 05DF                                           i1l98 05CE  
                                         _PLLR 04D6                                           _WPUB 020D  
                                         _WPUE 0210                        ??_wr2RegCompleteHandler 007A  
                                         _dbuf 00A0                                           _main 005D  
                     ?_I2C_CallbackReturnReset 0079                                           _prec 002C  
                                         _nout 0028                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                         start 0047               __size_of_rdBlkRegCompleteHandler 0018  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 000C  
                                _I2C_DO_RX_ACK 071E                  __end_of_OSCILLATOR_Initialize 0639  
                                        ?_main 0070                                          STR_10 06AA  
                                        STR_11 0639                                          STR_12 0644  
                                        STR_13 064F                                          i1l101 0601  
                                        i1l104 0598                                          i1l401 0045  
                                        i1l332 0548                                          i1l342 03D0  
                                        i1l335 054A                                          i1l352 0754  
                                        i1l346 0580                                          i1l355 0758  
                                        i1l540 062C                                          i1l349 076F  
                                        i1l613 03FF                                          i1l703 0767  
                                        i1l607 06E4                                          i1l631 0736  
                                        i1l560 0528                                          i1l712 0750  
                                        i1l640 0727                                          i1l392 001A  
                                        i1l537 0611                                          i1l706 070E  
                                        i1l570 073B                                          i1l634 0731  
                                        i1l730 075B                                          i1l394 002A  
                                        i1l643 0722                                          i1l563 0748  
                                        i1l395 0045                                          i1l652 0713  
                                        i1l396 003A                                          i1l709 074C  
                                        i1l733 075E                                          i1l573 06C6  
                                        i1l637 072C                                          i1l582 02CA  
                                        i1l646 071D                                          i1l567 042D  
                                        i1l576 06D6                                          i1l649 0718  
                                        i1l666 076E                                          i1l658 0459  
                                        i1l691 076A                                          i1l579 02AE  
                                        i1l595 02E8                                          i1l596 0310  
                                        i1l669 076C                                          i1l685 0761  
                                        i1l688 0740                                          i1l697 0764  
                                        _RCREG 0199                   __size_of_I2C_DO_RX_NACK_STOP 0005  
                                        _RCSTA 019D                                   vfpfcnvrt@fmt 0053  
                                        u81_20 0408                              ??_I2C_DO_TX_EMPTY 007A  
                                        u81_21 0407                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _TRISD 008F                                          _TRISE 0090  
                                        u74_20 057B                                          u90_20 03C7  
                                        u82_20 0410                                          u74_21 057A  
                                        u90_21 03C6                                          u82_21 040F  
                                        u75_20 027E                                          u75_21 027D  
                                        u68_20 050A                                          u76_20 02C7  
                                        u68_21 0509                                          u76_21 02C6  
                                        u69_20 0608                                          u77_20 02E3  
                                        u69_21 0607                                          u77_21 02E2  
                                        u86_20 0530                                          u86_21 052F  
                                        u87_20 0542                                          u87_21 0541  
                                        u88_20 03A2                                          u88_21 03A1  
                                        u89_20 03B2                                          u89_21 03B1  
                                        _TXREG 019A                                          _TXSTA 019E  
                            __end_of_I2C_DO_RX 0311                              __end_of_I2C_DO_TX 02CB  
                                        _flags 002E                                 _WDT_Initialize 0741  
                                        _fputc 0356                         __size_of_I2C_MasterFsm 002E  
                       __size_of_I2C_MasterIsr 0004                                          _reset 0612  
                                        _width 002A                                          _putch 06D7  
                      _I2C_MasterEnableRestart 0768                                          pclath 000A  
                             ?_I2C_SetCallback 0070                                          status 0003  
                                        wtemp0 007E                              ?_I2C_DO_SEND_STOP 0070  
                       __size_of_I2C_SetBuffer 0010                             ??_I2C_DO_SEND_STOP 0070  
                              __initialization 0049                                   __end_of_main 01FA  
            __size_of_I2C_DO_SEND_RESTART_READ 0005                      ?_I2C_DO_SEND_RESTART_READ 0070  
                               ??_EUSART_Write 0048                                 ?_I2C_DO_RX_ACK 0070  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 004A  
                                       ??_main 0067                              ?_I2C_MasterIsNack 0070  
                            ?_I2C_MasterSetIrq 0070                             ??_I2C_MasterIsNack 0070  
                       __end_of_WDT_Initialize 0745                             ??_I2C_MasterSetIrq 0070  
    __end_of_EUSART_DefaultFramingErrorHandler 0770     __size_of_EUSART_DefaultFramingErrorHandler 0001  
          ??_EUSART_DefaultFramingErrorHandler 0070             ?_EUSART_DefaultFramingErrorHandler 0070  
            _EUSART_DefaultFramingErrorHandler 076F                                         _ADCON0 009D  
                                       _ADCON1 009E                     _EUSART_OverrunErrorHandler 0032  
              __end_of_I2C_CallbackReturnReset 076D                                         ?_fputc 004B  
                                       _ADRESH 009C                                         _EEADRH 0192  
                                       _ADRESL 009B                                         _EEADRL 0191  
                                       _EEDATH 0194                                         _EEDATL 0193  
                                       _EECON2 0196                __size_of_I2C_CallbackReturnStop 0002  
                                       ?_reset 0070                                         _APFCON 011D  
                I2C_SetDataCompleteCallback@cb 0075                                         _ANSELA 018C  
                                       ?_putch 0070                                         _ANSELB 018D  
                                       _ANSELD 018F                                         _ANSELE 0190  
                                       _BORCON 0116                                         u110_20 000F  
                                       u110_21 000E                                         i1l3000 027F  
                                       u111_20 0014                                         u111_21 0013  
                                       i1l3020 02C7                                         i1l3004 0283  
                                       i1l3022 02C9                                         i1l3014 028B  
                                       i1l3030 02CB                                         i1l3102 070F  
                                       i1l3110 042E                                         i1l3016 02B0  
                                       i1l3008 0287                                         i1l3032 02D5  
                                       i1l3104 0711                                         i1l3112 0430  
                                       u112_20 001F                                         u112_21 001E  
                                       i1l3018 02BC                                         i1l3034 02D9  
                                       i1l3106 0712                                         i1l3114 0435  
                                       i1l3300 0542                                         i1l3044 02EA  
                                       i1l3036 02E3                                         i1l3124 043D  
                                       i1l3310 03A8                                         i1l3302 0543  
                                       i1l3070 03D1                                         i1l3054 02F2  
                                       i1l3038 02E6                                         i1l3062 06DE  
                                       i1l3118 0439                                         i1l3320 03C7  
                                       i1l3312 03AD                                         i1l3304 0397  
                                       i1l3072 03D4                                         i1l3048 02EE  
                                       i1l3064 06E0                                         u113_20 0024  
                                       u113_21 0023                                         i1l3242 0751  
                                       i1l3322 03CD                                         i1l3314 03B2  
                                       i1l3306 039D                                         i1l3082 03DD  
                                       i1l3066 06E3                                         i1l3250 0408  
                                       i1l3244 0755                                         i1l3316 03B8  
                                       i1l3308 03A2                                         i1l3076 03D8  
                                       i1l3252 0410                                         i1l3318 03BD  
                                       i1l3078 03DB                                         i1l3254 0416  
                                       i1l3246 0400                                         i1l3342 0745  
                                       i1l3510 001F                                         i1l3502 0006  
                                       i1l3088 03E1                                         i1l3096 071E  
                                       i1l3248 0403                                         u114_20 002F  
                                       i1l3512 0024                                         i1l3504 000A  
                                       u114_21 002E                                         i1l3098 0721  
                                       i1l3514 002F                                         i1l3506 000F  
                                       i1l3292 0529                                         i1l2820 051B  
                                       i1l2900 075F                                         i1l3516 0034  
                                       i1l3508 0014                                         i1l3294 0530  
                                       i1l2822 0620                                         i1l3518 003F  
                                       i1l3296 0537                                         i1l2832 0768  
                                       i1l2824 0603                                         i1l2816 0504  
                                       i1l2840 05E8                                         i1l2904 0749  
                                       i1l2920 0728                                         i1l2912 0719  
                                       u115_20 0034                                         u115_21 0033  
                                       i1l3298 053C                                         i1l2834 0765  
                                       i1l2826 0608                                         i1l2818 050A  
                                       i1l2842 05EF                                         i1l2850 05DE  
                                       i1l2922 072B                                         i1l2914 071C  
                                       i1l2906 0714                                         i1l2828 0610  
                                       i1l2932 076B                                         i1l2836 074D  
                                       i1l2908 0717                                         i1l2862 05F1  
                                       i1l2838 05E0                                         i1l2846 05CF  
                                       i1l2854 05BE                                         i1l2870 0581  
                                       i1l2918 0762                                         i1l2926 075C  
                                       i1l2960 0567                                         i1l2864 05F9  
                                       i1l2848 05D7                                         i1l2856 05C6  
                                       i1l2872 0597                                         i1l2928 076D  
                                       i1l2880 073D                                         u116_20 003F  
                                       u116_21 003E                                         i1l2962 0571  
                                       i1l2866 0600                                         i1l2858 05CD  
                                       i1l3850 03F1                                         i1l2882 0732  
                                       i1l2890 0730                                         i1l2970 0759  
                                       i1l2964 0575                                         i1l2876 0709  
                                       i1l2972 0737                                         i1l2980 06BE  
                                       i1l2884 0735                                         i1l3844 0451  
                                       i1l2966 057B                                         i1l2974 0739  
                                       i1l2982 06C0                                         i1l2990 06D1  
                                       i1l3846 0302                                         i1l2894 0723  
                                       i1l2968 057C                                         i1l2976 073A  
                                       i1l2984 06C5                                         i1l2992 06D5  
                                       i1l3848 02A0                                         i1l2888 072D  
                                       i1l2896 0726                                         u117_20 0044  
                                       u109_20 000A                                         u117_21 0043  
                                       u109_21 0009                                         i1l2988 06CF  
                                       i1l2996 0276                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                                         _SSPADD 0212  
                                       _SSPBUF 0211                            _I2C_MasterGetRxData 075F  
                                main@reception 0069                                   vfprintf@cfmt 0061  
                                _I2C_MasterFsm 0400                                  _I2C_MasterIsr 0745  
                          _EUSART_Transmit_ISR 0529                              I2C_SetCallback@cb 0070  
                      __size_of_I2C_MasterStop 0003                        __size_of_I2C_Initialize 000A  
                                       _printf 05AC                                  _I2C_SetBuffer 0602  
                                       fputc@c 004B                            _I2C_DO_ADDRESS_NACK 042E  
                         ?_I2C_MasterGetRxData 0070                                ?_WDT_Initialize 0070  
                    ??_I2C_MasterEnableRestart 0070                               __end_of_vfprintf 0503  
                         ?_EUSART_Transmit_ISR 0070                           __size_of_EUSART_Read 002B  
                            _SYSTEM_Initialize 0599                        __end_of__initialization 0059  
                           ?_SYSTEM_Initialize 0070                           ?_I2C_DO_ADDRESS_NACK 0070  
         __end_of_EUSART_SetTxInterruptHandler 06F1          __size_of_EUSART_SetTxInterruptHandler 0006  
                 _EUSART_SetTxInterruptHandler 06EB                        _rdBlkRegCompleteHandler 0581  
                               __pcstackCOMMON 0070                                 ?_I2C_MasterFsm 0070  
                               ?_I2C_MasterIsr 0070                                ??_I2C_DO_RX_ACK 0070  
                       _I2C_CallbackReturnStop 076D                            ??_SYSTEM_Initialize 004B  
                                __end_of_fputc 0397                                  __end_of_reset 0620  
                                __end_of_putch 06DE                                 ?_I2C_SetBuffer 0070  
               __size_of_I2C_DO_SEND_ADR_WRITE 0008             __size_of_I2C_DO_SEND_RESTART_WRITE 0005  
                __end_of_I2C_DO_SEND_ADR_WRITE 06D7                     ?_I2C_DO_SEND_RESTART_WRITE 0070  
                        ??_I2C_MasterGetRxData 0070                                 _OPTION_REGbits 0095  
                         _eusartRxStatusBuffer 0020                     __end_of_I2C_MasterClearIrq 075C  
              ??_EUSART_SetOverrunErrorHandler 004A                                        ??_fputc 004E  
                    __end_of_SYSTEM_Initialize 05AC                          ??_EUSART_Transmit_ISR 0070  
                                      ??_reset 0048                                        ??_putch 004A  
                            _I2C_MasterSendAck 0749                                     __pbssBANK0 0020  
                                   __pbssBANK1 00A0                           __end_of_EUSART_Write 04B0  
                                ??_I2C_DO_IDLE 0070                 __size_of_rd2RegCompleteHandler 0011  
                                ??_I2C_DO_RCEN 0070                  __end_of_rd2RegCompleteHandler 05E0  
                 __end_of_I2C_MasterSendTxData 0741                             ?_I2C_MasterSendAck 0070  
                            _I2C_MasterStartRx 0762                 __size_of_wr2RegCompleteHandler 0011  
                        ??_I2C_DO_ADDRESS_NACK 007A                  __end_of_wr2RegCompleteHandler 0602  
                  __size_of_EUSART_Receive_ISR 003A                            _I2C_DO_RX_NACK_STOP 0719  
                        _rd1RegCompleteHandler 05E0                             ?_I2C_MasterStartRx 0070  
                   __end_of_I2C_MasterSendNack 0751                          _wr1RegCompleteHandler 05BE  
                                   __pmaintext 005D                            ??_I2C_MasterSendAck 0070  
                     rd1RegCompleteHandler@ptr 0079                  ?_EUSART_SetTxInterruptHandler 0048  
             _EUSART_TxDefaultInterruptHandler 0038                    __end_of_I2C_DO_SEND_RESTART 072D  
                              _I2C_DO_TX_EMPTY 03D1                            I2C_SetBuffer@buffer 0073  
                                   __pintentry 0004                            ??_I2C_MasterStartRx 0070  
                __size_of_I2C_DO_SEND_ADR_READ 0009                                        _BAUDCON 019F  
             __size_of_I2C_CallbackReturnReset 0002                   ??_EUSART_DefaultErrorHandler 0071  
                                      ?_printf 0063                 I2C_SetDataCompleteCallback@ptr 0077  
                      __size_of_ADC_Initialize 0008                       ??_I2C_DO_RX_NACK_RESTART 0070  
            __end_of_I2C_DO_SEND_RESTART_WRITE 0732                           ?_I2C_DO_RX_NACK_STOP 0070  
                                _eusartRxCount 003F                             __size_of_vfpfcnvrt 007C  
                __size_of_EUSART_RxDataHandler 001A                      __end_of_I2C_MasterSendAck 074D  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 004A  
                                      _SSPCON1 0215                                        _SSPCON2 0216  
                                      _SSPSTAT 0214                      __end_of_I2C_MasterStartRx 0765  
                 ?_I2C_SetDataCompleteCallback 0075                                      _I2C_DO_RX 02CB  
                                    _I2C_DO_TX 0276               __end_of_I2C_DO_SEND_RESTART_READ 0737  
                    ??_rdBlkRegCompleteHandler 007A                                ??_I2C_MasterFsm 0045  
                              ??_I2C_MasterIsr 007D                           _ADC_InterruptHandler 003A  
          __size_of_EUSART_DefaultErrorHandler 0004                            __end_of_I2C_DO_IDLE 073C  
                          __end_of_I2C_DO_RCEN 06E5                                ??_I2C_SetBuffer 0072  
                                    ?_vfprintf 005B                        I2C_SetBuffer@bufferSize 0070  
                               _I2C_MasterStop 0765                                 _I2C_Initialize 06B4  
                    __size_of_I2C_DO_SEND_STOP 0005                                        __ptext1 0612  
                                      __ptext2 05AC                                        __ptext3 04DB  
                                      __ptext4 01FA                                        __ptext5 0356  
                                      __ptext6 06D7                                        __ptext7 0485  
                                      __ptext8 0599                                        __ptext9 0741  
                              __size_of_printf 0012                          ??_I2C_DO_RX_NACK_STOP 0070  
                        _OSCILLATOR_Initialize 062D                             I2C_SetCallback@idx 0074  
                     ??_PIN_MANAGER_Initialize 0048                  I2C_CallbackReturnReset@funPtr 0079  
                           I2C_SetCallback@ptr 0072                       wr1RegCompleteHandler@ptr 0079  
                   __size_of_SYSTEM_Initialize 0013                                        clrloop0 06E6  
                         end_of_initialization 0059                                     ?_I2C_DO_RX 0070  
                                   ?_I2C_DO_TX 0070          __end_of_EUSART_SetOverrunErrorHandler 06FD  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 06F7  
                    __size_of_I2C_MasterIsNack 0006                                        fputc@fp 004D  
                       ?_rd1RegCompleteHandler 0079                        __end_of_I2C_DO_TX_EMPTY 0400  
                    __size_of_I2C_MasterSetIrq 0003                              _EUSART_Initialize 0311  
                       ?_wr1RegCompleteHandler 0079                             ?_EUSART_Initialize 0070  
                     __size_of_I2C_SetCallback 0026                              __end_of_vfpfcnvrt 0276  
                                    _RCSTAbits 019D                         __end_of_I2C_MasterStop 0768  
                       __end_of_I2C_Initialize 06BE                                     ??_vfprintf 005E  
                          ??_EUSART_Initialize 004A                               ??_WDT_Initialize 0048  
               ??_EUSART_SetTxInterruptHandler 004A                __end_of_rdBlkRegCompleteHandler 0599  
                         _I2C_MasterSendTxData 073C                __size_of_I2C_DO_RX_NACK_RESTART 0005  
                        __size_of_EUSART_Write 002B                     __size_of_I2C_MasterSendAck 0004  
              __size_of_EUSART_SetErrorHandler 0006                     __size_of_I2C_MasterStartRx 0003  
                    __end_of_EUSART_Initialize 0356                                    _I2C_DO_IDLE 0737  
                                  _I2C_DO_RCEN 06DE                     rdBlkRegCompleteHandler@ptr 0079  
                                    _TXSTAbits 019E                        ?_I2C_CallbackReturnStop 0079  
                     _I2C_DO_SEND_RESTART_READ 0732                   I2C_CallbackReturnStop@funPtr 0079  
                              ?_I2C_MasterStop 0070                                ?_I2C_Initialize 0070  
                      _I2C_CallbackReturnReset 076B             __end_of_EUSART_DefaultErrorHandler 0759  
                   _EUSART_DefaultErrorHandler 0755                                    vfpfcnvrt@ap 0054  
                                  vfpfcnvrt@fp 005A           __size_of_I2C_SetDataCompleteCallback 000D  
                                 _EUSART_Write 0485                                 _ADC_Initialize 06C7  
                        ?_I2C_MasterSendTxData 0070                         ?_OSCILLATOR_Initialize 0070  
                  ??_I2C_DO_SEND_RESTART_WRITE 0070                                 __end_of_printf 05BE  
                          start_initialization 0049                __size_of_PIN_MANAGER_Initialize 001C  
                                ??_EUSART_Read 0048                                  ?_I2C_DO_RESET 0070  
 EUSART_SetRxInterruptHandler@interruptHandler 0048   EUSART_SetTxInterruptHandler@interruptHandler 0048  
                                  putch@txData 004A                                    ??_I2C_DO_RX 007A  
                                  ??_I2C_DO_TX 007A                 __end_of_I2C_CallbackReturnStop 076F  
                       _I2C_DO_RX_NACK_RESTART 0714                               ?_I2C_DO_TX_EMPTY 0070  
                           _I2C_MasterClearIrq 0759                 ?_EUSART_SetOverrunErrorHandler 0048  
                                  vfprintf@fmt 005B                     _EUSART_FramingErrorHandler 0034  
                       _EUSART_SetErrorHandler 0703                            ?_I2C_MasterClearIrq 0070  
                       __end_of_ADC_Initialize 06CF                    __end_of_I2C_MasterGetRxData 0762  
                        __end_of_I2C_DO_RX_ACK 0723                               _I2C_DO_SEND_STOP 0723  
                            ??_I2C_SetCallback 0073                                       ??_printf 0065  
                           _I2C_MasterSendNack 074D                       ?_I2C_MasterEnableRestart 0070  
                            _i2c_fsmStateTable 045A                    __end_of_EUSART_Transmit_ISR 054B  
                        _I2C_DO_SEND_ADR_WRITE 06CF                                      ___latbits 0003  
                                __pcstackBANK0 0045                                 ??_I2C_DO_RESET 0070  
                          ?_I2C_MasterSendNack 0070                   __end_of_I2C_DO_SEND_ADR_READ 06C7  
                         ??_I2C_MasterClearIrq 0070                    __end_of_I2C_DO_ADDRESS_NACK 045A  
                   __end_of_EUSART_Receive_ISR 03D1                               _I2C_MasterIsNack 0709  
                   __size_of_EUSART_Initialize 0045                      _I2C_DO_SEND_RESTART_WRITE 072D  
             _EUSART_RxDefaultInterruptHandler 0036                            __end_of_EUSART_Read 04DB  
                             _I2C_MasterSetIrq 075C                          _rd2RegCompleteHandler 05CF  
                 __end_of_EUSART_RxDataHandler 0581                         _PIN_MANAGER_Initialize 054B  
                        _wr2RegCompleteHandler 05F1                      ??_I2C_CallbackReturnReset 007A  
                         EUSART_Read@readValue 0049                           ??_I2C_MasterSendNack 0070  
                     rd2RegCompleteHandler@ptr 0079                                ?_ADC_Initialize 0070  
                                 _eusartRxHead 0041                                   _eusartTxHead 0044  
                                 _eusartRxTail 0040                         ??_I2C_MasterSendTxData 0070  
                                 _eusartTxTail 0043                      __end_of_i2c_fsmStateTable 047A  
                 ??_INTERRUPT_InterruptManager 007D                              __size_of_vfprintf 0028  
                      _eusartTxBufferRemaining 0042                   __size_of_I2C_DO_SEND_RESTART 0005  
                               __size_of_fputc 0041                        ??_rd1RegCompleteHandler 007A  
                               __size_of_reset 000E                                 __size_of_putch 0007  
                               _eusartRxBuffer 00DD                        ??_wr1RegCompleteHandler 007A  
                               _eusartTxBuffer 00E5                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 0048                                       _LATBbits 010D  
                                    clear_ram0 06E5                                       _PIE1bits 0091  
                                     _PIE2bits 0092                              _eusartRxLastError 003E  
          __size_of_INTERRUPT_InterruptManager 0043                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 004A                                       _PIR2bits 0012  
                        __end_of_I2C_MasterFsm 042E                          __end_of_I2C_MasterIsr 0749  
                  __end_of_I2C_DO_RX_NACK_STOP 071E      __end_of_EUSART_DefaultOverrunErrorHandler 0755  
   __size_of_EUSART_DefaultOverrunErrorHandler 0004            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 0751  
              __end_of_I2C_MasterEnableRestart 076B                                      _vfpfcnvrt 01FA  
                        __end_of_I2C_SetBuffer 0612                                     _ADCON0bits 009D  
                       ?_I2C_DO_SEND_ADR_WRITE 0070                       I2C_MasterSendTxData@data 0070  
                     wr2RegCompleteHandler@ptr 0079                                    _EUSART_Read 04B0  
                   ??_I2C_DO_SEND_RESTART_READ 0070                       ?_rdBlkRegCompleteHandler 0079  
                                   _I2C_Status 00C0                                   ?_I2C_DO_IDLE 0070  
                                 ?_I2C_DO_RCEN 0070                         ?_rd2RegCompleteHandler 0079  
                                   _EECON1bits 0195                         ?_wr2RegCompleteHandler 0079  
                             ??_I2C_MasterStop 0070                               ??_I2C_Initialize 0048  
                                   vfprintf@ap 005D                                     vfprintf@fp 0060  
                         __end_of_I2C_DO_RESET 0714                        ??_OSCILLATOR_Initialize 0048  
                          _EUSART_ErrorHandler 0030                           _I2C_DO_SEND_ADR_READ 06BE  
                  ?_EUSART_DefaultErrorHandler 0070                                     ?_vfpfcnvrt 0053  
                         _EUSART_RxDataHandler 0567                                       __ptext10 054B  
                                     __ptext11 062D                                       __ptext20 04B0  
                                     __ptext12 06B4                                       __ptext13 0311  
                                     __ptext30 0723                                       __ptext22 0745  
                                     __ptext14 06EB                                       __ptext31 0728  
                                     __ptext23 0400                                       __ptext15 06F1  
                                     __ptext40 03D1                                       __ptext32 072D  
                                     __ptext24 0759                                       __ptext16 06F7  
                                     __ptext41 075C                                       __ptext33 0732  
                                     __ptext25 042E                                       __ptext17 06FD  
                                     __ptext50 0581                                       __ptext42 0709  
                                     __ptext34 06DE                                       __ptext26 070F  
                                     __ptext18 0703                                       __ptext51 05BE  
                                     __ptext43 073C                                       __ptext35 02CB  
                                     __ptext27 0714                                       __ptext19 06C7  
                                     __ptext60 0529                                       __ptext52 05CF  
                                     __ptext44 0749                                       __ptext36 0276  
                                     __ptext28 0719                                       __ptext61 0397  
                                     __ptext53 05E0                                       __ptext45 075F  
                                     __ptext37 06CF                                       __ptext29 071E  
                                     __ptext62 0751                                       __ptext54 05F1  
                                     __ptext46 074D                                       __ptext38 06BE  
                                     __ptext63 076F                                       __ptext55 0620  
                                     __ptext47 0762                                       __ptext39 0737  
                                     __ptext64 0755                                       __ptext56 0503  
                                     __ptext48 076B                                       __ptext65 0567  
                                     __ptext57 0602                                       __ptext49 076D  
                                     __ptext58 0765                                       __ptext59 0768  
          __end_of_I2C_SetDataCompleteCallback 062D                    _I2C_SetDataCompleteCallback 0620  
                      ?_I2C_DO_RX_NACK_RESTART 0070                       __end_of_I2C_DO_SEND_STOP 0728  
                                __size_of_main 019D                        ?_EUSART_SetErrorHandler 0048  
                              _I2C_SetCallback 0503                  ??_I2C_SetDataCompleteCallback 0078  
EUSART_SetOverrunErrorHandler@interruptHandler 0048                                       int$flags 007E  
                        ?_I2C_DO_SEND_ADR_READ 0070                                       _vfprintf 04DB  
           __end_of_INTERRUPT_InterruptManager 0047                     _INTERRUPT_InterruptManager 0004  
                                    printf@fmt 0063          __end_of_EUSART_SetFramingErrorHandler 0703  
       __size_of_EUSART_SetFramingErrorHandler 0006                  _EUSART_SetFramingErrorHandler 06FD  
                     __end_of_I2C_MasterIsNack 070F                       __end_of_I2C_MasterSetIrq 075F  
                                   _INTCONbits 000B                          ?_EUSART_RxDataHandler 0070  
                               __pstringtext10 068C                                 __pstringtext11 0696  
                               __pstringtext12 06A0                                 __pstringtext13 06AA  
                               __pstringtext14 0000                 __end_of_I2C_DO_RX_NACK_RESTART 0719  
                      __size_of_WDT_Initialize 0004                                       intlevel1 0000  
             __size_of_I2C_MasterEnableRestart 0003                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 0709                            _I2C_DO_SEND_RESTART 0728  
                             ??_ADC_Initialize 0048           __end_of_EUSART_SetRxInterruptHandler 06F7  
        __size_of_EUSART_SetRxInterruptHandler 0006                   _EUSART_SetRxInterruptHandler 06F1  
                                     printf@ap 0066                             _EUSART_Receive_ISR 0397  
EUSART_SetFramingErrorHandler@interruptHandler 0048                       __size_of_I2C_DO_TX_EMPTY 002F  
                                  ??_vfpfcnvrt 0055                                  __pstringtext1 045A  
                                __pstringtext2 0639                                  __pstringtext3 0644  
                                __pstringtext4 064F                                  __pstringtext5 065A  
                                __pstringtext6 0664                                  __pstringtext7 066E  
                                __pstringtext8 0678                                  __pstringtext9 0682  
                         ?_I2C_DO_SEND_RESTART 0070                            ?_EUSART_Receive_ISR 0070  
                 __size_of_I2C_MasterGetRxData 0003                                    _SSPCON1bits 0215  
                                  _SSPCON2bits 0216                    __size_of_I2C_MasterClearIrq 0003  
                           EUSART_Write@txData 0049                   __size_of_EUSART_Transmit_ISR 0022  
                      __end_of_I2C_SetCallback 0529                 __end_of_PIN_MANAGER_Initialize 0567  
               __size_of_rd1RegCompleteHandler 0011                  __end_of_rd1RegCompleteHandler 05F1  
                       __size_of_I2C_DO_RX_ACK 0005                 __size_of_wr1RegCompleteHandler 0011  
                         ??_EUSART_Receive_ISR 0071                          __size_of_I2C_DO_RESET 0005  
                __end_of_wr1RegCompleteHandler 05CF                          _MSSP_InterruptHandler 003C  
                 __size_of_I2C_DO_ADDRESS_NACK 002C                           __size_of_I2C_DO_IDLE 0005  
                         __size_of_I2C_DO_RCEN 0007                             __size_of_I2C_DO_RX 0046  
                           __size_of_I2C_DO_TX 0055  
