

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Oct 14 09:50:52 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1939
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	psect	text34,local,class=CODE,merge=1,delta=2
    57                           	psect	text35,local,class=CODE,merge=1,delta=2
    58                           	psect	intentry,global,class=CODE,delta=2
    59                           	psect	text37,local,class=CODE,merge=1,delta=2
    60                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    61                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text40,local,class=CODE,merge=1,delta=2
    63                           	psect	text41,local,class=CODE,merge=1,delta=2
    64                           	psect	text42,local,class=CODE,merge=1,delta=2
    65                           	psect	text43,local,class=CODE,merge=1,delta=2
    66                           	psect	text44,local,class=CODE,merge=1,delta=2
    67                           	psect	text45,local,class=CODE,merge=1,delta=2
    68                           	psect	text46,local,class=CODE,merge=1,delta=2
    69                           	psect	text47,local,class=CODE,merge=1,delta=2
    70                           	psect	text48,local,class=CODE,merge=1,delta=2
    71                           	psect	text49,local,class=CODE,merge=1,delta=2
    72                           	psect	text50,local,class=CODE,merge=1,delta=2
    73                           	psect	text51,local,class=CODE,merge=1,delta=2
    74                           	psect	text52,local,class=CODE,merge=1,delta=2
    75                           	psect	text53,local,class=CODE,merge=1,delta=2
    76                           	psect	text54,local,class=CODE,merge=1,delta=2
    77                           	psect	text55,local,class=CODE,merge=1,delta=2
    78                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    79                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    80                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    81                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    82                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    83                           	psect	text61,local,class=CODE,merge=1,inline,delta=2
    84                           	psect	text62,local,class=CODE,merge=1,inline,delta=2
    85                           	psect	text63,local,class=CODE,merge=1,delta=2
    86                           	psect	text64,local,class=CODE,merge=1,delta=2
    87                           	psect	text65,local,class=CODE,merge=1,delta=2
    88                           	psect	text66,local,class=CODE,merge=1,delta=2
    89                           	psect	text67,local,class=CODE,merge=1,delta=2
    90                           	psect	text68,local,class=CODE,merge=1,delta=2
    91                           	psect	text69,local,class=CODE,merge=1,delta=2
    92                           	psect	text70,local,class=CODE,merge=1,delta=2
    93                           	psect	text71,local,class=CODE,merge=1,delta=2
    94                           	psect	text72,local,class=CODE,merge=1,delta=2
    95                           	psect	text73,local,class=CODE,merge=1,inline,delta=2
    96                           	psect	text74,local,class=CODE,merge=1,inline,delta=2
    97                           	psect	text75,local,class=CODE,merge=1,delta=2
    98                           	psect	text76,local,class=CODE,merge=1,delta=2
    99                           	psect	text77,local,class=CODE,merge=1,delta=2
   100                           	psect	text78,local,class=CODE,merge=1,delta=2
   101                           	psect	text79,local,class=CODE,merge=1,delta=2
   102                           	psect	text80,local,class=CODE,merge=1,delta=2
   103                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   104                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   105                           	dabs	1,0x7E,2
   106  0000                     
   107                           ; Version 2.40
   108                           ; Generated 17/11/2021 GMT
   109                           ; 
   110                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   111                           ; All rights reserved.
   112                           ; 
   113                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   114                           ; 
   115                           ; Redistribution and use in source and binary forms, with or without modification, are
   116                           ; permitted provided that the following conditions are met:
   117                           ; 
   118                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   119                           ;        conditions and the following disclaimer.
   120                           ; 
   121                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   122                           ;        of conditions and the following disclaimer in the documentation and/or other
   123                           ;        materials provided with the distribution. Publication is not required when
   124                           ;        this file is used in an embedded application.
   125                           ; 
   126                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   127                           ;        software without specific prior written permission.
   128                           ; 
   129                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   130                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   131                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   132                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   133                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   134                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   135                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   136                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   137                           ; 
   138                           ; 
   139                           ; Code-generator required, PIC16F1939 Definitions
   140                           ; 
   141                           ; SFR Addresses
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  010C                     	;# 
   193  010D                     	;# 
   194  010E                     	;# 
   195  010F                     	;# 
   196  0110                     	;# 
   197  0111                     	;# 
   198  0112                     	;# 
   199  0113                     	;# 
   200  0114                     	;# 
   201  0115                     	;# 
   202  0116                     	;# 
   203  0117                     	;# 
   204  0118                     	;# 
   205  0119                     	;# 
   206  011A                     	;# 
   207  011B                     	;# 
   208  011D                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  018F                     	;# 
   212  0190                     	;# 
   213  0191                     	;# 
   214  0191                     	;# 
   215  0192                     	;# 
   216  0193                     	;# 
   217  0193                     	;# 
   218  0193                     	;# 
   219  0194                     	;# 
   220  0195                     	;# 
   221  0196                     	;# 
   222  0199                     	;# 
   223  019A                     	;# 
   224  019B                     	;# 
   225  019B                     	;# 
   226  019B                     	;# 
   227  019B                     	;# 
   228  019C                     	;# 
   229  019C                     	;# 
   230  019D                     	;# 
   231  019E                     	;# 
   232  019F                     	;# 
   233  020D                     	;# 
   234  0210                     	;# 
   235  0211                     	;# 
   236  0212                     	;# 
   237  0213                     	;# 
   238  0214                     	;# 
   239  0215                     	;# 
   240  0215                     	;# 
   241  0216                     	;# 
   242  0217                     	;# 
   243  0291                     	;# 
   244  0291                     	;# 
   245  0292                     	;# 
   246  0293                     	;# 
   247  0294                     	;# 
   248  0295                     	;# 
   249  0295                     	;# 
   250  0296                     	;# 
   251  0298                     	;# 
   252  0298                     	;# 
   253  0299                     	;# 
   254  029A                     	;# 
   255  029B                     	;# 
   256  029C                     	;# 
   257  029C                     	;# 
   258  029D                     	;# 
   259  029E                     	;# 
   260  029F                     	;# 
   261  0311                     	;# 
   262  0311                     	;# 
   263  0312                     	;# 
   264  0313                     	;# 
   265  0314                     	;# 
   266  0315                     	;# 
   267  0315                     	;# 
   268  0316                     	;# 
   269  0318                     	;# 
   270  0318                     	;# 
   271  0319                     	;# 
   272  031A                     	;# 
   273  031C                     	;# 
   274  031C                     	;# 
   275  031D                     	;# 
   276  031E                     	;# 
   277  0394                     	;# 
   278  0395                     	;# 
   279  0396                     	;# 
   280  0415                     	;# 
   281  0416                     	;# 
   282  0417                     	;# 
   283  041C                     	;# 
   284  041D                     	;# 
   285  041E                     	;# 
   286  0791                     	;# 
   287  0792                     	;# 
   288  0793                     	;# 
   289  0794                     	;# 
   290  0795                     	;# 
   291  0798                     	;# 
   292  0799                     	;# 
   293  079A                     	;# 
   294  07A0                     	;# 
   295  07A1                     	;# 
   296  07A2                     	;# 
   297  07A3                     	;# 
   298  07A4                     	;# 
   299  07A5                     	;# 
   300  07A6                     	;# 
   301  07A7                     	;# 
   302  07A8                     	;# 
   303  07A9                     	;# 
   304  07AA                     	;# 
   305  07AB                     	;# 
   306  0FE4                     	;# 
   307  0FE5                     	;# 
   308  0FE6                     	;# 
   309  0FE7                     	;# 
   310  0FE8                     	;# 
   311  0FE9                     	;# 
   312  0FEA                     	;# 
   313  0FEB                     	;# 
   314  0FED                     	;# 
   315  0FEE                     	;# 
   316  0FEF                     	;# 
   317  0000                     	;# 
   318  0001                     	;# 
   319  0002                     	;# 
   320  0003                     	;# 
   321  0004                     	;# 
   322  0005                     	;# 
   323  0006                     	;# 
   324  0007                     	;# 
   325  0008                     	;# 
   326  0009                     	;# 
   327  000A                     	;# 
   328  000B                     	;# 
   329  000C                     	;# 
   330  000D                     	;# 
   331  000E                     	;# 
   332  000F                     	;# 
   333  0010                     	;# 
   334  0011                     	;# 
   335  0012                     	;# 
   336  0013                     	;# 
   337  0015                     	;# 
   338  0016                     	;# 
   339  0016                     	;# 
   340  0017                     	;# 
   341  0018                     	;# 
   342  0019                     	;# 
   343  001A                     	;# 
   344  001B                     	;# 
   345  001C                     	;# 
   346  001E                     	;# 
   347  001F                     	;# 
   348  008C                     	;# 
   349  008D                     	;# 
   350  008E                     	;# 
   351  008F                     	;# 
   352  0090                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0095                     	;# 
   357  0096                     	;# 
   358  0097                     	;# 
   359  0098                     	;# 
   360  0099                     	;# 
   361  009A                     	;# 
   362  009B                     	;# 
   363  009B                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0110                     	;# 
   372  0111                     	;# 
   373  0112                     	;# 
   374  0113                     	;# 
   375  0114                     	;# 
   376  0115                     	;# 
   377  0116                     	;# 
   378  0117                     	;# 
   379  0118                     	;# 
   380  0119                     	;# 
   381  011A                     	;# 
   382  011B                     	;# 
   383  011D                     	;# 
   384  018C                     	;# 
   385  018D                     	;# 
   386  018F                     	;# 
   387  0190                     	;# 
   388  0191                     	;# 
   389  0191                     	;# 
   390  0192                     	;# 
   391  0193                     	;# 
   392  0193                     	;# 
   393  0193                     	;# 
   394  0194                     	;# 
   395  0195                     	;# 
   396  0196                     	;# 
   397  0199                     	;# 
   398  019A                     	;# 
   399  019B                     	;# 
   400  019B                     	;# 
   401  019B                     	;# 
   402  019B                     	;# 
   403  019C                     	;# 
   404  019C                     	;# 
   405  019D                     	;# 
   406  019E                     	;# 
   407  019F                     	;# 
   408  020D                     	;# 
   409  0210                     	;# 
   410  0211                     	;# 
   411  0212                     	;# 
   412  0213                     	;# 
   413  0214                     	;# 
   414  0215                     	;# 
   415  0215                     	;# 
   416  0216                     	;# 
   417  0217                     	;# 
   418  0291                     	;# 
   419  0291                     	;# 
   420  0292                     	;# 
   421  0293                     	;# 
   422  0294                     	;# 
   423  0295                     	;# 
   424  0295                     	;# 
   425  0296                     	;# 
   426  0298                     	;# 
   427  0298                     	;# 
   428  0299                     	;# 
   429  029A                     	;# 
   430  029B                     	;# 
   431  029C                     	;# 
   432  029C                     	;# 
   433  029D                     	;# 
   434  029E                     	;# 
   435  029F                     	;# 
   436  0311                     	;# 
   437  0311                     	;# 
   438  0312                     	;# 
   439  0313                     	;# 
   440  0314                     	;# 
   441  0315                     	;# 
   442  0315                     	;# 
   443  0316                     	;# 
   444  0318                     	;# 
   445  0318                     	;# 
   446  0319                     	;# 
   447  031A                     	;# 
   448  031C                     	;# 
   449  031C                     	;# 
   450  031D                     	;# 
   451  031E                     	;# 
   452  0394                     	;# 
   453  0395                     	;# 
   454  0396                     	;# 
   455  0415                     	;# 
   456  0416                     	;# 
   457  0417                     	;# 
   458  041C                     	;# 
   459  041D                     	;# 
   460  041E                     	;# 
   461  0791                     	;# 
   462  0792                     	;# 
   463  0793                     	;# 
   464  0794                     	;# 
   465  0795                     	;# 
   466  0798                     	;# 
   467  0799                     	;# 
   468  079A                     	;# 
   469  07A0                     	;# 
   470  07A1                     	;# 
   471  07A2                     	;# 
   472  07A3                     	;# 
   473  07A4                     	;# 
   474  07A5                     	;# 
   475  07A6                     	;# 
   476  07A7                     	;# 
   477  07A8                     	;# 
   478  07A9                     	;# 
   479  07AA                     	;# 
   480  07AB                     	;# 
   481  0FE4                     	;# 
   482  0FE5                     	;# 
   483  0FE6                     	;# 
   484  0FE7                     	;# 
   485  0FE8                     	;# 
   486  0FE9                     	;# 
   487  0FEA                     	;# 
   488  0FEB                     	;# 
   489  0FED                     	;# 
   490  0FEE                     	;# 
   491  0FEF                     	;# 
   492  0000                     	;# 
   493  0001                     	;# 
   494  0002                     	;# 
   495  0003                     	;# 
   496  0004                     	;# 
   497  0005                     	;# 
   498  0006                     	;# 
   499  0007                     	;# 
   500  0008                     	;# 
   501  0009                     	;# 
   502  000A                     	;# 
   503  000B                     	;# 
   504  000C                     	;# 
   505  000D                     	;# 
   506  000E                     	;# 
   507  000F                     	;# 
   508  0010                     	;# 
   509  0011                     	;# 
   510  0012                     	;# 
   511  0013                     	;# 
   512  0015                     	;# 
   513  0016                     	;# 
   514  0016                     	;# 
   515  0017                     	;# 
   516  0018                     	;# 
   517  0019                     	;# 
   518  001A                     	;# 
   519  001B                     	;# 
   520  001C                     	;# 
   521  001E                     	;# 
   522  001F                     	;# 
   523  008C                     	;# 
   524  008D                     	;# 
   525  008E                     	;# 
   526  008F                     	;# 
   527  0090                     	;# 
   528  0091                     	;# 
   529  0092                     	;# 
   530  0093                     	;# 
   531  0095                     	;# 
   532  0096                     	;# 
   533  0097                     	;# 
   534  0098                     	;# 
   535  0099                     	;# 
   536  009A                     	;# 
   537  009B                     	;# 
   538  009B                     	;# 
   539  009C                     	;# 
   540  009D                     	;# 
   541  009E                     	;# 
   542  010C                     	;# 
   543  010D                     	;# 
   544  010E                     	;# 
   545  010F                     	;# 
   546  0110                     	;# 
   547  0111                     	;# 
   548  0112                     	;# 
   549  0113                     	;# 
   550  0114                     	;# 
   551  0115                     	;# 
   552  0116                     	;# 
   553  0117                     	;# 
   554  0118                     	;# 
   555  0119                     	;# 
   556  011A                     	;# 
   557  011B                     	;# 
   558  011D                     	;# 
   559  018C                     	;# 
   560  018D                     	;# 
   561  018F                     	;# 
   562  0190                     	;# 
   563  0191                     	;# 
   564  0191                     	;# 
   565  0192                     	;# 
   566  0193                     	;# 
   567  0193                     	;# 
   568  0193                     	;# 
   569  0194                     	;# 
   570  0195                     	;# 
   571  0196                     	;# 
   572  0199                     	;# 
   573  019A                     	;# 
   574  019B                     	;# 
   575  019B                     	;# 
   576  019B                     	;# 
   577  019B                     	;# 
   578  019C                     	;# 
   579  019C                     	;# 
   580  019D                     	;# 
   581  019E                     	;# 
   582  019F                     	;# 
   583  020D                     	;# 
   584  0210                     	;# 
   585  0211                     	;# 
   586  0212                     	;# 
   587  0213                     	;# 
   588  0214                     	;# 
   589  0215                     	;# 
   590  0215                     	;# 
   591  0216                     	;# 
   592  0217                     	;# 
   593  0291                     	;# 
   594  0291                     	;# 
   595  0292                     	;# 
   596  0293                     	;# 
   597  0294                     	;# 
   598  0295                     	;# 
   599  0295                     	;# 
   600  0296                     	;# 
   601  0298                     	;# 
   602  0298                     	;# 
   603  0299                     	;# 
   604  029A                     	;# 
   605  029B                     	;# 
   606  029C                     	;# 
   607  029C                     	;# 
   608  029D                     	;# 
   609  029E                     	;# 
   610  029F                     	;# 
   611  0311                     	;# 
   612  0311                     	;# 
   613  0312                     	;# 
   614  0313                     	;# 
   615  0314                     	;# 
   616  0315                     	;# 
   617  0315                     	;# 
   618  0316                     	;# 
   619  0318                     	;# 
   620  0318                     	;# 
   621  0319                     	;# 
   622  031A                     	;# 
   623  031C                     	;# 
   624  031C                     	;# 
   625  031D                     	;# 
   626  031E                     	;# 
   627  0394                     	;# 
   628  0395                     	;# 
   629  0396                     	;# 
   630  0415                     	;# 
   631  0416                     	;# 
   632  0417                     	;# 
   633  041C                     	;# 
   634  041D                     	;# 
   635  041E                     	;# 
   636  0791                     	;# 
   637  0792                     	;# 
   638  0793                     	;# 
   639  0794                     	;# 
   640  0795                     	;# 
   641  0798                     	;# 
   642  0799                     	;# 
   643  079A                     	;# 
   644  07A0                     	;# 
   645  07A1                     	;# 
   646  07A2                     	;# 
   647  07A3                     	;# 
   648  07A4                     	;# 
   649  07A5                     	;# 
   650  07A6                     	;# 
   651  07A7                     	;# 
   652  07A8                     	;# 
   653  07A9                     	;# 
   654  07AA                     	;# 
   655  07AB                     	;# 
   656  0FE4                     	;# 
   657  0FE5                     	;# 
   658  0FE6                     	;# 
   659  0FE7                     	;# 
   660  0FE8                     	;# 
   661  0FE9                     	;# 
   662  0FEA                     	;# 
   663  0FEB                     	;# 
   664  0FED                     	;# 
   665  0FEE                     	;# 
   666  0FEF                     	;# 
   667  0000                     	;# 
   668  0001                     	;# 
   669  0002                     	;# 
   670  0003                     	;# 
   671  0004                     	;# 
   672  0005                     	;# 
   673  0006                     	;# 
   674  0007                     	;# 
   675  0008                     	;# 
   676  0009                     	;# 
   677  000A                     	;# 
   678  000B                     	;# 
   679  000C                     	;# 
   680  000D                     	;# 
   681  000E                     	;# 
   682  000F                     	;# 
   683  0010                     	;# 
   684  0011                     	;# 
   685  0012                     	;# 
   686  0013                     	;# 
   687  0015                     	;# 
   688  0016                     	;# 
   689  0016                     	;# 
   690  0017                     	;# 
   691  0018                     	;# 
   692  0019                     	;# 
   693  001A                     	;# 
   694  001B                     	;# 
   695  001C                     	;# 
   696  001E                     	;# 
   697  001F                     	;# 
   698  008C                     	;# 
   699  008D                     	;# 
   700  008E                     	;# 
   701  008F                     	;# 
   702  0090                     	;# 
   703  0091                     	;# 
   704  0092                     	;# 
   705  0093                     	;# 
   706  0095                     	;# 
   707  0096                     	;# 
   708  0097                     	;# 
   709  0098                     	;# 
   710  0099                     	;# 
   711  009A                     	;# 
   712  009B                     	;# 
   713  009B                     	;# 
   714  009C                     	;# 
   715  009D                     	;# 
   716  009E                     	;# 
   717  010C                     	;# 
   718  010D                     	;# 
   719  010E                     	;# 
   720  010F                     	;# 
   721  0110                     	;# 
   722  0111                     	;# 
   723  0112                     	;# 
   724  0113                     	;# 
   725  0114                     	;# 
   726  0115                     	;# 
   727  0116                     	;# 
   728  0117                     	;# 
   729  0118                     	;# 
   730  0119                     	;# 
   731  011A                     	;# 
   732  011B                     	;# 
   733  011D                     	;# 
   734  018C                     	;# 
   735  018D                     	;# 
   736  018F                     	;# 
   737  0190                     	;# 
   738  0191                     	;# 
   739  0191                     	;# 
   740  0192                     	;# 
   741  0193                     	;# 
   742  0193                     	;# 
   743  0193                     	;# 
   744  0194                     	;# 
   745  0195                     	;# 
   746  0196                     	;# 
   747  0199                     	;# 
   748  019A                     	;# 
   749  019B                     	;# 
   750  019B                     	;# 
   751  019B                     	;# 
   752  019B                     	;# 
   753  019C                     	;# 
   754  019C                     	;# 
   755  019D                     	;# 
   756  019E                     	;# 
   757  019F                     	;# 
   758  020D                     	;# 
   759  0210                     	;# 
   760  0211                     	;# 
   761  0212                     	;# 
   762  0213                     	;# 
   763  0214                     	;# 
   764  0215                     	;# 
   765  0215                     	;# 
   766  0216                     	;# 
   767  0217                     	;# 
   768  0291                     	;# 
   769  0291                     	;# 
   770  0292                     	;# 
   771  0293                     	;# 
   772  0294                     	;# 
   773  0295                     	;# 
   774  0295                     	;# 
   775  0296                     	;# 
   776  0298                     	;# 
   777  0298                     	;# 
   778  0299                     	;# 
   779  029A                     	;# 
   780  029B                     	;# 
   781  029C                     	;# 
   782  029C                     	;# 
   783  029D                     	;# 
   784  029E                     	;# 
   785  029F                     	;# 
   786  0311                     	;# 
   787  0311                     	;# 
   788  0312                     	;# 
   789  0313                     	;# 
   790  0314                     	;# 
   791  0315                     	;# 
   792  0315                     	;# 
   793  0316                     	;# 
   794  0318                     	;# 
   795  0318                     	;# 
   796  0319                     	;# 
   797  031A                     	;# 
   798  031C                     	;# 
   799  031C                     	;# 
   800  031D                     	;# 
   801  031E                     	;# 
   802  0394                     	;# 
   803  0395                     	;# 
   804  0396                     	;# 
   805  0415                     	;# 
   806  0416                     	;# 
   807  0417                     	;# 
   808  041C                     	;# 
   809  041D                     	;# 
   810  041E                     	;# 
   811  0791                     	;# 
   812  0792                     	;# 
   813  0793                     	;# 
   814  0794                     	;# 
   815  0795                     	;# 
   816  0798                     	;# 
   817  0799                     	;# 
   818  079A                     	;# 
   819  07A0                     	;# 
   820  07A1                     	;# 
   821  07A2                     	;# 
   822  07A3                     	;# 
   823  07A4                     	;# 
   824  07A5                     	;# 
   825  07A6                     	;# 
   826  07A7                     	;# 
   827  07A8                     	;# 
   828  07A9                     	;# 
   829  07AA                     	;# 
   830  07AB                     	;# 
   831  0FE4                     	;# 
   832  0FE5                     	;# 
   833  0FE6                     	;# 
   834  0FE7                     	;# 
   835  0FE8                     	;# 
   836  0FE9                     	;# 
   837  0FEA                     	;# 
   838  0FEB                     	;# 
   839  0FED                     	;# 
   840  0FEE                     	;# 
   841  0FEF                     	;# 
   842  0000                     	;# 
   843  0001                     	;# 
   844  0002                     	;# 
   845  0003                     	;# 
   846  0004                     	;# 
   847  0005                     	;# 
   848  0006                     	;# 
   849  0007                     	;# 
   850  0008                     	;# 
   851  0009                     	;# 
   852  000A                     	;# 
   853  000B                     	;# 
   854  000C                     	;# 
   855  000D                     	;# 
   856  000E                     	;# 
   857  000F                     	;# 
   858  0010                     	;# 
   859  0011                     	;# 
   860  0012                     	;# 
   861  0013                     	;# 
   862  0015                     	;# 
   863  0016                     	;# 
   864  0016                     	;# 
   865  0017                     	;# 
   866  0018                     	;# 
   867  0019                     	;# 
   868  001A                     	;# 
   869  001B                     	;# 
   870  001C                     	;# 
   871  001E                     	;# 
   872  001F                     	;# 
   873  008C                     	;# 
   874  008D                     	;# 
   875  008E                     	;# 
   876  008F                     	;# 
   877  0090                     	;# 
   878  0091                     	;# 
   879  0092                     	;# 
   880  0093                     	;# 
   881  0095                     	;# 
   882  0096                     	;# 
   883  0097                     	;# 
   884  0098                     	;# 
   885  0099                     	;# 
   886  009A                     	;# 
   887  009B                     	;# 
   888  009B                     	;# 
   889  009C                     	;# 
   890  009D                     	;# 
   891  009E                     	;# 
   892  010C                     	;# 
   893  010D                     	;# 
   894  010E                     	;# 
   895  010F                     	;# 
   896  0110                     	;# 
   897  0111                     	;# 
   898  0112                     	;# 
   899  0113                     	;# 
   900  0114                     	;# 
   901  0115                     	;# 
   902  0116                     	;# 
   903  0117                     	;# 
   904  0118                     	;# 
   905  0119                     	;# 
   906  011A                     	;# 
   907  011B                     	;# 
   908  011D                     	;# 
   909  018C                     	;# 
   910  018D                     	;# 
   911  018F                     	;# 
   912  0190                     	;# 
   913  0191                     	;# 
   914  0191                     	;# 
   915  0192                     	;# 
   916  0193                     	;# 
   917  0193                     	;# 
   918  0193                     	;# 
   919  0194                     	;# 
   920  0195                     	;# 
   921  0196                     	;# 
   922  0199                     	;# 
   923  019A                     	;# 
   924  019B                     	;# 
   925  019B                     	;# 
   926  019B                     	;# 
   927  019B                     	;# 
   928  019C                     	;# 
   929  019C                     	;# 
   930  019D                     	;# 
   931  019E                     	;# 
   932  019F                     	;# 
   933  020D                     	;# 
   934  0210                     	;# 
   935  0211                     	;# 
   936  0212                     	;# 
   937  0213                     	;# 
   938  0214                     	;# 
   939  0215                     	;# 
   940  0215                     	;# 
   941  0216                     	;# 
   942  0217                     	;# 
   943  0291                     	;# 
   944  0291                     	;# 
   945  0292                     	;# 
   946  0293                     	;# 
   947  0294                     	;# 
   948  0295                     	;# 
   949  0295                     	;# 
   950  0296                     	;# 
   951  0298                     	;# 
   952  0298                     	;# 
   953  0299                     	;# 
   954  029A                     	;# 
   955  029B                     	;# 
   956  029C                     	;# 
   957  029C                     	;# 
   958  029D                     	;# 
   959  029E                     	;# 
   960  029F                     	;# 
   961  0311                     	;# 
   962  0311                     	;# 
   963  0312                     	;# 
   964  0313                     	;# 
   965  0314                     	;# 
   966  0315                     	;# 
   967  0315                     	;# 
   968  0316                     	;# 
   969  0318                     	;# 
   970  0318                     	;# 
   971  0319                     	;# 
   972  031A                     	;# 
   973  031C                     	;# 
   974  031C                     	;# 
   975  031D                     	;# 
   976  031E                     	;# 
   977  0394                     	;# 
   978  0395                     	;# 
   979  0396                     	;# 
   980  0415                     	;# 
   981  0416                     	;# 
   982  0417                     	;# 
   983  041C                     	;# 
   984  041D                     	;# 
   985  041E                     	;# 
   986  0791                     	;# 
   987  0792                     	;# 
   988  0793                     	;# 
   989  0794                     	;# 
   990  0795                     	;# 
   991  0798                     	;# 
   992  0799                     	;# 
   993  079A                     	;# 
   994  07A0                     	;# 
   995  07A1                     	;# 
   996  07A2                     	;# 
   997  07A3                     	;# 
   998  07A4                     	;# 
   999  07A5                     	;# 
  1000  07A6                     	;# 
  1001  07A7                     	;# 
  1002  07A8                     	;# 
  1003  07A9                     	;# 
  1004  07AA                     	;# 
  1005  07AB                     	;# 
  1006  0FE4                     	;# 
  1007  0FE5                     	;# 
  1008  0FE6                     	;# 
  1009  0FE7                     	;# 
  1010  0FE8                     	;# 
  1011  0FE9                     	;# 
  1012  0FEA                     	;# 
  1013  0FEB                     	;# 
  1014  0FED                     	;# 
  1015  0FEE                     	;# 
  1016  0FEF                     	;# 
  1017  0000                     	;# 
  1018  0001                     	;# 
  1019  0002                     	;# 
  1020  0003                     	;# 
  1021  0004                     	;# 
  1022  0005                     	;# 
  1023  0006                     	;# 
  1024  0007                     	;# 
  1025  0008                     	;# 
  1026  0009                     	;# 
  1027  000A                     	;# 
  1028  000B                     	;# 
  1029  000C                     	;# 
  1030  000D                     	;# 
  1031  000E                     	;# 
  1032  000F                     	;# 
  1033  0010                     	;# 
  1034  0011                     	;# 
  1035  0012                     	;# 
  1036  0013                     	;# 
  1037  0015                     	;# 
  1038  0016                     	;# 
  1039  0016                     	;# 
  1040  0017                     	;# 
  1041  0018                     	;# 
  1042  0019                     	;# 
  1043  001A                     	;# 
  1044  001B                     	;# 
  1045  001C                     	;# 
  1046  001E                     	;# 
  1047  001F                     	;# 
  1048  008C                     	;# 
  1049  008D                     	;# 
  1050  008E                     	;# 
  1051  008F                     	;# 
  1052  0090                     	;# 
  1053  0091                     	;# 
  1054  0092                     	;# 
  1055  0093                     	;# 
  1056  0095                     	;# 
  1057  0096                     	;# 
  1058  0097                     	;# 
  1059  0098                     	;# 
  1060  0099                     	;# 
  1061  009A                     	;# 
  1062  009B                     	;# 
  1063  009B                     	;# 
  1064  009C                     	;# 
  1065  009D                     	;# 
  1066  009E                     	;# 
  1067  010C                     	;# 
  1068  010D                     	;# 
  1069  010E                     	;# 
  1070  010F                     	;# 
  1071  0110                     	;# 
  1072  0111                     	;# 
  1073  0112                     	;# 
  1074  0113                     	;# 
  1075  0114                     	;# 
  1076  0115                     	;# 
  1077  0116                     	;# 
  1078  0117                     	;# 
  1079  0118                     	;# 
  1080  0119                     	;# 
  1081  011A                     	;# 
  1082  011B                     	;# 
  1083  011D                     	;# 
  1084  018C                     	;# 
  1085  018D                     	;# 
  1086  018F                     	;# 
  1087  0190                     	;# 
  1088  0191                     	;# 
  1089  0191                     	;# 
  1090  0192                     	;# 
  1091  0193                     	;# 
  1092  0193                     	;# 
  1093  0193                     	;# 
  1094  0194                     	;# 
  1095  0195                     	;# 
  1096  0196                     	;# 
  1097  0199                     	;# 
  1098  019A                     	;# 
  1099  019B                     	;# 
  1100  019B                     	;# 
  1101  019B                     	;# 
  1102  019B                     	;# 
  1103  019C                     	;# 
  1104  019C                     	;# 
  1105  019D                     	;# 
  1106  019E                     	;# 
  1107  019F                     	;# 
  1108  020D                     	;# 
  1109  0210                     	;# 
  1110  0211                     	;# 
  1111  0212                     	;# 
  1112  0213                     	;# 
  1113  0214                     	;# 
  1114  0215                     	;# 
  1115  0215                     	;# 
  1116  0216                     	;# 
  1117  0217                     	;# 
  1118  0291                     	;# 
  1119  0291                     	;# 
  1120  0292                     	;# 
  1121  0293                     	;# 
  1122  0294                     	;# 
  1123  0295                     	;# 
  1124  0295                     	;# 
  1125  0296                     	;# 
  1126  0298                     	;# 
  1127  0298                     	;# 
  1128  0299                     	;# 
  1129  029A                     	;# 
  1130  029B                     	;# 
  1131  029C                     	;# 
  1132  029C                     	;# 
  1133  029D                     	;# 
  1134  029E                     	;# 
  1135  029F                     	;# 
  1136  0311                     	;# 
  1137  0311                     	;# 
  1138  0312                     	;# 
  1139  0313                     	;# 
  1140  0314                     	;# 
  1141  0315                     	;# 
  1142  0315                     	;# 
  1143  0316                     	;# 
  1144  0318                     	;# 
  1145  0318                     	;# 
  1146  0319                     	;# 
  1147  031A                     	;# 
  1148  031C                     	;# 
  1149  031C                     	;# 
  1150  031D                     	;# 
  1151  031E                     	;# 
  1152  0394                     	;# 
  1153  0395                     	;# 
  1154  0396                     	;# 
  1155  0415                     	;# 
  1156  0416                     	;# 
  1157  0417                     	;# 
  1158  041C                     	;# 
  1159  041D                     	;# 
  1160  041E                     	;# 
  1161  0791                     	;# 
  1162  0792                     	;# 
  1163  0793                     	;# 
  1164  0794                     	;# 
  1165  0795                     	;# 
  1166  0798                     	;# 
  1167  0799                     	;# 
  1168  079A                     	;# 
  1169  07A0                     	;# 
  1170  07A1                     	;# 
  1171  07A2                     	;# 
  1172  07A3                     	;# 
  1173  07A4                     	;# 
  1174  07A5                     	;# 
  1175  07A6                     	;# 
  1176  07A7                     	;# 
  1177  07A8                     	;# 
  1178  07A9                     	;# 
  1179  07AA                     	;# 
  1180  07AB                     	;# 
  1181  0FE4                     	;# 
  1182  0FE5                     	;# 
  1183  0FE6                     	;# 
  1184  0FE7                     	;# 
  1185  0FE8                     	;# 
  1186  0FE9                     	;# 
  1187  0FEA                     	;# 
  1188  0FEB                     	;# 
  1189  0FED                     	;# 
  1190  0FEE                     	;# 
  1191  0FEF                     	;# 
  1192  0000                     	;# 
  1193  0001                     	;# 
  1194  0002                     	;# 
  1195  0003                     	;# 
  1196  0004                     	;# 
  1197  0005                     	;# 
  1198  0006                     	;# 
  1199  0007                     	;# 
  1200  0008                     	;# 
  1201  0009                     	;# 
  1202  000A                     	;# 
  1203  000B                     	;# 
  1204  000C                     	;# 
  1205  000D                     	;# 
  1206  000E                     	;# 
  1207  000F                     	;# 
  1208  0010                     	;# 
  1209  0011                     	;# 
  1210  0012                     	;# 
  1211  0013                     	;# 
  1212  0015                     	;# 
  1213  0016                     	;# 
  1214  0016                     	;# 
  1215  0017                     	;# 
  1216  0018                     	;# 
  1217  0019                     	;# 
  1218  001A                     	;# 
  1219  001B                     	;# 
  1220  001C                     	;# 
  1221  001E                     	;# 
  1222  001F                     	;# 
  1223  008C                     	;# 
  1224  008D                     	;# 
  1225  008E                     	;# 
  1226  008F                     	;# 
  1227  0090                     	;# 
  1228  0091                     	;# 
  1229  0092                     	;# 
  1230  0093                     	;# 
  1231  0095                     	;# 
  1232  0096                     	;# 
  1233  0097                     	;# 
  1234  0098                     	;# 
  1235  0099                     	;# 
  1236  009A                     	;# 
  1237  009B                     	;# 
  1238  009B                     	;# 
  1239  009C                     	;# 
  1240  009D                     	;# 
  1241  009E                     	;# 
  1242  010C                     	;# 
  1243  010D                     	;# 
  1244  010E                     	;# 
  1245  010F                     	;# 
  1246  0110                     	;# 
  1247  0111                     	;# 
  1248  0112                     	;# 
  1249  0113                     	;# 
  1250  0114                     	;# 
  1251  0115                     	;# 
  1252  0116                     	;# 
  1253  0117                     	;# 
  1254  0118                     	;# 
  1255  0119                     	;# 
  1256  011A                     	;# 
  1257  011B                     	;# 
  1258  011D                     	;# 
  1259  018C                     	;# 
  1260  018D                     	;# 
  1261  018F                     	;# 
  1262  0190                     	;# 
  1263  0191                     	;# 
  1264  0191                     	;# 
  1265  0192                     	;# 
  1266  0193                     	;# 
  1267  0193                     	;# 
  1268  0193                     	;# 
  1269  0194                     	;# 
  1270  0195                     	;# 
  1271  0196                     	;# 
  1272  0199                     	;# 
  1273  019A                     	;# 
  1274  019B                     	;# 
  1275  019B                     	;# 
  1276  019B                     	;# 
  1277  019B                     	;# 
  1278  019C                     	;# 
  1279  019C                     	;# 
  1280  019D                     	;# 
  1281  019E                     	;# 
  1282  019F                     	;# 
  1283  020D                     	;# 
  1284  0210                     	;# 
  1285  0211                     	;# 
  1286  0212                     	;# 
  1287  0213                     	;# 
  1288  0214                     	;# 
  1289  0215                     	;# 
  1290  0215                     	;# 
  1291  0216                     	;# 
  1292  0217                     	;# 
  1293  0291                     	;# 
  1294  0291                     	;# 
  1295  0292                     	;# 
  1296  0293                     	;# 
  1297  0294                     	;# 
  1298  0295                     	;# 
  1299  0295                     	;# 
  1300  0296                     	;# 
  1301  0298                     	;# 
  1302  0298                     	;# 
  1303  0299                     	;# 
  1304  029A                     	;# 
  1305  029B                     	;# 
  1306  029C                     	;# 
  1307  029C                     	;# 
  1308  029D                     	;# 
  1309  029E                     	;# 
  1310  029F                     	;# 
  1311  0311                     	;# 
  1312  0311                     	;# 
  1313  0312                     	;# 
  1314  0313                     	;# 
  1315  0314                     	;# 
  1316  0315                     	;# 
  1317  0315                     	;# 
  1318  0316                     	;# 
  1319  0318                     	;# 
  1320  0318                     	;# 
  1321  0319                     	;# 
  1322  031A                     	;# 
  1323  031C                     	;# 
  1324  031C                     	;# 
  1325  031D                     	;# 
  1326  031E                     	;# 
  1327  0394                     	;# 
  1328  0395                     	;# 
  1329  0396                     	;# 
  1330  0415                     	;# 
  1331  0416                     	;# 
  1332  0417                     	;# 
  1333  041C                     	;# 
  1334  041D                     	;# 
  1335  041E                     	;# 
  1336  0791                     	;# 
  1337  0792                     	;# 
  1338  0793                     	;# 
  1339  0794                     	;# 
  1340  0795                     	;# 
  1341  0798                     	;# 
  1342  0799                     	;# 
  1343  079A                     	;# 
  1344  07A0                     	;# 
  1345  07A1                     	;# 
  1346  07A2                     	;# 
  1347  07A3                     	;# 
  1348  07A4                     	;# 
  1349  07A5                     	;# 
  1350  07A6                     	;# 
  1351  07A7                     	;# 
  1352  07A8                     	;# 
  1353  07A9                     	;# 
  1354  07AA                     	;# 
  1355  07AB                     	;# 
  1356  0FE4                     	;# 
  1357  0FE5                     	;# 
  1358  0FE6                     	;# 
  1359  0FE7                     	;# 
  1360  0FE8                     	;# 
  1361  0FE9                     	;# 
  1362  0FEA                     	;# 
  1363  0FEB                     	;# 
  1364  0FED                     	;# 
  1365  0FEE                     	;# 
  1366  0FEF                     	;# 
  1367  0000                     	;# 
  1368  0001                     	;# 
  1369  0002                     	;# 
  1370  0003                     	;# 
  1371  0004                     	;# 
  1372  0005                     	;# 
  1373  0006                     	;# 
  1374  0007                     	;# 
  1375  0008                     	;# 
  1376  0009                     	;# 
  1377  000A                     	;# 
  1378  000B                     	;# 
  1379  000C                     	;# 
  1380  000D                     	;# 
  1381  000E                     	;# 
  1382  000F                     	;# 
  1383  0010                     	;# 
  1384  0011                     	;# 
  1385  0012                     	;# 
  1386  0013                     	;# 
  1387  0015                     	;# 
  1388  0016                     	;# 
  1389  0016                     	;# 
  1390  0017                     	;# 
  1391  0018                     	;# 
  1392  0019                     	;# 
  1393  001A                     	;# 
  1394  001B                     	;# 
  1395  001C                     	;# 
  1396  001E                     	;# 
  1397  001F                     	;# 
  1398  008C                     	;# 
  1399  008D                     	;# 
  1400  008E                     	;# 
  1401  008F                     	;# 
  1402  0090                     	;# 
  1403  0091                     	;# 
  1404  0092                     	;# 
  1405  0093                     	;# 
  1406  0095                     	;# 
  1407  0096                     	;# 
  1408  0097                     	;# 
  1409  0098                     	;# 
  1410  0099                     	;# 
  1411  009A                     	;# 
  1412  009B                     	;# 
  1413  009B                     	;# 
  1414  009C                     	;# 
  1415  009D                     	;# 
  1416  009E                     	;# 
  1417  010C                     	;# 
  1418  010D                     	;# 
  1419  010E                     	;# 
  1420  010F                     	;# 
  1421  0110                     	;# 
  1422  0111                     	;# 
  1423  0112                     	;# 
  1424  0113                     	;# 
  1425  0114                     	;# 
  1426  0115                     	;# 
  1427  0116                     	;# 
  1428  0117                     	;# 
  1429  0118                     	;# 
  1430  0119                     	;# 
  1431  011A                     	;# 
  1432  011B                     	;# 
  1433  011D                     	;# 
  1434  018C                     	;# 
  1435  018D                     	;# 
  1436  018F                     	;# 
  1437  0190                     	;# 
  1438  0191                     	;# 
  1439  0191                     	;# 
  1440  0192                     	;# 
  1441  0193                     	;# 
  1442  0193                     	;# 
  1443  0193                     	;# 
  1444  0194                     	;# 
  1445  0195                     	;# 
  1446  0196                     	;# 
  1447  0199                     	;# 
  1448  019A                     	;# 
  1449  019B                     	;# 
  1450  019B                     	;# 
  1451  019B                     	;# 
  1452  019B                     	;# 
  1453  019C                     	;# 
  1454  019C                     	;# 
  1455  019D                     	;# 
  1456  019E                     	;# 
  1457  019F                     	;# 
  1458  020D                     	;# 
  1459  0210                     	;# 
  1460  0211                     	;# 
  1461  0212                     	;# 
  1462  0213                     	;# 
  1463  0214                     	;# 
  1464  0215                     	;# 
  1465  0215                     	;# 
  1466  0216                     	;# 
  1467  0217                     	;# 
  1468  0291                     	;# 
  1469  0291                     	;# 
  1470  0292                     	;# 
  1471  0293                     	;# 
  1472  0294                     	;# 
  1473  0295                     	;# 
  1474  0295                     	;# 
  1475  0296                     	;# 
  1476  0298                     	;# 
  1477  0298                     	;# 
  1478  0299                     	;# 
  1479  029A                     	;# 
  1480  029B                     	;# 
  1481  029C                     	;# 
  1482  029C                     	;# 
  1483  029D                     	;# 
  1484  029E                     	;# 
  1485  029F                     	;# 
  1486  0311                     	;# 
  1487  0311                     	;# 
  1488  0312                     	;# 
  1489  0313                     	;# 
  1490  0314                     	;# 
  1491  0315                     	;# 
  1492  0315                     	;# 
  1493  0316                     	;# 
  1494  0318                     	;# 
  1495  0318                     	;# 
  1496  0319                     	;# 
  1497  031A                     	;# 
  1498  031C                     	;# 
  1499  031C                     	;# 
  1500  031D                     	;# 
  1501  031E                     	;# 
  1502  0394                     	;# 
  1503  0395                     	;# 
  1504  0396                     	;# 
  1505  0415                     	;# 
  1506  0416                     	;# 
  1507  0417                     	;# 
  1508  041C                     	;# 
  1509  041D                     	;# 
  1510  041E                     	;# 
  1511  0791                     	;# 
  1512  0792                     	;# 
  1513  0793                     	;# 
  1514  0794                     	;# 
  1515  0795                     	;# 
  1516  0798                     	;# 
  1517  0799                     	;# 
  1518  079A                     	;# 
  1519  07A0                     	;# 
  1520  07A1                     	;# 
  1521  07A2                     	;# 
  1522  07A3                     	;# 
  1523  07A4                     	;# 
  1524  07A5                     	;# 
  1525  07A6                     	;# 
  1526  07A7                     	;# 
  1527  07A8                     	;# 
  1528  07A9                     	;# 
  1529  07AA                     	;# 
  1530  07AB                     	;# 
  1531  0FE4                     	;# 
  1532  0FE5                     	;# 
  1533  0FE6                     	;# 
  1534  0FE7                     	;# 
  1535  0FE8                     	;# 
  1536  0FE9                     	;# 
  1537  0FEA                     	;# 
  1538  0FEB                     	;# 
  1539  0FED                     	;# 
  1540  0FEE                     	;# 
  1541  0FEF                     	;# 
  1542  0000                     	;# 
  1543  0001                     	;# 
  1544  0002                     	;# 
  1545  0003                     	;# 
  1546  0004                     	;# 
  1547  0005                     	;# 
  1548  0006                     	;# 
  1549  0007                     	;# 
  1550  0008                     	;# 
  1551  0009                     	;# 
  1552  000A                     	;# 
  1553  000B                     	;# 
  1554  000C                     	;# 
  1555  000D                     	;# 
  1556  000E                     	;# 
  1557  000F                     	;# 
  1558  0010                     	;# 
  1559  0011                     	;# 
  1560  0012                     	;# 
  1561  0013                     	;# 
  1562  0015                     	;# 
  1563  0016                     	;# 
  1564  0016                     	;# 
  1565  0017                     	;# 
  1566  0018                     	;# 
  1567  0019                     	;# 
  1568  001A                     	;# 
  1569  001B                     	;# 
  1570  001C                     	;# 
  1571  001E                     	;# 
  1572  001F                     	;# 
  1573  008C                     	;# 
  1574  008D                     	;# 
  1575  008E                     	;# 
  1576  008F                     	;# 
  1577  0090                     	;# 
  1578  0091                     	;# 
  1579  0092                     	;# 
  1580  0093                     	;# 
  1581  0095                     	;# 
  1582  0096                     	;# 
  1583  0097                     	;# 
  1584  0098                     	;# 
  1585  0099                     	;# 
  1586  009A                     	;# 
  1587  009B                     	;# 
  1588  009B                     	;# 
  1589  009C                     	;# 
  1590  009D                     	;# 
  1591  009E                     	;# 
  1592  010C                     	;# 
  1593  010D                     	;# 
  1594  010E                     	;# 
  1595  010F                     	;# 
  1596  0110                     	;# 
  1597  0111                     	;# 
  1598  0112                     	;# 
  1599  0113                     	;# 
  1600  0114                     	;# 
  1601  0115                     	;# 
  1602  0116                     	;# 
  1603  0117                     	;# 
  1604  0118                     	;# 
  1605  0119                     	;# 
  1606  011A                     	;# 
  1607  011B                     	;# 
  1608  011D                     	;# 
  1609  018C                     	;# 
  1610  018D                     	;# 
  1611  018F                     	;# 
  1612  0190                     	;# 
  1613  0191                     	;# 
  1614  0191                     	;# 
  1615  0192                     	;# 
  1616  0193                     	;# 
  1617  0193                     	;# 
  1618  0193                     	;# 
  1619  0194                     	;# 
  1620  0195                     	;# 
  1621  0196                     	;# 
  1622  0199                     	;# 
  1623  019A                     	;# 
  1624  019B                     	;# 
  1625  019B                     	;# 
  1626  019B                     	;# 
  1627  019B                     	;# 
  1628  019C                     	;# 
  1629  019C                     	;# 
  1630  019D                     	;# 
  1631  019E                     	;# 
  1632  019F                     	;# 
  1633  020D                     	;# 
  1634  0210                     	;# 
  1635  0211                     	;# 
  1636  0212                     	;# 
  1637  0213                     	;# 
  1638  0214                     	;# 
  1639  0215                     	;# 
  1640  0215                     	;# 
  1641  0216                     	;# 
  1642  0217                     	;# 
  1643  0291                     	;# 
  1644  0291                     	;# 
  1645  0292                     	;# 
  1646  0293                     	;# 
  1647  0294                     	;# 
  1648  0295                     	;# 
  1649  0295                     	;# 
  1650  0296                     	;# 
  1651  0298                     	;# 
  1652  0298                     	;# 
  1653  0299                     	;# 
  1654  029A                     	;# 
  1655  029B                     	;# 
  1656  029C                     	;# 
  1657  029C                     	;# 
  1658  029D                     	;# 
  1659  029E                     	;# 
  1660  029F                     	;# 
  1661  0311                     	;# 
  1662  0311                     	;# 
  1663  0312                     	;# 
  1664  0313                     	;# 
  1665  0314                     	;# 
  1666  0315                     	;# 
  1667  0315                     	;# 
  1668  0316                     	;# 
  1669  0318                     	;# 
  1670  0318                     	;# 
  1671  0319                     	;# 
  1672  031A                     	;# 
  1673  031C                     	;# 
  1674  031C                     	;# 
  1675  031D                     	;# 
  1676  031E                     	;# 
  1677  0394                     	;# 
  1678  0395                     	;# 
  1679  0396                     	;# 
  1680  0415                     	;# 
  1681  0416                     	;# 
  1682  0417                     	;# 
  1683  041C                     	;# 
  1684  041D                     	;# 
  1685  041E                     	;# 
  1686  0791                     	;# 
  1687  0792                     	;# 
  1688  0793                     	;# 
  1689  0794                     	;# 
  1690  0795                     	;# 
  1691  0798                     	;# 
  1692  0799                     	;# 
  1693  079A                     	;# 
  1694  07A0                     	;# 
  1695  07A1                     	;# 
  1696  07A2                     	;# 
  1697  07A3                     	;# 
  1698  07A4                     	;# 
  1699  07A5                     	;# 
  1700  07A6                     	;# 
  1701  07A7                     	;# 
  1702  07A8                     	;# 
  1703  07A9                     	;# 
  1704  07AA                     	;# 
  1705  07AB                     	;# 
  1706  0FE4                     	;# 
  1707  0FE5                     	;# 
  1708  0FE6                     	;# 
  1709  0FE7                     	;# 
  1710  0FE8                     	;# 
  1711  0FE9                     	;# 
  1712  0FEA                     	;# 
  1713  0FEB                     	;# 
  1714  0FED                     	;# 
  1715  0FEE                     	;# 
  1716  0FEF                     	;# 
  1717  0000                     	;# 
  1718  0001                     	;# 
  1719  0002                     	;# 
  1720  0003                     	;# 
  1721  0004                     	;# 
  1722  0005                     	;# 
  1723  0006                     	;# 
  1724  0007                     	;# 
  1725  0008                     	;# 
  1726  0009                     	;# 
  1727  000A                     	;# 
  1728  000B                     	;# 
  1729  000C                     	;# 
  1730  000D                     	;# 
  1731  000E                     	;# 
  1732  000F                     	;# 
  1733  0010                     	;# 
  1734  0011                     	;# 
  1735  0012                     	;# 
  1736  0013                     	;# 
  1737  0015                     	;# 
  1738  0016                     	;# 
  1739  0016                     	;# 
  1740  0017                     	;# 
  1741  0018                     	;# 
  1742  0019                     	;# 
  1743  001A                     	;# 
  1744  001B                     	;# 
  1745  001C                     	;# 
  1746  001E                     	;# 
  1747  001F                     	;# 
  1748  008C                     	;# 
  1749  008D                     	;# 
  1750  008E                     	;# 
  1751  008F                     	;# 
  1752  0090                     	;# 
  1753  0091                     	;# 
  1754  0092                     	;# 
  1755  0093                     	;# 
  1756  0095                     	;# 
  1757  0096                     	;# 
  1758  0097                     	;# 
  1759  0098                     	;# 
  1760  0099                     	;# 
  1761  009A                     	;# 
  1762  009B                     	;# 
  1763  009B                     	;# 
  1764  009C                     	;# 
  1765  009D                     	;# 
  1766  009E                     	;# 
  1767  010C                     	;# 
  1768  010D                     	;# 
  1769  010E                     	;# 
  1770  010F                     	;# 
  1771  0110                     	;# 
  1772  0111                     	;# 
  1773  0112                     	;# 
  1774  0113                     	;# 
  1775  0114                     	;# 
  1776  0115                     	;# 
  1777  0116                     	;# 
  1778  0117                     	;# 
  1779  0118                     	;# 
  1780  0119                     	;# 
  1781  011A                     	;# 
  1782  011B                     	;# 
  1783  011D                     	;# 
  1784  018C                     	;# 
  1785  018D                     	;# 
  1786  018F                     	;# 
  1787  0190                     	;# 
  1788  0191                     	;# 
  1789  0191                     	;# 
  1790  0192                     	;# 
  1791  0193                     	;# 
  1792  0193                     	;# 
  1793  0193                     	;# 
  1794  0194                     	;# 
  1795  0195                     	;# 
  1796  0196                     	;# 
  1797  0199                     	;# 
  1798  019A                     	;# 
  1799  019B                     	;# 
  1800  019B                     	;# 
  1801  019B                     	;# 
  1802  019B                     	;# 
  1803  019C                     	;# 
  1804  019C                     	;# 
  1805  019D                     	;# 
  1806  019E                     	;# 
  1807  019F                     	;# 
  1808  020D                     	;# 
  1809  0210                     	;# 
  1810  0211                     	;# 
  1811  0212                     	;# 
  1812  0213                     	;# 
  1813  0214                     	;# 
  1814  0215                     	;# 
  1815  0215                     	;# 
  1816  0216                     	;# 
  1817  0217                     	;# 
  1818  0291                     	;# 
  1819  0291                     	;# 
  1820  0292                     	;# 
  1821  0293                     	;# 
  1822  0294                     	;# 
  1823  0295                     	;# 
  1824  0295                     	;# 
  1825  0296                     	;# 
  1826  0298                     	;# 
  1827  0298                     	;# 
  1828  0299                     	;# 
  1829  029A                     	;# 
  1830  029B                     	;# 
  1831  029C                     	;# 
  1832  029C                     	;# 
  1833  029D                     	;# 
  1834  029E                     	;# 
  1835  029F                     	;# 
  1836  0311                     	;# 
  1837  0311                     	;# 
  1838  0312                     	;# 
  1839  0313                     	;# 
  1840  0314                     	;# 
  1841  0315                     	;# 
  1842  0315                     	;# 
  1843  0316                     	;# 
  1844  0318                     	;# 
  1845  0318                     	;# 
  1846  0319                     	;# 
  1847  031A                     	;# 
  1848  031C                     	;# 
  1849  031C                     	;# 
  1850  031D                     	;# 
  1851  031E                     	;# 
  1852  0394                     	;# 
  1853  0395                     	;# 
  1854  0396                     	;# 
  1855  0415                     	;# 
  1856  0416                     	;# 
  1857  0417                     	;# 
  1858  041C                     	;# 
  1859  041D                     	;# 
  1860  041E                     	;# 
  1861  0791                     	;# 
  1862  0792                     	;# 
  1863  0793                     	;# 
  1864  0794                     	;# 
  1865  0795                     	;# 
  1866  0798                     	;# 
  1867  0799                     	;# 
  1868  079A                     	;# 
  1869  07A0                     	;# 
  1870  07A1                     	;# 
  1871  07A2                     	;# 
  1872  07A3                     	;# 
  1873  07A4                     	;# 
  1874  07A5                     	;# 
  1875  07A6                     	;# 
  1876  07A7                     	;# 
  1877  07A8                     	;# 
  1878  07A9                     	;# 
  1879  07AA                     	;# 
  1880  07AB                     	;# 
  1881  0FE4                     	;# 
  1882  0FE5                     	;# 
  1883  0FE6                     	;# 
  1884  0FE7                     	;# 
  1885  0FE8                     	;# 
  1886  0FE9                     	;# 
  1887  0FEA                     	;# 
  1888  0FEB                     	;# 
  1889  0FED                     	;# 
  1890  0FEE                     	;# 
  1891  0FEF                     	;# 
  1892                           
  1893                           	psect	idataBANK0
  1894  0F4D                     __pidataBANK0:
  1895                           
  1896                           ;initializer for _BackLight_State
  1897  0F4D  3408               	retlw	8
  1898                           
  1899                           	psect	stringtext1
  1900  0418                     __pstringtext1:
  1901  0418                     _i2c_fsmStateTable:
  1902  0418  347F               	retlw	low _I2C_DO_IDLE
  1903  0419  340F               	retlw	high _I2C_DO_IDLE
  1904  041A  34EF               	retlw	low _I2C_DO_SEND_ADR_READ
  1905  041B  3407               	retlw	high _I2C_DO_SEND_ADR_READ
  1906  041C  34F0               	retlw	low _I2C_DO_SEND_ADR_WRITE
  1907  041D  340F               	retlw	high _I2C_DO_SEND_ADR_WRITE
  1908  041E  34BD               	retlw	low _I2C_DO_TX
  1909  041F  3402               	retlw	high _I2C_DO_TX
  1910  0420  3412               	retlw	low _I2C_DO_RX
  1911  0421  3403               	retlw	high _I2C_DO_RX
  1912  0422  34E2               	retlw	low _I2C_DO_RCEN
  1913  0423  340F               	retlw	high _I2C_DO_RCEN
  1914  0424  3477               	retlw	low _I2C_DO_TX_EMPTY
  1915  0425  3404               	retlw	high _I2C_DO_TX_EMPTY
  1916  0426  3484               	retlw	low _I2C_DO_SEND_RESTART_READ
  1917  0427  340F               	retlw	high _I2C_DO_SEND_RESTART_READ
  1918  0428  3489               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  1919  0429  340F               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  1920  042A  348E               	retlw	low _I2C_DO_SEND_RESTART
  1921  042B  340F               	retlw	high _I2C_DO_SEND_RESTART
  1922  042C  3493               	retlw	low _I2C_DO_SEND_STOP
  1923  042D  340F               	retlw	high _I2C_DO_SEND_STOP
  1924  042E  3498               	retlw	low _I2C_DO_RX_ACK
  1925  042F  340F               	retlw	high _I2C_DO_RX_ACK
  1926  0430  349D               	retlw	low _I2C_DO_RX_NACK_STOP
  1927  0431  340F               	retlw	high _I2C_DO_RX_NACK_STOP
  1928  0432  34A2               	retlw	low _I2C_DO_RX_NACK_RESTART
  1929  0433  340F               	retlw	high _I2C_DO_RX_NACK_RESTART
  1930  0434  34A7               	retlw	low _I2C_DO_RESET
  1931  0435  340F               	retlw	high _I2C_DO_RESET
  1932  0436  34D4               	retlw	low _I2C_DO_ADDRESS_NACK
  1933  0437  3404               	retlw	high _I2C_DO_ADDRESS_NACK
  1934  0438                     __end_of_i2c_fsmStateTable:
  1935  000F                     _PORTDbits	set	15
  1936  0012                     _PIR2bits	set	18
  1937  0011                     _PIR1bits	set	17
  1938  000B                     _INTCONbits	set	11
  1939  008B                     _SSPIF	set	139
  1940  0092                     _PIE2bits	set	146
  1941  0091                     _PIE1bits	set	145
  1942  009D                     _ADCON0bits	set	157
  1943  009D                     _ADCON0	set	157
  1944  009C                     _ADRESH	set	156
  1945  009B                     _ADRESL	set	155
  1946  009E                     _ADCON1	set	158
  1947  0097                     _WDTCON	set	151
  1948  0098                     _OSCTUNE	set	152
  1949  0099                     _OSCCON	set	153
  1950  0095                     _OPTION_REGbits	set	149
  1951  008F                     _TRISD	set	143
  1952  008E                     _TRISC	set	142
  1953  008D                     _TRISB	set	141
  1954  008C                     _TRISA	set	140
  1955  0090                     _TRISE	set	144
  1956  0474                     _TRISC4	set	1140
  1957  0473                     _TRISC3	set	1139
  1958  04D6                     _PLLR	set	1238
  1959  010C                     _LATAbits	set	268
  1960  0116                     _BORCON	set	278
  1961  011D                     _APFCON	set	285
  1962  010E                     _LATC	set	270
  1963  010D                     _LATB	set	269
  1964  010C                     _LATA	set	268
  1965  010F                     _LATD	set	271
  1966  0110                     _LATE	set	272
  1967  0196                     _EECON2	set	406
  1968  0193                     _EEDATL	set	403
  1969  0194                     _EEDATH	set	404
  1970  0195                     _EECON1bits	set	405
  1971  0192                     _EEADRH	set	402
  1972  0191                     _EEADRL	set	401
  1973  0199                     _RCREG	set	409
  1974  019D                     _RCSTAbits	set	413
  1975  019A                     _TXREG	set	410
  1976  019E                     _TXSTAbits	set	414
  1977  019C                     _SPBRGH	set	412
  1978  019B                     _SPBRGL	set	411
  1979  019E                     _TXSTA	set	414
  1980  019D                     _RCSTA	set	413
  1981  019F                     _BAUDCON	set	415
  1982  018C                     _ANSELA	set	396
  1983  0190                     _ANSELE	set	400
  1984  018D                     _ANSELB	set	397
  1985  018F                     _ANSELD	set	399
  1986  0215                     _SSPCON	set	533
  1987  0214                     _SSPSTATbits	set	532
  1988  0216                     _SSPCON2bits	set	534
  1989  0211                     _SSPBUF	set	529
  1990  0215                     _SSPCON1bits	set	533
  1991  0212                     _SSPADD	set	530
  1992  0216                     _SSPCON2	set	534
  1993  0215                     _SSPCON1	set	533
  1994  0214                     _SSPSTAT	set	532
  1995  020D                     _WPUB	set	525
  1996  0210                     _WPUE	set	528
  1997  10B3                     _RCEN	set	4275
  1998  10B6                     _ACKSTAT	set	4278
  1999  10B4                     _ACKEN	set	4276
  2000  10B5                     _ACKDT	set	4277
  2001  10B2                     _PEN	set	4274
  2002  10B1                     _RSEN	set	4273
  2003  10B0                     _SEN	set	4272
  2004  0438                     STR_7:
  2005  0438  3420               	retlw	32	;' '
  2006  0439  342D               	retlw	45	;'-'
  2007  043A  343E               	retlw	62	;'>'
  2008  043B  3420               	retlw	32	;' '
  2009  043C  344C               	retlw	76	;'L'
  2010  043D  3445               	retlw	69	;'E'
  2011  043E  3444               	retlw	68	;'D'
  2012  043F  3420               	retlw	32	;' '
  2013  0440  344F               	retlw	79	;'O'
  2014  0441  3446               	retlw	70	;'F'
  2015  0442  3446               	retlw	70	;'F'
  2016  0443  3421               	retlw	33	;'!'
  2017  0444  3421               	retlw	33	;'!'
  2018  0445  340D               	retlw	13
  2019  0446  340A               	retlw	10
  2020  0447  3400               	retlw	0
  2021                           
  2022                           	psect	stringtext2
  2023  075E                     __pstringtext2:
  2024  075E                     STR_6:
  2025  075E  3420               	retlw	32	;' '
  2026  075F  342D               	retlw	45	;'-'
  2027  0760  343E               	retlw	62	;'>'
  2028  0761  3420               	retlw	32	;' '
  2029  0762  344C               	retlw	76	;'L'
  2030  0763  3445               	retlw	69	;'E'
  2031  0764  3444               	retlw	68	;'D'
  2032  0765  3420               	retlw	32	;' '
  2033  0766  344F               	retlw	79	;'O'
  2034  0767  344E               	retlw	78	;'N'
  2035  0768  3421               	retlw	33	;'!'
  2036  0769  3421               	retlw	33	;'!'
  2037  076A  340D               	retlw	13
  2038  076B  340A               	retlw	10
  2039  076C  3400               	retlw	0
  2040                           
  2041                           	psect	stringtext3
  2042  076D                     __pstringtext3:
  2043  076D                     STR_4:
  2044  076D  3445               	retlw	69	;'E'
  2045  076E  3474               	retlw	116	;'t'
  2046  076F  3461               	retlw	97	;'a'
  2047  0770  3470               	retlw	112	;'p'
  2048  0771  3465               	retlw	101	;'e'
  2049  0772  3420               	retlw	32	;' '
  2050  0773  3463               	retlw	99	;'c'
  2051  0774  346F               	retlw	111	;'o'
  2052  0775  346E               	retlw	110	;'n'
  2053  0776  3466               	retlw	102	;'f'
  2054  0777  346F               	retlw	111	;'o'
  2055  0778  3472               	retlw	114	;'r'
  2056  0779  346D               	retlw	109	;'m'
  2057  077A  3465               	retlw	101	;'e'
  2058  077B  3400               	retlw	0
  2059                           
  2060                           	psect	stringtext4
  2061  077C                     __pstringtext4:
  2062  077C                     STR_1:
  2063  077C  3454               	retlw	84	;'T'
  2064  077D  3465               	retlw	101	;'e'
  2065  077E  3473               	retlw	115	;'s'
  2066  077F  3474               	retlw	116	;'t'
  2067  0780  3420               	retlw	32	;' '
  2068  0781  3465               	retlw	101	;'e'
  2069  0782  346E               	retlw	110	;'n'
  2070  0783  3420               	retlw	32	;' '
  2071  0784  3463               	retlw	99	;'c'
  2072  0785  346F               	retlw	111	;'o'
  2073  0786  3475               	retlw	117	;'u'
  2074  0787  3472               	retlw	114	;'r'
  2075  0788  3473               	retlw	115	;'s'
  2076  0789  3400               	retlw	0
  2077                           
  2078                           	psect	stringtext5
  2079  07A4                     __pstringtext5:
  2080  07A4                     STR_3:
  2081  07A4  3446               	retlw	70	;'F'
  2082  07A5  3469               	retlw	105	;'i'
  2083  07A6  346E               	retlw	110	;'n'
  2084  07A7  3420               	retlw	32	;' '
  2085  07A8  3465               	retlw	101	;'e'
  2086  07A9  3474               	retlw	116	;'t'
  2087  07AA  3461               	retlw	97	;'a'
  2088  07AB  3470               	retlw	112	;'p'
  2089  07AC  3465               	retlw	101	;'e'
  2090  07AD  3420               	retlw	32	;' '
  2091  07AE  3431               	retlw	49	;'1'
  2092  07AF  3400               	retlw	0
  2093                           
  2094                           	psect	stringtext6
  2095  07DD                     __pstringtext6:
  2096  07DD                     STR_5:
  2097  07DD  3448               	retlw	72	;'H'
  2098  07DE  3465               	retlw	101	;'e'
  2099  07DF  346C               	retlw	108	;'l'
  2100  07E0  346C               	retlw	108	;'l'
  2101  07E1  346F               	retlw	111	;'o'
  2102  07E2  3421               	retlw	33	;'!'
  2103  07E3  340D               	retlw	13
  2104  07E4  340A               	retlw	10
  2105  07E5  3400               	retlw	0
  2106                           
  2107                           	psect	stringtext7
  2108  07F8                     __pstringtext7:
  2109  07F8                     STR_2:
  2110  07F8  3445               	retlw	69	;'E'
  2111  07F9  3474               	retlw	116	;'t'
  2112  07FA  3461               	retlw	97	;'a'
  2113  07FB  3470               	retlw	112	;'p'
  2114  07FC  3465               	retlw	101	;'e'
  2115  07FD  3420               	retlw	32	;' '
  2116  07FE  3431               	retlw	49	;'1'
  2117  07FF  3400               	retlw	0
  2118                           
  2119                           	psect	stringtext8
  2120  0000                     __pstringtext8:
  2121                           
  2122                           	psect	cinit
  2123  0049                     start_initialization:	
  2124                           ; #config settings
  2125                           
  2126  0049                     __initialization:
  2127                           
  2128                           ; Initialize objects allocated to BANK0
  2129  0049  318F  274D  3180   	fcall	__pidataBANK0	;fetch initializer
  2130  004C  00E8               	movwf	__pdataBANK0& (0+127)
  2131                           
  2132                           ; Clear objects allocated to COMMON
  2133  004D  01FD               	clrf	__pbssCOMMON& (0+127)
  2134                           
  2135                           ; Clear objects allocated to BANK0
  2136  004E  304A               	movlw	low __pbssBANK0
  2137  004F  0084               	movwf	4
  2138  0050  3000               	movlw	high __pbssBANK0
  2139  0051  0085               	movwf	5
  2140  0052  301E               	movlw	30
  2141  0053  318F  27DC  3180   	fcall	clear_ram0
  2142                           
  2143                           ; Clear objects allocated to BANK1
  2144  0056  30A0               	movlw	low __pbssBANK1
  2145  0057  0084               	movwf	4
  2146  0058  3000               	movlw	high __pbssBANK1
  2147  0059  0085               	movwf	5
  2148  005A  3035               	movlw	53
  2149  005B  318F  27DC  3180   	fcall	clear_ram0
  2150                           
  2151                           ; Clear objects allocated to BANK2
  2152  005E  3020               	movlw	low __pbssBANK2
  2153  005F  0084               	movwf	4
  2154  0060  3001               	movlw	high __pbssBANK2
  2155  0061  0085               	movwf	5
  2156  0062  3020               	movlw	32
  2157  0063  318F  27DC  3180   	fcall	clear_ram0
  2158  0066                     end_of_initialization:	
  2159                           ;End of C runtime variable initialization code
  2160                           
  2161  0066                     __end_of__initialization:
  2162  0066  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2163  0067  0020               	movlb	0
  2164  0068  3180  286A         	ljmp	_main	;jump to C main() function
  2165                           
  2166                           	psect	bssCOMMON
  2167  007D                     __pbssCOMMON:
  2168  007D                     _RS:
  2169  007D                     	ds	1
  2170                           
  2171                           	psect	bssBANK0
  2172  004A                     __pbssBANK0:
  2173  004A                     _nout:
  2174  004A                     	ds	2
  2175  004C                     _width:
  2176  004C                     	ds	2
  2177  004E                     _prec:
  2178  004E                     	ds	2
  2179  0050                     _flags:
  2180  0050                     	ds	2
  2181  0052                     _EUSART_ErrorHandler:
  2182  0052                     	ds	2
  2183  0054                     _EUSART_OverrunErrorHandler:
  2184  0054                     	ds	2
  2185  0056                     _EUSART_FramingErrorHandler:
  2186  0056                     	ds	2
  2187  0058                     _EUSART_RxDefaultInterruptHandler:
  2188  0058                     	ds	2
  2189  005A                     _EUSART_TxDefaultInterruptHandler:
  2190  005A                     	ds	2
  2191  005C                     _ADC_InterruptHandler:
  2192  005C                     	ds	2
  2193  005E                     _MSSP_InterruptHandler:
  2194  005E                     	ds	2
  2195  0060                     _i2c_add:
  2196  0060                     	ds	1
  2197  0061                     _eusartRxLastError:
  2198  0061                     	ds	1
  2199  0062                     _eusartRxCount:
  2200  0062                     	ds	1
  2201  0063                     _eusartRxTail:
  2202  0063                     	ds	1
  2203  0064                     _eusartRxHead:
  2204  0064                     	ds	1
  2205  0065                     _eusartTxBufferRemaining:
  2206  0065                     	ds	1
  2207  0066                     _eusartTxTail:
  2208  0066                     	ds	1
  2209  0067                     _eusartTxHead:
  2210  0067                     	ds	1
  2211                           
  2212                           	psect	dataBANK0
  2213  0068                     __pdataBANK0:
  2214  0068                     _BackLight_State:
  2215  0068                     	ds	1
  2216                           
  2217                           	psect	bssBANK1
  2218  00A0                     __pbssBANK1:
  2219  00A0                     _I2C_Status:
  2220  00A0                     	ds	29
  2221  00BD                     _eusartRxStatusBuffer:
  2222  00BD                     	ds	8
  2223  00C5                     _eusartRxBuffer:
  2224  00C5                     	ds	8
  2225  00CD                     _eusartTxBuffer:
  2226  00CD                     	ds	8
  2227                           
  2228                           	psect	bssBANK2
  2229  0120                     __pbssBANK2:
  2230  0120                     _dbuf:
  2231  0120                     	ds	32
  2232                           
  2233                           	psect	clrtext
  2234  0FDC                     clear_ram0:	
  2235                           ;	Called with FSR0 containing the base address, and
  2236                           ;	WREG with the size to clear
  2237                           
  2238  0FDC  0064               	clrwdt	;clear the watchdog before getting into this loop
  2239  0FDD                     clrloop0:
  2240  0FDD  0180               	clrf	0	;clear RAM location pointed to by FSR
  2241  0FDE  3101               	addfsr 0,1
  2242  0FDF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2243  0FE0  2FDD               	goto	clrloop0	;have we reached the end yet?
  2244  0FE1  3400               	retlw	0	;all done for this memory range, return
  2245                           
  2246                           	psect	cstackCOMMON
  2247  0070                     __pcstackCOMMON:
  2248  0070                     ?_I2C_SetBuffer:
  2249  0070                     ?_I2C_Initialize:	
  2250                           ; 1 bytes @ 0x0
  2251                           
  2252  0070                     ?_OSCILLATOR_Initialize:	
  2253                           ; 1 bytes @ 0x0
  2254                           
  2255  0070                     ?_WDT_Initialize:	
  2256                           ; 1 bytes @ 0x0
  2257                           
  2258  0070                     ?_ADC_Initialize:	
  2259                           ; 1 bytes @ 0x0
  2260                           
  2261  0070                     ?_EUSART_Initialize:	
  2262                           ; 1 bytes @ 0x0
  2263                           
  2264  0070                     ?_EUSART_Receive_ISR:	
  2265                           ; 1 bytes @ 0x0
  2266                           
  2267  0070                     ?_EUSART_Transmit_ISR:	
  2268                           ; 1 bytes @ 0x0
  2269                           
  2270  0070                     ??_EUSART_Transmit_ISR:	
  2271                           ; 1 bytes @ 0x0
  2272                           
  2273  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  2274                           ; 1 bytes @ 0x0
  2275                           
  2276  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  2277                           ; 1 bytes @ 0x0
  2278                           
  2279  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  2280                           ; 1 bytes @ 0x0
  2281                           
  2282  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  2283                           ; 1 bytes @ 0x0
  2284                           
  2285  0070                     ?_EUSART_DefaultErrorHandler:	
  2286                           ; 1 bytes @ 0x0
  2287                           
  2288  0070                     ?_EUSART_RxDataHandler:	
  2289                           ; 1 bytes @ 0x0
  2290                           
  2291  0070                     ??_EUSART_RxDataHandler:	
  2292                           ; 1 bytes @ 0x0
  2293                           
  2294  0070                     ?_I2C_DO_IDLE:	
  2295                           ; 1 bytes @ 0x0
  2296                           
  2297  0070                     ??_I2C_DO_IDLE:	
  2298                           ; 1 bytes @ 0x0
  2299                           
  2300  0070                     ?_I2C_DO_SEND_ADR_READ:	
  2301                           ; 1 bytes @ 0x0
  2302                           
  2303  0070                     ??_I2C_DO_SEND_ADR_READ:	
  2304                           ; 1 bytes @ 0x0
  2305                           
  2306  0070                     ?_I2C_DO_SEND_ADR_WRITE:	
  2307                           ; 1 bytes @ 0x0
  2308                           
  2309  0070                     ?_I2C_DO_TX:	
  2310                           ; 1 bytes @ 0x0
  2311                           
  2312  0070                     ?_I2C_DO_RX:	
  2313                           ; 1 bytes @ 0x0
  2314                           
  2315  0070                     ?_I2C_DO_RCEN:	
  2316                           ; 1 bytes @ 0x0
  2317                           
  2318  0070                     ??_I2C_DO_RCEN:	
  2319                           ; 1 bytes @ 0x0
  2320                           
  2321  0070                     ?_I2C_DO_TX_EMPTY:	
  2322                           ; 1 bytes @ 0x0
  2323                           
  2324  0070                     ?_I2C_DO_SEND_RESTART_READ:	
  2325                           ; 1 bytes @ 0x0
  2326                           
  2327  0070                     ??_I2C_DO_SEND_RESTART_READ:	
  2328                           ; 1 bytes @ 0x0
  2329                           
  2330  0070                     ?_I2C_DO_SEND_RESTART_WRITE:	
  2331                           ; 1 bytes @ 0x0
  2332                           
  2333  0070                     ??_I2C_DO_SEND_RESTART_WRITE:	
  2334                           ; 1 bytes @ 0x0
  2335                           
  2336  0070                     ?_I2C_DO_SEND_RESTART:	
  2337                           ; 1 bytes @ 0x0
  2338                           
  2339  0070                     ??_I2C_DO_SEND_RESTART:	
  2340                           ; 1 bytes @ 0x0
  2341                           
  2342  0070                     ?_I2C_DO_SEND_STOP:	
  2343                           ; 1 bytes @ 0x0
  2344                           
  2345  0070                     ??_I2C_DO_SEND_STOP:	
  2346                           ; 1 bytes @ 0x0
  2347                           
  2348  0070                     ?_I2C_DO_RX_ACK:	
  2349                           ; 1 bytes @ 0x0
  2350                           
  2351  0070                     ??_I2C_DO_RX_ACK:	
  2352                           ; 1 bytes @ 0x0
  2353                           
  2354  0070                     ?_I2C_DO_RX_NACK_STOP:	
  2355                           ; 1 bytes @ 0x0
  2356                           
  2357  0070                     ??_I2C_DO_RX_NACK_STOP:	
  2358                           ; 1 bytes @ 0x0
  2359                           
  2360  0070                     ?_I2C_DO_RX_NACK_RESTART:	
  2361                           ; 1 bytes @ 0x0
  2362                           
  2363  0070                     ??_I2C_DO_RX_NACK_RESTART:	
  2364                           ; 1 bytes @ 0x0
  2365                           
  2366  0070                     ?_I2C_DO_RESET:	
  2367                           ; 1 bytes @ 0x0
  2368                           
  2369  0070                     ??_I2C_DO_RESET:	
  2370                           ; 1 bytes @ 0x0
  2371                           
  2372  0070                     ?_I2C_DO_ADDRESS_NACK:	
  2373                           ; 1 bytes @ 0x0
  2374                           
  2375  0070                     ?_I2C_MasterIsr:	
  2376                           ; 1 bytes @ 0x0
  2377                           
  2378  0070                     ?_I2C_MasterClearIrq:	
  2379                           ; 1 bytes @ 0x0
  2380                           
  2381  0070                     ??_I2C_MasterClearIrq:	
  2382                           ; 1 bytes @ 0x0
  2383                           
  2384  0070                     ?_I2C_SetCallback:	
  2385                           ; 1 bytes @ 0x0
  2386                           
  2387  0070                     ?_I2C_MasterFsm:	
  2388                           ; 1 bytes @ 0x0
  2389                           
  2390  0070                     ?_I2C_MasterIsNack:	
  2391                           ; 1 bytes @ 0x0
  2392                           
  2393  0070                     ??_I2C_MasterIsNack:	
  2394                           ; 1 bytes @ 0x0
  2395                           
  2396  0070                     ?_I2C_MasterSendTxData:	
  2397                           ; 1 bytes @ 0x0
  2398                           
  2399  0070                     ??_I2C_MasterSendTxData:	
  2400                           ; 1 bytes @ 0x0
  2401                           
  2402  0070                     ?_I2C_MasterGetRxData:	
  2403                           ; 1 bytes @ 0x0
  2404                           
  2405  0070                     ??_I2C_MasterGetRxData:	
  2406                           ; 1 bytes @ 0x0
  2407                           
  2408  0070                     ?_I2C_MasterSendAck:	
  2409                           ; 1 bytes @ 0x0
  2410                           
  2411  0070                     ??_I2C_MasterSendAck:	
  2412                           ; 1 bytes @ 0x0
  2413                           
  2414  0070                     ?_I2C_MasterStartRx:	
  2415                           ; 1 bytes @ 0x0
  2416                           
  2417  0070                     ??_I2C_MasterStartRx:	
  2418                           ; 1 bytes @ 0x0
  2419                           
  2420  0070                     ?_I2C_MasterSetIrq:	
  2421                           ; 1 bytes @ 0x0
  2422                           
  2423  0070                     ??_I2C_MasterSetIrq:	
  2424                           ; 1 bytes @ 0x0
  2425                           
  2426  0070                     ?_I2C_MasterEnableRestart:	
  2427                           ; 1 bytes @ 0x0
  2428                           
  2429  0070                     ??_I2C_MasterEnableRestart:	
  2430                           ; 1 bytes @ 0x0
  2431                           
  2432  0070                     ?_I2C_MasterStop:	
  2433                           ; 1 bytes @ 0x0
  2434                           
  2435  0070                     ??_I2C_MasterStop:	
  2436                           ; 1 bytes @ 0x0
  2437                           
  2438  0070                     ?_I2C_MasterSendNack:	
  2439                           ; 1 bytes @ 0x0
  2440                           
  2441  0070                     ??_I2C_MasterSendNack:	
  2442                           ; 1 bytes @ 0x0
  2443                           
  2444  0070                     ?_I2C_Master_Init:	
  2445                           ; 1 bytes @ 0x0
  2446                           
  2447  0070                     ?_LCD_Init:	
  2448                           ; 1 bytes @ 0x0
  2449                           
  2450  0070                     ?_LCD_Write_Char:	
  2451                           ; 1 bytes @ 0x0
  2452                           
  2453  0070                     ?_LCD_Clear:	
  2454                           ; 1 bytes @ 0x0
  2455                           
  2456  0070                     ?_LCD_CMD:	
  2457                           ; 1 bytes @ 0x0
  2458                           
  2459  0070                     ?_IO_Expander_Write:	
  2460                           ; 1 bytes @ 0x0
  2461                           
  2462  0070                     ?_PIN_MANAGER_Initialize:	
  2463                           ; 1 bytes @ 0x0
  2464                           
  2465  0070                     ?_SYSTEM_Initialize:	
  2466                           ; 1 bytes @ 0x0
  2467                           
  2468  0070                     ?_EUSART_Read:	
  2469                           ; 1 bytes @ 0x0
  2470                           
  2471  0070                     ?_EUSART_Write:	
  2472                           ; 1 bytes @ 0x0
  2473                           
  2474  0070                     ?_putch:	
  2475                           ; 1 bytes @ 0x0
  2476                           
  2477  0070                     ?_INTERRUPT_InterruptManager:	
  2478                           ; 1 bytes @ 0x0
  2479                           
  2480  0070                     ?_DATAEE_ReadByte:	
  2481                           ; 1 bytes @ 0x0
  2482                           
  2483  0070                     ?_main:	
  2484                           ; 1 bytes @ 0x0
  2485                           
  2486  0070                     ?_I2C_Master_Wait:	
  2487                           ; 1 bytes @ 0x0
  2488                           
  2489  0070                     ?_I2C_Master_Start:	
  2490                           ; 1 bytes @ 0x0
  2491                           
  2492  0070                     ?_I2C_Master_Stop:	
  2493                           ; 1 bytes @ 0x0
  2494                           
  2495  0070                     ?_I2C_Master_Write:	
  2496                           ; 1 bytes @ 0x0
  2497                           
  2498  0070                     ?_LCD_Write_4Bit:	
  2499                           ; 1 bytes @ 0x0
  2500                           
  2501  0070                     I2C_MasterSendTxData@data:	
  2502                           ; 1 bytes @ 0x0
  2503                           
  2504  0070                     I2C_SetBuffer@bufferSize:	
  2505                           ; 1 bytes @ 0x0
  2506                           
  2507  0070                     I2C_SetCallback@cb:	
  2508                           ; 2 bytes @ 0x0
  2509                           
  2510                           
  2511                           ; 2 bytes @ 0x0
  2512  0070                     	ds	1
  2513  0071                     ??_EUSART_Receive_ISR:
  2514  0071                     ??_EUSART_DefaultErrorHandler:	
  2515                           ; 1 bytes @ 0x1
  2516                           
  2517  0071                     ??_I2C_DO_SEND_ADR_WRITE:	
  2518                           ; 1 bytes @ 0x1
  2519                           
  2520                           
  2521                           ; 1 bytes @ 0x1
  2522  0071                     	ds	1
  2523  0072                     ??_I2C_SetBuffer:
  2524  0072                     I2C_SetCallback@ptr:	
  2525                           ; 1 bytes @ 0x2
  2526                           
  2527                           
  2528                           ; 1 bytes @ 0x2
  2529  0072                     	ds	1
  2530  0073                     ??_I2C_SetCallback:
  2531  0073                     I2C_SetBuffer@buffer:	
  2532                           ; 1 bytes @ 0x3
  2533                           
  2534                           
  2535                           ; 1 bytes @ 0x3
  2536  0073                     	ds	1
  2537  0074                     I2C_SetCallback@idx:
  2538                           
  2539                           ; 1 bytes @ 0x4
  2540  0074                     	ds	1
  2541  0075                     ?_I2C_SetDataCompleteCallback:
  2542  0075                     I2C_SetDataCompleteCallback@cb:	
  2543                           ; 1 bytes @ 0x5
  2544                           
  2545                           
  2546                           ; 2 bytes @ 0x5
  2547  0075                     	ds	2
  2548  0077                     I2C_SetDataCompleteCallback@ptr:
  2549                           
  2550                           ; 1 bytes @ 0x7
  2551  0077                     	ds	1
  2552  0078                     ??_I2C_SetDataCompleteCallback:
  2553                           
  2554                           ; 1 bytes @ 0x8
  2555  0078                     	ds	1
  2556  0079                     ?_rd1RegCompleteHandler:
  2557  0079                     ?_rd2RegCompleteHandler:	
  2558                           ; 1 bytes @ 0x9
  2559                           
  2560  0079                     ?_wr1RegCompleteHandler:	
  2561                           ; 1 bytes @ 0x9
  2562                           
  2563  0079                     ?_wr2RegCompleteHandler:	
  2564                           ; 1 bytes @ 0x9
  2565                           
  2566  0079                     ?_rdBlkRegCompleteHandler:	
  2567                           ; 1 bytes @ 0x9
  2568                           
  2569  0079                     ?_I2C_CallbackReturnStop:	
  2570                           ; 1 bytes @ 0x9
  2571                           
  2572  0079                     ?_I2C_CallbackReturnReset:	
  2573                           ; 1 bytes @ 0x9
  2574                           
  2575  0079                     rd1RegCompleteHandler@ptr:	
  2576                           ; 1 bytes @ 0x9
  2577                           
  2578  0079                     rd2RegCompleteHandler@ptr:	
  2579                           ; 1 bytes @ 0x9
  2580                           
  2581  0079                     wr1RegCompleteHandler@ptr:	
  2582                           ; 1 bytes @ 0x9
  2583                           
  2584  0079                     wr2RegCompleteHandler@ptr:	
  2585                           ; 1 bytes @ 0x9
  2586                           
  2587  0079                     rdBlkRegCompleteHandler@ptr:	
  2588                           ; 1 bytes @ 0x9
  2589                           
  2590  0079                     I2C_CallbackReturnStop@funPtr:	
  2591                           ; 1 bytes @ 0x9
  2592                           
  2593  0079                     I2C_CallbackReturnReset@funPtr:	
  2594                           ; 1 bytes @ 0x9
  2595                           
  2596                           
  2597                           ; 1 bytes @ 0x9
  2598  0079                     	ds	1
  2599  007A                     ??_rd1RegCompleteHandler:
  2600  007A                     ??_rd2RegCompleteHandler:	
  2601                           ; 1 bytes @ 0xA
  2602                           
  2603  007A                     ??_wr1RegCompleteHandler:	
  2604                           ; 1 bytes @ 0xA
  2605                           
  2606  007A                     ??_wr2RegCompleteHandler:	
  2607                           ; 1 bytes @ 0xA
  2608                           
  2609  007A                     ??_rdBlkRegCompleteHandler:	
  2610                           ; 1 bytes @ 0xA
  2611                           
  2612  007A                     ??_I2C_DO_TX:	
  2613                           ; 1 bytes @ 0xA
  2614                           
  2615  007A                     ??_I2C_DO_RX:	
  2616                           ; 1 bytes @ 0xA
  2617                           
  2618  007A                     ??_I2C_DO_TX_EMPTY:	
  2619                           ; 1 bytes @ 0xA
  2620                           
  2621  007A                     ??_I2C_DO_ADDRESS_NACK:	
  2622                           ; 1 bytes @ 0xA
  2623                           
  2624  007A                     ??_I2C_CallbackReturnStop:	
  2625                           ; 1 bytes @ 0xA
  2626                           
  2627  007A                     ??_I2C_CallbackReturnReset:	
  2628                           ; 1 bytes @ 0xA
  2629                           
  2630                           
  2631                           ; 1 bytes @ 0xA
  2632  007A                     	ds	3
  2633  007D                     ??_I2C_MasterIsr:
  2634  007D                     ??_INTERRUPT_InterruptManager:	
  2635                           ; 1 bytes @ 0xD
  2636                           
  2637                           
  2638                           	psect	cstackBANK0
  2639  0020                     __pcstackBANK0:	
  2640                           ; 1 bytes @ 0xD
  2641                           
  2642  0020                     ??_I2C_MasterFsm:
  2643                           
  2644                           ; 1 bytes @ 0x0
  2645  0020                     	ds	3
  2646  0023                     ??_I2C_Initialize:
  2647  0023                     ??_OSCILLATOR_Initialize:	
  2648                           ; 1 bytes @ 0x3
  2649                           
  2650  0023                     ??_WDT_Initialize:	
  2651                           ; 1 bytes @ 0x3
  2652                           
  2653  0023                     ??_ADC_Initialize:	
  2654                           ; 1 bytes @ 0x3
  2655                           
  2656  0023                     ?_EUSART_SetRxInterruptHandler:	
  2657                           ; 1 bytes @ 0x3
  2658                           
  2659  0023                     ?_EUSART_SetTxInterruptHandler:	
  2660                           ; 1 bytes @ 0x3
  2661                           
  2662  0023                     ?_EUSART_SetFramingErrorHandler:	
  2663                           ; 1 bytes @ 0x3
  2664                           
  2665  0023                     ?_EUSART_SetOverrunErrorHandler:	
  2666                           ; 1 bytes @ 0x3
  2667                           
  2668  0023                     ?_EUSART_SetErrorHandler:	
  2669                           ; 1 bytes @ 0x3
  2670                           
  2671  0023                     ??_I2C_Master_Init:	
  2672                           ; 1 bytes @ 0x3
  2673                           
  2674  0023                     ??_PIN_MANAGER_Initialize:	
  2675                           ; 1 bytes @ 0x3
  2676                           
  2677  0023                     ??_EUSART_Read:	
  2678                           ; 1 bytes @ 0x3
  2679                           
  2680  0023                     ??_EUSART_Write:	
  2681                           ; 1 bytes @ 0x3
  2682                           
  2683  0023                     ?_DATAEE_WriteByte:	
  2684                           ; 1 bytes @ 0x3
  2685                           
  2686  0023                     ??_DATAEE_ReadByte:	
  2687                           ; 1 bytes @ 0x3
  2688                           
  2689  0023                     ??_I2C_Master_Wait:	
  2690                           ; 1 bytes @ 0x3
  2691                           
  2692  0023                     ??_I2C_Master_Start:	
  2693                           ; 1 bytes @ 0x3
  2694                           
  2695  0023                     ??_I2C_Master_Stop:	
  2696                           ; 1 bytes @ 0x3
  2697                           
  2698  0023                     ??_I2C_Master_Write:	
  2699                           ; 1 bytes @ 0x3
  2700                           
  2701  0023                     ?_ADC_GetConversion:	
  2702                           ; 1 bytes @ 0x3
  2703                           
  2704  0023                     DATAEE_WriteByte@bData:	
  2705                           ; 2 bytes @ 0x3
  2706                           
  2707  0023                     DATAEE_ReadByte@bAdd:	
  2708                           ; 1 bytes @ 0x3
  2709                           
  2710  0023                     I2C_Master_Write@data:	
  2711                           ; 1 bytes @ 0x3
  2712                           
  2713  0023                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2714                           ; 1 bytes @ 0x3
  2715                           
  2716  0023                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2717                           ; 2 bytes @ 0x3
  2718                           
  2719  0023                     EUSART_SetErrorHandler@interruptHandler:	
  2720                           ; 2 bytes @ 0x3
  2721                           
  2722  0023                     EUSART_SetTxInterruptHandler@interruptHandler:	
  2723                           ; 2 bytes @ 0x3
  2724                           
  2725  0023                     EUSART_SetRxInterruptHandler@interruptHandler:	
  2726                           ; 2 bytes @ 0x3
  2727                           
  2728                           
  2729                           ; 2 bytes @ 0x3
  2730  0023                     	ds	1
  2731  0024                     ??_IO_Expander_Write:
  2732  0024                     ??_DATAEE_WriteByte:	
  2733                           ; 1 bytes @ 0x4
  2734                           
  2735  0024                     EUSART_Read@readValue:	
  2736                           ; 1 bytes @ 0x4
  2737                           
  2738  0024                     EUSART_Write@txData:	
  2739                           ; 1 bytes @ 0x4
  2740                           
  2741  0024                     DATAEE_WriteByte@bAdd:	
  2742                           ; 1 bytes @ 0x4
  2743                           
  2744  0024                     IO_Expander_Write@Data:	
  2745                           ; 1 bytes @ 0x4
  2746                           
  2747                           
  2748                           ; 1 bytes @ 0x4
  2749  0024                     	ds	1
  2750  0025                     ??_EUSART_Initialize:
  2751  0025                     ??_EUSART_SetRxInterruptHandler:	
  2752                           ; 1 bytes @ 0x5
  2753                           
  2754  0025                     ??_EUSART_SetTxInterruptHandler:	
  2755                           ; 1 bytes @ 0x5
  2756                           
  2757  0025                     ??_EUSART_SetFramingErrorHandler:	
  2758                           ; 1 bytes @ 0x5
  2759                           
  2760  0025                     ??_EUSART_SetOverrunErrorHandler:	
  2761                           ; 1 bytes @ 0x5
  2762                           
  2763  0025                     ??_EUSART_SetErrorHandler:	
  2764                           ; 1 bytes @ 0x5
  2765                           
  2766  0025                     ??_ADC_GetConversion:	
  2767                           ; 1 bytes @ 0x5
  2768                           
  2769  0025                     ??_putch:	
  2770                           ; 1 bytes @ 0x5
  2771                           
  2772  0025                     ??_LCD_Write_4Bit:	
  2773                           ; 1 bytes @ 0x5
  2774                           
  2775  0025                     putch@txData:	
  2776                           ; 1 bytes @ 0x5
  2777                           
  2778  0025                     DATAEE_WriteByte@GIEBitValue:	
  2779                           ; 1 bytes @ 0x5
  2780                           
  2781                           
  2782                           ; 1 bytes @ 0x5
  2783  0025                     	ds	1
  2784  0026                     ??_SYSTEM_Initialize:
  2785  0026                     ?_fputc:	
  2786                           ; 1 bytes @ 0x6
  2787                           
  2788  0026                     ADC_GetConversion@channel:	
  2789                           ; 2 bytes @ 0x6
  2790                           
  2791  0026                     LCD_Write_4Bit@Nibble:	
  2792                           ; 1 bytes @ 0x6
  2793                           
  2794  0026                     fputc@c:	
  2795                           ; 1 bytes @ 0x6
  2796                           
  2797                           
  2798                           ; 2 bytes @ 0x6
  2799  0026                     	ds	1
  2800  0027                     ??_LCD_Write_Char:
  2801  0027                     ??_LCD_CMD:	
  2802                           ; 1 bytes @ 0x7
  2803                           
  2804                           
  2805                           ; 1 bytes @ 0x7
  2806  0027                     	ds	1
  2807  0028                     LCD_CMD@CMD:
  2808  0028                     LCD_Write_Char@Data:	
  2809                           ; 1 bytes @ 0x8
  2810                           
  2811  0028                     fputc@fp:	
  2812                           ; 1 bytes @ 0x8
  2813                           
  2814                           
  2815                           ; 1 bytes @ 0x8
  2816  0028                     	ds	1
  2817  0029                     ??_LCD_Init:
  2818  0029                     ?_LCD_Set_Cursor:	
  2819                           ; 1 bytes @ 0x9
  2820                           
  2821  0029                     ?_LCD_Write_String:	
  2822                           ; 1 bytes @ 0x9
  2823                           
  2824  0029                     ??_LCD_Clear:	
  2825                           ; 1 bytes @ 0x9
  2826                           
  2827  0029                     ??_fputc:	
  2828                           ; 1 bytes @ 0x9
  2829                           
  2830  0029                     LCD_Set_Cursor@COL:	
  2831                           ; 1 bytes @ 0x9
  2832                           
  2833  0029                     LCD_Write_String@Str:	
  2834                           ; 1 bytes @ 0x9
  2835                           
  2836                           
  2837                           ; 2 bytes @ 0x9
  2838  0029                     	ds	1
  2839  002A                     ??_LCD_Set_Cursor:
  2840                           
  2841                           ; 1 bytes @ 0xA
  2842  002A                     	ds	1
  2843  002B                     ??_LCD_Write_String:
  2844  002B                     LCD_Init@I2C_Add:	
  2845                           ; 1 bytes @ 0xB
  2846                           
  2847                           
  2848                           ; 1 bytes @ 0xB
  2849  002B                     	ds	1
  2850  002C                     LCD_Set_Cursor@ROW:
  2851  002C                     LCD_Write_String@i:	
  2852                           ; 1 bytes @ 0xC
  2853                           
  2854                           
  2855                           ; 2 bytes @ 0xC
  2856  002C                     	ds	2
  2857  002E                     ?_vfpfcnvrt:
  2858  002E                     vfpfcnvrt@fmt:	
  2859                           ; 2 bytes @ 0xE
  2860                           
  2861                           
  2862                           ; 1 bytes @ 0xE
  2863  002E                     	ds	1
  2864  002F                     vfpfcnvrt@ap:
  2865                           
  2866                           ; 1 bytes @ 0xF
  2867  002F                     	ds	1
  2868  0030                     ??_vfpfcnvrt:
  2869                           
  2870                           ; 1 bytes @ 0x10
  2871  0030                     	ds	5
  2872  0035                     vfpfcnvrt@fp:
  2873                           
  2874                           ; 1 bytes @ 0x15
  2875  0035                     	ds	1
  2876  0036                     ?_vfprintf:
  2877  0036                     vfprintf@fmt:	
  2878                           ; 2 bytes @ 0x16
  2879                           
  2880                           
  2881                           ; 2 bytes @ 0x16
  2882  0036                     	ds	2
  2883  0038                     vfprintf@ap:
  2884                           
  2885                           ; 1 bytes @ 0x18
  2886  0038                     	ds	1
  2887  0039                     ??_vfprintf:
  2888                           
  2889                           ; 1 bytes @ 0x19
  2890  0039                     	ds	2
  2891  003B                     vfprintf@fp:
  2892                           
  2893                           ; 1 bytes @ 0x1B
  2894  003B                     	ds	1
  2895  003C                     vfprintf@cfmt:
  2896                           
  2897                           ; 2 bytes @ 0x1C
  2898  003C                     	ds	2
  2899  003E                     ?_printf:
  2900  003E                     printf@fmt:	
  2901                           ; 2 bytes @ 0x1E
  2902                           
  2903                           
  2904                           ; 2 bytes @ 0x1E
  2905  003E                     	ds	2
  2906  0040                     ??_printf:
  2907                           
  2908                           ; 1 bytes @ 0x20
  2909  0040                     	ds	1
  2910  0041                     printf@ap:
  2911                           
  2912                           ; 1 bytes @ 0x21
  2913  0041                     	ds	1
  2914  0042                     ??_main:
  2915                           
  2916                           ; 1 bytes @ 0x22
  2917  0042                     	ds	2
  2918  0044                     main@lectureAN1:
  2919                           
  2920                           ; 2 bytes @ 0x24
  2921  0044                     	ds	2
  2922  0046                     main@sauvegarde:
  2923                           
  2924                           ; 2 bytes @ 0x26
  2925  0046                     	ds	2
  2926  0048                     main@reception:
  2927                           
  2928                           ; 1 bytes @ 0x28
  2929  0048                     	ds	1
  2930  0049                     main@compteur:
  2931                           
  2932                           ; 1 bytes @ 0x29
  2933  0049                     	ds	1
  2934                           
  2935                           	psect	maintext
  2936  006A                     __pmaintext:	
  2937 ;;
  2938 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2939 ;;
  2940 ;; *************** function _main *****************
  2941 ;; Defined at:
  2942 ;;		line 51 in file "main.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;		None
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;  adresse         2    0        int 
  2947 ;;  sauvegarde      2   38[BANK0 ] int 
  2948 ;;  code            2    0        int 
  2949 ;;  lectureAN1      2   36[BANK0 ] int 
  2950 ;;  compteur        1   41[BANK0 ] unsigned char 
  2951 ;;  reception       1   40[BANK0 ] unsigned char 
  2952 ;; Return value:  Size  Location     Type
  2953 ;;                  1    wreg      void 
  2954 ;; Registers used:
  2955 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2956 ;; Tracked objects:
  2957 ;;		On entry : B1F/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2962 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2963 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2964 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2965 ;;Total ram usage:        8 bytes
  2966 ;; Hardware stack levels required when called: 13
  2967 ;; This function calls:
  2968 ;;		_ADC_GetConversion
  2969 ;;		_DATAEE_ReadByte
  2970 ;;		_DATAEE_WriteByte
  2971 ;;		_EUSART_Read
  2972 ;;		_I2C_Master_Init
  2973 ;;		_LCD_CMD
  2974 ;;		_LCD_Clear
  2975 ;;		_LCD_Init
  2976 ;;		_LCD_Set_Cursor
  2977 ;;		_LCD_Write_Char
  2978 ;;		_LCD_Write_String
  2979 ;;		_SYSTEM_Initialize
  2980 ;;		_printf
  2981 ;; This function is called by:
  2982 ;;		Startup code after reset
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           
  2987                           ;psect for function _main
  2988  006A                     _main:
  2989  006A                     l3984:	
  2990                           ;incstack = 0
  2991                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2992                           
  2993                           
  2994                           ;main.c: 53:     SYSTEM_Initialize();
  2995  006A  3186  26D5  3180   	fcall	_SYSTEM_Initialize
  2996  006D                     l3986:
  2997                           
  2998                           ;main.c: 59:     (INTCONbits.GIE = 1);
  2999  006D  178B               	bsf	11,7	;volatile
  3000  006E                     l3988:
  3001                           
  3002                           ;main.c: 62:     (INTCONbits.PEIE = 1);
  3003  006E  170B               	bsf	11,6	;volatile
  3004  006F                     l3990:
  3005                           
  3006                           ;main.c: 71:     int lectureAN1;;main.c: 72:     unsigned char reception;;main.c: 73:   
      +                            char compteur = 48;
  3007  006F  3030               	movlw	48
  3008  0070  0020               	movlb	0	; select bank0
  3009  0071  00C2               	movwf	??_main
  3010  0072  0842               	movf	??_main,w
  3011  0073  00C9               	movwf	main@compteur
  3012  0074                     l3992:
  3013  0074                     l3994:
  3014  0074                     l3996:
  3015                           
  3016                           ;main.c: 80:     if (PORTDbits.RD0 == 1) {
  3017  0074  1C0F               	btfss	15,0	;volatile
  3018  0075  2877               	goto	u1411
  3019  0076  2878               	goto	u1410
  3020  0077                     u1411:
  3021  0077  2886               	goto	l4002
  3022  0078                     u1410:
  3023  0078                     l3998:
  3024                           
  3025                           ;main.c: 82:         DATAEE_WriteByte(adresse, code);
  3026  0078  3041               	movlw	65
  3027  0079  00C2               	movwf	??_main
  3028  007A  0842               	movf	??_main,w
  3029  007B  00A3               	movwf	DATAEE_WriteByte@bData
  3030  007C  3000               	movlw	0
  3031  007D  3185  25A4  3180   	fcall	_DATAEE_WriteByte
  3032  0080                     l4000:
  3033                           
  3034                           ;main.c: 83:         sauvegarde = '!';
  3035  0080  3021               	movlw	33
  3036  0081  0020               	movlb	0	; select bank0
  3037  0082  00C6               	movwf	main@sauvegarde
  3038  0083  3000               	movlw	0
  3039  0084  00C7               	movwf	main@sauvegarde+1
  3040                           
  3041                           ;main.c: 85:     } else {
  3042  0085  2891               	goto	l4004
  3043  0086                     l4002:
  3044                           
  3045                           ;main.c: 86:         sauvegarde = DATAEE_ReadByte(adresse);
  3046  0086  3000               	movlw	0
  3047  0087  3187  278A  3180   	fcall	_DATAEE_ReadByte
  3048  008A  0020               	movlb	0	; select bank0
  3049  008B  00C2               	movwf	??_main
  3050  008C  01C3               	clrf	??_main+1
  3051  008D  0842               	movf	??_main,w
  3052  008E  00C6               	movwf	main@sauvegarde
  3053  008F  0843               	movf	??_main+1,w
  3054  0090  00C7               	movwf	main@sauvegarde+1
  3055  0091                     l4004:
  3056                           
  3057                           ;main.c: 91:     I2C_Master_Init();
  3058  0091  3187  27C8  3180   	fcall	_I2C_Master_Init
  3059  0094                     l4006:
  3060                           
  3061                           ;main.c: 92:     LCD_Init(0x4E);
  3062  0094  304E               	movlw	78
  3063  0095  3181  21B6  3180   	fcall	_LCD_Init
  3064  0098                     l4008:
  3065                           
  3066                           ;main.c: 94:     LCD_Set_Cursor(1, 1);
  3067  0098  0020               	movlb	0	; select bank0
  3068  0099  01A9               	clrf	LCD_Set_Cursor@COL
  3069  009A  0AA9               	incf	LCD_Set_Cursor@COL,f
  3070  009B  3001               	movlw	1
  3071  009C  3184  2448  3180   	fcall	_LCD_Set_Cursor
  3072  009F                     l4010:
  3073                           
  3074                           ;main.c: 95:     LCD_Write_String("Test en cours");
  3075  009F  307C               	movlw	low (STR_1| (0+32768))
  3076  00A0  0020               	movlb	0	; select bank0
  3077  00A1  00A9               	movwf	LCD_Write_String@Str
  3078  00A2  3087               	movlw	high (STR_1| (0+32768))
  3079  00A3  00AA               	movwf	LCD_Write_String@Str+1
  3080  00A4  3186  262D  3180   	fcall	_LCD_Write_String
  3081  00A7                     l4012:
  3082                           
  3083                           ;main.c: 96:     LCD_Set_Cursor(2, 1);
  3084  00A7  0020               	movlb	0	; select bank0
  3085  00A8  01A9               	clrf	LCD_Set_Cursor@COL
  3086  00A9  0AA9               	incf	LCD_Set_Cursor@COL,f
  3087  00AA  3002               	movlw	2
  3088  00AB  3184  2448  3180   	fcall	_LCD_Set_Cursor
  3089  00AE                     l4014:
  3090                           
  3091                           ;main.c: 97:     LCD_Write_String("Etape 1");
  3092  00AE  30F8               	movlw	low (STR_2| (0+32768))
  3093  00AF  0020               	movlb	0	; select bank0
  3094  00B0  00A9               	movwf	LCD_Write_String@Str
  3095  00B1  3087               	movlw	high (STR_2| (0+32768))
  3096  00B2  00AA               	movwf	LCD_Write_String@Str+1
  3097  00B3  3186  262D  3180   	fcall	_LCD_Write_String
  3098  00B6                     l4016:
  3099                           
  3100                           ;main.c: 98:     LCD_Set_Cursor(4, 1);
  3101  00B6  0020               	movlb	0	; select bank0
  3102  00B7  01A9               	clrf	LCD_Set_Cursor@COL
  3103  00B8  0AA9               	incf	LCD_Set_Cursor@COL,f
  3104  00B9  3004               	movlw	4
  3105  00BA  3184  2448  3180   	fcall	_LCD_Set_Cursor
  3106  00BD                     l4018:
  3107                           
  3108                           ;main.c: 99:     LCD_Write_Char(sauvegarde);
  3109  00BD  0020               	movlb	0	; select bank0
  3110  00BE  0846               	movf	main@sauvegarde,w
  3111  00BF  3186  267E  3180   	fcall	_LCD_Write_Char
  3112  00C2                     l4020:
  3113                           
  3114                           ;main.c: 100:     _delay((unsigned long)((5000)*(16000000/4000.0)));
  3115  00C2  3066               	movlw	102
  3116  00C3  0020               	movlb	0	; select bank0
  3117  00C4  00C3               	movwf	??_main+1
  3118  00C5  3076               	movlw	118
  3119  00C6  00C2               	movwf	??_main
  3120  00C7  30C1               	movlw	193
  3121  00C8                     u1497:
  3122  00C8  0B89               	decfsz	9,f
  3123  00C9  28C8               	goto	u1497
  3124  00CA  0BC2               	decfsz	??_main,f
  3125  00CB  28C8               	goto	u1497
  3126  00CC  0BC3               	decfsz	??_main+1,f
  3127  00CD  28C8               	goto	u1497
  3128  00CE                     l4022:
  3129                           
  3130                           ;main.c: 108:         I2C_Master_Init();
  3131  00CE  3187  27C8  3180   	fcall	_I2C_Master_Init
  3132  00D1                     l4024:
  3133                           
  3134                           ;main.c: 110:         LCD_Clear();
  3135  00D1  3187  27E6  3180   	fcall	_LCD_Clear
  3136  00D4                     l4026:
  3137                           
  3138                           ;main.c: 111:         LCD_CMD(0x04 | 0x02);
  3139  00D4  3006               	movlw	6
  3140  00D5  3186  2695  3180   	fcall	_LCD_CMD
  3141  00D8                     l4028:
  3142                           
  3143                           ;main.c: 112:         _delay((unsigned long)((50)*(16000000/4000.0)));
  3144  00D8  3002               	movlw	2
  3145  00D9  0020               	movlb	0	; select bank0
  3146  00DA  00C3               	movwf	??_main+1
  3147  00DB  3004               	movlw	4
  3148  00DC  00C2               	movwf	??_main
  3149  00DD  30BA               	movlw	186
  3150  00DE                     u1507:
  3151  00DE  0B89               	decfsz	9,f
  3152  00DF  28DE               	goto	u1507
  3153  00E0  0BC2               	decfsz	??_main,f
  3154  00E1  28DE               	goto	u1507
  3155  00E2  0BC3               	decfsz	??_main+1,f
  3156  00E3  28DE               	goto	u1507
  3157  00E4  0000               	nop
  3158  00E5                     l4030:
  3159                           
  3160                           ;main.c: 113:         LCD_Set_Cursor(1, 1);
  3161  00E5  0020               	movlb	0	; select bank0
  3162  00E6  01A9               	clrf	LCD_Set_Cursor@COL
  3163  00E7  0AA9               	incf	LCD_Set_Cursor@COL,f
  3164  00E8  3001               	movlw	1
  3165  00E9  3184  2448  3180   	fcall	_LCD_Set_Cursor
  3166  00EC                     l4032:
  3167                           
  3168                           ;main.c: 114:         LCD_Write_String("Fin etape 1");
  3169  00EC  30A4               	movlw	low (STR_3| (0+32768))
  3170  00ED  0020               	movlb	0	; select bank0
  3171  00EE  00A9               	movwf	LCD_Write_String@Str
  3172  00EF  3087               	movlw	high (STR_3| (0+32768))
  3173  00F0  00AA               	movwf	LCD_Write_String@Str+1
  3174  00F1  3186  262D  3180   	fcall	_LCD_Write_String
  3175  00F4                     l4034:
  3176                           
  3177                           ;main.c: 115:         LCD_Set_Cursor(2, 1);
  3178  00F4  0020               	movlb	0	; select bank0
  3179  00F5  01A9               	clrf	LCD_Set_Cursor@COL
  3180  00F6  0AA9               	incf	LCD_Set_Cursor@COL,f
  3181  00F7  3002               	movlw	2
  3182  00F8  3184  2448  3180   	fcall	_LCD_Set_Cursor
  3183  00FB                     l4036:
  3184                           
  3185                           ;main.c: 116:         LCD_Write_String("Etape conforme");
  3186  00FB  306D               	movlw	low (STR_4| (0+32768))
  3187  00FC  0020               	movlb	0	; select bank0
  3188  00FD  00A9               	movwf	LCD_Write_String@Str
  3189  00FE  3087               	movlw	high (STR_4| (0+32768))
  3190  00FF  00AA               	movwf	LCD_Write_String@Str+1
  3191  0100  3186  262D  3180   	fcall	_LCD_Write_String
  3192  0103                     l4038:
  3193                           
  3194                           ;main.c: 117:         LCD_Set_Cursor(3, 1);
  3195  0103  0020               	movlb	0	; select bank0
  3196  0104  01A9               	clrf	LCD_Set_Cursor@COL
  3197  0105  0AA9               	incf	LCD_Set_Cursor@COL,f
  3198  0106  3003               	movlw	3
  3199  0107  3184  2448  3180   	fcall	_LCD_Set_Cursor
  3200  010A                     l4040:
  3201                           
  3202                           ;main.c: 118:         LCD_Write_Char(compteur);
  3203  010A  0020               	movlb	0	; select bank0
  3204  010B  0849               	movf	main@compteur,w
  3205  010C  3186  267E  3180   	fcall	_LCD_Write_Char
  3206  010F                     l4042:
  3207                           
  3208                           ;main.c: 119:         _delay((unsigned long)((1000)*(16000000/4000.0)));
  3209  010F  3015               	movlw	21
  3210  0110  0020               	movlb	0	; select bank0
  3211  0111  00C3               	movwf	??_main+1
  3212  0112  304B               	movlw	75
  3213  0113  00C2               	movwf	??_main
  3214  0114  30BE               	movlw	190
  3215  0115                     u1517:
  3216  0115  0B89               	decfsz	9,f
  3217  0116  2915               	goto	u1517
  3218  0117  0BC2               	decfsz	??_main,f
  3219  0118  2915               	goto	u1517
  3220  0119  0BC3               	decfsz	??_main+1,f
  3221  011A  2915               	goto	u1517
  3222  011B  0000               	nop
  3223  011C                     l4044:
  3224                           
  3225                           ;main.c: 121:         if (PORTDbits.RD0 == 0) {
  3226  011C  0020               	movlb	0	; select bank0
  3227  011D  180F               	btfsc	15,0	;volatile
  3228  011E  2920               	goto	u1421
  3229  011F  2921               	goto	u1420
  3230  0120                     u1421:
  3231  0120  2932               	goto	l4050
  3232  0121                     u1420:
  3233  0121                     l837:	
  3234                           ;main.c: 123:             do { LATAbits.LATA0 = 1; } while(0);
  3235                           
  3236  0121  0022               	movlb	2	; select bank2
  3237  0122  140C               	bsf	12,0	;volatile
  3238  0123                     l4046:
  3239                           
  3240                           ;main.c: 124:             _delay((unsigned long)((1000)*(16000000/4000.0)));
  3241  0123  3015               	movlw	21
  3242  0124  0020               	movlb	0	; select bank0
  3243  0125  00C3               	movwf	??_main+1
  3244  0126  304B               	movlw	75
  3245  0127  00C2               	movwf	??_main
  3246  0128  30BE               	movlw	190
  3247  0129                     u1527:
  3248  0129  0B89               	decfsz	9,f
  3249  012A  2929               	goto	u1527
  3250  012B  0BC2               	decfsz	??_main,f
  3251  012C  2929               	goto	u1527
  3252  012D  0BC3               	decfsz	??_main+1,f
  3253  012E  2929               	goto	u1527
  3254  012F  0000               	nop
  3255  0130                     l4048:
  3256  0130  0022               	movlb	2	; select bank2
  3257  0131  100C               	bcf	12,0	;volatile
  3258  0132                     l4050:
  3259                           
  3260                           ;main.c: 131:         lectureAN1 = ADC_GetConversion(VIN1);
  3261  0132  300C               	movlw	12
  3262  0133  3186  260C  3180   	fcall	_ADC_GetConversion
  3263  0136  0020               	movlb	0	; select bank0
  3264  0137  0824               	movf	?_ADC_GetConversion+1,w
  3265  0138  00C5               	movwf	main@lectureAN1+1
  3266  0139  0823               	movf	?_ADC_GetConversion,w
  3267  013A  00C4               	movwf	main@lectureAN1
  3268  013B                     l4052:
  3269                           
  3270                           ;main.c: 132:         if (lectureAN1 < 500) {
  3271  013B  0845               	movf	main@lectureAN1+1,w
  3272  013C  3A80               	xorlw	128
  3273  013D  00C2               	movwf	??_main
  3274  013E  3081               	movlw	129
  3275  013F  0242               	subwf	??_main,w
  3276  0140  1D03               	skipz
  3277  0141  2944               	goto	u1435
  3278  0142  30F4               	movlw	244
  3279  0143  0244               	subwf	main@lectureAN1,w
  3280  0144                     u1435:
  3281  0144  1803               	skipnc
  3282  0145  2947               	goto	u1431
  3283  0146  2948               	goto	u1430
  3284  0147                     u1431:
  3285  0147  294B               	goto	l845
  3286  0148                     u1430:
  3287  0148                     l842:	
  3288                           ;main.c: 135:             do { LATAbits.LATA0 = 1; } while(0);
  3289                           
  3290  0148  0022               	movlb	2	; select bank2
  3291  0149  140C               	bsf	12,0	;volatile
  3292  014A  294D               	goto	l844
  3293  014B                     l845:	
  3294                           ;main.c: 139:             do { LATAbits.LATA0 = 0; } while(0);
  3295                           
  3296  014B  0022               	movlb	2	; select bank2
  3297  014C  100C               	bcf	12,0	;volatile
  3298  014D                     l844:	
  3299                           ;main.c: 141:         }
  3300                           
  3301                           
  3302                           ;main.c: 145:         if (PORTDbits.RD2 == 0) {
  3303  014D  0020               	movlb	0	; select bank0
  3304  014E  190F               	btfsc	15,2	;volatile
  3305  014F  2951               	goto	u1441
  3306  0150  2952               	goto	u1440
  3307  0151                     u1441:
  3308  0151  2970               	goto	l4060
  3309  0152                     u1440:
  3310  0152                     l848:	
  3311                           ;main.c: 147:             do { LATAbits.LATA1 = 1; } while(0);
  3312                           
  3313  0152  0022               	movlb	2	; select bank2
  3314  0153  148C               	bsf	12,1	;volatile
  3315  0154                     l4054:
  3316                           
  3317                           ;main.c: 149:             printf("Hello!\r\n");
  3318  0154  30DD               	movlw	low (STR_5| (0+32768))
  3319  0155  0020               	movlb	0	; select bank0
  3320  0156  00BE               	movwf	printf@fmt
  3321  0157  3087               	movlw	high (STR_5| (0+32768))
  3322  0158  00BF               	movwf	printf@fmt+1
  3323  0159  3186  26E8  3180   	fcall	_printf
  3324  015C                     l4056:
  3325                           
  3326                           ;main.c: 150:             _delay((unsigned long)((1000)*(16000000/4000.0)));
  3327  015C  3015               	movlw	21
  3328  015D  0020               	movlb	0	; select bank0
  3329  015E  00C3               	movwf	??_main+1
  3330  015F  304B               	movlw	75
  3331  0160  00C2               	movwf	??_main
  3332  0161  30BE               	movlw	190
  3333  0162                     u1537:
  3334  0162  0B89               	decfsz	9,f
  3335  0163  2962               	goto	u1537
  3336  0164  0BC2               	decfsz	??_main,f
  3337  0165  2962               	goto	u1537
  3338  0166  0BC3               	decfsz	??_main+1,f
  3339  0167  2962               	goto	u1537
  3340  0168  0000               	nop
  3341  0169                     l4058:
  3342  0169  0022               	movlb	2	; select bank2
  3343  016A  108C               	bcf	12,1	;volatile
  3344  016B                     l852:	
  3345                           ;main.c: 154:             }
  3346                           
  3347                           
  3348                           ;main.c: 153:             while (PORTDbits.RD2 == 0) {
  3349  016B  0020               	movlb	0	; select bank0
  3350  016C  1D0F               	btfss	15,2	;volatile
  3351  016D  296F               	goto	u1451
  3352  016E  2970               	goto	u1450
  3353  016F                     u1451:
  3354  016F  296B               	goto	l852
  3355  0170                     u1450:
  3356  0170                     l4060:
  3357                           
  3358                           ;main.c: 160:         if (eusartRxCount != 0) {
  3359  0170  0862               	movf	_eusartRxCount,w	;volatile
  3360  0171  1903               	btfsc	3,2
  3361  0172  2974               	goto	u1461
  3362  0173  2975               	goto	u1460
  3363  0174                     u1461:
  3364  0174  29A3               	goto	l4072
  3365  0175                     u1460:
  3366  0175                     l4062:
  3367                           
  3368                           ;main.c: 161:             reception = EUSART_Read();
  3369  0175  3185  252B  3180   	fcall	_EUSART_Read
  3370  0178  0020               	movlb	0	; select bank0
  3371  0179  00C2               	movwf	??_main
  3372  017A  0842               	movf	??_main,w
  3373  017B  00C8               	movwf	main@reception
  3374                           
  3375                           ;main.c: 163:             switch (reception)
  3376  017C  2993               	goto	l4070
  3377  017D                     l858:	
  3378                           ;main.c: 166:                 {;main.c: 168:                     do { LATAbits.LATA1 = 1
      +                          ; } while(0);
  3379                           
  3380  017D  0022               	movlb	2	; select bank2
  3381  017E  148C               	bsf	12,1	;volatile
  3382  017F                     l4064:
  3383                           
  3384                           ;main.c: 169:                     printf(" -> LED ON!!\r\n");
  3385  017F  305E               	movlw	low (STR_6| (0+32768))
  3386  0180  0020               	movlb	0	; select bank0
  3387  0181  00BE               	movwf	printf@fmt
  3388  0182  3087               	movlw	high (STR_6| (0+32768))
  3389  0183  00BF               	movwf	printf@fmt+1
  3390  0184  3186  26E8  3180   	fcall	_printf
  3391                           
  3392                           ;main.c: 170:                     break;
  3393  0187  29A3               	goto	l4072
  3394  0188                     l862:	
  3395                           ;main.c: 174:                 {;main.c: 176:                     do { LATAbits.LATA1 = 0
      +                          ; } while(0);
  3396                           
  3397  0188  0022               	movlb	2	; select bank2
  3398  0189  108C               	bcf	12,1	;volatile
  3399  018A                     l4066:
  3400                           
  3401                           ;main.c: 177:                     printf(" -> LED OFF!!\r\n");
  3402  018A  3038               	movlw	low (STR_7| (0+32768))
  3403  018B  0020               	movlb	0	; select bank0
  3404  018C  00BE               	movwf	printf@fmt
  3405  018D  3084               	movlw	high (STR_7| (0+32768))
  3406  018E  00BF               	movwf	printf@fmt+1
  3407  018F  3186  26E8  3180   	fcall	_printf
  3408                           
  3409                           ;main.c: 178:                     break;
  3410  0192  29A3               	goto	l4072
  3411  0193                     l4070:
  3412  0193  0848               	movf	main@reception,w
  3413  0194  00C2               	movwf	??_main
  3414  0195  01C3               	clrf	??_main+1
  3415                           
  3416                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3417                           ; Switch size 1, requested type "simple"
  3418                           ; Number of cases is 1, Range of values is 0 to 0
  3419                           ; switch strategies available:
  3420                           ; Name         Instructions Cycles
  3421                           ; simple_byte            4     3 (average)
  3422                           ; direct_byte            8     6 (fixed)
  3423                           ; jumptable            260     6 (fixed)
  3424                           ;	Chosen strategy is simple_byte
  3425  0196  0843               	movf	??_main+1,w
  3426  0197  3A00               	xorlw	0	; case 0
  3427  0198  1903               	skipnz
  3428  0199  299B               	goto	l4282
  3429  019A  29A3               	goto	l4072
  3430  019B                     l4282:
  3431                           
  3432                           ; Switch size 1, requested type "simple"
  3433                           ; Number of cases is 2, Range of values is 48 to 49
  3434                           ; switch strategies available:
  3435                           ; Name         Instructions Cycles
  3436                           ; simple_byte            7     4 (average)
  3437                           ; direct_byte           13     9 (fixed)
  3438                           ; jumptable            263     9 (fixed)
  3439                           ;	Chosen strategy is simple_byte
  3440  019B  0842               	movf	??_main,w
  3441  019C  3A30               	xorlw	48	; case 48
  3442  019D  1903               	skipnz
  3443  019E  2988               	goto	l862
  3444  019F  3A01               	xorlw	1	; case 49
  3445  01A0  1903               	skipnz
  3446  01A1  297D               	goto	l858
  3447  01A2  29A3               	goto	l4072
  3448  01A3                     l4072:
  3449                           
  3450                           ;main.c: 184:         compteur = compteur + 1;
  3451  01A3  0020               	movlb	0	; select bank0
  3452  01A4  0849               	movf	main@compteur,w
  3453  01A5  3E01               	addlw	1
  3454  01A6  00C2               	movwf	??_main
  3455  01A7  0842               	movf	??_main,w
  3456  01A8  00C9               	movwf	main@compteur
  3457                           
  3458                           ;main.c: 185:         if (compteur == 58) {
  3459  01A9  303A               	movlw	58
  3460  01AA  0649               	xorwf	main@compteur,w
  3461  01AB  1D03               	btfss	3,2
  3462  01AC  29AE               	goto	u1471
  3463  01AD  29AF               	goto	u1470
  3464  01AE                     u1471:
  3465  01AE  28CE               	goto	l4022
  3466  01AF                     u1470:
  3467  01AF                     l4074:
  3468                           
  3469                           ;main.c: 187:             compteur = 48;
  3470  01AF  3030               	movlw	48
  3471  01B0  00C2               	movwf	??_main
  3472  01B1  0842               	movf	??_main,w
  3473  01B2  00C9               	movwf	main@compteur
  3474  01B3  28CE               	goto	l4022
  3475  01B4  3180  2847         	ljmp	start
  3476  01B6                     __end_of_main:
  3477                           
  3478                           	psect	text1
  3479  06E8                     __ptext1:	
  3480 ;; *************** function _printf *****************
  3481 ;; Defined at:
  3482 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;  fmt             2   30[BANK0 ] PTR const unsigned char 
  3485 ;;		 -> STR_7(16), STR_6(15), STR_5(9), 
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;  ret             2    0        int 
  3488 ;;  ap              1   33[BANK0 ] PTR void [1]
  3489 ;;		 -> ?_printf(2), 
  3490 ;; Return value:  Size  Location     Type
  3491 ;;                  2   30[BANK0 ] int 
  3492 ;; Registers used:
  3493 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3494 ;; Tracked objects:
  3495 ;;		On entry : 0/0
  3496 ;;		On exit  : 0/0
  3497 ;;		Unchanged: 0/0
  3498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3499 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3500 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3501 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3502 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3503 ;;Total ram usage:        4 bytes
  3504 ;; Hardware stack levels used: 1
  3505 ;; Hardware stack levels required when called: 12
  3506 ;; This function calls:
  3507 ;;		_vfprintf
  3508 ;; This function is called by:
  3509 ;;		_main
  3510 ;; This function uses a non-reentrant model
  3511 ;;
  3512                           
  3513                           
  3514                           ;psect for function _printf
  3515  06E8                     _printf:
  3516  06E8                     l3738:	
  3517                           ;incstack = 0
  3518                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3519                           
  3520  06E8  3040               	movlw	(low ((?_printf| 0+2)))& (0+255)
  3521  06E9  0020               	movlb	0	; select bank0
  3522  06EA  00C0               	movwf	??_printf
  3523  06EB  0840               	movf	??_printf,w
  3524  06EC  00C1               	movwf	printf@ap
  3525  06ED                     l3740:
  3526  06ED  083F               	movf	printf@fmt+1,w
  3527  06EE  00B7               	movwf	vfprintf@fmt+1
  3528  06EF  083E               	movf	printf@fmt,w
  3529  06F0  00B6               	movwf	vfprintf@fmt
  3530  06F1  3041               	movlw	(low (printf@ap| 0))& (0+255)
  3531  06F2  00C0               	movwf	??_printf
  3532  06F3  0840               	movf	??_printf,w
  3533  06F4  00B8               	movwf	vfprintf@ap
  3534  06F5  3000               	movlw	0
  3535  06F6  3185  2556  3186   	fcall	_vfprintf
  3536  06F9                     l1603:
  3537  06F9  0008               	return
  3538  06FA                     __end_of_printf:
  3539                           
  3540                           	psect	text2
  3541  0556                     __ptext2:	
  3542 ;; *************** function _vfprintf *****************
  3543 ;; Defined at:
  3544 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;  fp              1    wreg     PTR struct _IO_FILE
  3547 ;;		 -> NULL(0), 
  3548 ;;  fmt             2   22[BANK0 ] PTR const unsigned char 
  3549 ;;		 -> STR_7(16), STR_6(15), STR_5(9), 
  3550 ;;  ap              1   24[BANK0 ] PTR PTR void 
  3551 ;;		 -> printf@ap(1), 
  3552 ;; Auto vars:     Size  Location     Type
  3553 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
  3554 ;;		 -> NULL(0), 
  3555 ;;  cfmt            2   28[BANK0 ] PTR unsigned char 
  3556 ;;		 -> STR_7(16), STR_6(15), STR_5(9), 
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  2   22[BANK0 ] int 
  3559 ;; Registers used:
  3560 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3566 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3567 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3568 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3569 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3570 ;;Total ram usage:        8 bytes
  3571 ;; Hardware stack levels used: 1
  3572 ;; Hardware stack levels required when called: 11
  3573 ;; This function calls:
  3574 ;;		_vfpfcnvrt
  3575 ;; This function is called by:
  3576 ;;		_printf
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           
  3581                           ;psect for function _vfprintf
  3582  0556                     _vfprintf:
  3583                           
  3584                           ;incstack = 0
  3585                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3586                           ;vfprintf@fp stored from wreg
  3587  0556  0020               	movlb	0	; select bank0
  3588  0557  00BB               	movwf	vfprintf@fp
  3589  0558                     l3538:
  3590                           
  3591                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3592  0558  0837               	movf	vfprintf@fmt+1,w
  3593  0559  00BD               	movwf	vfprintf@cfmt+1
  3594  055A  0836               	movf	vfprintf@fmt,w
  3595  055B  00BC               	movwf	vfprintf@cfmt
  3596  055C                     l3540:
  3597                           
  3598                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3599  055C  01CA               	clrf	_nout
  3600  055D  01CB               	clrf	_nout+1
  3601                           
  3602                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3603  055E  2D70               	goto	l3544
  3604  055F                     l3542:
  3605                           
  3606                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3607  055F  303C               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3608  0560  00B9               	movwf	??_vfprintf
  3609  0561  0839               	movf	??_vfprintf,w
  3610  0562  00AE               	movwf	vfpfcnvrt@fmt
  3611  0563  0838               	movf	vfprintf@ap,w
  3612  0564  00BA               	movwf	??_vfprintf+1
  3613  0565  083A               	movf	??_vfprintf+1,w
  3614  0566  00AF               	movwf	vfpfcnvrt@ap
  3615  0567  083B               	movf	vfprintf@fp,w
  3616  0568  3182  2241  3185   	fcall	_vfpfcnvrt
  3617  056B  0020               	movlb	0	; select bank0
  3618  056C  082E               	movf	?_vfpfcnvrt,w
  3619  056D  07CA               	addwf	_nout,f
  3620  056E  082F               	movf	?_vfpfcnvrt+1,w
  3621  056F  3DCB               	addwfc	_nout+1,f
  3622  0570                     l3544:
  3623                           
  3624                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3625  0570  083C               	movf	vfprintf@cfmt,w
  3626  0571  0084               	movwf	4
  3627  0572  083D               	movf	vfprintf@cfmt+1,w
  3628  0573  0085               	movwf	5
  3629  0574  0012               	moviw fsr0++
  3630  0575  1D03               	btfss	3,2
  3631  0576  2D78               	goto	u1011
  3632  0577  2D79               	goto	u1010
  3633  0578                     u1011:
  3634  0578  2D5F               	goto	l3542
  3635  0579                     u1010:
  3636  0579                     l3546:
  3637                           
  3638                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3639  0579  084B               	movf	_nout+1,w
  3640  057A  00B7               	movwf	?_vfprintf+1
  3641  057B  084A               	movf	_nout,w
  3642  057C  00B6               	movwf	?_vfprintf
  3643  057D                     l1642:
  3644  057D  0008               	return
  3645  057E                     __end_of_vfprintf:
  3646                           
  3647                           	psect	text3
  3648  0241                     __ptext3:	
  3649 ;; *************** function _vfpfcnvrt *****************
  3650 ;; Defined at:
  3651 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3652 ;; Parameters:    Size  Location     Type
  3653 ;;  fp              1    wreg     PTR struct _IO_FILE
  3654 ;;		 -> NULL(0), 
  3655 ;;  fmt             1   14[BANK0 ] PTR PTR unsigned char 
  3656 ;;		 -> vfprintf@cfmt(2), 
  3657 ;;  ap              1   15[BANK0 ] PTR PTR void 
  3658 ;;		 -> printf@ap(1), 
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;  fp              1   21[BANK0 ] PTR struct _IO_FILE
  3661 ;;		 -> NULL(0), 
  3662 ;;  llu             8    0        unsigned long long 
  3663 ;;  ll              8    0        long long 
  3664 ;;  f               4    0        long long 
  3665 ;;  ct              3    0        unsigned char [3]
  3666 ;;  vp              2    0        PTR void 
  3667 ;;  i               2    0        int 
  3668 ;;  done            2    0        int 
  3669 ;;  cp              2    0        PTR unsigned char 
  3670 ;;  c               1    0        unsigned char 
  3671 ;; Return value:  Size  Location     Type
  3672 ;;                  2   14[BANK0 ] int 
  3673 ;; Registers used:
  3674 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3680 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3681 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3682 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3683 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3684 ;;Total ram usage:        8 bytes
  3685 ;; Hardware stack levels used: 1
  3686 ;; Hardware stack levels required when called: 10
  3687 ;; This function calls:
  3688 ;;		_fputc
  3689 ;; This function is called by:
  3690 ;;		_vfprintf
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           
  3694                           
  3695                           ;psect for function _vfpfcnvrt
  3696  0241                     _vfpfcnvrt:
  3697                           
  3698                           ;incstack = 0
  3699                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3700                           ;vfpfcnvrt@fp stored from wreg
  3701  0241  0020               	movlb	0	; select bank0
  3702  0242  00B5               	movwf	vfpfcnvrt@fp
  3703  0243                     l3400:
  3704                           
  3705                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3706  0243  082E               	movf	vfpfcnvrt@fmt,w
  3707  0244  0086               	movwf	6
  3708  0245  0187               	clrf	7
  3709  0246  3F40               	moviw [0]fsr1
  3710  0247  00B0               	movwf	??_vfpfcnvrt
  3711  0248  3F41               	moviw [1]fsr1
  3712  0249  00B1               	movwf	??_vfpfcnvrt+1
  3713  024A  0830               	movf	??_vfpfcnvrt,w
  3714  024B  0084               	movwf	4
  3715  024C  0831               	movf	??_vfpfcnvrt+1,w
  3716  024D  0085               	movwf	5
  3717  024E  0012               	moviw fsr0++
  3718  024F  3A25               	xorlw	37
  3719  0250  1D03               	btfss	3,2
  3720  0251  2A53               	goto	u941
  3721  0252  2A54               	goto	u940
  3722  0253                     u941:
  3723  0253  2A99               	goto	l3424
  3724  0254                     u940:
  3725  0254                     l3402:
  3726                           
  3727                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3728  0254  082E               	movf	vfpfcnvrt@fmt,w
  3729  0255  0086               	movwf	6
  3730  0256  0187               	clrf	7
  3731  0257  3001               	movlw	1
  3732  0258  0781               	addwf	1,f
  3733  0259  3141               	addfsr 1,1
  3734  025A  1803               	skipnc
  3735  025B  0A81               	incf	1,f
  3736  025C                     l3404:
  3737                           
  3738                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3739  025C  01CC               	clrf	_width
  3740  025D  01CD               	clrf	_width+1
  3741  025E  01D0               	clrf	_flags
  3742  025F  01D1               	clrf	_flags+1
  3743  0260                     l3406:
  3744                           
  3745                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3746  0260  30FF               	movlw	255
  3747  0261  00CE               	movwf	_prec
  3748  0262  30FF               	movlw	255
  3749  0263  00CF               	movwf	_prec+1
  3750  0264                     l3408:
  3751                           
  3752                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3753  0264  082E               	movf	vfpfcnvrt@fmt,w
  3754  0265  0086               	movwf	6
  3755  0266  0187               	clrf	7
  3756  0267  3F40               	moviw [0]fsr1
  3757  0268  00B0               	movwf	??_vfpfcnvrt
  3758  0269  3F41               	moviw [1]fsr1
  3759  026A  00B1               	movwf	??_vfpfcnvrt+1
  3760  026B  0830               	movf	??_vfpfcnvrt,w
  3761  026C  0084               	movwf	4
  3762  026D  0831               	movf	??_vfpfcnvrt+1,w
  3763  026E  0085               	movwf	5
  3764  026F  0012               	moviw fsr0++
  3765  0270  3A25               	xorlw	37
  3766  0271  1D03               	btfss	3,2
  3767  0272  2A74               	goto	u951
  3768  0273  2A75               	goto	u950
  3769  0274                     u951:
  3770  0274  2A8E               	goto	l3418
  3771  0275                     u950:
  3772  0275                     l3410:
  3773                           
  3774                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3775  0275  082E               	movf	vfpfcnvrt@fmt,w
  3776  0276  0086               	movwf	6
  3777  0277  0187               	clrf	7
  3778  0278  3001               	movlw	1
  3779  0279  0781               	addwf	1,f
  3780  027A  3141               	addfsr 1,1
  3781  027B  1803               	skipnc
  3782  027C  0A81               	incf	1,f
  3783  027D                     l3412:
  3784                           
  3785                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3786  027D  3025               	movlw	37
  3787  027E  00A6               	movwf	fputc@c
  3788  027F  3000               	movlw	0
  3789  0280  00A7               	movwf	fputc@c+1
  3790  0281  0835               	movf	vfpfcnvrt@fp,w
  3791  0282  00B0               	movwf	??_vfpfcnvrt
  3792  0283  0830               	movf	??_vfpfcnvrt,w
  3793  0284  00A8               	movwf	fputc@fp
  3794  0285  3183  239D  3182   	fcall	_fputc
  3795  0288                     l3414:
  3796                           
  3797                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3798  0288  3001               	movlw	1
  3799  0289  0020               	movlb	0	; select bank0
  3800  028A  00AE               	movwf	?_vfpfcnvrt
  3801  028B  3000               	movlw	0
  3802  028C  00AF               	movwf	?_vfpfcnvrt+1
  3803  028D  2ABC               	goto	l1636
  3804  028E                     l3418:
  3805                           
  3806                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3807  028E  082E               	movf	vfpfcnvrt@fmt,w
  3808  028F  0086               	movwf	6
  3809  0290  0187               	clrf	7
  3810  0291  3001               	movlw	1
  3811  0292  0781               	addwf	1,f
  3812  0293  3141               	addfsr 1,1
  3813  0294  1803               	skipnc
  3814  0295  0A81               	incf	1,f
  3815  0296                     l3420:
  3816                           
  3817                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3818  0296  01AE               	clrf	?_vfpfcnvrt
  3819  0297  01AF               	clrf	?_vfpfcnvrt+1
  3820  0298  2ABC               	goto	l1636
  3821  0299                     l3424:
  3822                           
  3823                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3824  0299  082E               	movf	vfpfcnvrt@fmt,w
  3825  029A  0086               	movwf	6
  3826  029B  0187               	clrf	7
  3827  029C  3F40               	moviw [0]fsr1
  3828  029D  00B0               	movwf	??_vfpfcnvrt
  3829  029E  3F41               	moviw [1]fsr1
  3830  029F  00B1               	movwf	??_vfpfcnvrt+1
  3831  02A0  0830               	movf	??_vfpfcnvrt,w
  3832  02A1  0084               	movwf	4
  3833  02A2  0831               	movf	??_vfpfcnvrt+1,w
  3834  02A3  0085               	movwf	5
  3835  02A4  0800               	movf	0,w	;code access
  3836  02A5  00B2               	movwf	??_vfpfcnvrt+2
  3837  02A6  01B3               	clrf	??_vfpfcnvrt+3
  3838  02A7  0832               	movf	??_vfpfcnvrt+2,w
  3839  02A8  00A6               	movwf	fputc@c
  3840  02A9  0833               	movf	??_vfpfcnvrt+3,w
  3841  02AA  00A7               	movwf	fputc@c+1
  3842  02AB  0835               	movf	vfpfcnvrt@fp,w
  3843  02AC  00B4               	movwf	??_vfpfcnvrt+4
  3844  02AD  0834               	movf	??_vfpfcnvrt+4,w
  3845  02AE  00A8               	movwf	fputc@fp
  3846  02AF  3183  239D  3182   	fcall	_fputc
  3847  02B2                     l3426:
  3848                           
  3849                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3850  02B2  0020               	movlb	0	; select bank0
  3851  02B3  082E               	movf	vfpfcnvrt@fmt,w
  3852  02B4  0086               	movwf	6
  3853  02B5  0187               	clrf	7
  3854  02B6  3001               	movlw	1
  3855  02B7  0781               	addwf	1,f
  3856  02B8  3141               	addfsr 1,1
  3857  02B9  1803               	skipnc
  3858  02BA  0A81               	incf	1,f
  3859  02BB  2A88               	goto	l3414
  3860  02BC                     l1636:
  3861  02BC  0008               	return
  3862  02BD                     __end_of_vfpfcnvrt:
  3863                           
  3864                           	psect	text4
  3865  039D                     __ptext4:	
  3866 ;; *************** function _fputc *****************
  3867 ;; Defined at:
  3868 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;  c               2    6[BANK0 ] int 
  3871 ;;  fp              1    8[BANK0 ] PTR struct _IO_FILE
  3872 ;;		 -> NULL(0), 
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;		None
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  2    6[BANK0 ] int 
  3877 ;; Registers used:
  3878 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3884 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3886 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3887 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3888 ;;Total ram usage:        8 bytes
  3889 ;; Hardware stack levels used: 1
  3890 ;; Hardware stack levels required when called: 9
  3891 ;; This function calls:
  3892 ;;		_putch
  3893 ;; This function is called by:
  3894 ;;		_vfpfcnvrt
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           
  3899                           ;psect for function _fputc
  3900  039D                     _fputc:
  3901  039D                     l3198:	
  3902                           ;incstack = 0
  3903                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3904                           
  3905  039D  0020               	movlb	0	; select bank0
  3906  039E  0828               	movf	fputc@fp,w
  3907  039F  1903               	btfsc	3,2
  3908  03A0  2BA2               	goto	u861
  3909  03A1  2BA3               	goto	u860
  3910  03A2                     u861:
  3911  03A2  2BA8               	goto	l3202
  3912  03A3                     u860:
  3913  03A3                     l3200:
  3914  03A3  0828               	movf	fputc@fp,w
  3915  03A4  1D03               	btfss	3,2
  3916  03A5  2BA7               	goto	u871
  3917  03A6  2BA8               	goto	u870
  3918  03A7                     u871:
  3919  03A7  2BAD               	goto	l3204
  3920  03A8                     u870:
  3921  03A8                     l3202:
  3922  03A8  0826               	movf	fputc@c,w
  3923  03A9  318F  27E9  3183   	fcall	_putch
  3924  03AC  2BDD               	goto	l1654
  3925  03AD                     l3204:
  3926  03AD  0828               	movf	fputc@fp,w
  3927  03AE  3E03               	addlw	3
  3928  03AF  0086               	movwf	6
  3929  03B0  0187               	clrf	7
  3930  03B1  0016               	moviw fsr1++
  3931  03B2  0401               	iorwf	1,w
  3932  03B3  1903               	btfsc	3,2
  3933  03B4  2BB6               	goto	u881
  3934  03B5  2BB7               	goto	u880
  3935  03B6                     u881:
  3936  03B6  2BD4               	goto	l3208
  3937  03B7                     u880:
  3938  03B7                     l3206:
  3939  03B7  0828               	movf	fputc@fp,w
  3940  03B8  3E03               	addlw	3
  3941  03B9  0086               	movwf	6
  3942  03BA  0187               	clrf	7
  3943  03BB  3F40               	moviw [0]fsr1
  3944  03BC  00A9               	movwf	??_fputc
  3945  03BD  3F41               	moviw [1]fsr1
  3946  03BE  00AA               	movwf	??_fputc+1
  3947  03BF  0A28               	incf	fputc@fp,w
  3948  03C0  0086               	movwf	6
  3949  03C1  0187               	clrf	7
  3950  03C2  3F40               	moviw [0]fsr1
  3951  03C3  00AB               	movwf	??_fputc+2
  3952  03C4  3F41               	moviw [1]fsr1
  3953  03C5  00AC               	movwf	??_fputc+3
  3954  03C6  082C               	movf	??_fputc+3,w
  3955  03C7  3A80               	xorlw	128
  3956  03C8  00AD               	movwf	??_fputc+4
  3957  03C9  082A               	movf	??_fputc+1,w
  3958  03CA  3A80               	xorlw	128
  3959  03CB  022D               	subwf	??_fputc+4,w
  3960  03CC  1D03               	skipz
  3961  03CD  2BD0               	goto	u895
  3962  03CE  0829               	movf	??_fputc,w
  3963  03CF  022B               	subwf	??_fputc+2,w
  3964  03D0                     u895:
  3965  03D0  1803               	skipnc
  3966  03D1  2BD3               	goto	u891
  3967  03D2  2BD4               	goto	u890
  3968  03D3                     u891:
  3969  03D3  2BDD               	goto	l1654
  3970  03D4                     u890:
  3971  03D4                     l3208:
  3972  03D4  0020               	movlb	0	; select bank0
  3973  03D5  0A28               	incf	fputc@fp,w
  3974  03D6  0086               	movwf	6
  3975  03D7  0187               	clrf	7
  3976  03D8  3001               	movlw	1
  3977  03D9  0781               	addwf	1,f
  3978  03DA  3141               	addfsr 1,1
  3979  03DB  1803               	skipnc
  3980  03DC  0A81               	incf	1,f
  3981  03DD                     l1654:
  3982  03DD  0008               	return
  3983  03DE                     __end_of_fputc:
  3984                           
  3985                           	psect	text5
  3986  0FE9                     __ptext5:	
  3987 ;; *************** function _putch *****************
  3988 ;; Defined at:
  3989 ;;		line 201 in file "mcc_generated_files/eusart.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;  txData          1    wreg     unsigned char 
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;  txData          1    5[BANK0 ] unsigned char 
  3994 ;; Return value:  Size  Location     Type
  3995 ;;                  1    wreg      void 
  3996 ;; Registers used:
  3997 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4004 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4006 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4007 ;;Total ram usage:        1 bytes
  4008 ;; Hardware stack levels used: 1
  4009 ;; Hardware stack levels required when called: 8
  4010 ;; This function calls:
  4011 ;;		_EUSART_Write
  4012 ;; This function is called by:
  4013 ;;		_fputc
  4014 ;; This function uses a non-reentrant model
  4015 ;;
  4016                           
  4017                           
  4018                           ;psect for function _putch
  4019  0FE9                     _putch:
  4020                           
  4021                           ;incstack = 0
  4022                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4023                           ;putch@txData stored from wreg
  4024  0FE9  0020               	movlb	0	; select bank0
  4025  0FEA  00A5               	movwf	putch@txData
  4026  0FEB                     l3078:
  4027                           
  4028                           ;mcc_generated_files/eusart.c: 201: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 202: {;mcc_generated_files/eusart.c: 203:     EUSART_Write(txData);
  4029  0FEB  0825               	movf	putch@txData,w
  4030  0FEC  3185  2500  318F   	fcall	_EUSART_Write
  4031  0FEF                     l329:
  4032  0FEF  0008               	return
  4033  0FF0                     __end_of_putch:
  4034                           
  4035                           	psect	text6
  4036  0500                     __ptext6:	
  4037 ;; *************** function _EUSART_Write *****************
  4038 ;; Defined at:
  4039 ;;		line 173 in file "mcc_generated_files/eusart.c"
  4040 ;; Parameters:    Size  Location     Type
  4041 ;;  txData          1    wreg     unsigned char 
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;  txData          1    4[BANK0 ] unsigned char 
  4044 ;; Return value:  Size  Location     Type
  4045 ;;                  1    wreg      void 
  4046 ;; Registers used:
  4047 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4048 ;; Tracked objects:
  4049 ;;		On entry : 0/0
  4050 ;;		On exit  : 0/0
  4051 ;;		Unchanged: 0/0
  4052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4054 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4055 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4056 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4057 ;;Total ram usage:        2 bytes
  4058 ;; Hardware stack levels used: 1
  4059 ;; Hardware stack levels required when called: 7
  4060 ;; This function calls:
  4061 ;;		Nothing
  4062 ;; This function is called by:
  4063 ;;		_putch
  4064 ;; This function uses a non-reentrant model
  4065 ;;
  4066                           
  4067                           
  4068                           ;psect for function _EUSART_Write
  4069  0500                     _EUSART_Write:
  4070                           
  4071                           ;incstack = 0
  4072                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  4073                           ;EUSART_Write@txData stored from wreg
  4074  0500  0020               	movlb	0	; select bank0
  4075  0501  00A4               	movwf	EUSART_Write@txData
  4076  0502                     l3042:
  4077  0502                     l3044:	
  4078                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
  4079                           
  4080                           
  4081                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  4082  0502  0865               	movf	_eusartTxBufferRemaining,w	;volatile
  4083  0503  1903               	btfsc	3,2
  4084  0504  2D06               	goto	u781
  4085  0505  2D07               	goto	u780
  4086  0506                     u781:
  4087  0506  2D02               	goto	l3044
  4088  0507                     u780:
  4089  0507                     l319:
  4090                           
  4091                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TXIE)
  4092  0507  0021               	movlb	1	; select bank1
  4093  0508  1A11               	btfsc	17,4	;volatile
  4094  0509  2D0B               	goto	u791
  4095  050A  2D0C               	goto	u790
  4096  050B                     u791:
  4097  050B  2D11               	goto	l320
  4098  050C                     u790:
  4099  050C                     l3046:
  4100                           
  4101                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
  4102  050C  0020               	movlb	0	; select bank0
  4103  050D  0824               	movf	EUSART_Write@txData,w
  4104  050E  0023               	movlb	3	; select bank3
  4105  050F  009A               	movwf	26	;volatile
  4106                           
  4107                           ;mcc_generated_files/eusart.c: 182:     }
  4108  0510  2D28               	goto	l3058
  4109  0511                     l320:	
  4110                           ;mcc_generated_files/eusart.c: 183:     else
  4111                           
  4112                           
  4113                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TXIE = 0;
  4114  0511  1211               	bcf	17,4	;volatile
  4115  0512                     l3048:
  4116                           
  4117                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  4118  0512  0020               	movlb	0	; select bank0
  4119  0513  0824               	movf	EUSART_Write@txData,w
  4120  0514  00A3               	movwf	??_EUSART_Write
  4121  0515  0867               	movf	_eusartTxHead,w
  4122  0516  3ECD               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4123  0517  0086               	movwf	6
  4124  0518  0187               	clrf	7
  4125  0519  0823               	movf	??_EUSART_Write,w
  4126  051A  0081               	movwf	1
  4127  051B                     l3050:
  4128  051B  3001               	movlw	1
  4129  051C  00A3               	movwf	??_EUSART_Write
  4130  051D  0823               	movf	??_EUSART_Write,w
  4131  051E  07E7               	addwf	_eusartTxHead,f	;volatile
  4132  051F                     l3052:
  4133                           
  4134                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  4135  051F  3008               	movlw	8
  4136  0520  0267               	subwf	_eusartTxHead,w	;volatile
  4137  0521  1C03               	skipc
  4138  0522  2D24               	goto	u801
  4139  0523  2D25               	goto	u800
  4140  0524                     u801:
  4141  0524  2D26               	goto	l3056
  4142  0525                     u800:
  4143  0525                     l3054:
  4144                           
  4145                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  4146  0525  01E7               	clrf	_eusartTxHead	;volatile
  4147  0526                     l3056:
  4148                           
  4149                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  4150  0526  3001               	movlw	1
  4151  0527  02E5               	subwf	_eusartTxBufferRemaining,f	;volatile
  4152  0528                     l3058:
  4153                           
  4154                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TXIE = 1;
  4155  0528  0021               	movlb	1	; select bank1
  4156  0529  1611               	bsf	17,4	;volatile
  4157  052A                     l323:
  4158  052A  0008               	return
  4159  052B                     __end_of_EUSART_Write:
  4160                           
  4161                           	psect	text7
  4162  06D5                     __ptext7:	
  4163 ;; *************** function _SYSTEM_Initialize *****************
  4164 ;; Defined at:
  4165 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4166 ;; Parameters:    Size  Location     Type
  4167 ;;		None
  4168 ;; Auto vars:     Size  Location     Type
  4169 ;;		None
  4170 ;; Return value:  Size  Location     Type
  4171 ;;                  1    wreg      void 
  4172 ;; Registers used:
  4173 ;;		wreg, status,2, status,0, pclath, cstack
  4174 ;; Tracked objects:
  4175 ;;		On entry : 0/0
  4176 ;;		On exit  : 0/0
  4177 ;;		Unchanged: 0/0
  4178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4183 ;;Total ram usage:        0 bytes
  4184 ;; Hardware stack levels used: 1
  4185 ;; Hardware stack levels required when called: 9
  4186 ;; This function calls:
  4187 ;;		_ADC_Initialize
  4188 ;;		_EUSART_Initialize
  4189 ;;		_I2C_Initialize
  4190 ;;		_OSCILLATOR_Initialize
  4191 ;;		_PIN_MANAGER_Initialize
  4192 ;;		_WDT_Initialize
  4193 ;; This function is called by:
  4194 ;;		_main
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           
  4199                           ;psect for function _SYSTEM_Initialize
  4200  06D5                     _SYSTEM_Initialize:
  4201  06D5                     l3550:	
  4202                           ;incstack = 0
  4203                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4204                           
  4205                           
  4206                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  4207  06D5  3187  27D3  3186   	fcall	_I2C_Initialize
  4208                           
  4209                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4210  06D8  3185  25C8  3186   	fcall	_PIN_MANAGER_Initialize
  4211                           
  4212                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4213  06DB  3187  27B0  3186   	fcall	_OSCILLATOR_Initialize
  4214                           
  4215                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  4216  06DE  318F  2776  3186   	fcall	_WDT_Initialize
  4217                           
  4218                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  4219  06E1  318F  27F8  3186   	fcall	_ADC_Initialize
  4220                           
  4221                           ;mcc_generated_files/mcc.c: 58:     EUSART_Initialize();
  4222  06E4  3183  2358  3186   	fcall	_EUSART_Initialize
  4223  06E7                     l173:
  4224  06E7  0008               	return
  4225  06E8                     __end_of_SYSTEM_Initialize:
  4226                           
  4227                           	psect	text8
  4228  0F76                     __ptext8:	
  4229 ;; *************** function _WDT_Initialize *****************
  4230 ;; Defined at:
  4231 ;;		line 75 in file "mcc_generated_files/mcc.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;		None
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;		None
  4236 ;; Return value:  Size  Location     Type
  4237 ;;                  1    wreg      void 
  4238 ;; Registers used:
  4239 ;;		wreg
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4249 ;;Total ram usage:        0 bytes
  4250 ;; Hardware stack levels used: 1
  4251 ;; Hardware stack levels required when called: 7
  4252 ;; This function calls:
  4253 ;;		Nothing
  4254 ;; This function is called by:
  4255 ;;		_SYSTEM_Initialize
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           
  4260                           ;psect for function _WDT_Initialize
  4261  0F76                     _WDT_Initialize:
  4262  0F76                     l3474:	
  4263                           ;incstack = 0
  4264                           ; Regs used in _WDT_Initialize: [wreg]
  4265                           
  4266                           
  4267                           ;mcc_generated_files/mcc.c: 78:     WDTCON = 0x16;
  4268  0F76  3016               	movlw	22
  4269  0F77  0021               	movlb	1	; select bank1
  4270  0F78  0097               	movwf	23	;volatile
  4271  0F79                     l182:
  4272  0F79  0008               	return
  4273  0F7A                     __end_of_WDT_Initialize:
  4274                           
  4275                           	psect	text9
  4276  05C8                     __ptext9:	
  4277 ;; *************** function _PIN_MANAGER_Initialize *****************
  4278 ;; Defined at:
  4279 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4280 ;; Parameters:    Size  Location     Type
  4281 ;;		None
  4282 ;; Auto vars:     Size  Location     Type
  4283 ;;		None
  4284 ;; Return value:  Size  Location     Type
  4285 ;;                  1    wreg      void 
  4286 ;; Registers used:
  4287 ;;		wreg, status,2
  4288 ;; Tracked objects:
  4289 ;;		On entry : 0/0
  4290 ;;		On exit  : 0/0
  4291 ;;		Unchanged: 0/0
  4292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4297 ;;Total ram usage:        0 bytes
  4298 ;; Hardware stack levels used: 1
  4299 ;; Hardware stack levels required when called: 7
  4300 ;; This function calls:
  4301 ;;		Nothing
  4302 ;; This function is called by:
  4303 ;;		_SYSTEM_Initialize
  4304 ;; This function uses a non-reentrant model
  4305 ;;
  4306                           
  4307                           
  4308                           ;psect for function _PIN_MANAGER_Initialize
  4309  05C8                     _PIN_MANAGER_Initialize:
  4310  05C8                     l3432:	
  4311                           ;incstack = 0
  4312                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4313                           
  4314                           
  4315                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  4316  05C8  0022               	movlb	2	; select bank2
  4317  05C9  0190               	clrf	16	;volatile
  4318                           
  4319                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  4320  05CA  018F               	clrf	15	;volatile
  4321                           
  4322                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  4323  05CB  018C               	clrf	12	;volatile
  4324                           
  4325                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  4326  05CC  018D               	clrf	13	;volatile
  4327                           
  4328                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  4329  05CD  018E               	clrf	14	;volatile
  4330  05CE                     l3434:
  4331                           
  4332                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x0F;
  4333  05CE  300F               	movlw	15
  4334  05CF  0021               	movlb	1	; select bank1
  4335  05D0  0090               	movwf	16	;volatile
  4336  05D1                     l3436:
  4337                           
  4338                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFC;
  4339  05D1  30FC               	movlw	252
  4340  05D2  008C               	movwf	12	;volatile
  4341  05D3                     l3438:
  4342                           
  4343                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  4344  05D3  30FF               	movlw	255
  4345  05D4  008D               	movwf	13	;volatile
  4346  05D5                     l3440:
  4347                           
  4348                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  4349  05D5  30BF               	movlw	191
  4350  05D6  008E               	movwf	14	;volatile
  4351  05D7                     l3442:
  4352                           
  4353                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  4354  05D7  30FF               	movlw	255
  4355  05D8  008F               	movwf	15	;volatile
  4356  05D9                     l3444:
  4357                           
  4358                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFA;
  4359  05D9  30FA               	movlw	250
  4360  05DA  0023               	movlb	3	; select bank3
  4361  05DB  008F               	movwf	15	;volatile
  4362  05DC                     l3446:
  4363                           
  4364                           ;mcc_generated_files/pin_manager.c: 79:     ANSELB = 0x3F;
  4365  05DC  303F               	movlw	63
  4366  05DD  008D               	movwf	13	;volatile
  4367  05DE                     l3448:
  4368                           
  4369                           ;mcc_generated_files/pin_manager.c: 80:     ANSELE = 0x07;
  4370  05DE  3007               	movlw	7
  4371  05DF  0090               	movwf	16	;volatile
  4372  05E0                     l3450:
  4373                           
  4374                           ;mcc_generated_files/pin_manager.c: 81:     ANSELA = 0x3C;
  4375  05E0  303C               	movlw	60
  4376  05E1  008C               	movwf	12	;volatile
  4377  05E2                     l3452:
  4378                           
  4379                           ;mcc_generated_files/pin_manager.c: 86:     WPUE = 0x00;
  4380  05E2  0024               	movlb	4	; select bank4
  4381  05E3  0190               	clrf	16	;volatile
  4382  05E4                     l3454:
  4383                           
  4384                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  4385  05E4  018D               	clrf	13	;volatile
  4386  05E5                     l3456:
  4387                           
  4388                           ;mcc_generated_files/pin_manager.c: 88:     OPTION_REGbits.nWPUEN = 1;
  4389  05E5  0021               	movlb	1	; select bank1
  4390  05E6  1795               	bsf	21,7	;volatile
  4391  05E7                     l3458:
  4392                           
  4393                           ;mcc_generated_files/pin_manager.c: 94:     APFCON = 0x00;
  4394  05E7  0022               	movlb	2	; select bank2
  4395  05E8  019D               	clrf	29	;volatile
  4396  05E9                     l143:
  4397  05E9  0008               	return
  4398  05EA                     __end_of_PIN_MANAGER_Initialize:
  4399                           
  4400                           	psect	text10
  4401  07B0                     __ptext10:	
  4402 ;; *************** function _OSCILLATOR_Initialize *****************
  4403 ;; Defined at:
  4404 ;;		line 61 in file "mcc_generated_files/mcc.c"
  4405 ;; Parameters:    Size  Location     Type
  4406 ;;		None
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;		None
  4409 ;; Return value:  Size  Location     Type
  4410 ;;                  1    wreg      void 
  4411 ;; Registers used:
  4412 ;;		wreg, status,2
  4413 ;; Tracked objects:
  4414 ;;		On entry : 0/0
  4415 ;;		On exit  : 0/0
  4416 ;;		Unchanged: 0/0
  4417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4422 ;;Total ram usage:        0 bytes
  4423 ;; Hardware stack levels used: 1
  4424 ;; Hardware stack levels required when called: 7
  4425 ;; This function calls:
  4426 ;;		Nothing
  4427 ;; This function is called by:
  4428 ;;		_SYSTEM_Initialize
  4429 ;; This function uses a non-reentrant model
  4430 ;;
  4431                           
  4432                           
  4433                           ;psect for function _OSCILLATOR_Initialize
  4434  07B0                     _OSCILLATOR_Initialize:
  4435  07B0                     l3468:	
  4436                           ;incstack = 0
  4437                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4438                           
  4439                           
  4440                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  4441  07B0  3070               	movlw	112
  4442  07B1  0021               	movlb	1	; select bank1
  4443  07B2  0099               	movwf	25	;volatile
  4444  07B3                     l3470:
  4445                           
  4446                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  4447  07B3  0198               	clrf	24	;volatile
  4448  07B4                     l3472:
  4449                           
  4450                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  4451  07B4  0022               	movlb	2	; select bank2
  4452  07B5  0196               	clrf	22	;volatile
  4453  07B6                     l176:	
  4454                           ;mcc_generated_files/mcc.c: 71:     {;mcc_generated_files/mcc.c: 72:     }
  4455                           
  4456                           
  4457                           ;mcc_generated_files/mcc.c: 70:     while(PLLR == 0)
  4458  07B6  0021               	movlb	1	; select bank1
  4459  07B7  1F1A               	btfss	26,6	;volatile
  4460  07B8  2FBA               	goto	u961
  4461  07B9  2FBB               	goto	u960
  4462  07BA                     u961:
  4463  07BA  2FB6               	goto	l176
  4464  07BB                     u960:
  4465  07BB                     l179:
  4466  07BB  0008               	return
  4467  07BC                     __end_of_OSCILLATOR_Initialize:
  4468                           
  4469                           	psect	text11
  4470  07D3                     __ptext11:	
  4471 ;; *************** function _I2C_Initialize *****************
  4472 ;; Defined at:
  4473 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  4474 ;; Parameters:    Size  Location     Type
  4475 ;;		None
  4476 ;; Auto vars:     Size  Location     Type
  4477 ;;		None
  4478 ;; Return value:  Size  Location     Type
  4479 ;;                  1    wreg      void 
  4480 ;; Registers used:
  4481 ;;		wreg, status,2
  4482 ;; Tracked objects:
  4483 ;;		On entry : 0/0
  4484 ;;		On exit  : 0/0
  4485 ;;		Unchanged: 0/0
  4486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4491 ;;Total ram usage:        0 bytes
  4492 ;; Hardware stack levels used: 1
  4493 ;; Hardware stack levels required when called: 7
  4494 ;; This function calls:
  4495 ;;		Nothing
  4496 ;; This function is called by:
  4497 ;;		_SYSTEM_Initialize
  4498 ;; This function uses a non-reentrant model
  4499 ;;
  4500                           
  4501                           
  4502                           ;psect for function _I2C_Initialize
  4503  07D3                     _I2C_Initialize:
  4504  07D3                     l3460:	
  4505                           ;incstack = 0
  4506                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  4507                           
  4508                           
  4509                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0xC0;
  4510  07D3  30C0               	movlw	192
  4511  07D4  0024               	movlb	4	; select bank4
  4512  07D5  0094               	movwf	20	;volatile
  4513                           
  4514                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  4515  07D6  3008               	movlw	8
  4516  07D7  0095               	movwf	21	;volatile
  4517  07D8                     l3462:
  4518                           
  4519                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  4520  07D8  0196               	clrf	22	;volatile
  4521  07D9                     l3464:
  4522                           
  4523                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x4F;
  4524  07D9  304F               	movlw	79
  4525  07DA  0092               	movwf	18	;volatile
  4526  07DB                     l3466:
  4527                           
  4528                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  4529  07DB  1295               	bcf	21,5	;volatile
  4530  07DC                     l510:
  4531  07DC  0008               	return
  4532  07DD                     __end_of_I2C_Initialize:
  4533                           
  4534                           	psect	text12
  4535  0358                     __ptext12:	
  4536 ;; *************** function _EUSART_Initialize *****************
  4537 ;; Defined at:
  4538 ;;		line 88 in file "mcc_generated_files/eusart.c"
  4539 ;; Parameters:    Size  Location     Type
  4540 ;;		None
  4541 ;; Auto vars:     Size  Location     Type
  4542 ;;		None
  4543 ;; Return value:  Size  Location     Type
  4544 ;;                  1    wreg      void 
  4545 ;; Registers used:
  4546 ;;		wreg, status,2, status,0, pclath, cstack
  4547 ;; Tracked objects:
  4548 ;;		On entry : 0/0
  4549 ;;		On exit  : 0/0
  4550 ;;		Unchanged: 0/0
  4551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4554 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4555 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4556 ;;Total ram usage:        1 bytes
  4557 ;; Hardware stack levels used: 1
  4558 ;; Hardware stack levels required when called: 8
  4559 ;; This function calls:
  4560 ;;		_EUSART_SetErrorHandler
  4561 ;;		_EUSART_SetFramingErrorHandler
  4562 ;;		_EUSART_SetOverrunErrorHandler
  4563 ;;		_EUSART_SetRxInterruptHandler
  4564 ;;		_EUSART_SetTxInterruptHandler
  4565 ;; This function is called by:
  4566 ;;		_SYSTEM_Initialize
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570                           
  4571                           ;psect for function _EUSART_Initialize
  4572  0358                     _EUSART_Initialize:
  4573  0358                     l3482:	
  4574                           ;incstack = 0
  4575                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4576                           
  4577                           
  4578                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  4579  0358  0021               	movlb	1	; select bank1
  4580  0359  1291               	bcf	17,5	;volatile
  4581  035A                     l3484:
  4582                           
  4583                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  4584  035A  30DE               	movlw	low _EUSART_Receive_ISR
  4585  035B  0020               	movlb	0	; select bank0
  4586  035C  00A3               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  4587  035D  3003               	movlw	high _EUSART_Receive_ISR
  4588  035E  00A4               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  4589  035F  318F  27D0  3183   	fcall	_EUSART_SetRxInterruptHandler
  4590  0362                     l3486:
  4591                           
  4592                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  4593  0362  0021               	movlb	1	; select bank1
  4594  0363  1211               	bcf	17,4	;volatile
  4595                           
  4596                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  4597  0364  30EA               	movlw	low _EUSART_Transmit_ISR
  4598  0365  0020               	movlb	0	; select bank0
  4599  0366  00A3               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  4600  0367  3005               	movlw	high _EUSART_Transmit_ISR
  4601  0368  00A4               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  4602  0369  318F  27D6  3183   	fcall	_EUSART_SetTxInterruptHandler
  4603  036C                     l3488:
  4604                           
  4605                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  4606  036C  3008               	movlw	8
  4607  036D  0023               	movlb	3	; select bank3
  4608  036E  009F               	movwf	31	;volatile
  4609  036F                     l3490:
  4610                           
  4611                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  4612  036F  3090               	movlw	144
  4613  0370  009D               	movwf	29	;volatile
  4614  0371                     l3492:
  4615                           
  4616                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  4617  0371  3024               	movlw	36
  4618  0372  009E               	movwf	30	;volatile
  4619  0373                     l3494:
  4620                           
  4621                           ;mcc_generated_files/eusart.c: 107:     SPBRGL = 0x40;
  4622  0373  3040               	movlw	64
  4623  0374  009B               	movwf	27	;volatile
  4624  0375                     l3496:
  4625                           
  4626                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x03;
  4627  0375  3003               	movlw	3
  4628  0376  009C               	movwf	28	;volatile
  4629  0377                     l3498:
  4630                           
  4631                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  4632  0377  304C               	movlw	low _EUSART_DefaultFramingErrorHandler
  4633  0378  0020               	movlb	0	; select bank0
  4634  0379  00A3               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  4635  037A  300F               	movlw	high _EUSART_DefaultFramingErrorHandler
  4636  037B  00A4               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  4637  037C  318F  27C4  3183   	fcall	_EUSART_SetFramingErrorHandler
  4638  037F                     l3500:
  4639                           
  4640                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  4641  037F  3066               	movlw	low _EUSART_DefaultOverrunErrorHandler
  4642  0380  0020               	movlb	0	; select bank0
  4643  0381  00A3               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  4644  0382  300F               	movlw	high _EUSART_DefaultOverrunErrorHandler
  4645  0383  00A4               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  4646  0384  318F  27CA  3183   	fcall	_EUSART_SetOverrunErrorHandler
  4647  0387                     l3502:
  4648                           
  4649                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  4650  0387  3062               	movlw	low _EUSART_DefaultErrorHandler
  4651  0388  0020               	movlb	0	; select bank0
  4652  0389  00A3               	movwf	EUSART_SetErrorHandler@interruptHandler
  4653  038A  300F               	movlw	high _EUSART_DefaultErrorHandler
  4654  038B  00A4               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  4655  038C  318F  27BE  3183   	fcall	_EUSART_SetErrorHandler
  4656  038F                     l3504:
  4657                           
  4658                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  4659  038F  0020               	movlb	0	; select bank0
  4660  0390  01E1               	clrf	_eusartRxLastError	;volatile
  4661  0391                     l3506:
  4662                           
  4663                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  4664  0391  01E7               	clrf	_eusartTxHead	;volatile
  4665  0392                     l3508:
  4666                           
  4667                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  4668  0392  01E6               	clrf	_eusartTxTail	;volatile
  4669  0393                     l3510:
  4670                           
  4671                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  4672  0393  3008               	movlw	8
  4673  0394  00A5               	movwf	??_EUSART_Initialize
  4674  0395  0825               	movf	??_EUSART_Initialize,w
  4675  0396  00E5               	movwf	_eusartTxBufferRemaining	;volatile
  4676                           
  4677                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  4678  0397  01E4               	clrf	_eusartRxHead	;volatile
  4679                           
  4680                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  4681  0398  01E3               	clrf	_eusartRxTail	;volatile
  4682                           
  4683                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  4684  0399  01E2               	clrf	_eusartRxCount	;volatile
  4685  039A                     l3512:
  4686                           
  4687                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  4688  039A  0021               	movlb	1	; select bank1
  4689  039B  1691               	bsf	17,5	;volatile
  4690  039C                     l295:
  4691  039C  0008               	return
  4692  039D                     __end_of_EUSART_Initialize:
  4693                           
  4694                           	psect	text13
  4695  0FD6                     __ptext13:	
  4696 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  4697 ;; Defined at:
  4698 ;;		line 285 in file "mcc_generated_files/eusart.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;  interruptHan    2    3[BANK0 ] PTR FTN()void 
  4701 ;;		 -> EUSART_Transmit_ISR(1), 
  4702 ;; Auto vars:     Size  Location     Type
  4703 ;;		None
  4704 ;; Return value:  Size  Location     Type
  4705 ;;                  1    wreg      void 
  4706 ;; Registers used:
  4707 ;;		wreg
  4708 ;; Tracked objects:
  4709 ;;		On entry : 0/0
  4710 ;;		On exit  : 0/0
  4711 ;;		Unchanged: 0/0
  4712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4713 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4716 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4717 ;;Total ram usage:        2 bytes
  4718 ;; Hardware stack levels used: 1
  4719 ;; Hardware stack levels required when called: 7
  4720 ;; This function calls:
  4721 ;;		Nothing
  4722 ;; This function is called by:
  4723 ;;		_EUSART_Initialize
  4724 ;; This function uses a non-reentrant model
  4725 ;;
  4726                           
  4727                           
  4728                           ;psect for function _EUSART_SetTxInterruptHandler
  4729  0FD6                     _EUSART_SetTxInterruptHandler:
  4730  0FD6                     l3214:	
  4731                           ;incstack = 0
  4732                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  4733                           
  4734                           
  4735                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  4736  0FD6  0020               	movlb	0	; select bank0
  4737  0FD7  0824               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  4738  0FD8  00DB               	movwf	_EUSART_TxDefaultInterruptHandler+1
  4739  0FD9  0823               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  4740  0FDA  00DA               	movwf	_EUSART_TxDefaultInterruptHandler
  4741  0FDB                     l367:
  4742  0FDB  0008               	return
  4743  0FDC                     __end_of_EUSART_SetTxInterruptHandler:
  4744                           
  4745                           	psect	text14
  4746  0FD0                     __ptext14:	
  4747 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  4748 ;; Defined at:
  4749 ;;		line 289 in file "mcc_generated_files/eusart.c"
  4750 ;; Parameters:    Size  Location     Type
  4751 ;;  interruptHan    2    3[BANK0 ] PTR FTN()void 
  4752 ;;		 -> EUSART_Receive_ISR(1), 
  4753 ;; Auto vars:     Size  Location     Type
  4754 ;;		None
  4755 ;; Return value:  Size  Location     Type
  4756 ;;                  1    wreg      void 
  4757 ;; Registers used:
  4758 ;;		wreg
  4759 ;; Tracked objects:
  4760 ;;		On entry : 0/0
  4761 ;;		On exit  : 0/0
  4762 ;;		Unchanged: 0/0
  4763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4764 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4767 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4768 ;;Total ram usage:        2 bytes
  4769 ;; Hardware stack levels used: 1
  4770 ;; Hardware stack levels required when called: 7
  4771 ;; This function calls:
  4772 ;;		Nothing
  4773 ;; This function is called by:
  4774 ;;		_EUSART_Initialize
  4775 ;; This function uses a non-reentrant model
  4776 ;;
  4777                           
  4778                           
  4779                           ;psect for function _EUSART_SetRxInterruptHandler
  4780  0FD0                     _EUSART_SetRxInterruptHandler:
  4781  0FD0                     l3212:	
  4782                           ;incstack = 0
  4783                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  4784                           
  4785                           
  4786                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  4787  0FD0  0020               	movlb	0	; select bank0
  4788  0FD1  0824               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  4789  0FD2  00D9               	movwf	_EUSART_RxDefaultInterruptHandler+1
  4790  0FD3  0823               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  4791  0FD4  00D8               	movwf	_EUSART_RxDefaultInterruptHandler
  4792  0FD5                     l370:
  4793  0FD5  0008               	return
  4794  0FD6                     __end_of_EUSART_SetRxInterruptHandler:
  4795                           
  4796                           	psect	text15
  4797  0FCA                     __ptext15:	
  4798 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  4799 ;; Defined at:
  4800 ;;		line 277 in file "mcc_generated_files/eusart.c"
  4801 ;; Parameters:    Size  Location     Type
  4802 ;;  interruptHan    2    3[BANK0 ] PTR FTN()void 
  4803 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  4804 ;; Auto vars:     Size  Location     Type
  4805 ;;		None
  4806 ;; Return value:  Size  Location     Type
  4807 ;;                  1    wreg      void 
  4808 ;; Registers used:
  4809 ;;		wreg
  4810 ;; Tracked objects:
  4811 ;;		On entry : 0/0
  4812 ;;		On exit  : 0/0
  4813 ;;		Unchanged: 0/0
  4814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4815 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4818 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4819 ;;Total ram usage:        2 bytes
  4820 ;; Hardware stack levels used: 1
  4821 ;; Hardware stack levels required when called: 7
  4822 ;; This function calls:
  4823 ;;		Nothing
  4824 ;; This function is called by:
  4825 ;;		_EUSART_Initialize
  4826 ;; This function uses a non-reentrant model
  4827 ;;
  4828                           
  4829                           
  4830                           ;psect for function _EUSART_SetOverrunErrorHandler
  4831  0FCA                     _EUSART_SetOverrunErrorHandler:
  4832  0FCA                     l3218:	
  4833                           ;incstack = 0
  4834                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  4835                           
  4836                           
  4837                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
  4838  0FCA  0020               	movlb	0	; select bank0
  4839  0FCB  0824               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  4840  0FCC  00D5               	movwf	_EUSART_OverrunErrorHandler+1
  4841  0FCD  0823               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  4842  0FCE  00D4               	movwf	_EUSART_OverrunErrorHandler
  4843  0FCF                     l361:
  4844  0FCF  0008               	return
  4845  0FD0                     __end_of_EUSART_SetOverrunErrorHandler:
  4846                           
  4847                           	psect	text16
  4848  0FC4                     __ptext16:	
  4849 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  4850 ;; Defined at:
  4851 ;;		line 273 in file "mcc_generated_files/eusart.c"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;  interruptHan    2    3[BANK0 ] PTR FTN()void 
  4854 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;		None
  4857 ;; Return value:  Size  Location     Type
  4858 ;;                  1    wreg      void 
  4859 ;; Registers used:
  4860 ;;		wreg
  4861 ;; Tracked objects:
  4862 ;;		On entry : 0/0
  4863 ;;		On exit  : 0/0
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4866 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4869 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4870 ;;Total ram usage:        2 bytes
  4871 ;; Hardware stack levels used: 1
  4872 ;; Hardware stack levels required when called: 7
  4873 ;; This function calls:
  4874 ;;		Nothing
  4875 ;; This function is called by:
  4876 ;;		_EUSART_Initialize
  4877 ;; This function uses a non-reentrant model
  4878 ;;
  4879                           
  4880                           
  4881                           ;psect for function _EUSART_SetFramingErrorHandler
  4882  0FC4                     _EUSART_SetFramingErrorHandler:
  4883  0FC4                     l3216:	
  4884                           ;incstack = 0
  4885                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  4886                           
  4887                           
  4888                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
  4889  0FC4  0020               	movlb	0	; select bank0
  4890  0FC5  0824               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  4891  0FC6  00D7               	movwf	_EUSART_FramingErrorHandler+1
  4892  0FC7  0823               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  4893  0FC8  00D6               	movwf	_EUSART_FramingErrorHandler
  4894  0FC9                     l358:
  4895  0FC9  0008               	return
  4896  0FCA                     __end_of_EUSART_SetFramingErrorHandler:
  4897                           
  4898                           	psect	text17
  4899  0FBE                     __ptext17:	
  4900 ;; *************** function _EUSART_SetErrorHandler *****************
  4901 ;; Defined at:
  4902 ;;		line 281 in file "mcc_generated_files/eusart.c"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;  interruptHan    2    3[BANK0 ] PTR FTN()void 
  4905 ;;		 -> EUSART_DefaultErrorHandler(1), 
  4906 ;; Auto vars:     Size  Location     Type
  4907 ;;		None
  4908 ;; Return value:  Size  Location     Type
  4909 ;;                  1    wreg      void 
  4910 ;; Registers used:
  4911 ;;		wreg
  4912 ;; Tracked objects:
  4913 ;;		On entry : 0/0
  4914 ;;		On exit  : 0/0
  4915 ;;		Unchanged: 0/0
  4916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4917 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4920 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4921 ;;Total ram usage:        2 bytes
  4922 ;; Hardware stack levels used: 1
  4923 ;; Hardware stack levels required when called: 7
  4924 ;; This function calls:
  4925 ;;		Nothing
  4926 ;; This function is called by:
  4927 ;;		_EUSART_Initialize
  4928 ;; This function uses a non-reentrant model
  4929 ;;
  4930                           
  4931                           
  4932                           ;psect for function _EUSART_SetErrorHandler
  4933  0FBE                     _EUSART_SetErrorHandler:
  4934  0FBE                     l3220:	
  4935                           ;incstack = 0
  4936                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  4937                           
  4938                           
  4939                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
  4940  0FBE  0020               	movlb	0	; select bank0
  4941  0FBF  0824               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  4942  0FC0  00D3               	movwf	_EUSART_ErrorHandler+1
  4943  0FC1  0823               	movf	EUSART_SetErrorHandler@interruptHandler,w
  4944  0FC2  00D2               	movwf	_EUSART_ErrorHandler
  4945  0FC3                     l364:
  4946  0FC3  0008               	return
  4947  0FC4                     __end_of_EUSART_SetErrorHandler:
  4948                           
  4949                           	psect	text18
  4950  0FF8                     __ptext18:	
  4951 ;; *************** function _ADC_Initialize *****************
  4952 ;; Defined at:
  4953 ;;		line 67 in file "mcc_generated_files/adc.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;		None
  4956 ;; Auto vars:     Size  Location     Type
  4957 ;;		None
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  1    wreg      void 
  4960 ;; Registers used:
  4961 ;;		wreg, status,2
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4971 ;;Total ram usage:        0 bytes
  4972 ;; Hardware stack levels used: 1
  4973 ;; Hardware stack levels required when called: 7
  4974 ;; This function calls:
  4975 ;;		Nothing
  4976 ;; This function is called by:
  4977 ;;		_SYSTEM_Initialize
  4978 ;; This function uses a non-reentrant model
  4979 ;;
  4980                           
  4981                           
  4982                           ;psect for function _ADC_Initialize
  4983  0FF8                     _ADC_Initialize:
  4984  0FF8                     l3476:	
  4985                           ;incstack = 0
  4986                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  4987                           
  4988                           
  4989                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xF0;
  4990  0FF8  30F0               	movlw	240
  4991  0FF9  0021               	movlb	1	; select bank1
  4992  0FFA  009E               	movwf	30	;volatile
  4993  0FFB                     l3478:
  4994                           
  4995                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  4996  0FFB  019B               	clrf	27	;volatile
  4997  0FFC                     l3480:
  4998                           
  4999                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  5000  0FFC  019C               	clrf	28	;volatile
  5001                           
  5002                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  5003  0FFD  3001               	movlw	1
  5004  0FFE  009D               	movwf	29	;volatile
  5005  0FFF                     l199:
  5006  0FFF  0008               	return
  5007  1000                     __end_of_ADC_Initialize:
  5008                           
  5009                           	psect	text19
  5010  062D                     __ptext19:	
  5011 ;; *************** function _LCD_Write_String *****************
  5012 ;; Defined at:
  5013 ;;		line 134 in file "I2C_LCD.c"
  5014 ;; Parameters:    Size  Location     Type
  5015 ;;  Str             2    9[BANK0 ] PTR unsigned char 
  5016 ;;		 -> STR_4(15), STR_3(12), STR_2(8), STR_1(14), 
  5017 ;; Auto vars:     Size  Location     Type
  5018 ;;  i               2   12[BANK0 ] int 
  5019 ;; Return value:  Size  Location     Type
  5020 ;;                  1    wreg      void 
  5021 ;; Registers used:
  5022 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5023 ;; Tracked objects:
  5024 ;;		On entry : 0/0
  5025 ;;		On exit  : 0/0
  5026 ;;		Unchanged: 0/0
  5027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5028 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5029 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5030 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5031 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5032 ;;Total ram usage:        5 bytes
  5033 ;; Hardware stack levels used: 1
  5034 ;; Hardware stack levels required when called: 12
  5035 ;; This function calls:
  5036 ;;		_LCD_Write_Char
  5037 ;; This function is called by:
  5038 ;;		_main
  5039 ;; This function uses a non-reentrant model
  5040 ;;
  5041                           
  5042                           
  5043                           ;psect for function _LCD_Write_String
  5044  062D                     _LCD_Write_String:
  5045  062D                     l3726:	
  5046                           ;incstack = 0
  5047                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5048                           
  5049                           
  5050                           ;I2C_LCD.c: 134: void LCD_Write_String(char* Str);I2C_LCD.c: 135: {;I2C_LCD.c: 136:     
      +                          for(int i=0; Str[i]!='\0'; i++)
  5051  062D  0020               	movlb	0	; select bank0
  5052  062E  01AC               	clrf	LCD_Write_String@i
  5053  062F  01AD               	clrf	LCD_Write_String@i+1
  5054  0630  2E40               	goto	l3732
  5055  0631                     l3728:
  5056                           
  5057                           ;I2C_LCD.c: 137:        LCD_Write_Char(Str[i]);
  5058  0631  0829               	movf	LCD_Write_String@Str,w
  5059  0632  072C               	addwf	LCD_Write_String@i,w
  5060  0633  0084               	movwf	4
  5061  0634  082A               	movf	LCD_Write_String@Str+1,w
  5062  0635  3D2D               	addwfc	LCD_Write_String@i+1,w
  5063  0636  0085               	movwf	5
  5064  0637  0800               	movf	0,w	;code access
  5065  0638  3186  267E  3186   	fcall	_LCD_Write_Char
  5066  063B                     l3730:
  5067  063B  3001               	movlw	1
  5068  063C  0020               	movlb	0	; select bank0
  5069  063D  07AC               	addwf	LCD_Write_String@i,f
  5070  063E  3000               	movlw	0
  5071  063F  3DAD               	addwfc	LCD_Write_String@i+1,f
  5072  0640                     l3732:
  5073  0640  0829               	movf	LCD_Write_String@Str,w
  5074  0641  072C               	addwf	LCD_Write_String@i,w
  5075  0642  0084               	movwf	4
  5076  0643  082A               	movf	LCD_Write_String@Str+1,w
  5077  0644  3D2D               	addwfc	LCD_Write_String@i+1,w
  5078  0645  0085               	movwf	5
  5079  0646  0012               	moviw fsr0++
  5080  0647  1D03               	btfss	3,2
  5081  0648  2E4A               	goto	u1131
  5082  0649  2E4B               	goto	u1130
  5083  064A                     u1131:
  5084  064A  2E31               	goto	l3728
  5085  064B                     u1130:
  5086  064B                     l966:
  5087  064B  0008               	return
  5088  064C                     __end_of_LCD_Write_String:
  5089                           
  5090                           	psect	text20
  5091  067E                     __ptext20:	
  5092 ;; *************** function _LCD_Write_Char *****************
  5093 ;; Defined at:
  5094 ;;		line 127 in file "I2C_LCD.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;  Data            1    wreg     unsigned char 
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;  Data            1    8[BANK0 ] unsigned char 
  5099 ;; Return value:  Size  Location     Type
  5100 ;;                  1    wreg      void 
  5101 ;; Registers used:
  5102 ;;		wreg, status,2, status,0, pclath, cstack
  5103 ;; Tracked objects:
  5104 ;;		On entry : 0/0
  5105 ;;		On exit  : 0/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5109 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5110 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5111 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5112 ;;Total ram usage:        2 bytes
  5113 ;; Hardware stack levels used: 1
  5114 ;; Hardware stack levels required when called: 11
  5115 ;; This function calls:
  5116 ;;		_LCD_Write_4Bit
  5117 ;; This function is called by:
  5118 ;;		_main
  5119 ;;		_LCD_Write_String
  5120 ;; This function uses a non-reentrant model
  5121 ;;
  5122                           
  5123                           
  5124                           ;psect for function _LCD_Write_Char
  5125  067E                     _LCD_Write_Char:
  5126                           
  5127                           ;incstack = 0
  5128                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  5129                           ;LCD_Write_Char@Data stored from wreg
  5130  067E  0020               	movlb	0	; select bank0
  5131  067F  00A8               	movwf	LCD_Write_Char@Data
  5132  0680                     l3528:
  5133                           
  5134                           ;I2C_LCD.c: 127: void LCD_Write_Char(char Data);I2C_LCD.c: 128: {;I2C_LCD.c: 129:   RS =
      +                           1;
  5135  0680  01FD               	clrf	_RS
  5136  0681  0AFD               	incf	_RS,f
  5137  0682                     l3530:
  5138                           
  5139                           ;I2C_LCD.c: 130:   LCD_Write_4Bit(Data & 0xF0);
  5140  0682  0828               	movf	LCD_Write_Char@Data,w
  5141  0683  39F0               	andlw	240
  5142  0684  3186  26AB  3186   	fcall	_LCD_Write_4Bit
  5143                           
  5144                           ;I2C_LCD.c: 131:   LCD_Write_4Bit((Data << 4) & 0xF0);
  5145  0687  0020               	movlb	0	; select bank0
  5146  0688  0828               	movf	LCD_Write_Char@Data,w
  5147  0689  00A7               	movwf	??_LCD_Write_Char
  5148  068A  3003               	movlw	3
  5149  068B                     u995:
  5150  068B  35A7               	lslf	??_LCD_Write_Char,f
  5151  068C  3EFF               	addlw	-1
  5152  068D  1D03               	skipz
  5153  068E  2E8B               	goto	u995
  5154  068F  3527               	lslf	??_LCD_Write_Char,w
  5155  0690  39F0               	andlw	240
  5156  0691  3186  26AB  3186   	fcall	_LCD_Write_4Bit
  5157  0694                     l960:
  5158  0694  0008               	return
  5159  0695                     __end_of_LCD_Write_Char:
  5160                           
  5161                           	psect	text21
  5162  0448                     __ptext21:	
  5163 ;; *************** function _LCD_Set_Cursor *****************
  5164 ;; Defined at:
  5165 ;;		line 140 in file "I2C_LCD.c"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;  ROW             1    wreg     unsigned char 
  5168 ;;  COL             1    9[BANK0 ] unsigned char 
  5169 ;; Auto vars:     Size  Location     Type
  5170 ;;  ROW             1   12[BANK0 ] unsigned char 
  5171 ;; Return value:  Size  Location     Type
  5172 ;;                  1    wreg      void 
  5173 ;; Registers used:
  5174 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5175 ;; Tracked objects:
  5176 ;;		On entry : 0/0
  5177 ;;		On exit  : 0/0
  5178 ;;		Unchanged: 0/0
  5179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5180 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5181 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5182 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5183 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5184 ;;Total ram usage:        4 bytes
  5185 ;; Hardware stack levels used: 1
  5186 ;; Hardware stack levels required when called: 12
  5187 ;; This function calls:
  5188 ;;		_LCD_CMD
  5189 ;; This function is called by:
  5190 ;;		_main
  5191 ;; This function uses a non-reentrant model
  5192 ;;
  5193                           
  5194                           
  5195                           ;psect for function _LCD_Set_Cursor
  5196  0448                     _LCD_Set_Cursor:
  5197                           
  5198                           ;incstack = 0
  5199                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5200                           ;LCD_Set_Cursor@ROW stored from wreg
  5201  0448  0020               	movlb	0	; select bank0
  5202  0449  00AC               	movwf	LCD_Set_Cursor@ROW
  5203  044A                     l3708:
  5204                           
  5205                           ;I2C_LCD.c: 140: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);I2C_LCD.c: 14
      +                          1: {;I2C_LCD.c: 142:   switch(ROW)
  5206  044A  2C63               	goto	l3718
  5207  044B                     l3710:
  5208                           
  5209                           ;I2C_LCD.c: 145:       LCD_CMD(0xC0 + COL-1);
  5210  044B  0829               	movf	LCD_Set_Cursor@COL,w
  5211  044C  3EBF               	addlw	191
  5212  044D  3186  2695  3184   	fcall	_LCD_CMD
  5213                           
  5214                           ;I2C_LCD.c: 146:       break;
  5215  0450  2C76               	goto	l975
  5216  0451                     l3712:
  5217                           
  5218                           ;I2C_LCD.c: 148:       LCD_CMD(0x94 + COL-1);
  5219  0451  0829               	movf	LCD_Set_Cursor@COL,w
  5220  0452  3E93               	addlw	147
  5221  0453  3186  2695  3184   	fcall	_LCD_CMD
  5222                           
  5223                           ;I2C_LCD.c: 149:       break;
  5224  0456  2C76               	goto	l975
  5225  0457                     l3714:
  5226                           
  5227                           ;I2C_LCD.c: 151:       LCD_CMD(0xD4 + COL-1);
  5228  0457  0829               	movf	LCD_Set_Cursor@COL,w
  5229  0458  3ED3               	addlw	211
  5230  0459  3186  2695  3184   	fcall	_LCD_CMD
  5231                           
  5232                           ;I2C_LCD.c: 152:       break;
  5233  045C  2C76               	goto	l975
  5234  045D                     l3716:
  5235                           
  5236                           ;I2C_LCD.c: 155:       LCD_CMD(0x80 + COL-1);
  5237  045D  0829               	movf	LCD_Set_Cursor@COL,w
  5238  045E  3E7F               	addlw	127
  5239  045F  3186  2695  3184   	fcall	_LCD_CMD
  5240                           
  5241                           ;I2C_LCD.c: 156:   }
  5242  0462  2C76               	goto	l975
  5243  0463                     l3718:
  5244  0463  082C               	movf	LCD_Set_Cursor@ROW,w
  5245  0464  00AA               	movwf	??_LCD_Set_Cursor
  5246  0465  01AB               	clrf	??_LCD_Set_Cursor+1
  5247                           
  5248                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5249                           ; Switch size 1, requested type "simple"
  5250                           ; Number of cases is 1, Range of values is 0 to 0
  5251                           ; switch strategies available:
  5252                           ; Name         Instructions Cycles
  5253                           ; simple_byte            4     3 (average)
  5254                           ; direct_byte            8     6 (fixed)
  5255                           ; jumptable            260     6 (fixed)
  5256                           ;	Chosen strategy is simple_byte
  5257  0466  082B               	movf	??_LCD_Set_Cursor+1,w
  5258  0467  3A00               	xorlw	0	; case 0
  5259  0468  1903               	skipnz
  5260  0469  2C6B               	goto	l4284
  5261  046A  2C5D               	goto	l3716
  5262  046B                     l4284:
  5263                           
  5264                           ; Switch size 1, requested type "simple"
  5265                           ; Number of cases is 3, Range of values is 2 to 4
  5266                           ; switch strategies available:
  5267                           ; Name         Instructions Cycles
  5268                           ; simple_byte           10     6 (average)
  5269                           ; direct_byte           15     9 (fixed)
  5270                           ; jumptable            263     9 (fixed)
  5271                           ;	Chosen strategy is simple_byte
  5272  046B  082A               	movf	??_LCD_Set_Cursor,w
  5273  046C  3A02               	xorlw	2	; case 2
  5274  046D  1903               	skipnz
  5275  046E  2C4B               	goto	l3710
  5276  046F  3A01               	xorlw	1	; case 3
  5277  0470  1903               	skipnz
  5278  0471  2C51               	goto	l3712
  5279  0472  3A07               	xorlw	7	; case 4
  5280  0473  1903               	skipnz
  5281  0474  2C57               	goto	l3714
  5282  0475  2C5D               	goto	l3716
  5283  0476                     l975:
  5284  0476  0008               	return
  5285  0477                     __end_of_LCD_Set_Cursor:
  5286                           
  5287                           	psect	text22
  5288  01B6                     __ptext22:	
  5289 ;; *************** function _LCD_Init *****************
  5290 ;; Defined at:
  5291 ;;		line 80 in file "I2C_LCD.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;  I2C_Add         1    wreg     unsigned char 
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;  I2C_Add         1   11[BANK0 ] unsigned char 
  5296 ;; Return value:  Size  Location     Type
  5297 ;;                  1    wreg      void 
  5298 ;; Registers used:
  5299 ;;		wreg, status,2, status,0, pclath, cstack
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5306 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5307 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5308 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5309 ;;Total ram usage:        3 bytes
  5310 ;; Hardware stack levels used: 1
  5311 ;; Hardware stack levels required when called: 12
  5312 ;; This function calls:
  5313 ;;		_IO_Expander_Write
  5314 ;;		_LCD_CMD
  5315 ;; This function is called by:
  5316 ;;		_main
  5317 ;; This function uses a non-reentrant model
  5318 ;;
  5319                           
  5320                           
  5321                           ;psect for function _LCD_Init
  5322  01B6                     _LCD_Init:
  5323                           
  5324                           ;incstack = 0
  5325                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  5326                           ;LCD_Init@I2C_Add stored from wreg
  5327  01B6  0020               	movlb	0	; select bank0
  5328  01B7  00AB               	movwf	LCD_Init@I2C_Add
  5329  01B8                     l3682:
  5330                           
  5331                           ;I2C_LCD.c: 80: void LCD_Init(unsigned char I2C_Add);I2C_LCD.c: 81: {;I2C_LCD.c: 82:   i
      +                          2c_add = I2C_Add;
  5332  01B8  082B               	movf	LCD_Init@I2C_Add,w
  5333  01B9  00A9               	movwf	??_LCD_Init
  5334  01BA  0829               	movf	??_LCD_Init,w
  5335  01BB  00E0               	movwf	_i2c_add
  5336  01BC                     l3684:
  5337                           
  5338                           ;I2C_LCD.c: 83:   IO_Expander_Write(0x00);
  5339  01BC  3000               	movlw	0
  5340  01BD  3186  26C1  3181   	fcall	_IO_Expander_Write
  5341  01C0                     l3686:
  5342                           
  5343                           ;I2C_LCD.c: 84:   _delay((unsigned long)((30)*(16000000/4000.0)));
  5344  01C0  309C               	movlw	156
  5345  01C1  0020               	movlb	0	; select bank0
  5346  01C2  00A9               	movwf	??_LCD_Init
  5347  01C3  30D7               	movlw	215
  5348  01C4                     u1547:
  5349  01C4  0B89               	decfsz	9,f
  5350  01C5  29C4               	goto	u1547
  5351  01C6  0BA9               	decfsz	??_LCD_Init,f
  5352  01C7  29C4               	goto	u1547
  5353                           
  5354                           ;I2C_LCD.c: 85:   LCD_CMD(0x03);
  5355  01C8  3003               	movlw	3
  5356  01C9  3186  2695  3181   	fcall	_LCD_CMD
  5357  01CC                     l3688:
  5358                           
  5359                           ;I2C_LCD.c: 86:   _delay((unsigned long)((5)*(16000000/4000.0)));
  5360  01CC  301A               	movlw	26
  5361  01CD  0020               	movlb	0	; select bank0
  5362  01CE  00A9               	movwf	??_LCD_Init
  5363  01CF  30F8               	movlw	248
  5364  01D0                     u1557:
  5365  01D0  0B89               	decfsz	9,f
  5366  01D1  29D0               	goto	u1557
  5367  01D2  0BA9               	decfsz	??_LCD_Init,f
  5368  01D3  29D0               	goto	u1557
  5369  01D4  0000               	nop
  5370  01D5                     l3690:
  5371                           
  5372                           ;I2C_LCD.c: 87:   LCD_CMD(0x03);
  5373  01D5  3003               	movlw	3
  5374  01D6  3186  2695  3181   	fcall	_LCD_CMD
  5375                           
  5376                           ;I2C_LCD.c: 88:   _delay((unsigned long)((5)*(16000000/4000.0)));
  5377  01D9  301A               	movlw	26
  5378  01DA  0020               	movlb	0	; select bank0
  5379  01DB  00A9               	movwf	??_LCD_Init
  5380  01DC  30F8               	movlw	248
  5381  01DD                     u1567:
  5382  01DD  0B89               	decfsz	9,f
  5383  01DE  29DD               	goto	u1567
  5384  01DF  0BA9               	decfsz	??_LCD_Init,f
  5385  01E0  29DD               	goto	u1567
  5386  01E1  0000               	nop
  5387  01E2                     l3692:
  5388                           
  5389                           ;I2C_LCD.c: 89:   LCD_CMD(0x03);
  5390  01E2  3003               	movlw	3
  5391  01E3  3186  2695  3181   	fcall	_LCD_CMD
  5392  01E6                     l3694:
  5393                           
  5394                           ;I2C_LCD.c: 90:   _delay((unsigned long)((5)*(16000000/4000.0)));
  5395  01E6  301A               	movlw	26
  5396  01E7  0020               	movlb	0	; select bank0
  5397  01E8  00A9               	movwf	??_LCD_Init
  5398  01E9  30F8               	movlw	248
  5399  01EA                     u1577:
  5400  01EA  0B89               	decfsz	9,f
  5401  01EB  29EA               	goto	u1577
  5402  01EC  0BA9               	decfsz	??_LCD_Init,f
  5403  01ED  29EA               	goto	u1577
  5404  01EE  0000               	nop
  5405                           
  5406                           ;I2C_LCD.c: 91:   LCD_CMD(0x02);
  5407  01EF  3002               	movlw	2
  5408  01F0  3186  2695  3181   	fcall	_LCD_CMD
  5409  01F3                     l3696:
  5410                           
  5411                           ;I2C_LCD.c: 92:   _delay((unsigned long)((5)*(16000000/4000.0)));
  5412  01F3  301A               	movlw	26
  5413  01F4  0020               	movlb	0	; select bank0
  5414  01F5  00A9               	movwf	??_LCD_Init
  5415  01F6  30F8               	movlw	248
  5416  01F7                     u1587:
  5417  01F7  0B89               	decfsz	9,f
  5418  01F8  29F7               	goto	u1587
  5419  01F9  0BA9               	decfsz	??_LCD_Init,f
  5420  01FA  29F7               	goto	u1587
  5421  01FB  0000               	nop
  5422  01FC                     l3698:
  5423                           
  5424                           ;I2C_LCD.c: 93:   LCD_CMD(0x20 | (2 << 2));
  5425  01FC  3028               	movlw	40
  5426  01FD  3186  2695  3181   	fcall	_LCD_CMD
  5427                           
  5428                           ;I2C_LCD.c: 94:   _delay((unsigned long)((50)*(16000000/4000.0)));
  5429  0200  3002               	movlw	2
  5430  0201  0020               	movlb	0	; select bank0
  5431  0202  00AA               	movwf	??_LCD_Init+1
  5432  0203  3004               	movlw	4
  5433  0204  00A9               	movwf	??_LCD_Init
  5434  0205  30BA               	movlw	186
  5435  0206                     u1597:
  5436  0206  0B89               	decfsz	9,f
  5437  0207  2A06               	goto	u1597
  5438  0208  0BA9               	decfsz	??_LCD_Init,f
  5439  0209  2A06               	goto	u1597
  5440  020A  0BAA               	decfsz	??_LCD_Init+1,f
  5441  020B  2A06               	goto	u1597
  5442  020C  0000               	nop
  5443  020D                     l3700:
  5444                           
  5445                           ;I2C_LCD.c: 95:   LCD_CMD(0x0C);
  5446  020D  300C               	movlw	12
  5447  020E  3186  2695  3181   	fcall	_LCD_CMD
  5448  0211                     l3702:
  5449                           
  5450                           ;I2C_LCD.c: 96:   _delay((unsigned long)((50)*(16000000/4000.0)));
  5451  0211  3002               	movlw	2
  5452  0212  0020               	movlb	0	; select bank0
  5453  0213  00AA               	movwf	??_LCD_Init+1
  5454  0214  3004               	movlw	4
  5455  0215  00A9               	movwf	??_LCD_Init
  5456  0216  30BA               	movlw	186
  5457  0217                     u1607:
  5458  0217  0B89               	decfsz	9,f
  5459  0218  2A17               	goto	u1607
  5460  0219  0BA9               	decfsz	??_LCD_Init,f
  5461  021A  2A17               	goto	u1607
  5462  021B  0BAA               	decfsz	??_LCD_Init+1,f
  5463  021C  2A17               	goto	u1607
  5464  021D  0000               	nop
  5465                           
  5466                           ;I2C_LCD.c: 97:   LCD_CMD(0x01);
  5467  021E  3001               	movlw	1
  5468  021F  3186  2695  3181   	fcall	_LCD_CMD
  5469  0222                     l3704:
  5470                           
  5471                           ;I2C_LCD.c: 98:   _delay((unsigned long)((50)*(16000000/4000.0)));
  5472  0222  3002               	movlw	2
  5473  0223  0020               	movlb	0	; select bank0
  5474  0224  00AA               	movwf	??_LCD_Init+1
  5475  0225  3004               	movlw	4
  5476  0226  00A9               	movwf	??_LCD_Init
  5477  0227  30BA               	movlw	186
  5478  0228                     u1617:
  5479  0228  0B89               	decfsz	9,f
  5480  0229  2A28               	goto	u1617
  5481  022A  0BA9               	decfsz	??_LCD_Init,f
  5482  022B  2A28               	goto	u1617
  5483  022C  0BAA               	decfsz	??_LCD_Init+1,f
  5484  022D  2A28               	goto	u1617
  5485  022E  0000               	nop
  5486  022F                     l3706:
  5487                           
  5488                           ;I2C_LCD.c: 99:   LCD_CMD(0x04 | 0x02);
  5489  022F  3006               	movlw	6
  5490  0230  3186  2695  3181   	fcall	_LCD_CMD
  5491                           
  5492                           ;I2C_LCD.c: 100:   _delay((unsigned long)((50)*(16000000/4000.0)));
  5493  0233  3002               	movlw	2
  5494  0234  0020               	movlb	0	; select bank0
  5495  0235  00AA               	movwf	??_LCD_Init+1
  5496  0236  3004               	movlw	4
  5497  0237  00A9               	movwf	??_LCD_Init
  5498  0238  30BA               	movlw	186
  5499  0239                     u1627:
  5500  0239  0B89               	decfsz	9,f
  5501  023A  2A39               	goto	u1627
  5502  023B  0BA9               	decfsz	??_LCD_Init,f
  5503  023C  2A39               	goto	u1627
  5504  023D  0BAA               	decfsz	??_LCD_Init+1,f
  5505  023E  2A39               	goto	u1627
  5506  023F  0000               	nop
  5507  0240                     l948:
  5508  0240  0008               	return
  5509  0241                     __end_of_LCD_Init:
  5510                           
  5511                           	psect	text23
  5512  07E6                     __ptext23:	
  5513 ;; *************** function _LCD_Clear *****************
  5514 ;; Defined at:
  5515 ;;		line 183 in file "I2C_LCD.c"
  5516 ;; Parameters:    Size  Location     Type
  5517 ;;		None
  5518 ;; Auto vars:     Size  Location     Type
  5519 ;;		None
  5520 ;; Return value:  Size  Location     Type
  5521 ;;                  1    wreg      void 
  5522 ;; Registers used:
  5523 ;;		wreg, status,2, status,0, pclath, cstack
  5524 ;; Tracked objects:
  5525 ;;		On entry : 0/0
  5526 ;;		On exit  : 0/0
  5527 ;;		Unchanged: 0/0
  5528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5533 ;;Total ram usage:        0 bytes
  5534 ;; Hardware stack levels used: 1
  5535 ;; Hardware stack levels required when called: 12
  5536 ;; This function calls:
  5537 ;;		_LCD_CMD
  5538 ;; This function is called by:
  5539 ;;		_main
  5540 ;; This function uses a non-reentrant model
  5541 ;;
  5542                           
  5543                           
  5544                           ;psect for function _LCD_Clear
  5545  07E6                     _LCD_Clear:
  5546  07E6                     l3734:	
  5547                           ;incstack = 0
  5548                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  5549                           
  5550                           
  5551                           ;I2C_LCD.c: 185:   LCD_CMD(0x01);
  5552  07E6  3001               	movlw	1
  5553  07E7  3186  2695  3187   	fcall	_LCD_CMD
  5554  07EA                     l3736:
  5555                           
  5556                           ;I2C_LCD.c: 186:   _delay((unsigned long)((40)*(16000000/4000000.0)));
  5557  07EA  3035               	movlw	53
  5558  07EB                     u1637:
  5559  07EB  0B89               	decfsz	9,f
  5560  07EC  2FEB               	goto	u1637
  5561  07ED  0000               	nop
  5562  07EE                     l990:
  5563  07EE  0008               	return
  5564  07EF                     __end_of_LCD_Clear:
  5565                           
  5566                           	psect	text24
  5567  0695                     __ptext24:	
  5568 ;; *************** function _LCD_CMD *****************
  5569 ;; Defined at:
  5570 ;;		line 120 in file "I2C_LCD.c"
  5571 ;; Parameters:    Size  Location     Type
  5572 ;;  CMD             1    wreg     unsigned char 
  5573 ;; Auto vars:     Size  Location     Type
  5574 ;;  CMD             1    8[BANK0 ] unsigned char 
  5575 ;; Return value:  Size  Location     Type
  5576 ;;                  1    wreg      void 
  5577 ;; Registers used:
  5578 ;;		wreg, status,2, status,0, pclath, cstack
  5579 ;; Tracked objects:
  5580 ;;		On entry : 0/0
  5581 ;;		On exit  : 0/0
  5582 ;;		Unchanged: 0/0
  5583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5585 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5586 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5587 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5588 ;;Total ram usage:        2 bytes
  5589 ;; Hardware stack levels used: 1
  5590 ;; Hardware stack levels required when called: 11
  5591 ;; This function calls:
  5592 ;;		_LCD_Write_4Bit
  5593 ;; This function is called by:
  5594 ;;		_main
  5595 ;;		_LCD_Init
  5596 ;;		_LCD_Set_Cursor
  5597 ;;		_LCD_Clear
  5598 ;;		_LCD_SL
  5599 ;;		_LCD_SR
  5600 ;; This function uses a non-reentrant model
  5601 ;;
  5602                           
  5603                           
  5604                           ;psect for function _LCD_CMD
  5605  0695                     _LCD_CMD:
  5606                           
  5607                           ;incstack = 0
  5608                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  5609                           ;LCD_CMD@CMD stored from wreg
  5610  0695  0020               	movlb	0	; select bank0
  5611  0696  00A8               	movwf	LCD_CMD@CMD
  5612  0697                     l3532:
  5613                           
  5614                           ;I2C_LCD.c: 120: void LCD_CMD(unsigned char CMD);I2C_LCD.c: 121: {;I2C_LCD.c: 122:   RS 
      +                          = 0;
  5615  0697  01FD               	clrf	_RS
  5616  0698                     l3534:
  5617                           
  5618                           ;I2C_LCD.c: 123:   LCD_Write_4Bit(CMD & 0xF0);
  5619  0698  0828               	movf	LCD_CMD@CMD,w
  5620  0699  39F0               	andlw	240
  5621  069A  3186  26AB  3186   	fcall	_LCD_Write_4Bit
  5622  069D                     l3536:
  5623                           
  5624                           ;I2C_LCD.c: 124:   LCD_Write_4Bit((CMD << 4) & 0xF0);
  5625  069D  0020               	movlb	0	; select bank0
  5626  069E  0828               	movf	LCD_CMD@CMD,w
  5627  069F  00A7               	movwf	??_LCD_CMD
  5628  06A0  3003               	movlw	3
  5629  06A1                     u1005:
  5630  06A1  35A7               	lslf	??_LCD_CMD,f
  5631  06A2  3EFF               	addlw	-1
  5632  06A3  1D03               	skipz
  5633  06A4  2EA1               	goto	u1005
  5634  06A5  3527               	lslf	??_LCD_CMD,w
  5635  06A6  39F0               	andlw	240
  5636  06A7  3186  26AB  3186   	fcall	_LCD_Write_4Bit
  5637  06AA                     l957:
  5638  06AA  0008               	return
  5639  06AB                     __end_of_LCD_CMD:
  5640                           
  5641                           	psect	text25
  5642  06AB                     __ptext25:	
  5643 ;; *************** function _LCD_Write_4Bit *****************
  5644 ;; Defined at:
  5645 ;;		line 111 in file "I2C_LCD.c"
  5646 ;; Parameters:    Size  Location     Type
  5647 ;;  Nibble          1    wreg     unsigned char 
  5648 ;; Auto vars:     Size  Location     Type
  5649 ;;  Nibble          1    6[BANK0 ] unsigned char 
  5650 ;; Return value:  Size  Location     Type
  5651 ;;                  1    wreg      void 
  5652 ;; Registers used:
  5653 ;;		wreg, status,2, status,0, pclath, cstack
  5654 ;; Tracked objects:
  5655 ;;		On entry : 0/0
  5656 ;;		On exit  : 0/0
  5657 ;;		Unchanged: 0/0
  5658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5660 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5661 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5662 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5663 ;;Total ram usage:        2 bytes
  5664 ;; Hardware stack levels used: 1
  5665 ;; Hardware stack levels required when called: 10
  5666 ;; This function calls:
  5667 ;;		_IO_Expander_Write
  5668 ;; This function is called by:
  5669 ;;		_LCD_CMD
  5670 ;;		_LCD_Write_Char
  5671 ;; This function uses a non-reentrant model
  5672 ;;
  5673                           
  5674                           
  5675                           ;psect for function _LCD_Write_4Bit
  5676  06AB                     _LCD_Write_4Bit:
  5677                           
  5678                           ;incstack = 0
  5679                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+pclath+cstack]
  5680                           ;LCD_Write_4Bit@Nibble stored from wreg
  5681  06AB  0020               	movlb	0	; select bank0
  5682  06AC  00A6               	movwf	LCD_Write_4Bit@Nibble
  5683  06AD                     l3394:
  5684                           
  5685                           ;I2C_LCD.c: 111: void LCD_Write_4Bit(unsigned char Nibble);I2C_LCD.c: 112: {;I2C_LCD.c: 
      +                          114:   Nibble |= RS;
  5686  06AD  087D               	movf	_RS,w
  5687  06AE  00A5               	movwf	??_LCD_Write_4Bit
  5688  06AF  0825               	movf	??_LCD_Write_4Bit,w
  5689  06B0  04A6               	iorwf	LCD_Write_4Bit@Nibble,f
  5690  06B1                     l3396:
  5691                           
  5692                           ;I2C_LCD.c: 115:   IO_Expander_Write(Nibble | 0x04);
  5693  06B1  0826               	movf	LCD_Write_4Bit@Nibble,w
  5694  06B2  3804               	iorlw	4
  5695  06B3  3186  26C1  3186   	fcall	_IO_Expander_Write
  5696  06B6                     l3398:
  5697                           
  5698                           ;I2C_LCD.c: 116:   IO_Expander_Write(Nibble & 0xFB);
  5699  06B6  0020               	movlb	0	; select bank0
  5700  06B7  0826               	movf	LCD_Write_4Bit@Nibble,w
  5701  06B8  39FB               	andlw	251
  5702  06B9  3186  26C1  3186   	fcall	_IO_Expander_Write
  5703                           
  5704                           ;I2C_LCD.c: 117:   _delay((unsigned long)((50)*(16000000/4000000.0)));
  5705  06BC  3042               	movlw	66
  5706  06BD                     u1647:
  5707  06BD  0B89               	decfsz	9,f
  5708  06BE  2EBD               	goto	u1647
  5709  06BF  3200               	nop2
  5710  06C0                     l954:
  5711  06C0  0008               	return
  5712  06C1                     __end_of_LCD_Write_4Bit:
  5713                           
  5714                           	psect	text26
  5715  06C1                     __ptext26:	
  5716 ;; *************** function _IO_Expander_Write *****************
  5717 ;; Defined at:
  5718 ;;		line 103 in file "I2C_LCD.c"
  5719 ;; Parameters:    Size  Location     Type
  5720 ;;  Data            1    wreg     unsigned char 
  5721 ;; Auto vars:     Size  Location     Type
  5722 ;;  Data            1    4[BANK0 ] unsigned char 
  5723 ;; Return value:  Size  Location     Type
  5724 ;;                  1    wreg      void 
  5725 ;; Registers used:
  5726 ;;		wreg, status,2, status,0, pclath, cstack
  5727 ;; Tracked objects:
  5728 ;;		On entry : 0/0
  5729 ;;		On exit  : 0/0
  5730 ;;		Unchanged: 0/0
  5731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5733 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5735 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5736 ;;Total ram usage:        1 bytes
  5737 ;; Hardware stack levels used: 1
  5738 ;; Hardware stack levels required when called: 9
  5739 ;; This function calls:
  5740 ;;		_I2C_Master_Start
  5741 ;;		_I2C_Master_Stop
  5742 ;;		_I2C_Master_Write
  5743 ;; This function is called by:
  5744 ;;		_LCD_Init
  5745 ;;		_LCD_Write_4Bit
  5746 ;;		_Backlight
  5747 ;;		_noBacklight
  5748 ;; This function uses a non-reentrant model
  5749 ;;
  5750                           
  5751                           
  5752                           ;psect for function _IO_Expander_Write
  5753  06C1                     _IO_Expander_Write:
  5754                           
  5755                           ;incstack = 0
  5756                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  5757                           ;IO_Expander_Write@Data stored from wreg
  5758  06C1  0020               	movlb	0	; select bank0
  5759  06C2  00A4               	movwf	IO_Expander_Write@Data
  5760  06C3                     l3196:
  5761                           
  5762                           ;I2C_LCD.c: 103: void IO_Expander_Write(unsigned char Data);I2C_LCD.c: 104: {;I2C_LCD.c:
      +                           105:   I2C_Master_Start();
  5763  06C3  318F  27B2  3186   	fcall	_I2C_Master_Start
  5764                           
  5765                           ;I2C_LCD.c: 106:   I2C_Master_Write(i2c_add);
  5766  06C6  0020               	movlb	0	; select bank0
  5767  06C7  0860               	movf	_i2c_add,w
  5768  06C8  3187  273E  3186   	fcall	_I2C_Master_Write
  5769                           
  5770                           ;I2C_LCD.c: 107:   I2C_Master_Write(Data | BackLight_State);
  5771  06CB  0020               	movlb	0	; select bank0
  5772  06CC  0824               	movf	IO_Expander_Write@Data,w
  5773  06CD  0468               	iorwf	_BackLight_State,w
  5774  06CE  3187  273E  3186   	fcall	_I2C_Master_Write
  5775                           
  5776                           ;I2C_LCD.c: 108:   I2C_Master_Stop();
  5777  06D1  318F  27B8  3186   	fcall	_I2C_Master_Stop
  5778  06D4                     l951:
  5779  06D4  0008               	return
  5780  06D5                     __end_of_IO_Expander_Write:
  5781                           
  5782                           	psect	text27
  5783  073E                     __ptext27:	
  5784 ;; *************** function _I2C_Master_Write *****************
  5785 ;; Defined at:
  5786 ;;		line 56 in file "I2C_LCD.c"
  5787 ;; Parameters:    Size  Location     Type
  5788 ;;  data            1    wreg     unsigned char 
  5789 ;; Auto vars:     Size  Location     Type
  5790 ;;  data            1    3[BANK0 ] unsigned char 
  5791 ;; Return value:  Size  Location     Type
  5792 ;;                  1    wreg      unsigned char 
  5793 ;; Registers used:
  5794 ;;		wreg, status,2, status,0, pclath, cstack
  5795 ;; Tracked objects:
  5796 ;;		On entry : 0/0
  5797 ;;		On exit  : 0/0
  5798 ;;		Unchanged: 0/0
  5799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5801 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5803 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5804 ;;Total ram usage:        1 bytes
  5805 ;; Hardware stack levels used: 1
  5806 ;; Hardware stack levels required when called: 8
  5807 ;; This function calls:
  5808 ;;		_I2C_Master_Wait
  5809 ;; This function is called by:
  5810 ;;		_IO_Expander_Write
  5811 ;; This function uses a non-reentrant model
  5812 ;;
  5813                           
  5814                           
  5815                           ;psect for function _I2C_Master_Write
  5816  073E                     _I2C_Master_Write:
  5817                           
  5818                           ;incstack = 0
  5819                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  5820                           ;I2C_Master_Write@data stored from wreg
  5821  073E  0020               	movlb	0	; select bank0
  5822  073F  00A3               	movwf	I2C_Master_Write@data
  5823  0740                     l3094:
  5824                           
  5825                           ;I2C_LCD.c: 56: unsigned char I2C_Master_Write(unsigned char data);I2C_LCD.c: 57: {;I2C_
      +                          LCD.c: 58:     I2C_Master_Wait();
  5826  0740  3187  27BC  3187   	fcall	_I2C_Master_Wait
  5827  0743                     l3096:
  5828                           
  5829                           ;I2C_LCD.c: 59:     SSPBUF = data;
  5830  0743  0020               	movlb	0	; select bank0
  5831  0744  0823               	movf	I2C_Master_Write@data,w
  5832  0745  0024               	movlb	4	; select bank4
  5833  0746  0091               	movwf	17	;volatile
  5834  0747                     l936:	
  5835                           ;I2C_LCD.c: 60:     while(!SSPIF);
  5836                           
  5837  0747  0020               	movlb	0	; select bank0
  5838  0748  1D91               	btfss	17,3	;volatile
  5839  0749  2F4B               	goto	u851
  5840  074A  2F4C               	goto	u850
  5841  074B                     u851:
  5842  074B  2F47               	goto	l936
  5843  074C                     u850:
  5844  074C                     l938:
  5845                           
  5846                           ;I2C_LCD.c: 61:  SSPIF = 0;
  5847  074C  1191               	bcf	17,3	;volatile
  5848  074D                     l939:	
  5849                           ;I2C_LCD.c: 62:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  5850                           
  5851  074D  0008               	return
  5852  074E                     __end_of_I2C_Master_Write:
  5853                           
  5854                           	psect	text28
  5855  0FB8                     __ptext28:	
  5856 ;; *************** function _I2C_Master_Stop *****************
  5857 ;; Defined at:
  5858 ;;		line 36 in file "I2C_LCD.c"
  5859 ;; Parameters:    Size  Location     Type
  5860 ;;		None
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;		None
  5863 ;; Return value:  Size  Location     Type
  5864 ;;                  1    wreg      void 
  5865 ;; Registers used:
  5866 ;;		wreg, status,2, status,0, pclath, cstack
  5867 ;; Tracked objects:
  5868 ;;		On entry : 0/0
  5869 ;;		On exit  : 0/0
  5870 ;;		Unchanged: 0/0
  5871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5876 ;;Total ram usage:        0 bytes
  5877 ;; Hardware stack levels used: 1
  5878 ;; Hardware stack levels required when called: 8
  5879 ;; This function calls:
  5880 ;;		_I2C_Master_Wait
  5881 ;; This function is called by:
  5882 ;;		_IO_Expander_Write
  5883 ;; This function uses a non-reentrant model
  5884 ;;
  5885                           
  5886                           
  5887                           ;psect for function _I2C_Master_Stop
  5888  0FB8                     _I2C_Master_Stop:
  5889  0FB8                     l3090:	
  5890                           ;incstack = 0
  5891                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  5892                           
  5893                           
  5894                           ;I2C_LCD.c: 38:     I2C_Master_Wait();
  5895  0FB8  3187  27BC  318F   	fcall	_I2C_Master_Wait
  5896  0FBB                     l3092:
  5897                           
  5898                           ;I2C_LCD.c: 39:     PEN = 1;
  5899  0FBB  0024               	movlb	4	; select bank4
  5900  0FBC  1516               	bsf	22,2	;volatile
  5901  0FBD                     l927:
  5902  0FBD  0008               	return
  5903  0FBE                     __end_of_I2C_Master_Stop:
  5904                           
  5905                           	psect	text29
  5906  0FB2                     __ptext29:	
  5907 ;; *************** function _I2C_Master_Start *****************
  5908 ;; Defined at:
  5909 ;;		line 24 in file "I2C_LCD.c"
  5910 ;; Parameters:    Size  Location     Type
  5911 ;;		None
  5912 ;; Auto vars:     Size  Location     Type
  5913 ;;		None
  5914 ;; Return value:  Size  Location     Type
  5915 ;;                  1    wreg      void 
  5916 ;; Registers used:
  5917 ;;		wreg, status,2, status,0, pclath, cstack
  5918 ;; Tracked objects:
  5919 ;;		On entry : 0/0
  5920 ;;		On exit  : 0/0
  5921 ;;		Unchanged: 0/0
  5922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5927 ;;Total ram usage:        0 bytes
  5928 ;; Hardware stack levels used: 1
  5929 ;; Hardware stack levels required when called: 8
  5930 ;; This function calls:
  5931 ;;		_I2C_Master_Wait
  5932 ;; This function is called by:
  5933 ;;		_IO_Expander_Write
  5934 ;; This function uses a non-reentrant model
  5935 ;;
  5936                           
  5937                           
  5938                           ;psect for function _I2C_Master_Start
  5939  0FB2                     _I2C_Master_Start:
  5940  0FB2                     l3086:	
  5941                           ;incstack = 0
  5942                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  5943                           
  5944                           
  5945                           ;I2C_LCD.c: 26:     I2C_Master_Wait();
  5946  0FB2  3187  27BC  318F   	fcall	_I2C_Master_Wait
  5947  0FB5                     l3088:
  5948                           
  5949                           ;I2C_LCD.c: 27:     SEN = 1;
  5950  0FB5  0024               	movlb	4	; select bank4
  5951  0FB6  1416               	bsf	22,0	;volatile
  5952  0FB7                     l921:
  5953  0FB7  0008               	return
  5954  0FB8                     __end_of_I2C_Master_Start:
  5955                           
  5956                           	psect	text30
  5957  07BC                     __ptext30:	
  5958 ;; *************** function _I2C_Master_Wait *****************
  5959 ;; Defined at:
  5960 ;;		line 19 in file "I2C_LCD.c"
  5961 ;; Parameters:    Size  Location     Type
  5962 ;;		None
  5963 ;; Auto vars:     Size  Location     Type
  5964 ;;		None
  5965 ;; Return value:  Size  Location     Type
  5966 ;;                  1    wreg      void 
  5967 ;; Registers used:
  5968 ;;		wreg, status,2
  5969 ;; Tracked objects:
  5970 ;;		On entry : 0/0
  5971 ;;		On exit  : 0/0
  5972 ;;		Unchanged: 0/0
  5973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5978 ;;Total ram usage:        0 bytes
  5979 ;; Hardware stack levels used: 1
  5980 ;; Hardware stack levels required when called: 7
  5981 ;; This function calls:
  5982 ;;		Nothing
  5983 ;; This function is called by:
  5984 ;;		_I2C_Master_Start
  5985 ;;		_I2C_Master_Stop
  5986 ;;		_I2C_Master_Write
  5987 ;;		_I2C_Master_RepeatedStart
  5988 ;;		_I2C_ACK
  5989 ;;		_I2C_NACK
  5990 ;;		_I2C_Read_Byte
  5991 ;; This function uses a non-reentrant model
  5992 ;;
  5993                           
  5994                           
  5995                           ;psect for function _I2C_Master_Wait
  5996  07BC                     _I2C_Master_Wait:
  5997  07BC                     l3066:	
  5998                           ;incstack = 0
  5999                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  6000                           
  6001  07BC                     l915:	
  6002                           ;I2C_LCD.c: 21:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  6003                           
  6004  07BC  0024               	movlb	4	; select bank4
  6005  07BD  1914               	btfsc	20,2	;volatile
  6006  07BE  2FC0               	goto	u821
  6007  07BF  2FC1               	goto	u820
  6008  07C0                     u821:
  6009  07C0  2FBC               	goto	l915
  6010  07C1                     u820:
  6011  07C1                     l3068:
  6012  07C1  0816               	movf	22,w	;volatile
  6013  07C2  391F               	andlw	31
  6014  07C3  1D03               	btfss	3,2
  6015  07C4  2FC6               	goto	u831
  6016  07C5  2FC7               	goto	u830
  6017  07C6                     u831:
  6018  07C6  2FBC               	goto	l915
  6019  07C7                     u830:
  6020  07C7                     l918:
  6021  07C7  0008               	return
  6022  07C8                     __end_of_I2C_Master_Wait:
  6023                           
  6024                           	psect	text31
  6025  07C8                     __ptext31:	
  6026 ;; *************** function _I2C_Master_Init *****************
  6027 ;; Defined at:
  6028 ;;		line 9 in file "I2C_LCD.c"
  6029 ;; Parameters:    Size  Location     Type
  6030 ;;		None
  6031 ;; Auto vars:     Size  Location     Type
  6032 ;;		None
  6033 ;; Return value:  Size  Location     Type
  6034 ;;                  1    wreg      void 
  6035 ;; Registers used:
  6036 ;;		wreg, status,2
  6037 ;; Tracked objects:
  6038 ;;		On entry : 0/0
  6039 ;;		On exit  : 0/0
  6040 ;;		Unchanged: 0/0
  6041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6046 ;;Total ram usage:        0 bytes
  6047 ;; Hardware stack levels used: 1
  6048 ;; Hardware stack levels required when called: 7
  6049 ;; This function calls:
  6050 ;;		Nothing
  6051 ;; This function is called by:
  6052 ;;		_main
  6053 ;; This function uses a non-reentrant model
  6054 ;;
  6055                           
  6056                           
  6057                           ;psect for function _I2C_Master_Init
  6058  07C8                     _I2C_Master_Init:
  6059  07C8                     l3672:	
  6060                           ;incstack = 0
  6061                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  6062                           
  6063                           
  6064                           ;I2C_LCD.c: 11:   SSPCON = 0x28;
  6065  07C8  3028               	movlw	40
  6066  07C9  0024               	movlb	4	; select bank4
  6067  07CA  0095               	movwf	21	;volatile
  6068  07CB                     l3674:
  6069                           
  6070                           ;I2C_LCD.c: 12:   SSPCON2 = 0x00;
  6071  07CB  0196               	clrf	22	;volatile
  6072  07CC                     l3676:
  6073                           
  6074                           ;I2C_LCD.c: 13:   SSPSTAT = 0x00;
  6075  07CC  0194               	clrf	20	;volatile
  6076                           
  6077                           ;I2C_LCD.c: 14:   SSPADD = ((16000000/4)/100000) - 1;
  6078  07CD  3027               	movlw	39
  6079  07CE  0092               	movwf	18	;volatile
  6080  07CF                     l3678:
  6081                           
  6082                           ;I2C_LCD.c: 15:   TRISC3 = 1;
  6083  07CF  0021               	movlb	1	; select bank1
  6084  07D0  158E               	bsf	14,3	;volatile
  6085  07D1                     l3680:
  6086                           
  6087                           ;I2C_LCD.c: 16:   TRISC4 = 1;
  6088  07D1  160E               	bsf	14,4	;volatile
  6089  07D2                     l912:
  6090  07D2  0008               	return
  6091  07D3                     __end_of_I2C_Master_Init:
  6092                           
  6093                           	psect	text32
  6094  052B                     __ptext32:	
  6095 ;; *************** function _EUSART_Read *****************
  6096 ;; Defined at:
  6097 ;;		line 151 in file "mcc_generated_files/eusart.c"
  6098 ;; Parameters:    Size  Location     Type
  6099 ;;		None
  6100 ;; Auto vars:     Size  Location     Type
  6101 ;;  readValue       1    4[BANK0 ] unsigned char 
  6102 ;; Return value:  Size  Location     Type
  6103 ;;                  1    wreg      unsigned char 
  6104 ;; Registers used:
  6105 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6106 ;; Tracked objects:
  6107 ;;		On entry : 0/0
  6108 ;;		On exit  : 0/0
  6109 ;;		Unchanged: 0/0
  6110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6112 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6113 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6114 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6115 ;;Total ram usage:        2 bytes
  6116 ;; Hardware stack levels used: 1
  6117 ;; Hardware stack levels required when called: 7
  6118 ;; This function calls:
  6119 ;;		Nothing
  6120 ;; This function is called by:
  6121 ;;		_main
  6122 ;;		_getch
  6123 ;; This function uses a non-reentrant model
  6124 ;;
  6125                           
  6126                           
  6127                           ;psect for function _EUSART_Read
  6128  052B                     _EUSART_Read:
  6129  052B                     l3564:	
  6130                           ;incstack = 0
  6131                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  6132                           
  6133  052B                     l3566:	
  6134                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  6135                           
  6136                           
  6137                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  6138  052B  0020               	movlb	0	; select bank0
  6139  052C  0862               	movf	_eusartRxCount,w	;volatile
  6140  052D  1903               	btfsc	3,2
  6141  052E  2D30               	goto	u1031
  6142  052F  2D31               	goto	u1030
  6143  0530                     u1031:
  6144  0530  2D2B               	goto	l3566
  6145  0531                     u1030:
  6146  0531                     l3568:
  6147                           
  6148                           ;mcc_generated_files/eusart.c: 159:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
  6149  0531  0863               	movf	_eusartRxTail,w	;volatile
  6150  0532  3EBD               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6151  0533  0086               	movwf	6
  6152  0534  0187               	clrf	7
  6153  0535  0801               	movf	1,w
  6154  0536  00A3               	movwf	??_EUSART_Read
  6155  0537  0823               	movf	??_EUSART_Read,w
  6156  0538  00E1               	movwf	_eusartRxLastError	;volatile
  6157                           
  6158                           ;mcc_generated_files/eusart.c: 161:     readValue = eusartRxBuffer[eusartRxTail++];
  6159  0539  0863               	movf	_eusartRxTail,w
  6160  053A  3EC5               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  6161  053B  0086               	movwf	6
  6162  053C  0187               	clrf	7
  6163  053D  0801               	movf	1,w
  6164  053E  00A3               	movwf	??_EUSART_Read
  6165  053F  0823               	movf	??_EUSART_Read,w
  6166  0540  00A4               	movwf	EUSART_Read@readValue
  6167  0541                     l3570:
  6168  0541  3001               	movlw	1
  6169  0542  00A3               	movwf	??_EUSART_Read
  6170  0543  0823               	movf	??_EUSART_Read,w
  6171  0544  07E3               	addwf	_eusartRxTail,f	;volatile
  6172  0545                     l3572:
  6173                           
  6174                           ;mcc_generated_files/eusart.c: 162:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
  6175  0545  3008               	movlw	8
  6176  0546  0263               	subwf	_eusartRxTail,w	;volatile
  6177  0547  1C03               	skipc
  6178  0548  2D4A               	goto	u1041
  6179  0549  2D4B               	goto	u1040
  6180  054A                     u1041:
  6181  054A  2D4C               	goto	l3576
  6182  054B                     u1040:
  6183  054B                     l3574:
  6184                           
  6185                           ;mcc_generated_files/eusart.c: 163:     {;mcc_generated_files/eusart.c: 164:         eus
      +                          artRxTail = 0;
  6186  054B  01E3               	clrf	_eusartRxTail	;volatile
  6187  054C                     l3576:
  6188                           
  6189                           ;mcc_generated_files/eusart.c: 166:     PIE1bits.RCIE = 0;
  6190  054C  0021               	movlb	1	; select bank1
  6191  054D  1291               	bcf	17,5	;volatile
  6192  054E                     l3578:
  6193                           
  6194                           ;mcc_generated_files/eusart.c: 167:     eusartRxCount--;
  6195  054E  3001               	movlw	1
  6196  054F  0020               	movlb	0	; select bank0
  6197  0550  02E2               	subwf	_eusartRxCount,f	;volatile
  6198  0551                     l3580:
  6199                           
  6200                           ;mcc_generated_files/eusart.c: 168:     PIE1bits.RCIE = 1;
  6201  0551  0021               	movlb	1	; select bank1
  6202  0552  1691               	bsf	17,5	;volatile
  6203  0553                     l3582:
  6204                           
  6205                           ;mcc_generated_files/eusart.c: 170:     return readValue;
  6206  0553  0020               	movlb	0	; select bank0
  6207  0554  0824               	movf	EUSART_Read@readValue,w
  6208  0555                     l314:
  6209  0555  0008               	return
  6210  0556                     __end_of_EUSART_Read:
  6211                           
  6212                           	psect	text33
  6213  05A4                     __ptext33:	
  6214 ;; *************** function _DATAEE_WriteByte *****************
  6215 ;; Defined at:
  6216 ;;		line 187 in file "mcc_generated_files/memory.c"
  6217 ;; Parameters:    Size  Location     Type
  6218 ;;  bAdd            1    wreg     unsigned char 
  6219 ;;  bData           1    3[BANK0 ] unsigned char 
  6220 ;; Auto vars:     Size  Location     Type
  6221 ;;  bAdd            1    4[BANK0 ] unsigned char 
  6222 ;;  GIEBitValue     1    5[BANK0 ] unsigned char 
  6223 ;; Return value:  Size  Location     Type
  6224 ;;                  1    wreg      void 
  6225 ;; Registers used:
  6226 ;;		wreg, status,2, status,0
  6227 ;; Tracked objects:
  6228 ;;		On entry : 0/0
  6229 ;;		On exit  : 0/0
  6230 ;;		Unchanged: 0/0
  6231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6232 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6233 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6235 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6236 ;;Total ram usage:        3 bytes
  6237 ;; Hardware stack levels used: 1
  6238 ;; Hardware stack levels required when called: 7
  6239 ;; This function calls:
  6240 ;;		Nothing
  6241 ;; This function is called by:
  6242 ;;		_main
  6243 ;; This function uses a non-reentrant model
  6244 ;;
  6245                           
  6246                           
  6247                           ;psect for function _DATAEE_WriteByte
  6248  05A4                     _DATAEE_WriteByte:
  6249                           
  6250                           ;incstack = 0
  6251                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
  6252                           ;DATAEE_WriteByte@bAdd stored from wreg
  6253  05A4  0020               	movlb	0	; select bank0
  6254  05A5  00A4               	movwf	DATAEE_WriteByte@bAdd
  6255  05A6                     l3638:
  6256  05A6                     l3640:
  6257                           
  6258                           ;mcc_generated_files/memory.c: 191:     EEADRL = (uint8_t)(bAdd & 0x0ff);
  6259  05A6  0824               	movf	DATAEE_WriteByte@bAdd,w
  6260  05A7  0023               	movlb	3	; select bank3
  6261  05A8  0091               	movwf	17	;volatile
  6262  05A9                     l3642:
  6263                           
  6264                           ;mcc_generated_files/memory.c: 192:     EEDATL = bData;
  6265  05A9  0020               	movlb	0	; select bank0
  6266  05AA  0823               	movf	DATAEE_WriteByte@bData,w
  6267  05AB  0023               	movlb	3	; select bank3
  6268  05AC  0093               	movwf	19	;volatile
  6269  05AD                     l3644:
  6270                           
  6271                           ;mcc_generated_files/memory.c: 193:     EECON1bits.EEPGD = 0;
  6272  05AD  1395               	bcf	21,7	;volsfr
  6273  05AE                     l3646:
  6274                           
  6275                           ;mcc_generated_files/memory.c: 194:     EECON1bits.CFGS = 0;
  6276  05AE  1315               	bcf	21,6	;volsfr
  6277  05AF                     l3648:
  6278                           
  6279                           ;mcc_generated_files/memory.c: 195:     EECON1bits.WREN = 1;
  6280  05AF  1515               	bsf	21,2	;volsfr
  6281  05B0                     l3650:
  6282                           
  6283                           ;mcc_generated_files/memory.c: 197:     GIEBitValue = INTCONbits.GIE;
  6284  05B0  3000               	movlw	0
  6285  05B1  1B8B               	btfsc	11,7	;volatile
  6286  05B2  3001               	movlw	1
  6287  05B3  0020               	movlb	0	; select bank0
  6288  05B4  00A5               	movwf	DATAEE_WriteByte@GIEBitValue
  6289  05B5                     l3652:
  6290                           
  6291                           ;mcc_generated_files/memory.c: 198:     INTCONbits.GIE = 0;
  6292  05B5  138B               	bcf	11,7	;volatile
  6293                           
  6294                           ;mcc_generated_files/memory.c: 199:     EECON2 = 0x55;
  6295  05B6  3055               	movlw	85
  6296  05B7  0023               	movlb	3	; select bank3
  6297  05B8  0096               	movwf	22	;volsfr
  6298                           
  6299                           ;mcc_generated_files/memory.c: 200:     EECON2 = 0xAA;
  6300  05B9  30AA               	movlw	170
  6301  05BA  0096               	movwf	22	;volsfr
  6302  05BB                     l3654:
  6303                           
  6304                           ;mcc_generated_files/memory.c: 201:     EECON1bits.WR = 1;
  6305  05BB  1495               	bsf	21,1	;volsfr
  6306  05BC                     l784:	
  6307                           ;mcc_generated_files/memory.c: 204:     {;mcc_generated_files/memory.c: 205:     }
  6308                           
  6309                           
  6310                           ;mcc_generated_files/memory.c: 203:     while (EECON1bits.WR)
  6311  05BC  1895               	btfsc	21,1	;volsfr
  6312  05BD  2DBF               	goto	u1121
  6313  05BE  2DC0               	goto	u1120
  6314  05BF                     u1121:
  6315  05BF  2DBC               	goto	l784
  6316  05C0                     u1120:
  6317  05C0                     l786:
  6318                           
  6319                           ;mcc_generated_files/memory.c: 207:     EECON1bits.WREN = 0;
  6320  05C0  1115               	bcf	21,2	;volsfr
  6321  05C1                     l3656:
  6322                           
  6323                           ;mcc_generated_files/memory.c: 208:     INTCONbits.GIE = GIEBitValue;
  6324  05C1  0020               	movlb	0	; select bank0
  6325  05C2  0C25               	rrf	DATAEE_WriteByte@GIEBitValue,w
  6326  05C3  1C03               	skipc
  6327  05C4  138B               	bcf	11,7	;volatile
  6328  05C5  1803               	skipnc
  6329  05C6  178B               	bsf	11,7	;volatile
  6330  05C7                     l787:
  6331  05C7  0008               	return
  6332  05C8                     __end_of_DATAEE_WriteByte:
  6333                           
  6334                           	psect	text34
  6335  078A                     __ptext34:	
  6336 ;; *************** function _DATAEE_ReadByte *****************
  6337 ;; Defined at:
  6338 ;;		line 211 in file "mcc_generated_files/memory.c"
  6339 ;; Parameters:    Size  Location     Type
  6340 ;;  bAdd            1    wreg     unsigned char 
  6341 ;; Auto vars:     Size  Location     Type
  6342 ;;  bAdd            1    3[BANK0 ] unsigned char 
  6343 ;; Return value:  Size  Location     Type
  6344 ;;                  1    wreg      unsigned char 
  6345 ;; Registers used:
  6346 ;;		wreg
  6347 ;; Tracked objects:
  6348 ;;		On entry : 0/0
  6349 ;;		On exit  : 0/0
  6350 ;;		Unchanged: 0/0
  6351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6353 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6355 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6356 ;;Total ram usage:        1 bytes
  6357 ;; Hardware stack levels used: 1
  6358 ;; Hardware stack levels required when called: 7
  6359 ;; This function calls:
  6360 ;;		Nothing
  6361 ;; This function is called by:
  6362 ;;		_main
  6363 ;; This function uses a non-reentrant model
  6364 ;;
  6365                           
  6366                           
  6367                           ;psect for function _DATAEE_ReadByte
  6368  078A                     _DATAEE_ReadByte:
  6369                           
  6370                           ;incstack = 0
  6371                           ; Regs used in _DATAEE_ReadByte: [wreg]
  6372                           ;DATAEE_ReadByte@bAdd stored from wreg
  6373  078A  0020               	movlb	0	; select bank0
  6374  078B  00A3               	movwf	DATAEE_ReadByte@bAdd
  6375  078C                     l3658:
  6376                           
  6377                           ;mcc_generated_files/memory.c: 211: uint8_t DATAEE_ReadByte(uint8_t bAdd);mcc_generated_
      +                          files/memory.c: 212: {;mcc_generated_files/memory.c: 213:     EEADRL = (uint8_t)(bAdd & 
      +                          0x0ff);
  6378  078C  0823               	movf	DATAEE_ReadByte@bAdd,w
  6379  078D  0023               	movlb	3	; select bank3
  6380  078E  0091               	movwf	17	;volatile
  6381  078F                     l3660:
  6382                           
  6383                           ;mcc_generated_files/memory.c: 214:     EECON1bits.CFGS = 0;
  6384  078F  1315               	bcf	21,6	;volsfr
  6385  0790                     l3662:
  6386                           
  6387                           ;mcc_generated_files/memory.c: 215:     EECON1bits.EEPGD = 0;
  6388  0790  1395               	bcf	21,7	;volsfr
  6389  0791                     l3664:
  6390                           
  6391                           ;mcc_generated_files/memory.c: 216:     EECON1bits.RD = 1;
  6392  0791  1415               	bsf	21,0	;volsfr
  6393  0792                     l3666:
  6394                           
  6395                           ;mcc_generated_files/memory.c: 217:     __nop();
  6396  0792  0000               	nop
  6397  0793                     l3668:
  6398                           
  6399                           ;mcc_generated_files/memory.c: 218:     __nop();
  6400  0793  0000               	nop
  6401                           
  6402                           ;mcc_generated_files/memory.c: 220:     return (EEDATL);
  6403  0794  0023               	movlb	3	; select bank3
  6404  0795  0813               	movf	19,w	;volatile
  6405  0796                     l790:
  6406  0796  0008               	return
  6407  0797                     __end_of_DATAEE_ReadByte:
  6408                           
  6409                           	psect	text35
  6410  060C                     __ptext35:	
  6411 ;; *************** function _ADC_GetConversion *****************
  6412 ;; Defined at:
  6413 ;;		line 112 in file "mcc_generated_files/adc.c"
  6414 ;; Parameters:    Size  Location     Type
  6415 ;;  channel         1    wreg     enum E2947
  6416 ;; Auto vars:     Size  Location     Type
  6417 ;;  channel         1    6[BANK0 ] enum E2947
  6418 ;; Return value:  Size  Location     Type
  6419 ;;                  2    3[BANK0 ] unsigned short 
  6420 ;; Registers used:
  6421 ;;		wreg, status,2, status,0
  6422 ;; Tracked objects:
  6423 ;;		On entry : 0/0
  6424 ;;		On exit  : 0/0
  6425 ;;		Unchanged: 0/0
  6426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6427 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6428 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6429 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6430 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6431 ;;Total ram usage:        4 bytes
  6432 ;; Hardware stack levels used: 1
  6433 ;; Hardware stack levels required when called: 7
  6434 ;; This function calls:
  6435 ;;		Nothing
  6436 ;; This function is called by:
  6437 ;;		_main
  6438 ;; This function uses a non-reentrant model
  6439 ;;
  6440                           
  6441                           
  6442                           ;psect for function _ADC_GetConversion
  6443  060C                     _ADC_GetConversion:
  6444                           
  6445                           ;incstack = 0
  6446                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  6447                           ;ADC_GetConversion@channel stored from wreg
  6448  060C  0020               	movlb	0	; select bank0
  6449  060D  00A6               	movwf	ADC_GetConversion@channel
  6450  060E                     l3552:
  6451                           
  6452                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  6453  060E  0826               	movf	ADC_GetConversion@channel,w
  6454  060F  00A5               	movwf	??_ADC_GetConversion
  6455  0610  0DA5               	rlf	??_ADC_GetConversion,f
  6456  0611  0DA5               	rlf	??_ADC_GetConversion,f
  6457  0612  0021               	movlb	1	; select bank1
  6458  0613  081D               	movf	29,w	;volatile
  6459  0614  0020               	movlb	0	; select bank0
  6460  0615  0625               	xorwf	??_ADC_GetConversion,w
  6461  0616  3983               	andlw	-125
  6462  0617  0625               	xorwf	??_ADC_GetConversion,w
  6463  0618  0021               	movlb	1	; select bank1
  6464  0619  009D               	movwf	29	;volatile
  6465  061A                     l3554:
  6466                           
  6467                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  6468  061A  141D               	bsf	29,0	;volatile
  6469  061B                     l3556:
  6470                           
  6471                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(32000000/4000000.0)));
  6472  061B  300D               	movlw	13
  6473  061C                     u1657:
  6474  061C  0B89               	decfsz	9,f
  6475  061D  2E1C               	goto	u1657
  6476  061E  0000               	nop
  6477  061F                     l3558:
  6478                           
  6479                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  6480  061F  0021               	movlb	1	; select bank1
  6481  0620  149D               	bsf	29,1	;volatile
  6482  0621                     l214:	
  6483                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  6484                           
  6485                           
  6486                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  6487  0621  189D               	btfsc	29,1	;volatile
  6488  0622  2E24               	goto	u1021
  6489  0623  2E25               	goto	u1020
  6490  0624                     u1021:
  6491  0624  2E21               	goto	l214
  6492  0625                     u1020:
  6493  0625                     l3560:
  6494                           
  6495                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  6496  0625  081C               	movf	28,w	;volatile
  6497  0626  0020               	movlb	0	; select bank0
  6498  0627  00A4               	movwf	?_ADC_GetConversion+1
  6499  0628  0021               	movlb	1	; select bank1
  6500  0629  081B               	movf	27,w	;volatile
  6501  062A  0020               	movlb	0	; select bank0
  6502  062B  00A3               	movwf	?_ADC_GetConversion
  6503  062C                     l217:
  6504  062C  0008               	return
  6505  062D                     __end_of_ADC_GetConversion:
  6506                           
  6507                           	psect	intentry
  6508  0004                     __pintentry:	
  6509 ;; *************** function _INTERRUPT_InterruptManager *****************
  6510 ;; Defined at:
  6511 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6512 ;; Parameters:    Size  Location     Type
  6513 ;;		None
  6514 ;; Auto vars:     Size  Location     Type
  6515 ;;		None
  6516 ;; Return value:  Size  Location     Type
  6517 ;;                  1    wreg      void 
  6518 ;; Registers used:
  6519 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6520 ;; Tracked objects:
  6521 ;;		On entry : 0/0
  6522 ;;		On exit  : 0/0
  6523 ;;		Unchanged: 0/0
  6524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6529 ;;Total ram usage:        0 bytes
  6530 ;; Hardware stack levels used: 1
  6531 ;; Hardware stack levels required when called: 6
  6532 ;; This function calls:
  6533 ;;		Absolute function
  6534 ;;		_EUSART_Receive_ISR
  6535 ;;		_EUSART_Transmit_ISR
  6536 ;;		_I2C_MasterIsr
  6537 ;; This function is called by:
  6538 ;;		Interrupt level 1
  6539 ;; This function uses a non-reentrant model
  6540 ;;
  6541                           
  6542  0004                     _INTERRUPT_InterruptManager:
  6543                           
  6544                           ;incstack = 0
  6545  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  6546                           
  6547                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6548  0005  3180               	pagesel	$
  6549  0006                     i1l3896:
  6550                           
  6551                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  6552  0006  1F0B               	btfss	11,6	;volatile
  6553  0007  2809               	goto	u130_21
  6554  0008  280A               	goto	u130_20
  6555  0009                     u130_21:
  6556  0009  2845               	goto	i1l401
  6557  000A                     u130_20:
  6558  000A                     i1l3898:
  6559                           
  6560                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  6561  000A  0021               	movlb	1	; select bank1
  6562  000B  1E11               	btfss	17,4	;volatile
  6563  000C  280E               	goto	u131_21
  6564  000D  280F               	goto	u131_20
  6565  000E                     u131_21:
  6566  000E  281A               	goto	i1l392
  6567  000F                     u131_20:
  6568  000F                     i1l3900:
  6569  000F  0020               	movlb	0	; select bank0
  6570  0010  1E11               	btfss	17,4	;volatile
  6571  0011  2813               	goto	u132_21
  6572  0012  2814               	goto	u132_20
  6573  0013                     u132_21:
  6574  0013  281A               	goto	i1l392
  6575  0014                     u132_20:
  6576  0014                     i1l3902:
  6577                           
  6578                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
  6579  0014  085B               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  6580  0015  008A               	movwf	10
  6581  0016  085A               	movf	_EUSART_TxDefaultInterruptHandler,w
  6582  0017  000A               	callw
  6583  0018  3180               	pagesel	$
  6584                           
  6585                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  6586  0019  2845               	goto	i1l401
  6587  001A                     i1l392:	
  6588                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  6589                           
  6590  001A  0021               	movlb	1	; select bank1
  6591  001B  1E91               	btfss	17,5	;volatile
  6592  001C  281E               	goto	u133_21
  6593  001D  281F               	goto	u133_20
  6594  001E                     u133_21:
  6595  001E  282A               	goto	i1l394
  6596  001F                     u133_20:
  6597  001F                     i1l3904:
  6598  001F  0020               	movlb	0	; select bank0
  6599  0020  1E91               	btfss	17,5	;volatile
  6600  0021  2823               	goto	u134_21
  6601  0022  2824               	goto	u134_20
  6602  0023                     u134_21:
  6603  0023  282A               	goto	i1l394
  6604  0024                     u134_20:
  6605  0024                     i1l3906:
  6606                           
  6607                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
  6608  0024  0859               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  6609  0025  008A               	movwf	10
  6610  0026  0858               	movf	_EUSART_RxDefaultInterruptHandler,w
  6611  0027  000A               	callw
  6612  0028  3180               	pagesel	$
  6613                           
  6614                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  6615  0029  2845               	goto	i1l401
  6616  002A                     i1l394:	
  6617                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE2bits.BCLIE == 1 && PIR
      +                          2bits.BCLIF == 1)
  6618                           
  6619  002A  0021               	movlb	1	; select bank1
  6620  002B  1D92               	btfss	18,3	;volatile
  6621  002C  282E               	goto	u135_21
  6622  002D  282F               	goto	u135_20
  6623  002E                     u135_21:
  6624  002E  283A               	goto	i1l396
  6625  002F                     u135_20:
  6626  002F                     i1l3908:
  6627  002F  0020               	movlb	0	; select bank0
  6628  0030  1D92               	btfss	18,3	;volatile
  6629  0031  2833               	goto	u136_21
  6630  0032  2834               	goto	u136_20
  6631  0033                     u136_21:
  6632  0033  283A               	goto	i1l396
  6633  0034                     u136_20:
  6634  0034                     i1l3910:
  6635                           
  6636                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             MSSP_InterruptHandler();
  6637  0034  085F               	movf	_MSSP_InterruptHandler+1,w
  6638  0035  008A               	movwf	10
  6639  0036  085E               	movf	_MSSP_InterruptHandler,w
  6640  0037  000A               	callw
  6641  0038  3180               	pagesel	$
  6642                           
  6643                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  6644  0039  2845               	goto	i1l401
  6645  003A                     i1l396:	
  6646                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.SSPIE == 1 && PIR
      +                          1bits.SSPIF == 1)
  6647                           
  6648  003A  0021               	movlb	1	; select bank1
  6649  003B  1D91               	btfss	17,3	;volatile
  6650  003C  283E               	goto	u137_21
  6651  003D  283F               	goto	u137_20
  6652  003E                     u137_21:
  6653  003E  2845               	goto	i1l395
  6654  003F                     u137_20:
  6655  003F                     i1l3912:
  6656  003F  0020               	movlb	0	; select bank0
  6657  0040  1D91               	btfss	17,3	;volatile
  6658  0041  2843               	goto	u138_21
  6659  0042  2844               	goto	u138_20
  6660  0043                     u138_21:
  6661  0043  2845               	goto	i1l395
  6662  0044                     u138_20:
  6663  0044  2834               	goto	i1l3910
  6664  0045                     i1l395:
  6665  0045                     i1l401:
  6666  0045  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6667  0046  0009               	retfie
  6668  0047                     __end_of_INTERRUPT_InterruptManager:
  6669                           
  6670                           	psect	text37
  6671  0F72                     __ptext37:	
  6672 ;; *************** function _I2C_MasterIsr *****************
  6673 ;; Defined at:
  6674 ;;		line 318 in file "mcc_generated_files/i2c_master.c"
  6675 ;; Parameters:    Size  Location     Type
  6676 ;;		None
  6677 ;; Auto vars:     Size  Location     Type
  6678 ;;		None
  6679 ;; Return value:  Size  Location     Type
  6680 ;;                  1    wreg      void 
  6681 ;; Registers used:
  6682 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6683 ;; Tracked objects:
  6684 ;;		On entry : 0/0
  6685 ;;		On exit  : 0/0
  6686 ;;		Unchanged: 0/0
  6687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6692 ;;Total ram usage:        0 bytes
  6693 ;; Hardware stack levels used: 1
  6694 ;; Hardware stack levels required when called: 5
  6695 ;; This function calls:
  6696 ;;		_I2C_MasterFsm
  6697 ;; This function is called by:
  6698 ;;		_I2C_Open
  6699 ;;		_INTERRUPT_InterruptManager
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           
  6703                           
  6704                           ;psect for function _I2C_MasterIsr
  6705  0F72                     _I2C_MasterIsr:
  6706  0F72                     i1l3636:	
  6707                           ;incstack = 0
  6708                           ; Regs used in _I2C_MasterIsr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6709                           
  6710                           
  6711                           ;mcc_generated_files/i2c_master.c: 320:     I2C_MasterFsm();
  6712  0F72  3184  24A6  318F   	fcall	_I2C_MasterFsm
  6713  0F75                     i1l563:
  6714  0F75  0008               	return
  6715  0F76                     __end_of_I2C_MasterIsr:
  6716                           
  6717                           	psect	text38
  6718  04A6                     __ptext38:	
  6719 ;; *************** function _I2C_MasterFsm *****************
  6720 ;; Defined at:
  6721 ;;		line 323 in file "mcc_generated_files/i2c_master.c"
  6722 ;; Parameters:    Size  Location     Type
  6723 ;;		None
  6724 ;; Auto vars:     Size  Location     Type
  6725 ;;		None
  6726 ;; Return value:  Size  Location     Type
  6727 ;;                  1    wreg      void 
  6728 ;; Registers used:
  6729 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6730 ;; Tracked objects:
  6731 ;;		On entry : 0/0
  6732 ;;		On exit  : 0/0
  6733 ;;		Unchanged: 0/0
  6734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6737 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6738 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6739 ;;Total ram usage:        3 bytes
  6740 ;; Hardware stack levels used: 1
  6741 ;; Hardware stack levels required when called: 4
  6742 ;; This function calls:
  6743 ;;		_I2C_DO_ADDRESS_NACK
  6744 ;;		_I2C_DO_IDLE
  6745 ;;		_I2C_DO_RCEN
  6746 ;;		_I2C_DO_RESET
  6747 ;;		_I2C_DO_RX
  6748 ;;		_I2C_DO_RX_ACK
  6749 ;;		_I2C_DO_RX_NACK_RESTART
  6750 ;;		_I2C_DO_RX_NACK_STOP
  6751 ;;		_I2C_DO_SEND_ADR_READ
  6752 ;;		_I2C_DO_SEND_ADR_WRITE
  6753 ;;		_I2C_DO_SEND_RESTART
  6754 ;;		_I2C_DO_SEND_RESTART_READ
  6755 ;;		_I2C_DO_SEND_RESTART_WRITE
  6756 ;;		_I2C_DO_SEND_STOP
  6757 ;;		_I2C_DO_TX
  6758 ;;		_I2C_DO_TX_EMPTY
  6759 ;;		_I2C_MasterClearIrq
  6760 ;;		_I2C_MasterIsNack
  6761 ;; This function is called by:
  6762 ;;		_I2C_MasterIsr
  6763 ;; This function uses a non-reentrant model
  6764 ;;
  6765                           
  6766                           
  6767                           ;psect for function _I2C_MasterFsm
  6768  04A6                     _I2C_MasterFsm:
  6769  04A6                     i1l3518:	
  6770                           ;incstack = 0
  6771                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6772                           
  6773                           
  6774                           ;mcc_generated_files/i2c_master.c: 325:     I2C_MasterClearIrq();
  6775  04A6  318F  275F  3184   	fcall	_I2C_MasterClearIrq
  6776  04A9                     i1l3520:
  6777                           
  6778                           ;mcc_generated_files/i2c_master.c: 327:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  6779  04A9  0021               	movlb	1	; select bank1
  6780  04AA  1C3C               	btfss	(_I2C_Status^(0+128)+28),0
  6781  04AB  2CAD               	goto	u97_21
  6782  04AC  2CAE               	goto	u97_20
  6783  04AD                     u97_21:
  6784  04AD  2CBC               	goto	i1l3526
  6785  04AE                     u97_20:
  6786  04AE                     i1l3522:
  6787  04AE  318F  27AC  3184   	fcall	_I2C_MasterIsNack
  6788  04B1  3A00               	xorlw	0
  6789  04B2  1903               	skipnz
  6790  04B3  2CB5               	goto	u98_21
  6791  04B4  2CB6               	goto	u98_20
  6792  04B5                     u98_21:
  6793  04B5  2CBC               	goto	i1l3526
  6794  04B6                     u98_20:
  6795  04B6                     i1l3524:
  6796                           
  6797                           ;mcc_generated_files/i2c_master.c: 328:     {;mcc_generated_files/i2c_master.c: 329:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  6798  04B6  300F               	movlw	15
  6799  04B7  0020               	movlb	0	; select bank0
  6800  04B8  00A0               	movwf	??_I2C_MasterFsm
  6801  04B9  0820               	movf	??_I2C_MasterFsm,w
  6802  04BA  0021               	movlb	1	; select bank1
  6803  04BB  00BA               	movwf	(_I2C_Status^(0+128)+26)
  6804  04BC                     i1l3526:
  6805                           
  6806                           ;mcc_generated_files/i2c_master.c: 331:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
  6807  04BC  0021               	movlb	1	; select bank1
  6808  04BD  083A               	movf	(_I2C_Status^(0+128)+26),w
  6809  04BE  0020               	movlb	0	; select bank0
  6810  04BF  00A0               	movwf	??_I2C_MasterFsm
  6811  04C0  01A1               	clrf	??_I2C_MasterFsm+1
  6812  04C1  35A0               	lslf	??_I2C_MasterFsm,f
  6813  04C2  0DA1               	rlf	??_I2C_MasterFsm+1,f
  6814  04C3  3018               	movlw	low (_i2c_fsmStateTable| (0+32768))
  6815  04C4  0720               	addwf	??_I2C_MasterFsm,w
  6816  04C5  0084               	movwf	4
  6817  04C6  3084               	movlw	high (_i2c_fsmStateTable| (0+32768))
  6818  04C7  3D21               	addwfc	??_I2C_MasterFsm+1,w
  6819  04C8  0085               	movwf	5
  6820  04C9  3F01               	moviw [1]fsr0
  6821  04CA  008A               	movwf	10
  6822  04CB  3F00               	moviw [0]fsr0
  6823  04CC  000A               	callw
  6824  04CD  3184               	pagesel	$
  6825  04CE  0020               	movlb	0	; select bank0
  6826  04CF  00A2               	movwf	??_I2C_MasterFsm+2
  6827  04D0  0822               	movf	??_I2C_MasterFsm+2,w
  6828  04D1  0021               	movlb	1	; select bank1
  6829  04D2  00BA               	movwf	(_I2C_Status^(0+128)+26)
  6830  04D3                     i1l567:
  6831  04D3  0008               	return
  6832  04D4                     __end_of_I2C_MasterFsm:
  6833                           
  6834                           	psect	text39
  6835  0F5F                     __ptext39:	
  6836 ;; *************** function _I2C_MasterClearIrq *****************
  6837 ;; Defined at:
  6838 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
  6839 ;; Parameters:    Size  Location     Type
  6840 ;;		None
  6841 ;; Auto vars:     Size  Location     Type
  6842 ;;		None
  6843 ;; Return value:  Size  Location     Type
  6844 ;;                  1    wreg      void 
  6845 ;; Registers used:
  6846 ;;		None
  6847 ;; Tracked objects:
  6848 ;;		On entry : 0/0
  6849 ;;		On exit  : 0/0
  6850 ;;		Unchanged: 0/0
  6851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6856 ;;Total ram usage:        0 bytes
  6857 ;; Hardware stack levels used: 1
  6858 ;; This function calls:
  6859 ;;		Nothing
  6860 ;; This function is called by:
  6861 ;;		_I2C_MasterFsm
  6862 ;;		_I2C_Open
  6863 ;;		_I2C_Close
  6864 ;; This function uses a non-reentrant model
  6865 ;;
  6866                           
  6867                           
  6868                           ;psect for function _I2C_MasterClearIrq
  6869  0F5F                     _I2C_MasterClearIrq:
  6870  0F5F                     i1l3232:	
  6871                           ;incstack = 0
  6872                           ; Regs used in _I2C_MasterClearIrq: []
  6873                           
  6874                           
  6875                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
  6876  0F5F  0020               	movlb	0	; select bank0
  6877  0F60  1191               	bcf	17,3	;volatile
  6878  0F61                     i1l730:
  6879  0F61  0008               	return
  6880  0F62                     __end_of_I2C_MasterClearIrq:
  6881                           
  6882                           	psect	text40
  6883  04D4                     __ptext40:	
  6884 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  6885 ;; Defined at:
  6886 ;;		line 501 in file "mcc_generated_files/i2c_master.c"
  6887 ;; Parameters:    Size  Location     Type
  6888 ;;		None
  6889 ;; Auto vars:     Size  Location     Type
  6890 ;;		None
  6891 ;; Return value:  Size  Location     Type
  6892 ;;                  1    wreg      enum E3338
  6893 ;; Registers used:
  6894 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6895 ;; Tracked objects:
  6896 ;;		On entry : 0/0
  6897 ;;		On exit  : 0/0
  6898 ;;		Unchanged: 0/0
  6899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6902 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6903 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6904 ;;Total ram usage:        3 bytes
  6905 ;; Hardware stack levels used: 1
  6906 ;; Hardware stack levels required when called: 3
  6907 ;; This function calls:
  6908 ;;		Absolute function
  6909 ;;		_I2C_CallbackReturnReset
  6910 ;;		_I2C_CallbackReturnStop
  6911 ;;		_I2C_DO_SEND_RESTART
  6912 ;;		_I2C_DO_SEND_STOP
  6913 ;;		_rd1RegCompleteHandler
  6914 ;;		_rd2RegCompleteHandler
  6915 ;;		_rdBlkRegCompleteHandler
  6916 ;;		_wr1RegCompleteHandler
  6917 ;;		_wr2RegCompleteHandler
  6918 ;; This function is called by:
  6919 ;;		_I2C_MasterFsm
  6920 ;; This function uses a non-reentrant model
  6921 ;;
  6922                           
  6923                           
  6924                           ;psect for function _I2C_DO_ADDRESS_NACK
  6925  04D4                     _I2C_DO_ADDRESS_NACK:
  6926  04D4                     i1l3372:	
  6927                           ;incstack = 0
  6928                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6929                           
  6930                           
  6931                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.addressNackCheck = 0;
  6932  04D4  0021               	movlb	1	; select bank1
  6933  04D5  103C               	bcf	(_I2C_Status^(0+128)+28),0
  6934  04D6                     i1l3374:
  6935                           
  6936                           ;mcc_generated_files/i2c_master.c: 504:     I2C_Status.error = I2C_FAIL;
  6937  04D6  3002               	movlw	2
  6938  04D7  00FA               	movwf	??_I2C_DO_ADDRESS_NACK
  6939  04D8  087A               	movf	??_I2C_DO_ADDRESS_NACK,w
  6940  04D9  00BB               	movwf	(_I2C_Status^(0+128)+27)
  6941                           
  6942                           ;mcc_generated_files/i2c_master.c: 505:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  6943  04DA  2CE3               	goto	i1l3386
  6944  04DB                     i1l3376:
  6945                           
  6946                           ;mcc_generated_files/i2c_master.c: 509:             return I2C_DO_SEND_RESTART();
  6947  04DB  318F  278E  3184   	fcall	_I2C_DO_SEND_RESTART
  6948  04DE  2CFF               	goto	i1l658
  6949  04DF                     i1l3380:
  6950                           
  6951                           ;mcc_generated_files/i2c_master.c: 511:             return I2C_DO_SEND_STOP();
  6952  04DF  318F  2793  3184   	fcall	_I2C_DO_SEND_STOP
  6953  04E2  2CFF               	goto	i1l658
  6954  04E3                     i1l3386:
  6955  04E3  082E               	movf	(low ((_I2C_Status| 0+14)))^(0+128),w
  6956  04E4  00FA               	movwf	??_I2C_DO_ADDRESS_NACK
  6957  04E5  087A               	movf	??_I2C_DO_ADDRESS_NACK,w
  6958  04E6  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  6959  04E7  3004               	movlw	4
  6960  04E8  3EA0               	addlw	(low (_I2C_Status| 0))& (0+255)
  6961  04E9  0086               	movwf	6
  6962  04EA  0187               	clrf	7
  6963  04EB  3F41               	moviw [1]fsr1
  6964  04EC  008A               	movwf	10
  6965  04ED  3F40               	moviw [0]fsr1
  6966  04EE  000A               	callw
  6967  04EF  3184               	pagesel	$
  6968  04F0  00FB               	movwf	??_I2C_DO_ADDRESS_NACK+1
  6969  04F1  01FC               	clrf	??_I2C_DO_ADDRESS_NACK+2
  6970                           
  6971                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6972                           ; Switch size 1, requested type "simple"
  6973                           ; Number of cases is 1, Range of values is 0 to 0
  6974                           ; switch strategies available:
  6975                           ; Name         Instructions Cycles
  6976                           ; simple_byte            4     3 (average)
  6977                           ; direct_byte            8     6 (fixed)
  6978                           ; jumptable            260     6 (fixed)
  6979                           ;	Chosen strategy is simple_byte
  6980  04F2  087C               	movf	??_I2C_DO_ADDRESS_NACK+2,w
  6981  04F3  3A00               	xorlw	0	; case 0
  6982  04F4  1903               	skipnz
  6983  04F5  2CF7               	goto	i1l4286
  6984  04F6  2CDF               	goto	i1l3380
  6985  04F7                     i1l4286:
  6986                           
  6987                           ; Switch size 1, requested type "simple"
  6988                           ; Number of cases is 2, Range of values is 2 to 3
  6989                           ; switch strategies available:
  6990                           ; Name         Instructions Cycles
  6991                           ; simple_byte            7     4 (average)
  6992                           ; direct_byte           13     9 (fixed)
  6993                           ; jumptable            263     9 (fixed)
  6994                           ;	Chosen strategy is simple_byte
  6995  04F7  087B               	movf	??_I2C_DO_ADDRESS_NACK+1,w
  6996  04F8  3A02               	xorlw	2	; case 2
  6997  04F9  1903               	skipnz
  6998  04FA  2CDB               	goto	i1l3376
  6999  04FB  3A01               	xorlw	1	; case 3
  7000  04FC  1903               	skipnz
  7001  04FD  2CDB               	goto	i1l3376
  7002  04FE  2CDF               	goto	i1l3380
  7003  04FF                     i1l658:
  7004  04FF  0008               	return
  7005  0500                     __end_of_I2C_DO_ADDRESS_NACK:
  7006                           
  7007                           	psect	text41
  7008  0FA7                     __ptext41:	
  7009 ;; *************** function _I2C_DO_RESET *****************
  7010 ;; Defined at:
  7011 ;;		line 495 in file "mcc_generated_files/i2c_master.c"
  7012 ;; Parameters:    Size  Location     Type
  7013 ;;		None
  7014 ;; Auto vars:     Size  Location     Type
  7015 ;;		None
  7016 ;; Return value:  Size  Location     Type
  7017 ;;                  1    wreg      enum E3338
  7018 ;; Registers used:
  7019 ;;		wreg, status,2
  7020 ;; Tracked objects:
  7021 ;;		On entry : 0/0
  7022 ;;		On exit  : 0/0
  7023 ;;		Unchanged: 0/0
  7024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7029 ;;Total ram usage:        0 bytes
  7030 ;; Hardware stack levels used: 1
  7031 ;; This function calls:
  7032 ;;		Nothing
  7033 ;; This function is called by:
  7034 ;;		_I2C_MasterFsm
  7035 ;; This function uses a non-reentrant model
  7036 ;;
  7037                           
  7038                           
  7039                           ;psect for function _I2C_DO_RESET
  7040  0FA7                     _I2C_DO_RESET:
  7041  0FA7                     i1l3364:	
  7042                           ;incstack = 0
  7043                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
  7044                           
  7045                           
  7046                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.busy = 0;
  7047  0FA7  0021               	movlb	1	; select bank1
  7048  0FA8  10BC               	bcf	(_I2C_Status^(0+128)+28),1
  7049  0FA9                     i1l3366:
  7050                           
  7051                           ;mcc_generated_files/i2c_master.c: 498:     I2C_Status.error = I2C_NOERR;
  7052  0FA9  01BB               	clrf	(_I2C_Status^(0+128)+27)
  7053  0FAA                     i1l3368:
  7054                           
  7055                           ;mcc_generated_files/i2c_master.c: 499:     return I2C_RESET;
  7056  0FAA  300E               	movlw	14
  7057  0FAB                     i1l652:
  7058  0FAB  0008               	return
  7059  0FAC                     __end_of_I2C_DO_RESET:
  7060                           
  7061                           	psect	text42
  7062  0FA2                     __ptext42:	
  7063 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  7064 ;; Defined at:
  7065 ;;		line 489 in file "mcc_generated_files/i2c_master.c"
  7066 ;; Parameters:    Size  Location     Type
  7067 ;;		None
  7068 ;; Auto vars:     Size  Location     Type
  7069 ;;		None
  7070 ;; Return value:  Size  Location     Type
  7071 ;;                  1    wreg      enum E3338
  7072 ;; Registers used:
  7073 ;;		wreg, status,2, status,0, pclath, cstack
  7074 ;; Tracked objects:
  7075 ;;		On entry : 0/0
  7076 ;;		On exit  : 0/0
  7077 ;;		Unchanged: 0/0
  7078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7083 ;;Total ram usage:        0 bytes
  7084 ;; Hardware stack levels used: 1
  7085 ;; Hardware stack levels required when called: 1
  7086 ;; This function calls:
  7087 ;;		_I2C_MasterSendNack
  7088 ;; This function is called by:
  7089 ;;		_I2C_DO_RX
  7090 ;;		_I2C_MasterFsm
  7091 ;; This function uses a non-reentrant model
  7092 ;;
  7093                           
  7094                           
  7095                           ;psect for function _I2C_DO_RX_NACK_RESTART
  7096  0FA2                     _I2C_DO_RX_NACK_RESTART:
  7097  0FA2                     i1l3166:	
  7098                           ;incstack = 0
  7099                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  7100                           
  7101                           
  7102                           ;mcc_generated_files/i2c_master.c: 491:     I2C_MasterSendNack();
  7103  0FA2  318F  276A  318F   	fcall	_I2C_MasterSendNack
  7104  0FA5                     i1l3168:
  7105                           
  7106                           ;mcc_generated_files/i2c_master.c: 492:     return I2C_SEND_RESTART;
  7107  0FA5  3009               	movlw	9
  7108  0FA6                     i1l649:
  7109  0FA6  0008               	return
  7110  0FA7                     __end_of_I2C_DO_RX_NACK_RESTART:
  7111                           
  7112                           	psect	text43
  7113  0F9D                     __ptext43:	
  7114 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  7115 ;; Defined at:
  7116 ;;		line 483 in file "mcc_generated_files/i2c_master.c"
  7117 ;; Parameters:    Size  Location     Type
  7118 ;;		None
  7119 ;; Auto vars:     Size  Location     Type
  7120 ;;		None
  7121 ;; Return value:  Size  Location     Type
  7122 ;;                  1    wreg      enum E3338
  7123 ;; Registers used:
  7124 ;;		wreg, status,2, status,0, pclath, cstack
  7125 ;; Tracked objects:
  7126 ;;		On entry : 0/0
  7127 ;;		On exit  : 0/0
  7128 ;;		Unchanged: 0/0
  7129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7134 ;;Total ram usage:        0 bytes
  7135 ;; Hardware stack levels used: 1
  7136 ;; Hardware stack levels required when called: 1
  7137 ;; This function calls:
  7138 ;;		_I2C_MasterSendNack
  7139 ;; This function is called by:
  7140 ;;		_I2C_DO_RX
  7141 ;;		_I2C_MasterFsm
  7142 ;; This function uses a non-reentrant model
  7143 ;;
  7144                           
  7145                           
  7146                           ;psect for function _I2C_DO_RX_NACK_STOP
  7147  0F9D                     _I2C_DO_RX_NACK_STOP:
  7148  0F9D                     i1l3172:	
  7149                           ;incstack = 0
  7150                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  7151                           
  7152                           
  7153                           ;mcc_generated_files/i2c_master.c: 485:     I2C_MasterSendNack();
  7154  0F9D  318F  276A  318F   	fcall	_I2C_MasterSendNack
  7155  0FA0                     i1l3174:
  7156                           
  7157                           ;mcc_generated_files/i2c_master.c: 486:     return I2C_SEND_STOP;
  7158  0FA0  300A               	movlw	10
  7159  0FA1                     i1l646:
  7160  0FA1  0008               	return
  7161  0FA2                     __end_of_I2C_DO_RX_NACK_STOP:
  7162                           
  7163                           	psect	text44
  7164  0F98                     __ptext44:	
  7165 ;; *************** function _I2C_DO_RX_ACK *****************
  7166 ;; Defined at:
  7167 ;;		line 476 in file "mcc_generated_files/i2c_master.c"
  7168 ;; Parameters:    Size  Location     Type
  7169 ;;		None
  7170 ;; Auto vars:     Size  Location     Type
  7171 ;;		None
  7172 ;; Return value:  Size  Location     Type
  7173 ;;                  1    wreg      enum E3338
  7174 ;; Registers used:
  7175 ;;		wreg, status,2, status,0, pclath, cstack
  7176 ;; Tracked objects:
  7177 ;;		On entry : 0/0
  7178 ;;		On exit  : 0/0
  7179 ;;		Unchanged: 0/0
  7180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7185 ;;Total ram usage:        0 bytes
  7186 ;; Hardware stack levels used: 1
  7187 ;; Hardware stack levels required when called: 1
  7188 ;; This function calls:
  7189 ;;		_I2C_MasterSendAck
  7190 ;; This function is called by:
  7191 ;;		_I2C_MasterFsm
  7192 ;; This function uses a non-reentrant model
  7193 ;;
  7194                           
  7195                           
  7196                           ;psect for function _I2C_DO_RX_ACK
  7197  0F98                     _I2C_DO_RX_ACK:
  7198  0F98                     i1l3358:	
  7199                           ;incstack = 0
  7200                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
  7201                           
  7202                           
  7203                           ;mcc_generated_files/i2c_master.c: 478:     I2C_MasterSendAck();
  7204  0F98  318F  276E  318F   	fcall	_I2C_MasterSendAck
  7205  0F9B                     i1l3360:
  7206                           
  7207                           ;mcc_generated_files/i2c_master.c: 479:     return I2C_RCEN;
  7208  0F9B  3005               	movlw	5
  7209  0F9C                     i1l643:
  7210  0F9C  0008               	return
  7211  0F9D                     __end_of_I2C_DO_RX_ACK:
  7212                           
  7213                           	psect	text45
  7214  0F93                     __ptext45:	
  7215 ;; *************** function _I2C_DO_SEND_STOP *****************
  7216 ;; Defined at:
  7217 ;;		line 470 in file "mcc_generated_files/i2c_master.c"
  7218 ;; Parameters:    Size  Location     Type
  7219 ;;		None
  7220 ;; Auto vars:     Size  Location     Type
  7221 ;;		None
  7222 ;; Return value:  Size  Location     Type
  7223 ;;                  1    wreg      enum E3338
  7224 ;; Registers used:
  7225 ;;		wreg, status,2, status,0, pclath, cstack
  7226 ;; Tracked objects:
  7227 ;;		On entry : 0/0
  7228 ;;		On exit  : 0/0
  7229 ;;		Unchanged: 0/0
  7230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7235 ;;Total ram usage:        0 bytes
  7236 ;; Hardware stack levels used: 1
  7237 ;; Hardware stack levels required when called: 1
  7238 ;; This function calls:
  7239 ;;		_I2C_MasterStop
  7240 ;; This function is called by:
  7241 ;;		_I2C_DO_TX
  7242 ;;		_I2C_DO_TX_EMPTY
  7243 ;;		_I2C_DO_ADDRESS_NACK
  7244 ;;		_I2C_MasterFsm
  7245 ;; This function uses a non-reentrant model
  7246 ;;
  7247                           
  7248                           
  7249                           ;psect for function _I2C_DO_SEND_STOP
  7250  0F93                     _I2C_DO_SEND_STOP:
  7251  0F93                     i1l3154:	
  7252                           ;incstack = 0
  7253                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  7254                           
  7255                           
  7256                           ;mcc_generated_files/i2c_master.c: 472:     I2C_MasterStop();
  7257  0F93  318F  2753  318F   	fcall	_I2C_MasterStop
  7258  0F96                     i1l3156:
  7259                           
  7260                           ;mcc_generated_files/i2c_master.c: 473:     return I2C_IDLE;
  7261  0F96  3000               	movlw	0
  7262  0F97                     i1l640:
  7263  0F97  0008               	return
  7264  0F98                     __end_of_I2C_DO_SEND_STOP:
  7265                           
  7266                           	psect	text46
  7267  0F8E                     __ptext46:	
  7268 ;; *************** function _I2C_DO_SEND_RESTART *****************
  7269 ;; Defined at:
  7270 ;;		line 464 in file "mcc_generated_files/i2c_master.c"
  7271 ;; Parameters:    Size  Location     Type
  7272 ;;		None
  7273 ;; Auto vars:     Size  Location     Type
  7274 ;;		None
  7275 ;; Return value:  Size  Location     Type
  7276 ;;                  1    wreg      enum E3338
  7277 ;; Registers used:
  7278 ;;		wreg, status,2, status,0, pclath, cstack
  7279 ;; Tracked objects:
  7280 ;;		On entry : 0/0
  7281 ;;		On exit  : 0/0
  7282 ;;		Unchanged: 0/0
  7283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7288 ;;Total ram usage:        0 bytes
  7289 ;; Hardware stack levels used: 1
  7290 ;; Hardware stack levels required when called: 1
  7291 ;; This function calls:
  7292 ;;		_I2C_MasterEnableRestart
  7293 ;; This function is called by:
  7294 ;;		_I2C_DO_TX_EMPTY
  7295 ;;		_I2C_DO_ADDRESS_NACK
  7296 ;;		_I2C_MasterFsm
  7297 ;; This function uses a non-reentrant model
  7298 ;;
  7299                           
  7300                           
  7301                           ;psect for function _I2C_DO_SEND_RESTART
  7302  0F8E                     _I2C_DO_SEND_RESTART:
  7303  0F8E                     i1l3180:	
  7304                           ;incstack = 0
  7305                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  7306                           
  7307                           
  7308                           ;mcc_generated_files/i2c_master.c: 466:     I2C_MasterEnableRestart();
  7309  0F8E  318F  2750  318F   	fcall	_I2C_MasterEnableRestart
  7310  0F91                     i1l3182:
  7311                           
  7312                           ;mcc_generated_files/i2c_master.c: 467:     return I2C_SEND_ADR_READ;
  7313  0F91  3001               	movlw	1
  7314  0F92                     i1l637:
  7315  0F92  0008               	return
  7316  0F93                     __end_of_I2C_DO_SEND_RESTART:
  7317                           
  7318                           	psect	text47
  7319  0F89                     __ptext47:	
  7320 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  7321 ;; Defined at:
  7322 ;;		line 457 in file "mcc_generated_files/i2c_master.c"
  7323 ;; Parameters:    Size  Location     Type
  7324 ;;		None
  7325 ;; Auto vars:     Size  Location     Type
  7326 ;;		None
  7327 ;; Return value:  Size  Location     Type
  7328 ;;                  1    wreg      enum E3338
  7329 ;; Registers used:
  7330 ;;		wreg, status,2, status,0, pclath, cstack
  7331 ;; Tracked objects:
  7332 ;;		On entry : 0/0
  7333 ;;		On exit  : 0/0
  7334 ;;		Unchanged: 0/0
  7335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7340 ;;Total ram usage:        0 bytes
  7341 ;; Hardware stack levels used: 1
  7342 ;; Hardware stack levels required when called: 1
  7343 ;; This function calls:
  7344 ;;		_I2C_MasterEnableRestart
  7345 ;; This function is called by:
  7346 ;;		_I2C_DO_TX
  7347 ;;		_I2C_MasterFsm
  7348 ;; This function uses a non-reentrant model
  7349 ;;
  7350                           
  7351                           
  7352                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
  7353  0F89                     _I2C_DO_SEND_RESTART_WRITE:
  7354  0F89                     i1l3148:	
  7355                           ;incstack = 0
  7356                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  7357                           
  7358                           
  7359                           ;mcc_generated_files/i2c_master.c: 459:     I2C_MasterEnableRestart();
  7360  0F89  318F  2750  318F   	fcall	_I2C_MasterEnableRestart
  7361  0F8C                     i1l3150:
  7362                           
  7363                           ;mcc_generated_files/i2c_master.c: 460:     return I2C_SEND_ADR_WRITE;
  7364  0F8C  3002               	movlw	2
  7365  0F8D                     i1l634:
  7366  0F8D  0008               	return
  7367  0F8E                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  7368                           
  7369                           	psect	text48
  7370  0F84                     __ptext48:	
  7371 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  7372 ;; Defined at:
  7373 ;;		line 451 in file "mcc_generated_files/i2c_master.c"
  7374 ;; Parameters:    Size  Location     Type
  7375 ;;		None
  7376 ;; Auto vars:     Size  Location     Type
  7377 ;;		None
  7378 ;; Return value:  Size  Location     Type
  7379 ;;                  1    wreg      enum E3338
  7380 ;; Registers used:
  7381 ;;		wreg, status,2, status,0, pclath, cstack
  7382 ;; Tracked objects:
  7383 ;;		On entry : 0/0
  7384 ;;		On exit  : 0/0
  7385 ;;		Unchanged: 0/0
  7386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7391 ;;Total ram usage:        0 bytes
  7392 ;; Hardware stack levels used: 1
  7393 ;; Hardware stack levels required when called: 1
  7394 ;; This function calls:
  7395 ;;		_I2C_MasterEnableRestart
  7396 ;; This function is called by:
  7397 ;;		_I2C_DO_TX
  7398 ;;		_I2C_MasterFsm
  7399 ;; This function uses a non-reentrant model
  7400 ;;
  7401                           
  7402                           
  7403                           ;psect for function _I2C_DO_SEND_RESTART_READ
  7404  0F84                     _I2C_DO_SEND_RESTART_READ:
  7405  0F84                     i1l3142:	
  7406                           ;incstack = 0
  7407                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  7408                           
  7409                           
  7410                           ;mcc_generated_files/i2c_master.c: 453:     I2C_MasterEnableRestart();
  7411  0F84  318F  2750  318F   	fcall	_I2C_MasterEnableRestart
  7412  0F87                     i1l3144:
  7413                           
  7414                           ;mcc_generated_files/i2c_master.c: 454:     return I2C_SEND_ADR_READ;
  7415  0F87  3001               	movlw	1
  7416  0F88                     i1l631:
  7417  0F88  0008               	return
  7418  0F89                     __end_of_I2C_DO_SEND_RESTART_READ:
  7419                           
  7420                           	psect	text49
  7421  0FE2                     __ptext49:	
  7422 ;; *************** function _I2C_DO_RCEN *****************
  7423 ;; Defined at:
  7424 ;;		line 404 in file "mcc_generated_files/i2c_master.c"
  7425 ;; Parameters:    Size  Location     Type
  7426 ;;		None
  7427 ;; Auto vars:     Size  Location     Type
  7428 ;;		None
  7429 ;; Return value:  Size  Location     Type
  7430 ;;                  1    wreg      enum E3338
  7431 ;; Registers used:
  7432 ;;		wreg, status,2, status,0, pclath, cstack
  7433 ;; Tracked objects:
  7434 ;;		On entry : 0/0
  7435 ;;		On exit  : 0/0
  7436 ;;		Unchanged: 0/0
  7437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7442 ;;Total ram usage:        0 bytes
  7443 ;; Hardware stack levels used: 1
  7444 ;; Hardware stack levels required when called: 1
  7445 ;; This function calls:
  7446 ;;		_I2C_MasterStartRx
  7447 ;; This function is called by:
  7448 ;;		_I2C_MasterFsm
  7449 ;; This function uses a non-reentrant model
  7450 ;;
  7451                           
  7452                           
  7453                           ;psect for function _I2C_DO_RCEN
  7454  0FE2                     _I2C_DO_RCEN:
  7455  0FE2                     i1l3324:	
  7456                           ;incstack = 0
  7457                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
  7458                           
  7459                           
  7460                           ;mcc_generated_files/i2c_master.c: 406:     I2C_Status.addressNackCheck = 0;
  7461  0FE2  0021               	movlb	1	; select bank1
  7462  0FE3  103C               	bcf	(_I2C_Status^(0+128)+28),0
  7463  0FE4                     i1l3326:
  7464                           
  7465                           ;mcc_generated_files/i2c_master.c: 407:     I2C_MasterStartRx();
  7466  0FE4  318F  2756  318F   	fcall	_I2C_MasterStartRx
  7467  0FE7                     i1l3328:
  7468                           
  7469                           ;mcc_generated_files/i2c_master.c: 408:     return I2C_RX;
  7470  0FE7  3004               	movlw	4
  7471  0FE8                     i1l607:
  7472  0FE8  0008               	return
  7473  0FE9                     __end_of_I2C_DO_RCEN:
  7474                           
  7475                           	psect	text50
  7476  0312                     __ptext50:	
  7477 ;; *************** function _I2C_DO_RX *****************
  7478 ;; Defined at:
  7479 ;;		line 380 in file "mcc_generated_files/i2c_master.c"
  7480 ;; Parameters:    Size  Location     Type
  7481 ;;		None
  7482 ;; Auto vars:     Size  Location     Type
  7483 ;;		None
  7484 ;; Return value:  Size  Location     Type
  7485 ;;                  1    wreg      enum E3338
  7486 ;; Registers used:
  7487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7488 ;; Tracked objects:
  7489 ;;		On entry : 0/0
  7490 ;;		On exit  : 0/0
  7491 ;;		Unchanged: 0/0
  7492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7495 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7496 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7497 ;;Total ram usage:        3 bytes
  7498 ;; Hardware stack levels used: 1
  7499 ;; Hardware stack levels required when called: 3
  7500 ;; This function calls:
  7501 ;;		Absolute function
  7502 ;;		_I2C_CallbackReturnReset
  7503 ;;		_I2C_CallbackReturnStop
  7504 ;;		_I2C_DO_RX_NACK_RESTART
  7505 ;;		_I2C_DO_RX_NACK_STOP
  7506 ;;		_I2C_MasterGetRxData
  7507 ;;		_I2C_MasterSendAck
  7508 ;;		_rd1RegCompleteHandler
  7509 ;;		_rd2RegCompleteHandler
  7510 ;;		_rdBlkRegCompleteHandler
  7511 ;;		_wr1RegCompleteHandler
  7512 ;;		_wr2RegCompleteHandler
  7513 ;; This function is called by:
  7514 ;;		_I2C_MasterFsm
  7515 ;; This function uses a non-reentrant model
  7516 ;;
  7517                           
  7518                           
  7519                           ;psect for function _I2C_DO_RX
  7520  0312                     _I2C_DO_RX:
  7521  0312                     i1l3292:	
  7522                           ;incstack = 0
  7523                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7524                           
  7525                           
  7526                           ;mcc_generated_files/i2c_master.c: 382:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  7527  0312  318F  2759  3183   	fcall	_I2C_MasterGetRxData
  7528  0315  00FA               	movwf	??_I2C_DO_RX
  7529  0316  0021               	movlb	1	; select bank1
  7530  0317  0837               	movf	(low ((_I2C_Status| 0+23)))^(0+128),w
  7531  0318  0086               	movwf	6
  7532  0319  0187               	clrf	7
  7533  031A  087A               	movf	??_I2C_DO_RX,w
  7534  031B  0081               	movwf	1
  7535  031C                     i1l3294:
  7536  031C  3001               	movlw	1
  7537  031D  00FA               	movwf	??_I2C_DO_RX
  7538  031E  087A               	movf	??_I2C_DO_RX,w
  7539  031F  07B7               	addwf	(low ((_I2C_Status| 0+23)))^(0+128),f
  7540  0320                     i1l3296:
  7541                           
  7542                           ;mcc_generated_files/i2c_master.c: 383:     if(--I2C_Status.data_length)
  7543  0320  3001               	movlw	1
  7544  0321  02B8               	subwf	(_I2C_Status^(0+128)+24),f
  7545  0322  3000               	movlw	0
  7546  0323  3BB9               	subwfb	((_I2C_Status+1)^(0+128)+24),f
  7547  0324  0838               	movf	(_I2C_Status^(0+128)+24),w
  7548  0325  0439               	iorwf	((_I2C_Status+1)^(0+128)+24),w
  7549  0326  1903               	btfsc	3,2
  7550  0327  2B29               	goto	u93_21
  7551  0328  2B2A               	goto	u93_20
  7552  0329                     u93_21:
  7553  0329  2B2F               	goto	i1l595
  7554  032A                     u93_20:
  7555  032A                     i1l3298:
  7556                           
  7557                           ;mcc_generated_files/i2c_master.c: 384:     {;mcc_generated_files/i2c_master.c: 385:    
      +                               I2C_MasterSendAck();
  7558  032A  318F  276E  3183   	fcall	_I2C_MasterSendAck
  7559  032D                     i1l3300:
  7560                           
  7561                           ;mcc_generated_files/i2c_master.c: 386:         return I2C_RCEN;
  7562  032D  3005               	movlw	5
  7563  032E  2B57               	goto	i1l596
  7564  032F                     i1l595:	
  7565                           ;mcc_generated_files/i2c_master.c: 388:     else
  7566                           
  7567                           
  7568                           ;mcc_generated_files/i2c_master.c: 389:     {;mcc_generated_files/i2c_master.c: 390:    
      +                               I2C_Status.bufferFree = 1;
  7569  032F  15BC               	bsf	(_I2C_Status^(0+128)+28),3
  7570                           
  7571                           ;mcc_generated_files/i2c_master.c: 391:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  7572  0330  2B39               	goto	i1l3316
  7573  0331                     i1l3306:
  7574                           
  7575                           ;mcc_generated_files/i2c_master.c: 395:                 return I2C_DO_RX_NACK_RESTART();
  7576  0331  318F  27A2  3183   	fcall	_I2C_DO_RX_NACK_RESTART
  7577  0334  2B57               	goto	i1l596
  7578  0335                     i1l3310:
  7579                           
  7580                           ;mcc_generated_files/i2c_master.c: 399:                 return I2C_DO_RX_NACK_STOP();
  7581  0335  318F  279D  3183   	fcall	_I2C_DO_RX_NACK_STOP
  7582  0338  2B57               	goto	i1l596
  7583  0339                     i1l3316:
  7584  0339  082C               	movf	(low ((_I2C_Status| 0+12)))^(0+128),w
  7585  033A  00FA               	movwf	??_I2C_DO_RX
  7586  033B  087A               	movf	??_I2C_DO_RX,w
  7587  033C  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  7588  033D  0821               	movf	(_I2C_Status+1)^(0+128),w
  7589  033E  008A               	movwf	10
  7590  033F  0820               	movf	_I2C_Status^(0+128),w
  7591  0340  000A               	callw
  7592  0341  3183               	pagesel	$
  7593  0342  00FB               	movwf	??_I2C_DO_RX+1
  7594  0343  01FC               	clrf	??_I2C_DO_RX+2
  7595                           
  7596                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7597                           ; Switch size 1, requested type "simple"
  7598                           ; Number of cases is 1, Range of values is 0 to 0
  7599                           ; switch strategies available:
  7600                           ; Name         Instructions Cycles
  7601                           ; simple_byte            4     3 (average)
  7602                           ; direct_byte            8     6 (fixed)
  7603                           ; jumptable            260     6 (fixed)
  7604                           ;	Chosen strategy is simple_byte
  7605  0344  087C               	movf	??_I2C_DO_RX+2,w
  7606  0345  3A00               	xorlw	0	; case 0
  7607  0346  1903               	skipnz
  7608  0347  2B49               	goto	i1l4288
  7609  0348  2B35               	goto	i1l3310
  7610  0349                     i1l4288:
  7611                           
  7612                           ; Switch size 1, requested type "simple"
  7613                           ; Number of cases is 4, Range of values is 1 to 4
  7614                           ; switch strategies available:
  7615                           ; Name         Instructions Cycles
  7616                           ; simple_byte           13     7 (average)
  7617                           ; direct_byte           17     9 (fixed)
  7618                           ; jumptable            263     9 (fixed)
  7619                           ;	Chosen strategy is simple_byte
  7620  0349  087B               	movf	??_I2C_DO_RX+1,w
  7621  034A  3A01               	xorlw	1	; case 1
  7622  034B  1903               	skipnz
  7623  034C  2B35               	goto	i1l3310
  7624  034D  3A03               	xorlw	3	; case 2
  7625  034E  1903               	skipnz
  7626  034F  2B31               	goto	i1l3306
  7627  0350  3A01               	xorlw	1	; case 3
  7628  0351  1903               	skipnz
  7629  0352  2B31               	goto	i1l3306
  7630  0353  3A07               	xorlw	7	; case 4
  7631  0354  1903               	skipnz
  7632  0355  2B35               	goto	i1l3310
  7633  0356  2B35               	goto	i1l3310
  7634  0357                     i1l596:
  7635  0357  0008               	return
  7636  0358                     __end_of_I2C_DO_RX:
  7637                           
  7638                           	psect	text51
  7639  02BD                     __ptext51:	
  7640 ;; *************** function _I2C_DO_TX *****************
  7641 ;; Defined at:
  7642 ;;		line 356 in file "mcc_generated_files/i2c_master.c"
  7643 ;; Parameters:    Size  Location     Type
  7644 ;;		None
  7645 ;; Auto vars:     Size  Location     Type
  7646 ;;		None
  7647 ;; Return value:  Size  Location     Type
  7648 ;;                  1    wreg      enum E3338
  7649 ;; Registers used:
  7650 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7651 ;; Tracked objects:
  7652 ;;		On entry : 0/0
  7653 ;;		On exit  : 0/0
  7654 ;;		Unchanged: 0/0
  7655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7658 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7659 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7660 ;;Total ram usage:        3 bytes
  7661 ;; Hardware stack levels used: 1
  7662 ;; Hardware stack levels required when called: 3
  7663 ;; This function calls:
  7664 ;;		Absolute function
  7665 ;;		_I2C_CallbackReturnReset
  7666 ;;		_I2C_CallbackReturnStop
  7667 ;;		_I2C_DO_SEND_RESTART_READ
  7668 ;;		_I2C_DO_SEND_RESTART_WRITE
  7669 ;;		_I2C_DO_SEND_STOP
  7670 ;;		_I2C_MasterIsNack
  7671 ;;		_I2C_MasterSendTxData
  7672 ;;		_rd1RegCompleteHandler
  7673 ;;		_rd2RegCompleteHandler
  7674 ;;		_rdBlkRegCompleteHandler
  7675 ;;		_wr1RegCompleteHandler
  7676 ;;		_wr2RegCompleteHandler
  7677 ;; This function is called by:
  7678 ;;		_I2C_MasterFsm
  7679 ;; This function uses a non-reentrant model
  7680 ;;
  7681                           
  7682                           
  7683                           ;psect for function _I2C_DO_TX
  7684  02BD                     _I2C_DO_TX:
  7685  02BD                     i1l3258:	
  7686                           ;incstack = 0
  7687                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7688                           
  7689                           
  7690                           ;mcc_generated_files/i2c_master.c: 358:     if(I2C_MasterIsNack())
  7691  02BD  318F  27AC  3182   	fcall	_I2C_MasterIsNack
  7692  02C0  3A00               	xorlw	0
  7693  02C1  1903               	skipnz
  7694  02C2  2AC4               	goto	u91_21
  7695  02C3  2AC5               	goto	u91_20
  7696  02C4                     u91_21:
  7697  02C4  2AF5               	goto	i1l579
  7698  02C5                     u91_20:
  7699  02C5  2AD2               	goto	i1l3276
  7700  02C6                     i1l3262:
  7701                           
  7702                           ;mcc_generated_files/i2c_master.c: 363:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  7703  02C6  318F  2784  3182   	fcall	_I2C_DO_SEND_RESTART_READ
  7704  02C9  2B11               	goto	i1l582
  7705  02CA                     i1l3266:
  7706                           
  7707                           ;mcc_generated_files/i2c_master.c: 365:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  7708  02CA  318F  2789  3182   	fcall	_I2C_DO_SEND_RESTART_WRITE
  7709  02CD  2B11               	goto	i1l582
  7710  02CE                     i1l3270:
  7711                           
  7712                           ;mcc_generated_files/i2c_master.c: 369:                 return I2C_DO_SEND_STOP();
  7713  02CE  318F  2793  3182   	fcall	_I2C_DO_SEND_STOP
  7714  02D1  2B11               	goto	i1l582
  7715  02D2                     i1l3276:
  7716  02D2  0021               	movlb	1	; select bank1
  7717  02D3  082F               	movf	(low ((_I2C_Status| 0+15)))^(0+128),w
  7718  02D4  00FA               	movwf	??_I2C_DO_TX
  7719  02D5  087A               	movf	??_I2C_DO_TX,w
  7720  02D6  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  7721  02D7  3006               	movlw	6
  7722  02D8  3EA0               	addlw	(low (_I2C_Status| 0))& (0+255)
  7723  02D9  0086               	movwf	6
  7724  02DA  0187               	clrf	7
  7725  02DB  3F41               	moviw [1]fsr1
  7726  02DC  008A               	movwf	10
  7727  02DD  3F40               	moviw [0]fsr1
  7728  02DE  000A               	callw
  7729  02DF  3182               	pagesel	$
  7730  02E0  00FB               	movwf	??_I2C_DO_TX+1
  7731  02E1  01FC               	clrf	??_I2C_DO_TX+2
  7732                           
  7733                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7734                           ; Switch size 1, requested type "simple"
  7735                           ; Number of cases is 1, Range of values is 0 to 0
  7736                           ; switch strategies available:
  7737                           ; Name         Instructions Cycles
  7738                           ; simple_byte            4     3 (average)
  7739                           ; direct_byte            8     6 (fixed)
  7740                           ; jumptable            260     6 (fixed)
  7741                           ;	Chosen strategy is simple_byte
  7742  02E2  087C               	movf	??_I2C_DO_TX+2,w
  7743  02E3  3A00               	xorlw	0	; case 0
  7744  02E4  1903               	skipnz
  7745  02E5  2AE7               	goto	i1l4290
  7746  02E6  2ACE               	goto	i1l3270
  7747  02E7                     i1l4290:
  7748                           
  7749                           ; Switch size 1, requested type "simple"
  7750                           ; Number of cases is 4, Range of values is 1 to 4
  7751                           ; switch strategies available:
  7752                           ; Name         Instructions Cycles
  7753                           ; simple_byte           13     7 (average)
  7754                           ; direct_byte           17     9 (fixed)
  7755                           ; jumptable            263     9 (fixed)
  7756                           ;	Chosen strategy is simple_byte
  7757  02E7  087B               	movf	??_I2C_DO_TX+1,w
  7758  02E8  3A01               	xorlw	1	; case 1
  7759  02E9  1903               	skipnz
  7760  02EA  2ACE               	goto	i1l3270
  7761  02EB  3A03               	xorlw	3	; case 2
  7762  02EC  1903               	skipnz
  7763  02ED  2AC6               	goto	i1l3262
  7764  02EE  3A01               	xorlw	1	; case 3
  7765  02EF  1903               	skipnz
  7766  02F0  2ACA               	goto	i1l3266
  7767  02F1  3A07               	xorlw	7	; case 4
  7768  02F2  1903               	skipnz
  7769  02F3  2ACE               	goto	i1l3270
  7770  02F4  2ACE               	goto	i1l3270
  7771  02F5                     i1l579:	
  7772                           ;mcc_generated_files/i2c_master.c: 372:     else
  7773                           
  7774                           
  7775                           ;mcc_generated_files/i2c_master.c: 373:     {;mcc_generated_files/i2c_master.c: 374:    
      +                               I2C_Status.addressNackCheck = 0;
  7776  02F5  0021               	movlb	1	; select bank1
  7777  02F6  103C               	bcf	(_I2C_Status^(0+128)+28),0
  7778  02F7                     i1l3278:
  7779                           
  7780                           ;mcc_generated_files/i2c_master.c: 375:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  7781  02F7  3017               	movlw	23
  7782  02F8  3EA0               	addlw	(low (_I2C_Status| 0))& (0+255)
  7783  02F9  0086               	movwf	6
  7784  02FA  0187               	clrf	7
  7785  02FB  3F40               	moviw [0]fsr1
  7786  02FC  0084               	movwf	4
  7787  02FD  0185               	clrf	5
  7788  02FE  0A81               	incf	1,f
  7789  02FF  0800               	movf	0,w
  7790  0300  318F  277A  3182   	fcall	_I2C_MasterSendTxData
  7791  0303                     i1l3280:
  7792                           
  7793                           ;mcc_generated_files/i2c_master.c: 376:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  7794  0303  3001               	movlw	1
  7795  0304  0021               	movlb	1	; select bank1
  7796  0305  02B8               	subwf	(_I2C_Status^(0+128)+24),f
  7797  0306  3000               	movlw	0
  7798  0307  3BB9               	subwfb	((_I2C_Status+1)^(0+128)+24),f
  7799  0308  0838               	movf	(_I2C_Status^(0+128)+24),w
  7800  0309  0439               	iorwf	((_I2C_Status+1)^(0+128)+24),w
  7801  030A  1D03               	btfss	3,2
  7802  030B  2B0D               	goto	u92_21
  7803  030C  2B0E               	goto	u92_20
  7804  030D                     u92_21:
  7805  030D  2B10               	goto	i1l3284
  7806  030E                     u92_20:
  7807  030E                     i1l3282:
  7808  030E  3006               	movlw	6
  7809  030F  2B11               	goto	i1l582
  7810  0310                     i1l3284:
  7811  0310  3003               	movlw	3
  7812  0311                     i1l582:
  7813  0311  0008               	return
  7814  0312                     __end_of_I2C_DO_TX:
  7815                           
  7816                           	psect	text52
  7817  0FF0                     __ptext52:	
  7818 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  7819 ;; Defined at:
  7820 ;;		line 349 in file "mcc_generated_files/i2c_master.c"
  7821 ;; Parameters:    Size  Location     Type
  7822 ;;		None
  7823 ;; Auto vars:     Size  Location     Type
  7824 ;;		None
  7825 ;; Return value:  Size  Location     Type
  7826 ;;                  1    wreg      enum E3338
  7827 ;; Registers used:
  7828 ;;		wreg, status,2, status,0, pclath, cstack
  7829 ;; Tracked objects:
  7830 ;;		On entry : 0/0
  7831 ;;		On exit  : 0/0
  7832 ;;		Unchanged: 0/0
  7833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7838 ;;Total ram usage:        0 bytes
  7839 ;; Hardware stack levels used: 1
  7840 ;; Hardware stack levels required when called: 1
  7841 ;; This function calls:
  7842 ;;		_I2C_MasterSendTxData
  7843 ;; This function is called by:
  7844 ;;		_I2C_MasterFsm
  7845 ;; This function uses a non-reentrant model
  7846 ;;
  7847                           
  7848                           
  7849                           ;psect for function _I2C_DO_SEND_ADR_WRITE
  7850  0FF0                     _I2C_DO_SEND_ADR_WRITE:
  7851  0FF0                     i1l3250:	
  7852                           ;incstack = 0
  7853                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  7854                           
  7855                           
  7856                           ;mcc_generated_files/i2c_master.c: 351:     I2C_Status.addressNackCheck = 1;
  7857  0FF0  0021               	movlb	1	; select bank1
  7858  0FF1  143C               	bsf	(_I2C_Status^(0+128)+28),0
  7859  0FF2                     i1l3252:
  7860                           
  7861                           ;mcc_generated_files/i2c_master.c: 352:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
  7862  0FF2  3536               	lslf	(_I2C_Status^(0+128)+22),w
  7863  0FF3  318F  277A  318F   	fcall	_I2C_MasterSendTxData
  7864  0FF6                     i1l3254:
  7865                           
  7866                           ;mcc_generated_files/i2c_master.c: 353:     return I2C_TX;
  7867  0FF6  3003               	movlw	3
  7868  0FF7                     i1l576:
  7869  0FF7  0008               	return
  7870  0FF8                     __end_of_I2C_DO_SEND_ADR_WRITE:
  7871                           
  7872                           	psect	text53
  7873  07EF                     __ptext53:	
  7874 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  7875 ;; Defined at:
  7876 ;;		line 342 in file "mcc_generated_files/i2c_master.c"
  7877 ;; Parameters:    Size  Location     Type
  7878 ;;		None
  7879 ;; Auto vars:     Size  Location     Type
  7880 ;;		None
  7881 ;; Return value:  Size  Location     Type
  7882 ;;                  1    wreg      enum E3338
  7883 ;; Registers used:
  7884 ;;		wreg, status,2, status,0, pclath, cstack
  7885 ;; Tracked objects:
  7886 ;;		On entry : 0/0
  7887 ;;		On exit  : 0/0
  7888 ;;		Unchanged: 0/0
  7889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7894 ;;Total ram usage:        0 bytes
  7895 ;; Hardware stack levels used: 1
  7896 ;; Hardware stack levels required when called: 1
  7897 ;; This function calls:
  7898 ;;		_I2C_MasterSendTxData
  7899 ;; This function is called by:
  7900 ;;		_I2C_MasterFsm
  7901 ;; This function uses a non-reentrant model
  7902 ;;
  7903                           
  7904                           
  7905                           ;psect for function _I2C_DO_SEND_ADR_READ
  7906  07EF                     _I2C_DO_SEND_ADR_READ:
  7907  07EF                     i1l3242:	
  7908                           ;incstack = 0
  7909                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  7910                           
  7911                           
  7912                           ;mcc_generated_files/i2c_master.c: 344:     I2C_Status.addressNackCheck = 1;
  7913  07EF  0021               	movlb	1	; select bank1
  7914  07F0  143C               	bsf	(_I2C_Status^(0+128)+28),0
  7915  07F1                     i1l3244:
  7916                           
  7917                           ;mcc_generated_files/i2c_master.c: 345:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
  7918  07F1  1403               	setc
  7919  07F2  0D36               	rlf	(_I2C_Status^(0+128)+22),w
  7920  07F3  318F  277A  3187   	fcall	_I2C_MasterSendTxData
  7921  07F6                     i1l3246:
  7922                           
  7923                           ;mcc_generated_files/i2c_master.c: 346:     return I2C_RCEN;
  7924  07F6  3005               	movlw	5
  7925  07F7                     i1l573:
  7926  07F7  0008               	return
  7927  07F8                     __end_of_I2C_DO_SEND_ADR_READ:
  7928                           
  7929                           	psect	text54
  7930  0F7F                     __ptext54:	
  7931 ;; *************** function _I2C_DO_IDLE *****************
  7932 ;; Defined at:
  7933 ;;		line 335 in file "mcc_generated_files/i2c_master.c"
  7934 ;; Parameters:    Size  Location     Type
  7935 ;;		None
  7936 ;; Auto vars:     Size  Location     Type
  7937 ;;		None
  7938 ;; Return value:  Size  Location     Type
  7939 ;;                  1    wreg      enum E3338
  7940 ;; Registers used:
  7941 ;;		wreg, status,2
  7942 ;; Tracked objects:
  7943 ;;		On entry : 0/0
  7944 ;;		On exit  : 0/0
  7945 ;;		Unchanged: 0/0
  7946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7951 ;;Total ram usage:        0 bytes
  7952 ;; Hardware stack levels used: 1
  7953 ;; This function calls:
  7954 ;;		Nothing
  7955 ;; This function is called by:
  7956 ;;		_I2C_MasterFsm
  7957 ;; This function uses a non-reentrant model
  7958 ;;
  7959                           
  7960                           
  7961                           ;psect for function _I2C_DO_IDLE
  7962  0F7F                     _I2C_DO_IDLE:
  7963  0F7F                     i1l3234:	
  7964                           ;incstack = 0
  7965                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
  7966                           
  7967                           
  7968                           ;mcc_generated_files/i2c_master.c: 337:     I2C_Status.busy = 0;
  7969  0F7F  0021               	movlb	1	; select bank1
  7970  0F80  10BC               	bcf	(_I2C_Status^(0+128)+28),1
  7971  0F81                     i1l3236:
  7972                           
  7973                           ;mcc_generated_files/i2c_master.c: 338:     I2C_Status.error = I2C_NOERR;
  7974  0F81  01BB               	clrf	(_I2C_Status^(0+128)+27)
  7975  0F82                     i1l3238:
  7976                           
  7977                           ;mcc_generated_files/i2c_master.c: 339:     return I2C_RESET;
  7978  0F82  300E               	movlw	14
  7979  0F83                     i1l570:
  7980  0F83  0008               	return
  7981  0F84                     __end_of_I2C_DO_IDLE:
  7982                           
  7983                           	psect	text55
  7984  0477                     __ptext55:	
  7985 ;; *************** function _I2C_DO_TX_EMPTY *****************
  7986 ;; Defined at:
  7987 ;;		line 411 in file "mcc_generated_files/i2c_master.c"
  7988 ;; Parameters:    Size  Location     Type
  7989 ;;		None
  7990 ;; Auto vars:     Size  Location     Type
  7991 ;;		None
  7992 ;; Return value:  Size  Location     Type
  7993 ;;                  1    wreg      enum E3338
  7994 ;; Registers used:
  7995 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7996 ;; Tracked objects:
  7997 ;;		On entry : 0/0
  7998 ;;		On exit  : 0/0
  7999 ;;		Unchanged: 0/0
  8000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8003 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8004 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8005 ;;Total ram usage:        3 bytes
  8006 ;; Hardware stack levels used: 1
  8007 ;; Hardware stack levels required when called: 3
  8008 ;; This function calls:
  8009 ;;		Absolute function
  8010 ;;		_I2C_CallbackReturnReset
  8011 ;;		_I2C_CallbackReturnStop
  8012 ;;		_I2C_DO_SEND_RESTART
  8013 ;;		_I2C_DO_SEND_STOP
  8014 ;;		_I2C_MasterSetIrq
  8015 ;;		_rd1RegCompleteHandler
  8016 ;;		_rd2RegCompleteHandler
  8017 ;;		_rdBlkRegCompleteHandler
  8018 ;;		_wr1RegCompleteHandler
  8019 ;;		_wr2RegCompleteHandler
  8020 ;; This function is called by:
  8021 ;;		_I2C_MasterFsm
  8022 ;; This function uses a non-reentrant model
  8023 ;;
  8024                           
  8025                           
  8026                           ;psect for function _I2C_DO_TX_EMPTY
  8027  0477                     _I2C_DO_TX_EMPTY:
  8028  0477                     i1l3332:	
  8029                           ;incstack = 0
  8030                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8031                           
  8032                           
  8033                           ;mcc_generated_files/i2c_master.c: 413:     I2C_Status.bufferFree = 1;
  8034  0477  0021               	movlb	1	; select bank1
  8035  0478  15BC               	bsf	(_I2C_Status^(0+128)+28),3
  8036                           
  8037                           ;mcc_generated_files/i2c_master.c: 414:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  8038  0479  2C87               	goto	i1l3350
  8039  047A                     i1l3334:
  8040                           
  8041                           ;mcc_generated_files/i2c_master.c: 418:             return I2C_DO_SEND_RESTART();
  8042  047A  318F  278E  3184   	fcall	_I2C_DO_SEND_RESTART
  8043  047D  2CA5               	goto	i1l613
  8044  047E                     i1l3338:
  8045                           
  8046                           ;mcc_generated_files/i2c_master.c: 420:             I2C_MasterSetIrq();
  8047  047E  318F  275C  3184   	fcall	_I2C_MasterSetIrq
  8048  0481                     i1l3340:
  8049                           
  8050                           ;mcc_generated_files/i2c_master.c: 421:             return I2C_TX;
  8051  0481  3003               	movlw	3
  8052  0482  2CA5               	goto	i1l613
  8053  0483                     i1l3344:
  8054                           
  8055                           ;mcc_generated_files/i2c_master.c: 424:             return I2C_DO_SEND_STOP();
  8056  0483  318F  2793  3184   	fcall	_I2C_DO_SEND_STOP
  8057  0486  2CA5               	goto	i1l613
  8058  0487                     i1l3350:
  8059  0487  082C               	movf	(low ((_I2C_Status| 0+12)))^(0+128),w
  8060  0488  00FA               	movwf	??_I2C_DO_TX_EMPTY
  8061  0489  087A               	movf	??_I2C_DO_TX_EMPTY,w
  8062  048A  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  8063  048B  0821               	movf	(_I2C_Status+1)^(0+128),w
  8064  048C  008A               	movwf	10
  8065  048D  0820               	movf	_I2C_Status^(0+128),w
  8066  048E  000A               	callw
  8067  048F  3184               	pagesel	$
  8068  0490  00FB               	movwf	??_I2C_DO_TX_EMPTY+1
  8069  0491  01FC               	clrf	??_I2C_DO_TX_EMPTY+2
  8070                           
  8071                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8072                           ; Switch size 1, requested type "simple"
  8073                           ; Number of cases is 1, Range of values is 0 to 0
  8074                           ; switch strategies available:
  8075                           ; Name         Instructions Cycles
  8076                           ; simple_byte            4     3 (average)
  8077                           ; direct_byte            8     6 (fixed)
  8078                           ; jumptable            260     6 (fixed)
  8079                           ;	Chosen strategy is simple_byte
  8080  0492  087C               	movf	??_I2C_DO_TX_EMPTY+2,w
  8081  0493  3A00               	xorlw	0	; case 0
  8082  0494  1903               	skipnz
  8083  0495  2C97               	goto	i1l4292
  8084  0496  2C83               	goto	i1l3344
  8085  0497                     i1l4292:
  8086                           
  8087                           ; Switch size 1, requested type "simple"
  8088                           ; Number of cases is 4, Range of values is 1 to 4
  8089                           ; switch strategies available:
  8090                           ; Name         Instructions Cycles
  8091                           ; simple_byte           13     7 (average)
  8092                           ; direct_byte           17     9 (fixed)
  8093                           ; jumptable            263     9 (fixed)
  8094                           ;	Chosen strategy is simple_byte
  8095  0497  087B               	movf	??_I2C_DO_TX_EMPTY+1,w
  8096  0498  3A01               	xorlw	1	; case 1
  8097  0499  1903               	skipnz
  8098  049A  2C83               	goto	i1l3344
  8099  049B  3A03               	xorlw	3	; case 2
  8100  049C  1903               	skipnz
  8101  049D  2C7A               	goto	i1l3334
  8102  049E  3A01               	xorlw	1	; case 3
  8103  049F  1903               	skipnz
  8104  04A0  2C7A               	goto	i1l3334
  8105  04A1  3A07               	xorlw	7	; case 4
  8106  04A2  1903               	skipnz
  8107  04A3  2C7E               	goto	i1l3338
  8108  04A4  2C83               	goto	i1l3344
  8109  04A5                     i1l613:
  8110  04A5  0008               	return
  8111  04A6                     __end_of_I2C_DO_TX_EMPTY:
  8112                           
  8113                           	psect	text56
  8114  0F5C                     __ptext56:	
  8115 ;; *************** function _I2C_MasterSetIrq *****************
  8116 ;; Defined at:
  8117 ;;		line 647 in file "mcc_generated_files/i2c_master.c"
  8118 ;; Parameters:    Size  Location     Type
  8119 ;;		None
  8120 ;; Auto vars:     Size  Location     Type
  8121 ;;		None
  8122 ;; Return value:  Size  Location     Type
  8123 ;;                  1    wreg      void 
  8124 ;; Registers used:
  8125 ;;		None
  8126 ;; Tracked objects:
  8127 ;;		On entry : 0/0
  8128 ;;		On exit  : 0/0
  8129 ;;		Unchanged: 0/0
  8130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8135 ;;Total ram usage:        0 bytes
  8136 ;; Hardware stack levels used: 1
  8137 ;; This function calls:
  8138 ;;		Nothing
  8139 ;; This function is called by:
  8140 ;;		_I2C_DO_TX_EMPTY
  8141 ;; This function uses a non-reentrant model
  8142 ;;
  8143                           
  8144                           
  8145                           ;psect for function _I2C_MasterSetIrq
  8146  0F5C                     _I2C_MasterSetIrq:
  8147  0F5C                     i1l3186:	
  8148                           ;incstack = 0
  8149                           ; Regs used in _I2C_MasterSetIrq: []
  8150                           
  8151                           
  8152                           ;mcc_generated_files/i2c_master.c: 649:     PIR1bits.SSPIF = 1;
  8153  0F5C  0020               	movlb	0	; select bank0
  8154  0F5D  1591               	bsf	17,3	;volatile
  8155  0F5E                     i1l733:
  8156  0F5E  0008               	return
  8157  0F5F                     __end_of_I2C_MasterSetIrq:
  8158                           
  8159                           	psect	text57
  8160  0FAC                     __ptext57:	
  8161 ;; *************** function _I2C_MasterIsNack *****************
  8162 ;; Defined at:
  8163 ;;		line 599 in file "mcc_generated_files/i2c_master.c"
  8164 ;; Parameters:    Size  Location     Type
  8165 ;;		None
  8166 ;; Auto vars:     Size  Location     Type
  8167 ;;		None
  8168 ;; Return value:  Size  Location     Type
  8169 ;;                  1    wreg      _Bool 
  8170 ;; Registers used:
  8171 ;;		wreg, status,2, status,0
  8172 ;; Tracked objects:
  8173 ;;		On entry : 0/0
  8174 ;;		On exit  : 0/0
  8175 ;;		Unchanged: 0/0
  8176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8181 ;;Total ram usage:        0 bytes
  8182 ;; Hardware stack levels used: 1
  8183 ;; This function calls:
  8184 ;;		Nothing
  8185 ;; This function is called by:
  8186 ;;		_I2C_MasterFsm
  8187 ;;		_I2C_DO_TX
  8188 ;; This function uses a non-reentrant model
  8189 ;;
  8190                           
  8191                           
  8192                           ;psect for function _I2C_MasterIsNack
  8193  0FAC                     _I2C_MasterIsNack:
  8194  0FAC                     i1l3136:	
  8195                           ;incstack = 0
  8196                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
  8197                           
  8198                           
  8199                           ;mcc_generated_files/i2c_master.c: 601:     return SSPCON2bits.ACKSTAT;
  8200  0FAC  0024               	movlb	4	; select bank4
  8201  0FAD  0E16               	swapf	22,w	;volatile
  8202  0FAE  0C89               	rrf	9,f
  8203  0FAF  0C89               	rrf	9,f
  8204  0FB0  3901               	andlw	1
  8205  0FB1                     i1l706:
  8206  0FB1  0008               	return
  8207  0FB2                     __end_of_I2C_MasterIsNack:
  8208                           
  8209                           	psect	text58
  8210  0F7A                     __ptext58:	
  8211 ;; *************** function _I2C_MasterSendTxData *****************
  8212 ;; Defined at:
  8213 ;;		line 569 in file "mcc_generated_files/i2c_master.c"
  8214 ;; Parameters:    Size  Location     Type
  8215 ;;  data            1    wreg     unsigned char 
  8216 ;; Auto vars:     Size  Location     Type
  8217 ;;  data            1    0[COMMON] unsigned char 
  8218 ;; Return value:  Size  Location     Type
  8219 ;;                  1    wreg      void 
  8220 ;; Registers used:
  8221 ;;		wreg
  8222 ;; Tracked objects:
  8223 ;;		On entry : 0/0
  8224 ;;		On exit  : 0/0
  8225 ;;		Unchanged: 0/0
  8226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8228 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8230 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8231 ;;Total ram usage:        1 bytes
  8232 ;; Hardware stack levels used: 1
  8233 ;; This function calls:
  8234 ;;		Nothing
  8235 ;; This function is called by:
  8236 ;;		_I2C_DO_SEND_ADR_READ
  8237 ;;		_I2C_DO_SEND_ADR_WRITE
  8238 ;;		_I2C_DO_TX
  8239 ;; This function uses a non-reentrant model
  8240 ;;
  8241                           
  8242                           
  8243                           ;psect for function _I2C_MasterSendTxData
  8244  0F7A                     _I2C_MasterSendTxData:
  8245                           
  8246                           ;incstack = 0
  8247                           ; Regs used in _I2C_MasterSendTxData: [wreg]
  8248                           ;I2C_MasterSendTxData@data stored from wreg
  8249  0F7A  00F0               	movwf	I2C_MasterSendTxData@data
  8250  0F7B                     i1l3140:
  8251                           
  8252                           ;mcc_generated_files/i2c_master.c: 569: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 570: {;mcc_generated_files/i2c_
      +                          master.c: 571:     SSPBUF = data;
  8253  0F7B  0870               	movf	I2C_MasterSendTxData@data,w
  8254  0F7C  0024               	movlb	4	; select bank4
  8255  0F7D  0091               	movwf	17	;volatile
  8256  0F7E                     i1l688:
  8257  0F7E  0008               	return
  8258  0F7F                     __end_of_I2C_MasterSendTxData:
  8259                           
  8260                           	psect	text59
  8261  0F6E                     __ptext59:	
  8262 ;; *************** function _I2C_MasterSendAck *****************
  8263 ;; Defined at:
  8264 ;;		line 604 in file "mcc_generated_files/i2c_master.c"
  8265 ;; Parameters:    Size  Location     Type
  8266 ;;		None
  8267 ;; Auto vars:     Size  Location     Type
  8268 ;;		None
  8269 ;; Return value:  Size  Location     Type
  8270 ;;                  1    wreg      void 
  8271 ;; Registers used:
  8272 ;;		None
  8273 ;; Tracked objects:
  8274 ;;		On entry : 0/0
  8275 ;;		On exit  : 0/0
  8276 ;;		Unchanged: 0/0
  8277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8282 ;;Total ram usage:        0 bytes
  8283 ;; Hardware stack levels used: 1
  8284 ;; This function calls:
  8285 ;;		Nothing
  8286 ;; This function is called by:
  8287 ;;		_I2C_DO_RX
  8288 ;;		_I2C_DO_RX_ACK
  8289 ;; This function uses a non-reentrant model
  8290 ;;
  8291                           
  8292                           
  8293                           ;psect for function _I2C_MasterSendAck
  8294  0F6E                     _I2C_MasterSendAck:
  8295  0F6E                     i1l3164:	
  8296                           ;incstack = 0
  8297                           ; Regs used in _I2C_MasterSendAck: []
  8298                           
  8299                           
  8300                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKDT = 0;
  8301  0F6E  0024               	movlb	4	; select bank4
  8302  0F6F  1296               	bcf	22,5	;volatile
  8303                           
  8304                           ;mcc_generated_files/i2c_master.c: 607:     SSPCON2bits.ACKEN = 1;
  8305  0F70  1616               	bsf	22,4	;volatile
  8306  0F71                     i1l709:
  8307  0F71  0008               	return
  8308  0F72                     __end_of_I2C_MasterSendAck:
  8309                           
  8310                           	psect	text60
  8311  0F59                     __ptext60:	
  8312 ;; *************** function _I2C_MasterGetRxData *****************
  8313 ;; Defined at:
  8314 ;;		line 564 in file "mcc_generated_files/i2c_master.c"
  8315 ;; Parameters:    Size  Location     Type
  8316 ;;		None
  8317 ;; Auto vars:     Size  Location     Type
  8318 ;;		None
  8319 ;; Return value:  Size  Location     Type
  8320 ;;                  1    wreg      unsigned char 
  8321 ;; Registers used:
  8322 ;;		wreg
  8323 ;; Tracked objects:
  8324 ;;		On entry : 0/0
  8325 ;;		On exit  : 0/0
  8326 ;;		Unchanged: 0/0
  8327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8332 ;;Total ram usage:        0 bytes
  8333 ;; Hardware stack levels used: 1
  8334 ;; This function calls:
  8335 ;;		Nothing
  8336 ;; This function is called by:
  8337 ;;		_I2C_DO_RX
  8338 ;; This function uses a non-reentrant model
  8339 ;;
  8340                           
  8341                           
  8342                           ;psect for function _I2C_MasterGetRxData
  8343  0F59                     _I2C_MasterGetRxData:
  8344  0F59                     i1l3160:	
  8345                           ;incstack = 0
  8346                           ; Regs used in _I2C_MasterGetRxData: [wreg]
  8347                           
  8348                           
  8349                           ;mcc_generated_files/i2c_master.c: 566:     return SSPBUF;
  8350  0F59  0024               	movlb	4	; select bank4
  8351  0F5A  0811               	movf	17,w	;volatile
  8352  0F5B                     i1l685:
  8353  0F5B  0008               	return
  8354  0F5C                     __end_of_I2C_MasterGetRxData:
  8355                           
  8356                           	psect	text61
  8357  0F6A                     __ptext61:	
  8358 ;; *************** function _I2C_MasterSendNack *****************
  8359 ;; Defined at:
  8360 ;;		line 610 in file "mcc_generated_files/i2c_master.c"
  8361 ;; Parameters:    Size  Location     Type
  8362 ;;		None
  8363 ;; Auto vars:     Size  Location     Type
  8364 ;;		None
  8365 ;; Return value:  Size  Location     Type
  8366 ;;                  1    wreg      void 
  8367 ;; Registers used:
  8368 ;;		None
  8369 ;; Tracked objects:
  8370 ;;		On entry : 0/0
  8371 ;;		On exit  : 0/0
  8372 ;;		Unchanged: 0/0
  8373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8378 ;;Total ram usage:        0 bytes
  8379 ;; Hardware stack levels used: 1
  8380 ;; This function calls:
  8381 ;;		Nothing
  8382 ;; This function is called by:
  8383 ;;		_I2C_DO_RX_NACK_STOP
  8384 ;;		_I2C_DO_RX_NACK_RESTART
  8385 ;; This function uses a non-reentrant model
  8386 ;;
  8387                           
  8388                           
  8389                           ;psect for function _I2C_MasterSendNack
  8390  0F6A                     _I2C_MasterSendNack:
  8391  0F6A                     i1l3084:	
  8392                           ;incstack = 0
  8393                           ; Regs used in _I2C_MasterSendNack: []
  8394                           
  8395                           
  8396                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKDT = 1;
  8397  0F6A  0024               	movlb	4	; select bank4
  8398  0F6B  1696               	bsf	22,5	;volatile
  8399                           
  8400                           ;mcc_generated_files/i2c_master.c: 613:     SSPCON2bits.ACKEN = 1;
  8401  0F6C  1616               	bsf	22,4	;volatile
  8402  0F6D                     i1l712:
  8403  0F6D  0008               	return
  8404  0F6E                     __end_of_I2C_MasterSendNack:
  8405                           
  8406                           	psect	text62
  8407  0F56                     __ptext62:	
  8408 ;; *************** function _I2C_MasterStartRx *****************
  8409 ;; Defined at:
  8410 ;;		line 584 in file "mcc_generated_files/i2c_master.c"
  8411 ;; Parameters:    Size  Location     Type
  8412 ;;		None
  8413 ;; Auto vars:     Size  Location     Type
  8414 ;;		None
  8415 ;; Return value:  Size  Location     Type
  8416 ;;                  1    wreg      void 
  8417 ;; Registers used:
  8418 ;;		None
  8419 ;; Tracked objects:
  8420 ;;		On entry : 0/0
  8421 ;;		On exit  : 0/0
  8422 ;;		Unchanged: 0/0
  8423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8428 ;;Total ram usage:        0 bytes
  8429 ;; Hardware stack levels used: 1
  8430 ;; This function calls:
  8431 ;;		Nothing
  8432 ;; This function is called by:
  8433 ;;		_I2C_DO_RCEN
  8434 ;; This function uses a non-reentrant model
  8435 ;;
  8436                           
  8437                           
  8438                           ;psect for function _I2C_MasterStartRx
  8439  0F56                     _I2C_MasterStartRx:
  8440  0F56                     i1l3178:	
  8441                           ;incstack = 0
  8442                           ; Regs used in _I2C_MasterStartRx: []
  8443                           
  8444                           
  8445                           ;mcc_generated_files/i2c_master.c: 586:     SSPCON2bits.RCEN = 1;
  8446  0F56  0024               	movlb	4	; select bank4
  8447  0F57  1596               	bsf	22,3	;volatile
  8448  0F58                     i1l697:
  8449  0F58  0008               	return
  8450  0F59                     __end_of_I2C_MasterStartRx:
  8451                           
  8452                           	psect	text63
  8453  0002                     __ptext63:	
  8454 ;; *************** function _I2C_CallbackReturnReset *****************
  8455 ;; Defined at:
  8456 ;;		line 526 in file "mcc_generated_files/i2c_master.c"
  8457 ;; Parameters:    Size  Location     Type
  8458 ;;  funPtr          1    9[COMMON] PTR void 
  8459 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  8460 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  8461 ;; Auto vars:     Size  Location     Type
  8462 ;;		None
  8463 ;; Return value:  Size  Location     Type
  8464 ;;                  1    wreg      enum E360
  8465 ;; Registers used:
  8466 ;;		wreg
  8467 ;; Tracked objects:
  8468 ;;		On entry : 0/0
  8469 ;;		On exit  : 0/0
  8470 ;;		Unchanged: 0/0
  8471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8472 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8475 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8476 ;;Total ram usage:        1 bytes
  8477 ;; Hardware stack levels used: 1
  8478 ;; This function calls:
  8479 ;;		Nothing
  8480 ;; This function is called by:
  8481 ;;		_I2C_Open
  8482 ;;		_I2C_DO_TX
  8483 ;;		_I2C_DO_RX
  8484 ;;		_I2C_DO_TX_EMPTY
  8485 ;;		_I2C_DO_ADDRESS_NACK
  8486 ;;		_I2C_DO_RX_EMPTY
  8487 ;; This function uses a non-reentrant model
  8488 ;;
  8489                           
  8490                           
  8491                           ;psect for function _I2C_CallbackReturnReset
  8492  0002                     _I2C_CallbackReturnReset:
  8493  0002                     i1l3192:	
  8494                           ;incstack = 0
  8495                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
  8496                           
  8497                           
  8498                           ;mcc_generated_files/i2c_master.c: 526: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 527: {;mcc_generated_files/i2c_master.c: 528:  
      +                             return I2C_RESET_LINK;
  8499  0002  3005               	movlw	5
  8500  0003                     i1l669:
  8501  0003  0008               	return
  8502  0004                     __end_of_I2C_CallbackReturnReset:
  8503                           
  8504                           	psect	text64
  8505  0F4E                     __ptext64:	
  8506 ;; *************** function _I2C_CallbackReturnStop *****************
  8507 ;; Defined at:
  8508 ;;		line 521 in file "mcc_generated_files/i2c_master.c"
  8509 ;; Parameters:    Size  Location     Type
  8510 ;;  funPtr          1    9[COMMON] PTR void 
  8511 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  8512 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  8513 ;; Auto vars:     Size  Location     Type
  8514 ;;		None
  8515 ;; Return value:  Size  Location     Type
  8516 ;;                  1    wreg      enum E360
  8517 ;; Registers used:
  8518 ;;		wreg
  8519 ;; Tracked objects:
  8520 ;;		On entry : 0/0
  8521 ;;		On exit  : 0/0
  8522 ;;		Unchanged: 0/0
  8523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8524 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8527 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8528 ;;Total ram usage:        1 bytes
  8529 ;; Hardware stack levels used: 1
  8530 ;; This function calls:
  8531 ;;		Nothing
  8532 ;; This function is called by:
  8533 ;;		_I2C_SetCallback
  8534 ;;		_I2C_Open
  8535 ;;		_I2C_DO_TX
  8536 ;;		_I2C_DO_RX
  8537 ;;		_I2C_DO_TX_EMPTY
  8538 ;;		_I2C_DO_ADDRESS_NACK
  8539 ;;		_I2C_DO_RX_EMPTY
  8540 ;; This function uses a non-reentrant model
  8541 ;;
  8542                           
  8543                           
  8544                           ;psect for function _I2C_CallbackReturnStop
  8545  0F4E                     _I2C_CallbackReturnStop:
  8546  0F4E                     i1l3188:	
  8547                           ;incstack = 0
  8548                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
  8549                           
  8550                           
  8551                           ;mcc_generated_files/i2c_master.c: 521: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 522: {;mcc_generated_files/i2c_master.c: 523:   
      +                            return I2C_STOP;
  8552  0F4E  3001               	movlw	1
  8553  0F4F                     i1l666:
  8554  0F4F  0008               	return
  8555  0F50                     __end_of_I2C_CallbackReturnStop:
  8556                           
  8557                           	psect	text65
  8558  0666                     __ptext65:	
  8559 ;; *************** function _rdBlkRegCompleteHandler *****************
  8560 ;; Defined at:
  8561 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
  8562 ;; Parameters:    Size  Location     Type
  8563 ;;  ptr             1    9[COMMON] PTR void 
  8564 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  8565 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  8566 ;; Auto vars:     Size  Location     Type
  8567 ;;		None
  8568 ;; Return value:  Size  Location     Type
  8569 ;;                  1    wreg      enum E360
  8570 ;; Registers used:
  8571 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8572 ;; Tracked objects:
  8573 ;;		On entry : 0/0
  8574 ;;		On exit  : 0/0
  8575 ;;		Unchanged: 0/0
  8576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8577 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8580 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8581 ;;Total ram usage:        1 bytes
  8582 ;; Hardware stack levels used: 1
  8583 ;; Hardware stack levels required when called: 2
  8584 ;; This function calls:
  8585 ;;		_I2C_SetBuffer
  8586 ;;		_I2C_SetDataCompleteCallback
  8587 ;; This function is called by:
  8588 ;;		_I2C_ReadDataBlock
  8589 ;;		_I2C_DO_TX
  8590 ;;		_I2C_DO_RX
  8591 ;;		_I2C_DO_TX_EMPTY
  8592 ;;		_I2C_DO_ADDRESS_NACK
  8593 ;;		_I2C_DO_RX_EMPTY
  8594 ;; This function uses a non-reentrant model
  8595 ;;
  8596                           
  8597                           
  8598                           ;psect for function _rdBlkRegCompleteHandler
  8599  0666                     _rdBlkRegCompleteHandler:
  8600  0666                     i1l3130:	
  8601                           ;incstack = 0
  8602                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  8603                           
  8604                           
  8605                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
  8606  0666  0879               	movf	rdBlkRegCompleteHandler@ptr,w
  8607  0667  0086               	movwf	6
  8608  0668  0187               	clrf	7
  8609  0669  3F40               	moviw [0]fsr1
  8610  066A  00F0               	movwf	I2C_SetBuffer@bufferSize
  8611  066B  3F41               	moviw [1]fsr1
  8612  066C  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  8613  066D  0879               	movf	rdBlkRegCompleteHandler@ptr,w
  8614  066E  3E02               	addlw	2
  8615  066F  0086               	movwf	6
  8616  0670  0187               	clrf	7
  8617  0671  0801               	movf	1,w
  8618  0672  3187  274E  3186   	fcall	_I2C_SetBuffer
  8619                           
  8620                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  8621  0675  3000               	movlw	0
  8622  0676  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  8623  0677  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  8624  0678  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  8625  0679  3187  2797  3186   	fcall	_I2C_SetDataCompleteCallback
  8626  067C                     i1l3132:
  8627                           
  8628                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
  8629  067C  3002               	movlw	2
  8630  067D                     i1l104:
  8631  067D  0008               	return
  8632  067E                     __end_of_rdBlkRegCompleteHandler:
  8633                           
  8634                           	psect	text66
  8635  06FA                     __ptext66:	
  8636 ;; *************** function _wr1RegCompleteHandler *****************
  8637 ;; Defined at:
  8638 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
  8639 ;; Parameters:    Size  Location     Type
  8640 ;;  ptr             1    9[COMMON] PTR void 
  8641 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  8642 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  8643 ;; Auto vars:     Size  Location     Type
  8644 ;;		None
  8645 ;; Return value:  Size  Location     Type
  8646 ;;                  1    wreg      enum E360
  8647 ;; Registers used:
  8648 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8649 ;; Tracked objects:
  8650 ;;		On entry : 0/0
  8651 ;;		On exit  : 0/0
  8652 ;;		Unchanged: 0/0
  8653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8654 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8657 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8658 ;;Total ram usage:        1 bytes
  8659 ;; Hardware stack levels used: 1
  8660 ;; Hardware stack levels required when called: 2
  8661 ;; This function calls:
  8662 ;;		_I2C_SetBuffer
  8663 ;;		_I2C_SetDataCompleteCallback
  8664 ;; This function is called by:
  8665 ;;		_I2C_Write1ByteRegister
  8666 ;;		_I2C_DO_TX
  8667 ;;		_I2C_DO_RX
  8668 ;;		_I2C_DO_TX_EMPTY
  8669 ;;		_I2C_DO_ADDRESS_NACK
  8670 ;;		_I2C_DO_RX_EMPTY
  8671 ;; This function uses a non-reentrant model
  8672 ;;
  8673                           
  8674                           
  8675                           ;psect for function _wr1RegCompleteHandler
  8676  06FA                     _wr1RegCompleteHandler:
  8677  06FA                     i1l3114:	
  8678                           ;incstack = 0
  8679                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8680                           
  8681                           
  8682                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
  8683  06FA  3001               	movlw	1
  8684  06FB  00F0               	movwf	I2C_SetBuffer@bufferSize
  8685  06FC  3000               	movlw	0
  8686  06FD  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  8687  06FE  0879               	movf	wr1RegCompleteHandler@ptr,w
  8688  06FF  3187  274E  3186   	fcall	_I2C_SetBuffer
  8689  0702                     i1l3116:
  8690                           
  8691                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  8692  0702  3000               	movlw	0
  8693  0703  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  8694  0704  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  8695  0705  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  8696  0706  3187  2797  3186   	fcall	_I2C_SetDataCompleteCallback
  8697  0709                     i1l3118:
  8698                           
  8699                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
  8700  0709  3004               	movlw	4
  8701  070A                     i1l98:
  8702  070A  0008               	return
  8703  070B                     __end_of_wr1RegCompleteHandler:
  8704                           
  8705                           	psect	text67
  8706  070B                     __ptext67:	
  8707 ;; *************** function _rd2RegCompleteHandler *****************
  8708 ;; Defined at:
  8709 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
  8710 ;; Parameters:    Size  Location     Type
  8711 ;;  ptr             1    9[COMMON] PTR void 
  8712 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  8713 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  8714 ;; Auto vars:     Size  Location     Type
  8715 ;;		None
  8716 ;; Return value:  Size  Location     Type
  8717 ;;                  1    wreg      enum E360
  8718 ;; Registers used:
  8719 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8720 ;; Tracked objects:
  8721 ;;		On entry : 0/0
  8722 ;;		On exit  : 0/0
  8723 ;;		Unchanged: 0/0
  8724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8725 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8728 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8729 ;;Total ram usage:        1 bytes
  8730 ;; Hardware stack levels used: 1
  8731 ;; Hardware stack levels required when called: 2
  8732 ;; This function calls:
  8733 ;;		_I2C_SetBuffer
  8734 ;;		_I2C_SetDataCompleteCallback
  8735 ;; This function is called by:
  8736 ;;		_I2C_Read2ByteRegister
  8737 ;;		_I2C_DO_TX
  8738 ;;		_I2C_DO_RX
  8739 ;;		_I2C_DO_TX_EMPTY
  8740 ;;		_I2C_DO_ADDRESS_NACK
  8741 ;;		_I2C_DO_RX_EMPTY
  8742 ;; This function uses a non-reentrant model
  8743 ;;
  8744                           
  8745                           
  8746                           ;psect for function _rd2RegCompleteHandler
  8747  070B                     _rd2RegCompleteHandler:
  8748  070B                     i1l3106:	
  8749                           ;incstack = 0
  8750                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8751                           
  8752                           
  8753                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
  8754  070B  3002               	movlw	2
  8755  070C  00F0               	movwf	I2C_SetBuffer@bufferSize
  8756  070D  3000               	movlw	0
  8757  070E  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  8758  070F  0879               	movf	rd2RegCompleteHandler@ptr,w
  8759  0710  3187  274E  3187   	fcall	_I2C_SetBuffer
  8760  0713                     i1l3108:
  8761                           
  8762                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  8763  0713  3000               	movlw	0
  8764  0714  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  8765  0715  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  8766  0716  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  8767  0717  3187  2797  3187   	fcall	_I2C_SetDataCompleteCallback
  8768  071A                     i1l3110:
  8769                           
  8770                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
  8771  071A  3002               	movlw	2
  8772  071B                     i1l95:
  8773  071B  0008               	return
  8774  071C                     __end_of_rd2RegCompleteHandler:
  8775                           
  8776                           	psect	text68
  8777  071C                     __ptext68:	
  8778 ;; *************** function _rd1RegCompleteHandler *****************
  8779 ;; Defined at:
  8780 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
  8781 ;; Parameters:    Size  Location     Type
  8782 ;;  ptr             1    9[COMMON] PTR void 
  8783 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  8784 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  8785 ;; Auto vars:     Size  Location     Type
  8786 ;;		None
  8787 ;; Return value:  Size  Location     Type
  8788 ;;                  1    wreg      enum E360
  8789 ;; Registers used:
  8790 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8791 ;; Tracked objects:
  8792 ;;		On entry : 0/0
  8793 ;;		On exit  : 0/0
  8794 ;;		Unchanged: 0/0
  8795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8796 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8799 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8800 ;;Total ram usage:        1 bytes
  8801 ;; Hardware stack levels used: 1
  8802 ;; Hardware stack levels required when called: 2
  8803 ;; This function calls:
  8804 ;;		_I2C_SetBuffer
  8805 ;;		_I2C_SetDataCompleteCallback
  8806 ;; This function is called by:
  8807 ;;		_I2C_Read1ByteRegister
  8808 ;;		_I2C_DO_TX
  8809 ;;		_I2C_DO_RX
  8810 ;;		_I2C_DO_TX_EMPTY
  8811 ;;		_I2C_DO_ADDRESS_NACK
  8812 ;;		_I2C_DO_RX_EMPTY
  8813 ;; This function uses a non-reentrant model
  8814 ;;
  8815                           
  8816                           
  8817                           ;psect for function _rd1RegCompleteHandler
  8818  071C                     _rd1RegCompleteHandler:
  8819  071C                     i1l3098:	
  8820                           ;incstack = 0
  8821                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8822                           
  8823                           
  8824                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
  8825  071C  3001               	movlw	1
  8826  071D  00F0               	movwf	I2C_SetBuffer@bufferSize
  8827  071E  3000               	movlw	0
  8828  071F  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  8829  0720  0879               	movf	rd1RegCompleteHandler@ptr,w
  8830  0721  3187  274E  3187   	fcall	_I2C_SetBuffer
  8831  0724                     i1l3100:
  8832                           
  8833                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  8834  0724  3000               	movlw	0
  8835  0725  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  8836  0726  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  8837  0727  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  8838  0728  3187  2797  3187   	fcall	_I2C_SetDataCompleteCallback
  8839  072B                     i1l3102:
  8840                           
  8841                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
  8842  072B  3002               	movlw	2
  8843  072C                     i1l92:
  8844  072C  0008               	return
  8845  072D                     __end_of_rd1RegCompleteHandler:
  8846                           
  8847                           	psect	text69
  8848  072D                     __ptext69:	
  8849 ;; *************** function _wr2RegCompleteHandler *****************
  8850 ;; Defined at:
  8851 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
  8852 ;; Parameters:    Size  Location     Type
  8853 ;;  ptr             1    9[COMMON] PTR void 
  8854 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  8855 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  8856 ;; Auto vars:     Size  Location     Type
  8857 ;;		None
  8858 ;; Return value:  Size  Location     Type
  8859 ;;                  1    wreg      enum E360
  8860 ;; Registers used:
  8861 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8862 ;; Tracked objects:
  8863 ;;		On entry : 0/0
  8864 ;;		On exit  : 0/0
  8865 ;;		Unchanged: 0/0
  8866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8867 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8870 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8871 ;;Total ram usage:        1 bytes
  8872 ;; Hardware stack levels used: 1
  8873 ;; Hardware stack levels required when called: 2
  8874 ;; This function calls:
  8875 ;;		_I2C_SetBuffer
  8876 ;;		_I2C_SetDataCompleteCallback
  8877 ;; This function is called by:
  8878 ;;		_I2C_Write2ByteRegister
  8879 ;;		_I2C_DO_TX
  8880 ;;		_I2C_DO_RX
  8881 ;;		_I2C_DO_TX_EMPTY
  8882 ;;		_I2C_DO_ADDRESS_NACK
  8883 ;;		_I2C_DO_RX_EMPTY
  8884 ;; This function uses a non-reentrant model
  8885 ;;
  8886                           
  8887                           
  8888                           ;psect for function _wr2RegCompleteHandler
  8889  072D                     _wr2RegCompleteHandler:
  8890  072D                     i1l3122:	
  8891                           ;incstack = 0
  8892                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8893                           
  8894                           
  8895                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
  8896  072D  3002               	movlw	2
  8897  072E  00F0               	movwf	I2C_SetBuffer@bufferSize
  8898  072F  3000               	movlw	0
  8899  0730  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  8900  0731  0879               	movf	wr2RegCompleteHandler@ptr,w
  8901  0732  3187  274E  3187   	fcall	_I2C_SetBuffer
  8902  0735                     i1l3124:
  8903                           
  8904                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  8905  0735  3000               	movlw	0
  8906  0736  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  8907  0737  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  8908  0738  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  8909  0739  3187  2797  3187   	fcall	_I2C_SetDataCompleteCallback
  8910  073C                     i1l3126:
  8911                           
  8912                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
  8913  073C  3004               	movlw	4
  8914  073D                     i1l101:
  8915  073D  0008               	return
  8916  073E                     __end_of_wr2RegCompleteHandler:
  8917                           
  8918                           	psect	text70
  8919  0797                     __ptext70:	
  8920 ;; *************** function _I2C_SetDataCompleteCallback *****************
  8921 ;; Defined at:
  8922 ;;		line 274 in file "mcc_generated_files/i2c_master.c"
  8923 ;; Parameters:    Size  Location     Type
  8924 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
  8925 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  8926 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  8927 ;;  ptr             1    7[COMMON] PTR void 
  8928 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  8929 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  8930 ;; Auto vars:     Size  Location     Type
  8931 ;;		None
  8932 ;; Return value:  Size  Location     Type
  8933 ;;                  1    wreg      void 
  8934 ;; Registers used:
  8935 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8936 ;; Tracked objects:
  8937 ;;		On entry : 0/0
  8938 ;;		On exit  : 0/0
  8939 ;;		Unchanged: 0/0
  8940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8941 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8943 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8944 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8945 ;;Total ram usage:        4 bytes
  8946 ;; Hardware stack levels used: 1
  8947 ;; Hardware stack levels required when called: 1
  8948 ;; This function calls:
  8949 ;;		_I2C_SetCallback
  8950 ;; This function is called by:
  8951 ;;		_rd1RegCompleteHandler
  8952 ;;		_rd2RegCompleteHandler
  8953 ;;		_wr1RegCompleteHandler
  8954 ;;		_wr2RegCompleteHandler
  8955 ;;		_rdBlkRegCompleteHandler
  8956 ;;		_I2C_Read1ByteRegister
  8957 ;;		_I2C_Read2ByteRegister
  8958 ;;		_I2C_Write1ByteRegister
  8959 ;;		_I2C_Write2ByteRegister
  8960 ;;		_I2C_ReadDataBlock
  8961 ;; This function uses a non-reentrant model
  8962 ;;
  8963                           
  8964                           
  8965                           ;psect for function _I2C_SetDataCompleteCallback
  8966  0797                     _I2C_SetDataCompleteCallback:
  8967  0797                     i1l3070:	
  8968                           ;incstack = 0
  8969                           ; Regs used in _I2C_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  8970                           
  8971                           
  8972                           ;mcc_generated_files/i2c_master.c: 274: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 275: {;mcc_generated_files/i2c_master.c
      +                          : 276:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  8973  0797  0876               	movf	I2C_SetDataCompleteCallback@cb+1,w
  8974  0798  00F1               	movwf	I2C_SetCallback@cb+1
  8975  0799  0875               	movf	I2C_SetDataCompleteCallback@cb,w
  8976  079A  00F0               	movwf	I2C_SetCallback@cb
  8977  079B  0877               	movf	I2C_SetDataCompleteCallback@ptr,w
  8978  079C  00F8               	movwf	??_I2C_SetDataCompleteCallback
  8979  079D  0878               	movf	??_I2C_SetDataCompleteCallback,w
  8980  079E  00F2               	movwf	I2C_SetCallback@ptr
  8981  079F  3000               	movlw	0
  8982  07A0  3185  257E  3187   	fcall	_I2C_SetCallback
  8983  07A3                     i1l540:
  8984  07A3  0008               	return
  8985  07A4                     __end_of_I2C_SetDataCompleteCallback:
  8986                           
  8987                           	psect	text71
  8988  057E                     __ptext71:	
  8989 ;; *************** function _I2C_SetCallback *****************
  8990 ;; Defined at:
  8991 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
  8992 ;; Parameters:    Size  Location     Type
  8993 ;;  idx             1    wreg     enum E3356
  8994 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
  8995 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  8996 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  8997 ;;  ptr             1    2[COMMON] PTR void 
  8998 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  8999 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  9000 ;; Auto vars:     Size  Location     Type
  9001 ;;  idx             1    4[COMMON] enum E3356
  9002 ;; Return value:  Size  Location     Type
  9003 ;;                  1    wreg      void 
  9004 ;; Registers used:
  9005 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9006 ;; Tracked objects:
  9007 ;;		On entry : 0/0
  9008 ;;		On exit  : 0/0
  9009 ;;		Unchanged: 0/0
  9010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9011 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9012 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9013 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9014 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9015 ;;Total ram usage:        5 bytes
  9016 ;; Hardware stack levels used: 1
  9017 ;; This function calls:
  9018 ;;		Nothing
  9019 ;; This function is called by:
  9020 ;;		_I2C_SetDataCompleteCallback
  9021 ;;		_I2C_SetWriteCollisionCallback
  9022 ;;		_I2C_SetAddressNackCallback
  9023 ;;		_I2C_SetDataNackCallback
  9024 ;;		_I2C_SetTimeoutCallback
  9025 ;; This function uses a non-reentrant model
  9026 ;;
  9027                           
  9028                           
  9029                           ;psect for function _I2C_SetCallback
  9030  057E                     _I2C_SetCallback:
  9031                           
  9032                           ;incstack = 0
  9033                           ; Regs used in _I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
  9034                           ;I2C_SetCallback@idx stored from wreg
  9035  057E  00F4               	movwf	I2C_SetCallback@idx
  9036  057F                     i1l3060:
  9037                           
  9038                           ;mcc_generated_files/i2c_master.c: 304: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 305: {;mcc_generate
      +                          d_files/i2c_master.c: 306:     if(cb)
  9039  057F  0870               	movf	I2C_SetCallback@cb,w
  9040  0580  0471               	iorwf	I2C_SetCallback@cb+1,w
  9041  0581  1903               	btfsc	3,2
  9042  0582  2D84               	goto	u81_21
  9043  0583  2D85               	goto	u81_20
  9044  0584                     u81_21:
  9045  0584  2D96               	goto	i1l3064
  9046  0585                     u81_20:
  9047  0585                     i1l3062:
  9048                           
  9049                           ;mcc_generated_files/i2c_master.c: 307:     {;mcc_generated_files/i2c_master.c: 308:    
      +                               I2C_Status.callbackTable[idx] = cb;
  9050  0585  3574               	lslf	I2C_SetCallback@idx,w
  9051  0586  3EA0               	addlw	(low (_I2C_Status| 0))& (0+255)
  9052  0587  0086               	movwf	6
  9053  0588  0187               	clrf	7
  9054  0589  0870               	movf	I2C_SetCallback@cb,w
  9055  058A  3FC0               	movwi [0]fsr1
  9056  058B  0871               	movf	I2C_SetCallback@cb+1,w
  9057  058C  3FC1               	movwi [1]fsr1
  9058                           
  9059                           ;mcc_generated_files/i2c_master.c: 309:         I2C_Status.callbackPayload[idx] = ptr;
  9060  058D  0872               	movf	I2C_SetCallback@ptr,w
  9061  058E  00F3               	movwf	??_I2C_SetCallback
  9062  058F  0874               	movf	I2C_SetCallback@idx,w
  9063  0590  3EAC               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  9064  0591  0086               	movwf	6
  9065  0592  0187               	clrf	7
  9066  0593  0873               	movf	??_I2C_SetCallback,w
  9067  0594  0081               	movwf	1
  9068                           
  9069                           ;mcc_generated_files/i2c_master.c: 310:     }
  9070  0595  2DA3               	goto	i1l560
  9071  0596                     i1l3064:
  9072                           
  9073                           ;mcc_generated_files/i2c_master.c: 312:     {;mcc_generated_files/i2c_master.c: 313:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  9074  0596  3574               	lslf	I2C_SetCallback@idx,w
  9075  0597  3EA0               	addlw	(low (_I2C_Status| 0))& (0+255)
  9076  0598  0086               	movwf	6
  9077  0599  0187               	clrf	7
  9078  059A  304E               	movlw	low _I2C_CallbackReturnStop
  9079  059B  3FC0               	movwi [0]fsr1
  9080  059C  300F               	movlw	high _I2C_CallbackReturnStop
  9081  059D  3FC1               	movwi [1]fsr1
  9082                           
  9083                           ;mcc_generated_files/i2c_master.c: 314:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  9084  059E  0874               	movf	I2C_SetCallback@idx,w
  9085  059F  3EAC               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  9086  05A0  0086               	movwf	6
  9087  05A1  0187               	clrf	7
  9088  05A2  0181               	clrf	1
  9089  05A3                     i1l560:
  9090  05A3  0008               	return
  9091  05A4                     __end_of_I2C_SetCallback:
  9092                           
  9093                           	psect	text72
  9094  074E                     __ptext72:	
  9095 ;; *************** function _I2C_SetBuffer *****************
  9096 ;; Defined at:
  9097 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
  9098 ;; Parameters:    Size  Location     Type
  9099 ;;  buffer          1    wreg     PTR void 
  9100 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
  9101 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  9102 ;;		 -> NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
  9103 ;;  bufferSize      2    0[COMMON] unsigned int 
  9104 ;; Auto vars:     Size  Location     Type
  9105 ;;  buffer          1    3[COMMON] PTR void 
  9106 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
  9107 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  9108 ;;		 -> NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
  9109 ;; Return value:  Size  Location     Type
  9110 ;;                  1    wreg      void 
  9111 ;; Registers used:
  9112 ;;		wreg
  9113 ;; Tracked objects:
  9114 ;;		On entry : 0/0
  9115 ;;		On exit  : 0/0
  9116 ;;		Unchanged: 0/0
  9117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9118 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9119 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9120 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9121 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9122 ;;Total ram usage:        4 bytes
  9123 ;; Hardware stack levels used: 1
  9124 ;; This function calls:
  9125 ;;		Nothing
  9126 ;; This function is called by:
  9127 ;;		_rd1RegCompleteHandler
  9128 ;;		_rd2RegCompleteHandler
  9129 ;;		_wr1RegCompleteHandler
  9130 ;;		_wr2RegCompleteHandler
  9131 ;;		_rdBlkRegCompleteHandler
  9132 ;;		_I2C_Read1ByteRegister
  9133 ;;		_I2C_Read2ByteRegister
  9134 ;;		_I2C_Write1ByteRegister
  9135 ;;		_I2C_Write2ByteRegister
  9136 ;;		_I2C_WriteNBytes
  9137 ;;		_I2C_ReadNBytes
  9138 ;;		_I2C_ReadDataBlock
  9139 ;; This function uses a non-reentrant model
  9140 ;;
  9141                           
  9142                           
  9143                           ;psect for function _I2C_SetBuffer
  9144  074E                     _I2C_SetBuffer:
  9145                           
  9146                           ;incstack = 0
  9147                           ; Regs used in _I2C_SetBuffer: [wreg]
  9148                           ;I2C_SetBuffer@buffer stored from wreg
  9149  074E  00F3               	movwf	I2C_SetBuffer@buffer
  9150  074F                     i1l3072:
  9151                           
  9152                           ;mcc_generated_files/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 265: {;mcc_generated_files/i2c_master.c: 266:     
      +                          if(I2C_Status.bufferFree)
  9153  074F  0021               	movlb	1	; select bank1
  9154  0750  1DBC               	btfss	(_I2C_Status^(0+128)+28),3
  9155  0751  2F53               	goto	u84_21
  9156  0752  2F54               	goto	u84_20
  9157  0753                     u84_21:
  9158  0753  2F5D               	goto	i1l537
  9159  0754                     u84_20:
  9160  0754                     i1l3074:
  9161                           
  9162                           ;mcc_generated_files/i2c_master.c: 267:     {;mcc_generated_files/i2c_master.c: 268:    
      +                               I2C_Status.data_ptr = buffer;
  9163  0754  0873               	movf	I2C_SetBuffer@buffer,w
  9164  0755  00F2               	movwf	??_I2C_SetBuffer
  9165  0756  0872               	movf	??_I2C_SetBuffer,w
  9166  0757  00B7               	movwf	(low ((_I2C_Status| 0+23)))^(0+128)
  9167                           
  9168                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.data_length = bufferSize;
  9169  0758  0871               	movf	I2C_SetBuffer@bufferSize+1,w
  9170  0759  00B9               	movwf	((_I2C_Status+1)^(0+128)+24)
  9171  075A  0870               	movf	I2C_SetBuffer@bufferSize,w
  9172  075B  00B8               	movwf	(_I2C_Status^(0+128)+24)
  9173  075C                     i1l3076:
  9174                           
  9175                           ;mcc_generated_files/i2c_master.c: 270:         I2C_Status.bufferFree = 0;
  9176  075C  11BC               	bcf	(_I2C_Status^(0+128)+28),3
  9177  075D                     i1l537:
  9178  075D  0008               	return
  9179  075E                     __end_of_I2C_SetBuffer:
  9180                           
  9181                           	psect	text73
  9182  0F53                     __ptext73:	
  9183 ;; *************** function _I2C_MasterStop *****************
  9184 ;; Defined at:
  9185 ;;		line 594 in file "mcc_generated_files/i2c_master.c"
  9186 ;; Parameters:    Size  Location     Type
  9187 ;;		None
  9188 ;; Auto vars:     Size  Location     Type
  9189 ;;		None
  9190 ;; Return value:  Size  Location     Type
  9191 ;;                  1    wreg      void 
  9192 ;; Registers used:
  9193 ;;		None
  9194 ;; Tracked objects:
  9195 ;;		On entry : 0/0
  9196 ;;		On exit  : 0/0
  9197 ;;		Unchanged: 0/0
  9198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9203 ;;Total ram usage:        0 bytes
  9204 ;; Hardware stack levels used: 1
  9205 ;; This function calls:
  9206 ;;		Nothing
  9207 ;; This function is called by:
  9208 ;;		_I2C_DO_SEND_STOP
  9209 ;; This function uses a non-reentrant model
  9210 ;;
  9211                           
  9212                           
  9213                           ;psect for function _I2C_MasterStop
  9214  0F53                     _I2C_MasterStop:
  9215  0F53                     i1l3082:	
  9216                           ;incstack = 0
  9217                           ; Regs used in _I2C_MasterStop: []
  9218                           
  9219                           
  9220                           ;mcc_generated_files/i2c_master.c: 596:     SSPCON2bits.PEN = 1;
  9221  0F53  0024               	movlb	4	; select bank4
  9222  0F54  1516               	bsf	22,2	;volatile
  9223  0F55                     i1l703:
  9224  0F55  0008               	return
  9225  0F56                     __end_of_I2C_MasterStop:
  9226                           
  9227                           	psect	text74
  9228  0F50                     __ptext74:	
  9229 ;; *************** function _I2C_MasterEnableRestart *****************
  9230 ;; Defined at:
  9231 ;;		line 574 in file "mcc_generated_files/i2c_master.c"
  9232 ;; Parameters:    Size  Location     Type
  9233 ;;		None
  9234 ;; Auto vars:     Size  Location     Type
  9235 ;;		None
  9236 ;; Return value:  Size  Location     Type
  9237 ;;                  1    wreg      void 
  9238 ;; Registers used:
  9239 ;;		None
  9240 ;; Tracked objects:
  9241 ;;		On entry : 0/0
  9242 ;;		On exit  : 0/0
  9243 ;;		Unchanged: 0/0
  9244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9249 ;;Total ram usage:        0 bytes
  9250 ;; Hardware stack levels used: 1
  9251 ;; This function calls:
  9252 ;;		Nothing
  9253 ;; This function is called by:
  9254 ;;		_I2C_DO_SEND_RESTART_READ
  9255 ;;		_I2C_DO_SEND_RESTART_WRITE
  9256 ;;		_I2C_DO_SEND_RESTART
  9257 ;;		_I2C_DO_RX_EMPTY
  9258 ;; This function uses a non-reentrant model
  9259 ;;
  9260                           
  9261                           
  9262                           ;psect for function _I2C_MasterEnableRestart
  9263  0F50                     _I2C_MasterEnableRestart:
  9264  0F50                     i1l3080:	
  9265                           ;incstack = 0
  9266                           ; Regs used in _I2C_MasterEnableRestart: []
  9267                           
  9268                           
  9269                           ;mcc_generated_files/i2c_master.c: 576:     SSPCON2bits.RSEN = 1;
  9270  0F50  0024               	movlb	4	; select bank4
  9271  0F51  1496               	bsf	22,1	;volatile
  9272  0F52                     i1l691:
  9273  0F52  0008               	return
  9274  0F53                     __end_of_I2C_MasterEnableRestart:
  9275                           
  9276                           	psect	text75
  9277  05EA                     __ptext75:	
  9278 ;; *************** function _EUSART_Transmit_ISR *****************
  9279 ;; Defined at:
  9280 ;;		line 206 in file "mcc_generated_files/eusart.c"
  9281 ;; Parameters:    Size  Location     Type
  9282 ;;		None
  9283 ;; Auto vars:     Size  Location     Type
  9284 ;;		None
  9285 ;; Return value:  Size  Location     Type
  9286 ;;                  1    wreg      void 
  9287 ;; Registers used:
  9288 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9289 ;; Tracked objects:
  9290 ;;		On entry : 0/0
  9291 ;;		On exit  : 0/0
  9292 ;;		Unchanged: 0/0
  9293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9296 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9297 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9298 ;;Total ram usage:        1 bytes
  9299 ;; Hardware stack levels used: 1
  9300 ;; This function calls:
  9301 ;;		Nothing
  9302 ;; This function is called by:
  9303 ;;		_EUSART_Initialize
  9304 ;;		_INTERRUPT_InterruptManager
  9305 ;; This function uses a non-reentrant model
  9306 ;;
  9307                           
  9308                           
  9309                           ;psect for function _EUSART_Transmit_ISR
  9310  05EA                     _EUSART_Transmit_ISR:
  9311  05EA                     i1l3586:	
  9312                           ;incstack = 0
  9313                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  9314                           
  9315                           
  9316                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  9317  05EA  3008               	movlw	8
  9318  05EB  0020               	movlb	0	; select bank0
  9319  05EC  0265               	subwf	_eusartTxBufferRemaining,w	;volatile
  9320  05ED  1803               	skipnc
  9321  05EE  2DF0               	goto	u105_21
  9322  05EF  2DF1               	goto	u105_20
  9323  05F0                     u105_21:
  9324  05F0  2E09               	goto	i1l332
  9325  05F1                     u105_20:
  9326  05F1                     i1l3588:
  9327                           
  9328                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  9329  05F1  0866               	movf	_eusartTxTail,w
  9330  05F2  3ECD               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  9331  05F3  0086               	movwf	6
  9332  05F4  0187               	clrf	7
  9333  05F5  0801               	movf	1,w
  9334  05F6  0023               	movlb	3	; select bank3
  9335  05F7  009A               	movwf	26	;volatile
  9336  05F8                     i1l3590:
  9337  05F8  3001               	movlw	1
  9338  05F9  00F0               	movwf	??_EUSART_Transmit_ISR
  9339  05FA  0870               	movf	??_EUSART_Transmit_ISR,w
  9340  05FB  0020               	movlb	0	; select bank0
  9341  05FC  07E6               	addwf	_eusartTxTail,f	;volatile
  9342  05FD                     i1l3592:
  9343                           
  9344                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  9345  05FD  3008               	movlw	8
  9346  05FE  0266               	subwf	_eusartTxTail,w	;volatile
  9347  05FF  1C03               	skipc
  9348  0600  2E02               	goto	u106_21
  9349  0601  2E03               	goto	u106_20
  9350  0602                     u106_21:
  9351  0602  2E04               	goto	i1l3596
  9352  0603                     u106_20:
  9353  0603                     i1l3594:
  9354                           
  9355                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
  9356  0603  01E6               	clrf	_eusartTxTail	;volatile
  9357  0604                     i1l3596:
  9358                           
  9359                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
  9360  0604  3001               	movlw	1
  9361  0605  00F0               	movwf	??_EUSART_Transmit_ISR
  9362  0606  0870               	movf	??_EUSART_Transmit_ISR,w
  9363  0607  07E5               	addwf	_eusartTxBufferRemaining,f	;volatile
  9364                           
  9365                           ;mcc_generated_files/eusart.c: 218:     }
  9366  0608  2E0B               	goto	i1l335
  9367  0609                     i1l332:	
  9368                           ;mcc_generated_files/eusart.c: 219:     else
  9369                           
  9370                           
  9371                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TXIE = 0;
  9372  0609  0021               	movlb	1	; select bank1
  9373  060A  1211               	bcf	17,4	;volatile
  9374  060B                     i1l335:
  9375  060B  0008               	return
  9376  060C                     __end_of_EUSART_Transmit_ISR:
  9377                           
  9378                           	psect	text76
  9379  03DE                     __ptext76:	
  9380 ;; *************** function _EUSART_Receive_ISR *****************
  9381 ;; Defined at:
  9382 ;;		line 225 in file "mcc_generated_files/eusart.c"
  9383 ;; Parameters:    Size  Location     Type
  9384 ;;		None
  9385 ;; Auto vars:     Size  Location     Type
  9386 ;;		None
  9387 ;; Return value:  Size  Location     Type
  9388 ;;                  1    wreg      void 
  9389 ;; Registers used:
  9390 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9391 ;; Tracked objects:
  9392 ;;		On entry : 0/0
  9393 ;;		On exit  : 0/0
  9394 ;;		Unchanged: 0/0
  9395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9400 ;;Total ram usage:        0 bytes
  9401 ;; Hardware stack levels used: 1
  9402 ;; Hardware stack levels required when called: 2
  9403 ;; This function calls:
  9404 ;;		Absolute function
  9405 ;;		_EUSART_DefaultErrorHandler
  9406 ;;		_EUSART_DefaultFramingErrorHandler
  9407 ;;		_EUSART_DefaultOverrunErrorHandler
  9408 ;;		_EUSART_RxDataHandler
  9409 ;; This function is called by:
  9410 ;;		_EUSART_Initialize
  9411 ;;		_INTERRUPT_InterruptManager
  9412 ;; This function uses a non-reentrant model
  9413 ;;
  9414                           
  9415                           
  9416                           ;psect for function _EUSART_Receive_ISR
  9417  03DE                     _EUSART_Receive_ISR:
  9418  03DE                     i1l3598:	
  9419                           ;incstack = 0
  9420                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9421                           
  9422                           
  9423                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  9424  03DE  0020               	movlb	0	; select bank0
  9425  03DF  0864               	movf	_eusartRxHead,w	;volatile
  9426  03E0  3EBD               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  9427  03E1  0086               	movwf	6
  9428  03E2  0187               	clrf	7
  9429  03E3  0181               	clrf	1
  9430  03E4                     i1l3600:
  9431                           
  9432                           ;mcc_generated_files/eusart.c: 230:     if(RCSTAbits.FERR){
  9433  03E4  0023               	movlb	3	; select bank3
  9434  03E5  1D1D               	btfss	29,2	;volatile
  9435  03E6  2BE8               	goto	u107_21
  9436  03E7  2BE9               	goto	u107_20
  9437  03E8                     u107_21:
  9438  03E8  2BF4               	goto	i1l3606
  9439  03E9                     u107_20:
  9440  03E9                     i1l3602:
  9441                           
  9442                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  9443  03E9  0020               	movlb	0	; select bank0
  9444  03EA  0864               	movf	_eusartRxHead,w	;volatile
  9445  03EB  3EBD               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  9446  03EC  0086               	movwf	6
  9447  03ED  0187               	clrf	7
  9448  03EE  1481               	bsf	1,1
  9449  03EF                     i1l3604:
  9450                           
  9451                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
  9452  03EF  0857               	movf	_EUSART_FramingErrorHandler+1,w
  9453  03F0  008A               	movwf	10
  9454  03F1  0856               	movf	_EUSART_FramingErrorHandler,w
  9455  03F2  000A               	callw
  9456  03F3  3183               	pagesel	$
  9457  03F4                     i1l3606:
  9458                           
  9459                           ;mcc_generated_files/eusart.c: 235:     if(RCSTAbits.OERR){
  9460  03F4  0023               	movlb	3	; select bank3
  9461  03F5  1C9D               	btfss	29,1	;volatile
  9462  03F6  2BF8               	goto	u108_21
  9463  03F7  2BF9               	goto	u108_20
  9464  03F8                     u108_21:
  9465  03F8  2C04               	goto	i1l3612
  9466  03F9                     u108_20:
  9467  03F9                     i1l3608:
  9468                           
  9469                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  9470  03F9  0020               	movlb	0	; select bank0
  9471  03FA  0864               	movf	_eusartRxHead,w	;volatile
  9472  03FB  3EBD               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  9473  03FC  0086               	movwf	6
  9474  03FD  0187               	clrf	7
  9475  03FE  1501               	bsf	1,2
  9476  03FF                     i1l3610:
  9477                           
  9478                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
  9479  03FF  0855               	movf	_EUSART_OverrunErrorHandler+1,w
  9480  0400  008A               	movwf	10
  9481  0401  0854               	movf	_EUSART_OverrunErrorHandler,w
  9482  0402  000A               	callw
  9483  0403  3183               	pagesel	$
  9484  0404                     i1l3612:
  9485                           
  9486                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
  9487  0404  0020               	movlb	0	; select bank0
  9488  0405  0864               	movf	_eusartRxHead,w	;volatile
  9489  0406  3EBD               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  9490  0407  0086               	movwf	6
  9491  0408  0187               	clrf	7
  9492  0409  0801               	movf	1,w
  9493  040A  1903               	btfsc	3,2
  9494  040B  2C0D               	goto	u109_21
  9495  040C  2C0E               	goto	u109_20
  9496  040D                     u109_21:
  9497  040D  2C14               	goto	i1l3616
  9498  040E                     u109_20:
  9499  040E                     i1l3614:
  9500                           
  9501                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
  9502  040E  0853               	movf	_EUSART_ErrorHandler+1,w
  9503  040F  008A               	movwf	10
  9504  0410  0852               	movf	_EUSART_ErrorHandler,w
  9505  0411  000A               	callw
  9506  0412  3183               	pagesel	$
  9507                           
  9508                           ;mcc_generated_files/eusart.c: 242:     } else {
  9509  0413  2C17               	goto	i1l342
  9510  0414                     i1l3616:
  9511                           
  9512                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
  9513  0414  3186  264C  3183   	fcall	_EUSART_RxDataHandler
  9514  0417                     i1l342:
  9515  0417  0008               	return
  9516  0418                     __end_of_EUSART_Receive_ISR:
  9517                           
  9518                           	psect	text77
  9519  0F66                     __ptext77:	
  9520 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  9521 ;; Defined at:
  9522 ;;		line 261 in file "mcc_generated_files/eusart.c"
  9523 ;; Parameters:    Size  Location     Type
  9524 ;;		None
  9525 ;; Auto vars:     Size  Location     Type
  9526 ;;		None
  9527 ;; Return value:  Size  Location     Type
  9528 ;;                  1    wreg      void 
  9529 ;; Registers used:
  9530 ;;		None
  9531 ;; Tracked objects:
  9532 ;;		On entry : 0/0
  9533 ;;		On exit  : 0/0
  9534 ;;		Unchanged: 0/0
  9535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9540 ;;Total ram usage:        0 bytes
  9541 ;; Hardware stack levels used: 1
  9542 ;; This function calls:
  9543 ;;		Nothing
  9544 ;; This function is called by:
  9545 ;;		_EUSART_Initialize
  9546 ;;		_EUSART_Receive_ISR
  9547 ;; This function uses a non-reentrant model
  9548 ;;
  9549                           
  9550                           
  9551                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  9552  0F66                     _EUSART_DefaultOverrunErrorHandler:
  9553  0F66                     i1l3514:	
  9554                           ;incstack = 0
  9555                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  9556                           
  9557                           
  9558                           ;mcc_generated_files/eusart.c: 264:     RCSTAbits.CREN = 0;
  9559  0F66  0023               	movlb	3	; select bank3
  9560  0F67  121D               	bcf	29,4	;volatile
  9561                           
  9562                           ;mcc_generated_files/eusart.c: 265:     RCSTAbits.CREN = 1;
  9563  0F68  161D               	bsf	29,4	;volatile
  9564  0F69                     i1l352:
  9565  0F69  0008               	return
  9566  0F6A                     __end_of_EUSART_DefaultOverrunErrorHandler:
  9567                           
  9568                           	psect	text78
  9569  0F4C                     __ptext78:	
  9570 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  9571 ;; Defined at:
  9572 ;;		line 259 in file "mcc_generated_files/eusart.c"
  9573 ;; Parameters:    Size  Location     Type
  9574 ;;		None
  9575 ;; Auto vars:     Size  Location     Type
  9576 ;;		None
  9577 ;; Return value:  Size  Location     Type
  9578 ;;                  1    wreg      void 
  9579 ;; Registers used:
  9580 ;;		None
  9581 ;; Tracked objects:
  9582 ;;		On entry : 0/0
  9583 ;;		On exit  : 0/0
  9584 ;;		Unchanged: 0/0
  9585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9590 ;;Total ram usage:        0 bytes
  9591 ;; Hardware stack levels used: 1
  9592 ;; This function calls:
  9593 ;;		Nothing
  9594 ;; This function is called by:
  9595 ;;		_EUSART_Initialize
  9596 ;;		_EUSART_Receive_ISR
  9597 ;; This function uses a non-reentrant model
  9598 ;;
  9599                           
  9600                           
  9601                           ;psect for function _EUSART_DefaultFramingErrorHandler
  9602  0F4C                     _EUSART_DefaultFramingErrorHandler:
  9603  0F4C                     i1l349:	
  9604                           ;incstack = 0
  9605                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  9606                           
  9607  0F4C  0008               	return
  9608  0F4D                     __end_of_EUSART_DefaultFramingErrorHandler:
  9609                           
  9610                           	psect	text79
  9611  0F62                     __ptext79:	
  9612 ;; *************** function _EUSART_DefaultErrorHandler *****************
  9613 ;; Defined at:
  9614 ;;		line 269 in file "mcc_generated_files/eusart.c"
  9615 ;; Parameters:    Size  Location     Type
  9616 ;;		None
  9617 ;; Auto vars:     Size  Location     Type
  9618 ;;		None
  9619 ;; Return value:  Size  Location     Type
  9620 ;;                  1    wreg      void 
  9621 ;; Registers used:
  9622 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9623 ;; Tracked objects:
  9624 ;;		On entry : 0/0
  9625 ;;		On exit  : 0/0
  9626 ;;		Unchanged: 0/0
  9627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9632 ;;Total ram usage:        0 bytes
  9633 ;; Hardware stack levels used: 1
  9634 ;; Hardware stack levels required when called: 1
  9635 ;; This function calls:
  9636 ;;		_EUSART_RxDataHandler
  9637 ;; This function is called by:
  9638 ;;		_EUSART_Initialize
  9639 ;;		_EUSART_Receive_ISR
  9640 ;; This function uses a non-reentrant model
  9641 ;;
  9642                           
  9643                           
  9644                           ;psect for function _EUSART_DefaultErrorHandler
  9645  0F62                     _EUSART_DefaultErrorHandler:
  9646  0F62                     i1l3516:	
  9647                           ;incstack = 0
  9648                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  9649                           
  9650                           
  9651                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
  9652  0F62  3186  264C  318F   	fcall	_EUSART_RxDataHandler
  9653  0F65                     i1l355:
  9654  0F65  0008               	return
  9655  0F66                     __end_of_EUSART_DefaultErrorHandler:
  9656                           
  9657                           	psect	text80
  9658  064C                     __ptext80:	
  9659 ;; *************** function _EUSART_RxDataHandler *****************
  9660 ;; Defined at:
  9661 ;;		line 249 in file "mcc_generated_files/eusart.c"
  9662 ;; Parameters:    Size  Location     Type
  9663 ;;		None
  9664 ;; Auto vars:     Size  Location     Type
  9665 ;;		None
  9666 ;; Return value:  Size  Location     Type
  9667 ;;                  1    wreg      void 
  9668 ;; Registers used:
  9669 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9670 ;; Tracked objects:
  9671 ;;		On entry : 0/0
  9672 ;;		On exit  : 0/0
  9673 ;;		Unchanged: 0/0
  9674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9677 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9678 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9679 ;;Total ram usage:        1 bytes
  9680 ;; Hardware stack levels used: 1
  9681 ;; This function calls:
  9682 ;;		Nothing
  9683 ;; This function is called by:
  9684 ;;		_EUSART_Receive_ISR
  9685 ;;		_EUSART_DefaultErrorHandler
  9686 ;; This function uses a non-reentrant model
  9687 ;;
  9688                           
  9689                           
  9690                           ;psect for function _EUSART_RxDataHandler
  9691  064C                     _EUSART_RxDataHandler:
  9692  064C                     i1l3222:	
  9693                           ;incstack = 0
  9694                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  9695                           
  9696                           
  9697                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RCREG;
  9698  064C  0023               	movlb	3	; select bank3
  9699  064D  0819               	movf	25,w	;volatile
  9700  064E  00F0               	movwf	??_EUSART_RxDataHandler
  9701  064F  0020               	movlb	0	; select bank0
  9702  0650  0864               	movf	_eusartRxHead,w
  9703  0651  3EC5               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  9704  0652  0086               	movwf	6
  9705  0653  0187               	clrf	7
  9706  0654  0870               	movf	??_EUSART_RxDataHandler,w
  9707  0655  0081               	movwf	1
  9708  0656                     i1l3224:
  9709  0656  3001               	movlw	1
  9710  0657  00F0               	movwf	??_EUSART_RxDataHandler
  9711  0658  0870               	movf	??_EUSART_RxDataHandler,w
  9712  0659  07E4               	addwf	_eusartRxHead,f	;volatile
  9713  065A                     i1l3226:
  9714                           
  9715                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  9716  065A  3008               	movlw	8
  9717  065B  0264               	subwf	_eusartRxHead,w	;volatile
  9718  065C  1C03               	skipc
  9719  065D  2E5F               	goto	u90_21
  9720  065E  2E60               	goto	u90_20
  9721  065F                     u90_21:
  9722  065F  2E61               	goto	i1l3230
  9723  0660                     u90_20:
  9724  0660                     i1l3228:
  9725                           
  9726                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
  9727  0660  01E4               	clrf	_eusartRxHead	;volatile
  9728  0661                     i1l3230:
  9729                           
  9730                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
  9731  0661  3001               	movlw	1
  9732  0662  00F0               	movwf	??_EUSART_RxDataHandler
  9733  0663  0870               	movf	??_EUSART_RxDataHandler,w
  9734  0664  07E2               	addwf	_eusartRxCount,f	;volatile
  9735  0665                     i1l346:
  9736  0665  0008               	return
  9737  0666                     __end_of_EUSART_RxDataHandler:
  9738  007E                     btemp	set	126	;btemp
  9739  007E                     int$flags	set	126
  9740  007E                     wtemp0	set	126
  9741                           
  9742                           	psect	idloc
  9743                           
  9744                           ;Config register IDLOC0 @ 0x8000
  9745                           ;	unspecified, using default values
  9746  8000                     	org	32768
  9747  8000  3FFF               	dw	16383
  9748                           
  9749                           ;Config register IDLOC1 @ 0x8001
  9750                           ;	unspecified, using default values
  9751  8001                     	org	32769
  9752  8001  3FFF               	dw	16383
  9753                           
  9754                           ;Config register IDLOC2 @ 0x8002
  9755                           ;	unspecified, using default values
  9756  8002                     	org	32770
  9757  8002  3FFF               	dw	16383
  9758                           
  9759                           ;Config register IDLOC3 @ 0x8003
  9760                           ;	unspecified, using default values
  9761  8003                     	org	32771
  9762  8003  3FFF               	dw	16383
  9763                           
  9764                           	psect	config
  9765                           
  9766                           ;Config register CONFIG1 @ 0x8007
  9767                           ;	Oscillator Selection
  9768                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  9769                           ;	Watchdog Timer Enable
  9770                           ;	WDTE = OFF, WDT disabled
  9771                           ;	Power-up Timer Enable
  9772                           ;	PWRTE = OFF, PWRT disabled
  9773                           ;	MCLR Pin Function Select
  9774                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  9775                           ;	Flash Program Memory Code Protection
  9776                           ;	CP = OFF, Program memory code protection is disabled
  9777                           ;	Data Memory Code Protection
  9778                           ;	CPD = OFF, Data memory code protection is disabled
  9779                           ;	Brown-out Reset Enable
  9780                           ;	BOREN = ON, Brown-out Reset enabled
  9781                           ;	Clock Out Enable
  9782                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  9783                           ;	Internal/External Switchover
  9784                           ;	IESO = ON, Internal/External Switchover mode is enabled
  9785                           ;	Fail-Safe Clock Monitor Enable
  9786                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  9787  8007                     	org	32775
  9788  8007  3FE4               	dw	16356
  9789                           
  9790                           ;Config register CONFIG2 @ 0x8008
  9791                           ;	Flash Memory Self-Write Protection
  9792                           ;	WRT = OFF, Write protection off
  9793                           ;	Voltage Regulator Capacitor Enable
  9794                           ;	VCAPEN = 0x3, unprogrammed default
  9795                           ;	PLL Enable
  9796                           ;	PLLEN = ON, 4x PLL enabled
  9797                           ;	Stack Overflow/Underflow Reset Enable
  9798                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  9799                           ;	Brown-out Reset Voltage Selection
  9800                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  9801                           ;	Low-Voltage Programming Enable
  9802                           ;	LVP = ON, Low-voltage programming enabled
  9803  8008                     	org	32776
  9804  8008  3FFF               	dw	16383

Data Sizes:
    Strings     89
    Constant    32
    Data        1
    BSS         116
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     42      73
    BANK1            80      0      53
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_DO_TX$2393$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$2398	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$2393	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2392	const PTR FTN()enum E3338 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    S800$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S1992_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_7(CODE[16]), STR_6(CODE[15]), STR_5(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_7(CODE[16]), STR_6(CODE[15]), STR_5(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_7(CODE[16]), STR_6(CODE[15]), STR_5(CODE[9]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    LCD_Write_String@Str	PTR unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[15]), STR_3(CODE[12]), STR_2(CODE[8]), STR_1(CODE[14]), 

    I2C_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S800$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S800$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S800$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c_fsmStateTable	const PTR FTN()enum E3338[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), Absolute function(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S95$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _SYSTEM_Initialize->_EUSART_Initialize
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _I2C_MasterIsr->_I2C_MasterFsm

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    4519
                                             34 BANK0      8     8      0
                  _ADC_GetConversion
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                        _EUSART_Read
                    _I2C_Master_Init
                            _LCD_CMD
                          _LCD_Clear
                           _LCD_Init
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                   _LCD_Write_String
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     4      2    1786
                                             30 BANK0      4     2      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    1506
                                             22 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    1182
                                             14 BANK0      8     6      2
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     782
                                              6 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      66
                                              5 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         2     2      0      44
                                              3 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                     _ADC_Initialize
                  _EUSART_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     490
                                              5 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     5     3      2     527
                                              9 BANK0      5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       2     2      0     133
                                              7 BANK0      2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       4     3      1     699
                                              9 BANK0      4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             3     3      0     199
                                              9 BANK0      3     3      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0     133
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              2     2      0     133
                                              7 BANK0      2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_4Bit                                       2     2      0      89
                                              5 BANK0      2     2      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (4) _IO_Expander_Write                                    1     1      0      44
                                              4 BANK0      1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     1     1      0      22
                                              3 BANK0      1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          2     2      0      24
                                              3 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_WriteByte                                     3     2      1     144
                                              3 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      22
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      22
                                              3 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0   78254
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                      _I2C_MasterIsr *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterIsr                                        0     0      0   78254
                      _I2C_MasterFsm
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterFsm                                        3     3      0   78254
                                              0 BANK0      3     3      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_TX_EMPTY                                     3     3      0   19547
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterSetIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_TX                                           3     3      0   19569
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_RESTART_WRITE                           0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_RESTART_READ                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_ADR_WRITE                               0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_ADR_READ                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterSendTxData                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_RX_ACK                                       0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_RX                                           3     3      0   19547
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterSendAck                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_RX_NACK_STOP                                 0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_RX_NACK_RESTART                              0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterSendNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_RCEN                                         0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_ADDRESS_NACK                                 3     3      0   19547
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler                             1     0      1    3874
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (12) _I2C_SetDataCompleteCallback                         4     1      3    2478
                                              5 COMMON     4     1      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (13) _I2C_SetCallback                                     5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (12) _I2C_SetBuffer                                       4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_STOP                                    0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_RESTART                                 0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_CallbackReturnStop                              1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (11) _I2C_CallbackReturnReset                             1     0      1     265
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _EUSART_Receive_ISR                                   0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (9) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (9) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _EUSART_Read
   _I2C_Master_Init
   _LCD_CMD
     _LCD_Write_4Bit
       _IO_Expander_Write
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
   _LCD_Clear
     _LCD_CMD
   _LCD_Init
     _IO_Expander_Write
     _LCD_CMD
   _LCD_Set_Cursor
     _LCD_CMD
   _LCD_Write_Char
     _LCD_Write_4Bit
   _LCD_Write_String
     _LCD_Write_Char
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
             _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _I2C_MasterIsr *
     _I2C_MasterFsm
       _I2C_DO_ADDRESS_NACK *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
         _rd1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rd2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
         _rdBlkRegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
         _wr1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
         _wr2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
       _I2C_DO_IDLE *
       _I2C_DO_RCEN *
         _I2C_MasterStartRx
       _I2C_DO_RESET *
       _I2C_DO_RX *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_RX_NACK_RESTART *
           _I2C_MasterSendNack
         _I2C_DO_RX_NACK_STOP *
           _I2C_MasterSendNack
         _I2C_MasterGetRxData *
         _I2C_MasterSendAck *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_RX_ACK *
         _I2C_MasterSendAck
       _I2C_DO_RX_NACK_RESTART *
       _I2C_DO_RX_NACK_STOP *
       _I2C_DO_SEND_ADR_READ *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_ADR_WRITE *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_RESTART *
       _I2C_DO_SEND_RESTART_READ *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_WRITE *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_STOP *
       _I2C_DO_TX *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART_READ *
         _I2C_DO_SEND_RESTART_WRITE *
         _I2C_DO_SEND_STOP *
         _I2C_MasterIsNack *
         _I2C_MasterSendTxData *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_TX_EMPTY *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
         _I2C_DO_SEND_STOP *
         _I2C_MasterSetIrq *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_MasterClearIrq *
       _I2C_MasterIsNack *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2A      49       5       91.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      35       7       66.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      AC      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      AC      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Oct 14 09:50:52 2023

                ?_EUSART_SetRxInterruptHandler 0023                         ??_I2C_DO_SEND_ADR_READ 0070  
                  __size_of_I2C_MasterSendNack 0004                        ??_I2C_DO_SEND_ADR_WRITE 0071  
                                  _SSPSTATbits 0214                                             _RS 007D  
                        ??_I2C_DO_SEND_RESTART 0070                                            l214 0621  
                                          l143 05E9                                            l320 0511  
                __size_of_I2C_MasterSendTxData 0005                                            l217 062C  
                                          l314 0555                                            l323 052A  
                                          l173 06E7                                            l510 07DC  
                                          l182 0F79                                            l319 0507  
                                          l176 07B6                                            l361 0FCF  
                                          l329 0FEF                                            l370 0FD5  
                                          l179 07BB                                            l364 0FC3  
                                          l358 0FC9                                            l199 0FFF  
                                          l367 0FDB                                            l295 039C  
                                          l912 07D2                                            l921 0FB7  
                                          l842 0148                                            l915 07BC  
                                          l852 016B                                            l844 014D  
                                          l845 014B                                            l837 0121  
                                          l790 0796                                            l918 07C7  
                                          l862 0188                                            l927 0FBD  
                                          l951 06D4                                            l784 05BC  
                                          l936 0747                                            l960 0694  
                                          l848 0152                                            l786 05C0  
                                          l938 074C                                            l954 06C0  
                                          l858 017D                                            l787 05C7  
                                          l939 074D                                            l948 0240  
                                          l957 06AA                                            l990 07EE  
                                          l966 064B                                            l975 0476  
                                          _PEN 10B2                                            u800 0525  
                                          u801 0524                                            u820 07C1  
                                          _SEN 10B0                                            u821 07C0  
                                          u830 07C7                                            u831 07C6  
                                          u850 074C                                            u851 074B  
                                          u780 0507                                            u860 03A3  
                                          u940 0254                                            u781 0506  
                                          u861 03A2                                            u941 0253  
                                          u790 050C                                            u870 03A8  
                                          u950 0275                                            u791 050B  
                                          u871 03A7                                            u951 0274  
                                          u960 07BB                                            u880 03B7  
                                          u961 07BA                                            u881 03B6  
                                          u890 03D4                                            u891 03D3  
                                          u895 03D0                                            u995 068B  
                       ??_EUSART_RxDataHandler 0070                 ?_EUSART_SetFramingErrorHandler 0023  
                                          wreg 0009                                __end_of_LCD_CMD 06AB  
                                 ?_EUSART_Read 0070                       ??_I2C_CallbackReturnStop 007A  
                                 _I2C_DO_RESET 0FA7                            LCD_Write_String@Str 0029  
                               _LCD_Set_Cursor 0448                        ??_rd2RegCompleteHandler 007A  
                                         l3200 03A3                                           l4000 0080  
                                         l3050 051B                                           l3042 0502  
                                         l3202 03A8                                           l4010 009F  
                                         l4002 0086                                           l1603 06F9  
                                         l3220 0FBE                                           l3212 0FD0  
                                         l3052 051F                                           l3044 0502  
                                         l3204 03AD                                           l4020 00C2  
                                         l4012 00A7                                           l4004 0091  
                                         l3214 0FD6                                           l3054 0525  
                                         l3046 050C                                           l3206 03B7  
                                         l4030 00E5                                           l4022 00CE  
                                         l4014 00AE                                           l4006 0094  
                                         l3216 0FC4                                           l3056 0526  
                                         l3048 0512                                           l3208 03D4  
                                         l3400 0243                                           l4040 010A  
                                         l4032 00EC                                           l4024 00D1  
                                         l4016 00B6                                           l4008 0098  
                                         l3066 07BC                                           l3090 0FB8  
                                         l3218 0FCA                                           l3058 0528  
                                         l3410 0275                                           l3402 0254  
                                         l1642 057D                                           l4050 0132  
                                         l4042 010F                                           l4034 00F4  
                                         l4026 00D4                                           l4018 00BD  
                                         l3068 07C1                                           l3092 0FBB  
                                         l3500 037F                                           l3420 0296  
                                         l1636 02BC                                           l3412 027D  
                                         l3404 025C                                           l4060 0170  
                                         l4052 013B                                           l4044 011C  
                                         l4036 00FB                                           l4028 00D8  
                                         l3086 0FB2                                           l3094 0740  
                                         l3510 0393                                           l3502 0387  
                                         l3078 0FEB                                           l1654 03DD  
                                         l3414 0288                                           l3406 0260  
                                         l4070 0193                                           l4062 0175  
                                         l4054 0154                                           l4046 0123  
                                         l4038 0103                                           l3088 0FB5  
                                         l3096 0743                                           l3512 039A  
                                         l3504 038F                                           l3440 05D5  
                                         l3432 05C8                                           l3408 0264  
                                         l3424 0299                                           l4064 017F  
                                         l4072 01A3                                           l4056 015C  
                                         l4048 0130                                           l3530 0682  
                                         l3506 0391                                           l3450 05E0  
                                         l3442 05D7                                           l3434 05CE  
                                         l3426 02B2                                           l3418 028E  
                                         l4074 01AF                                           l4066 018A  
                                         l4058 0169                                           l3196 06C3  
                                         l3532 0697                                           l3700 020D  
                                         l3508 0392                                           l3460 07D3  
                                         l3452 05E2                                           l3444 05D9  
                                         l3436 05D1                                           l3540 055C  
                                         l3534 0698                                           l3702 0211  
                                         l3710 044B                                           l3462 07D8  
                                         l3470 07B3                                           l3454 05E4  
                                         l3446 05DC                                           l3438 05D3  
                                         l3550 06D5                                           l3198 039D  
                                         l3542 055F                                           l3560 0625  
                                         l3552 060E                                           l3640 05A6  
                                         l3536 069D                                           l3704 0222  
                                         l3712 0451                                           l3528 0680  
                                         l3480 0FFC                                           l3464 07D9  
                                         l3472 07B4                                           l3456 05E5  
                                         l3448 05DE                                           l3544 0570  
                                         l3554 061A                                           l3650 05B0  
                                         l3642 05A9                                           l3570 0541  
                                         l3394 06AD                                           l3706 022F  
                                         l3714 0457                                           l3730 063B  
                                         l3490 036F                                           l3482 0358  
                                         l3466 07DB                                           l3458 05E7  
                                         l3474 0F76                                           l3546 0579  
                                         l3538 0558                                           l4282 019B  
                                         l3556 061B                                           l3660 078F  
                                         l3652 05B5                                           l3644 05AD  
                                         l3580 0551                                           l3572 0545  
                                         l3564 052B                                           l3396 06B1  
                                         l4284 046B                                           l3716 045D  
                                         l3708 044A                                           l3732 0640  
                                         l3476 0FF8                                           l3492 0371  
                                         l3484 035A                                           l3468 07B0  
                                         l3740 06ED                                           l3558 061F  
                                         l3662 0790                                           l3654 05BB  
                                         l3646 05AE                                           l3638 05A6  
                                         l3582 0553                                           l3574 054B  
                                         l3566 052B                                           l3398 06B6  
                                         l3734 07E6                                           l3718 0463  
                                         l3726 062D                                           l3478 0FFB  
                                         l3494 0373                                           l3486 0362  
                                         l3664 0791                                           l3656 05C1  
                                         l3648 05AF                                           l3576 054C  
                                         l3568 0531                                           l3680 07D1  
                                         l3672 07C8                                           l3736 07EA  
                                         l3728 0631                                           l3496 0375  
                                         l3488 036C                                           l3666 0792  
                                         l3658 078C                                           l3578 054E  
                                         l3674 07CB                                           l3690 01D5  
                                         l3682 01B8                                           l3498 0377  
                                         l3738 06E8                                           l3668 0793  
                                         l3676 07CC                                           l3692 01E2  
                                         l3684 01BC                                           l3678 07CF  
                                         l3694 01E6                                           l3686 01C0  
                                         l3696 01F3                                           l3688 01CC  
                                         l3698 01FC                                           l3990 006F  
                                         l3992 0074                                           l3984 006A  
                                         l3994 0074                                           l3986 006D  
                                         l3996 0074                                           l3988 006E  
                                         l3998 0078                                           STR_1 077C  
                                         STR_2 07F8                                           STR_3 07A4  
                                         STR_4 076D                                           STR_5 07DD  
                                         STR_6 075E                                           STR_7 0438  
                                         u1010 0579                                           u1011 0578  
                                         u1020 0625                                           u1021 0624  
                                         u1005 06A1                                           u1030 0531  
                                         u1031 0530                                           u1120 05C0  
                                         u1040 054B                                           u1121 05BF  
                                         u1041 054A                                           u1130 064B  
                                         u1131 064A                                           u1410 0078  
                                         u1411 0077                                           u1420 0121  
                                         u1421 0120                                           _LATA 010C  
                                         u1430 0148                                           _LATB 010D  
                                         u1431 0147                                           _LATC 010E  
                                         u1440 0152                                           _LATD 010F  
                                         u1441 0151                                           _LATE 0110  
                                         u1450 0170                                           u1451 016F  
                                         u1435 0144                                           u1507 00DE  
                                         u1460 0175                                           u1461 0174  
                                         u1517 0115                                           u1470 01AF  
                                         u1607 0217                                           u1471 01AE  
                                         u1527 0129                                           u1617 0228  
                                         u1537 0162                                           u1627 0239  
                                         u1547 01C4                                           u1637 07EB  
                                         u1557 01D0                                           u1647 06BD  
                                         u1567 01DD                                           u1657 061C  
                                         u1577 01EA                                           u1497 00C8  
                                         u1587 01F7                                           u1597 0206  
                                         _RCEN 10B3                                           i1l92 072C  
                                         i1l95 071B                                           i1l98 070A  
                                         _PLLR 04D6                                           _RSEN 10B1  
                                         _WPUB 020D                                           _WPUE 0210  
                      ??_wr2RegCompleteHandler 007A                              ?_LCD_Write_String 0029  
                                         _dbuf 0120                                           _main 006A  
                     ?_I2C_CallbackReturnReset 0079                             __size_of_LCD_Clear 0009  
                                         _prec 004E                                           _nout 004A  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                           start 0047  
                           ??_LCD_Write_String 002B                           LCD_Write_4Bit@Nibble 0026  
             __size_of_rdBlkRegCompleteHandler 0018                      __size_of_DATAEE_WriteByte 0024  
                             __end_of_LCD_Init 0241                               ?_I2C_Master_Init 0070  
                             ?_I2C_Master_Wait 0070                                  ?_EUSART_Write 0070  
                             ?_I2C_Master_Stop 0070                 __size_of_OSCILLATOR_Initialize 000C  
                                _I2C_DO_RX_ACK 0F98                  __end_of_OSCILLATOR_Initialize 07BC  
                                        ?_main 0070                                          _ACKEN 10B4  
                                        _ACKDT 10B5                                   main@compteur 0049  
                                        i1l101 073D                                          i1l104 067D  
                                        i1l401 0045                                          i1l332 0609  
                                        i1l342 0417                                          i1l335 060B  
                                        i1l352 0F69                                          i1l346 0665  
                                        i1l355 0F65                                          i1l540 07A3  
                                        i1l349 0F4C                                          i1l613 04A5  
                                        i1l703 0F55                                          i1l607 0FE8  
                                        i1l631 0F88                                          i1l560 05A3  
                                        i1l712 0F6D                                          i1l640 0F97  
                                        i1l392 001A                                          i1l537 075D  
                                        i1l706 0FB1                                          i1l570 0F83  
                                        i1l634 0F8D                                          i1l730 0F61  
                                        i1l394 002A                                          i1l643 0F9C  
                                        i1l563 0F75                                          i1l395 0045  
                                        i1l652 0FAB                                          i1l396 003A  
                                        i1l709 0F71                                          i1l733 0F5E  
                                        i1l573 07F7                                          i1l637 0F92  
                                        i1l582 0311                                          i1l646 0FA1  
                                        i1l567 04D3                                          i1l576 0FF7  
                                        i1l649 0FA6                                          i1l666 0F4F  
                                        i1l658 04FF                                          i1l691 0F52  
                                        i1l579 02F5                                          i1l595 032F  
                                        i1l596 0357                                          i1l669 0003  
                                        i1l685 0F5B                                          i1l688 0F7E  
                                        i1l697 0F58                                          _RCREG 0199  
                 __size_of_I2C_DO_RX_NACK_STOP 0005                                          _RCSTA 019D  
                                 vfpfcnvrt@fmt 002E                                          u81_20 0585  
                            ??_I2C_DO_TX_EMPTY 007A                                          u81_21 0584  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _TRISD 008F  
                                        _TRISE 0090                                          u90_20 0660  
                                        _SSPIF 008B                                          u90_21 065F  
                                        u91_20 02C5                                          u91_21 02C4  
                                        u84_20 0754                                          u92_20 030E  
                                        u84_21 0753                                          u92_21 030D  
                                        u93_20 032A                                          u93_21 0329  
                                        u97_20 04AE                                          u97_21 04AD  
                                        _TXREG 019A                                          u98_20 04B6  
                                        u98_21 04B5                                          _TXSTA 019E  
                       __end_of_LCD_Set_Cursor 0477                              __end_of_I2C_DO_RX 0358  
                            __end_of_I2C_DO_TX 0312                                _DATAEE_ReadByte 078A  
                                        _flags 0050                                 _WDT_Initialize 0F76  
                                        _fputc 039D                         __size_of_I2C_MasterFsm 002E  
                       __size_of_I2C_MasterIsr 0004                                          _width 004C  
                                        _putch 0FE9                        _I2C_MasterEnableRestart 0F50  
                                        pclath 000A                               ?_I2C_SetCallback 0070  
                                        status 0003                                          wtemp0 007E  
                            ?_I2C_DO_SEND_STOP 0070                         __size_of_I2C_SetBuffer 0010  
                           ??_I2C_DO_SEND_STOP 0070                                 _LCD_Write_4Bit 06AB  
                               _LCD_Write_Char 067E                                __initialization 0049  
                                 __end_of_main 01B6              __size_of_I2C_DO_SEND_RESTART_READ 0005  
                    ?_I2C_DO_SEND_RESTART_READ 0070                              _IO_Expander_Write 06C1  
                               ??_EUSART_Write 0023                                 ?_I2C_DO_RX_ACK 0070  
                  ?_INTERRUPT_InterruptManager 0070                             ?_IO_Expander_Write 0070  
               ??_EUSART_SetRxInterruptHandler 0025                                         ??_main 0042  
                            ?_I2C_MasterIsNack 0070                              __end_of_LCD_Clear 07EF  
                                    ??_LCD_CMD 0027                              ?_I2C_MasterSetIrq 0070  
                           ??_I2C_MasterIsNack 0070                              ?_I2C_Master_Start 0070  
                            ?_I2C_Master_Write 0070                         __end_of_WDT_Initialize 0F7A  
                          ??_IO_Expander_Write 0024                                ?_LCD_Set_Cursor 0029  
                           ??_I2C_MasterSetIrq 0070                             ??_I2C_Master_Start 0023  
    __end_of_EUSART_DefaultFramingErrorHandler 0F4D     __size_of_EUSART_DefaultFramingErrorHandler 0001  
          ??_EUSART_DefaultFramingErrorHandler 0070             ?_EUSART_DefaultFramingErrorHandler 0070  
            _EUSART_DefaultFramingErrorHandler 0F4C                                         _ADCON0 009D  
                                       _ADCON1 009E                             ??_I2C_Master_Write 0023  
                   _EUSART_OverrunErrorHandler 0054                __end_of_I2C_CallbackReturnReset 0004  
                                       ?_fputc 0026                                         _ADRESH 009C  
                                       _EEADRH 0192                                         _ADRESL 009B  
                                       _EEADRL 0191                                         _EEDATH 0194  
                                       _EEDATL 0193                                         _EECON2 0196  
              __size_of_I2C_CallbackReturnStop 0002                                         _APFCON 011D  
                I2C_SetDataCompleteCallback@cb 0075                                         _ANSELA 018C  
                                       ?_putch 0070                                         _ANSELB 018D  
                                       _ANSELD 018F                                         _ANSELE 0190  
                                       _BORCON 0116                                         i1l3100 0724  
                                       i1l3102 072B                                         i1l3110 071A  
                                       i1l3122 072D                                         i1l3106 070B  
                                       i1l3114 06FA                                         i1l3130 0666  
                                       i1l3060 057F                                         i1l3124 0735  
                                       i1l3108 0713                                         i1l3116 0702  
                                       i1l3132 067C                                         i1l3140 0F7B  
                                       i1l3300 032D                                         i1l3230 0661  
                                       i1l3222 064C                                         i1l3062 0585  
                                       i1l3070 0797                                         i1l3126 073C  
                                       i1l3118 0709                                         i1l3310 0335  
                                       i1l3142 0F84                                         i1l3150 0F8C  
                                       i1l3224 0656                                         u105_20 05F1  
                                       i1l3080 0F50                                         i1l3072 074F  
                                       i1l3064 0596                                         i1l3160 0F59  
                                       i1l3136 0FAC                                         i1l3144 0F87  
                                       i1l3232 0F5F                                         u105_21 05F0  
                                       i1l3226 065A                                         i1l3082 0F53  
                                       i1l3074 0754                                         i1l3234 0F7F  
                                       i1l3242 07EF                                         i1l3250 0FF0  
                                       i1l3306 0331                                         i1l3154 0F93  
                                       i1l3228 0660                                         i1l3076 075C  
                                       i1l3084 0F6A                                         i1l3164 0F6E  
                                       i1l3340 0481                                         i1l3332 0477  
                                       i1l3236 0F81                                         i1l3244 07F1  
                                       i1l3252 0FF2                                         i1l3316 0339  
                                       i1l3324 0FE2                                         i1l3148 0F89  
                                       i1l3180 0F8E                                         i1l3156 0F96  
                                       i1l3172 0F9D                                         i1l3334 047A  
                                       i1l3350 0487                                         i1l3238 0F82  
                                       i1l3246 07F6                                         i1l3254 0FF6  
                                       i1l3270 02CE                                         i1l3262 02C6  
                                       i1l3326 0FE4                                         i1l3182 0F91  
                                       i1l3174 0FA0                                         i1l3166 0FA2  
                                       i1l3600 03E4                                         u106_20 0603  
                                       i1l3192 0002                                         i1l3344 0483  
                                       i1l3280 0303                                         i1l3328 0FE7  
                                       i1l3360 0F9B                                         i1l3168 0FA5  
                                       i1l3520 04A9                                         u130_20 000A  
                                       u106_21 0602                                         u130_21 0009  
                                       i1l3514 0F66                                         i1l3610 03FF  
                                       i1l3602 03E9                                         i1l3098 071C  
                                       i1l3178 0F56                                         i1l3186 0F5C  
                                       i1l3338 047E                                         i1l3282 030E  
                                       i1l3266 02CA                                         i1l3258 02BD  
                                       i1l3522 04AE                                         i1l3516 0F62  
                                       i1l3612 0404                                         i1l3604 03EF  
                                       i1l3188 0F4E                                         i1l3284 0310  
                                       i1l3276 02D2                                         i1l3292 0312  
                                       i1l3364 0FA7                                         i1l3380 04DF  
                                       i1l3372 04D4                                         i1l3524 04B6  
                                       i1l3614 040E                                         i1l3606 03F4  
                                       i1l3278 02F7                                         i1l3294 031C  
                                       i1l3358 0F98                                         i1l3366 0FA9  
                                       i1l3374 04D6                                         i1l3526 04BC  
                                       i1l3518 04A6                                         i1l3616 0414  
                                       i1l3608 03F9                                         u107_20 03E9  
                                       i1l3296 0320                                         i1l3368 0FAA  
                                       i1l3376 04DB                                         u131_20 000F  
                                       u107_21 03E8                                         u131_21 000E  
                                       i1l4290 02E7                                         i1l3298 032A  
                                       i1l3386 04E3                                         i1l4292 0497  
                                       i1l3636 0F72                                         i1l3900 000F  
                                       i1l3590 05F8                                         i1l4286 04F7  
                                       i1l3910 0034                                         i1l3902 0014  
                                       u108_20 03F9                                         i1l3592 05FD  
                                       i1l4288 0349                                         i1l3912 003F  
                                       i1l3904 001F                                         u132_20 0014  
                                       u108_21 03F8                                         u132_21 0013  
                                       i1l3594 0603                                         i1l3586 05EA  
                                       i1l3906 0024                                         i1l3596 0604  
                                       i1l3588 05F1                                         i1l3908 002F  
                                       i1l3598 03DE                                         u109_20 040E  
                                       u133_20 001F                                         u109_21 040D  
                                       u133_21 001E                                         u134_20 0024  
                                       i1l3896 0006                                         u134_21 0023  
                                       i1l3898 000A                                         u135_20 002F  
                                       u135_21 002E                                         u136_20 0034  
                                       u136_21 0033                                         u137_20 003F  
                                       u137_21 003E                                         u138_20 0044  
                                       u138_21 0043                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                                         _SSPADD 0212  
                                       _TRISC3 0473                                         _TRISC4 0474  
                                       _SSPBUF 0211                                         _SSPCON 0215  
                       __end_of_LCD_Write_4Bit 06C1                         __end_of_LCD_Write_Char 0695  
                          _I2C_MasterGetRxData 0F59                      __end_of_IO_Expander_Write 06D5  
                                main@reception 0048                                   vfprintf@cfmt 003C  
                                _I2C_MasterFsm 04A6                                  _I2C_MasterIsr 0F72  
                          _EUSART_Transmit_ISR 05EA                              I2C_SetCallback@cb 0070  
                      __size_of_I2C_MasterStop 0003                        __size_of_I2C_Initialize 000A  
                                       _printf 06E8                                  _I2C_SetBuffer 074E  
                      __end_of_DATAEE_ReadByte 0797                                         fputc@c 0026  
                          _I2C_DO_ADDRESS_NACK 04D4                           ?_I2C_MasterGetRxData 0070  
                              ?_WDT_Initialize 0070                      ??_I2C_MasterEnableRestart 0070  
                     ADC_GetConversion@channel 0026                               __end_of_vfprintf 057E  
                         ?_EUSART_Transmit_ISR 0070                           __size_of_EUSART_Read 002B  
                            _SYSTEM_Initialize 06D5                        __end_of__initialization 0066  
                                    ?_LCD_Init 0070                                ?_LCD_Write_4Bit 0070  
                           ?_SYSTEM_Initialize 0070                           ?_I2C_DO_ADDRESS_NACK 0070  
                              ?_LCD_Write_Char 0070           __end_of_EUSART_SetTxInterruptHandler 0FDC  
        __size_of_EUSART_SetTxInterruptHandler 0006                   _EUSART_SetTxInterruptHandler 0FD6  
                      _rdBlkRegCompleteHandler 0666                                 __pcstackCOMMON 0070  
                               ?_I2C_MasterFsm 0070                                 ?_I2C_MasterIsr 0070  
                              ??_I2C_DO_RX_ACK 0070                                   __pidataBANK0 0F4D  
                       _I2C_CallbackReturnStop 0F4E                            ??_SYSTEM_Initialize 0026  
                             _DATAEE_WriteByte 05A4                                  __end_of_fputc 03DE  
                                __end_of_putch 0FF0                                 ?_I2C_SetBuffer 0070  
               __size_of_I2C_DO_SEND_ADR_WRITE 0008             __size_of_I2C_DO_SEND_RESTART_WRITE 0005  
                __end_of_I2C_DO_SEND_ADR_WRITE 0FF8                     ?_I2C_DO_SEND_RESTART_WRITE 0070  
                        ??_I2C_MasterGetRxData 0070                                 _OPTION_REGbits 0095  
                         _eusartRxStatusBuffer 00BD                     __end_of_I2C_MasterClearIrq 0F62  
              ??_EUSART_SetOverrunErrorHandler 0025                                        ??_fputc 0029  
                    __end_of_SYSTEM_Initialize 06E8                          ??_EUSART_Transmit_ISR 0070  
                                      ??_putch 0025                              _I2C_MasterSendAck 0F6E  
                                   __pbssBANK0 004A                                     __pbssBANK1 00A0  
                                   __pbssBANK2 0120                           __end_of_EUSART_Write 052B  
                                ??_I2C_DO_IDLE 0070                 __size_of_rd2RegCompleteHandler 0011  
                                ??_I2C_DO_RCEN 0070                  __end_of_rd2RegCompleteHandler 071C  
                 __end_of_I2C_MasterSendTxData 0F7F                             ?_I2C_MasterSendAck 0070  
                                   ??_LCD_Init 0029                              _I2C_MasterStartRx 0F56  
               __size_of_wr2RegCompleteHandler 0011                          ??_I2C_DO_ADDRESS_NACK 007A  
                __end_of_wr2RegCompleteHandler 073E                    __size_of_EUSART_Receive_ISR 003A  
                          _I2C_DO_RX_NACK_STOP 0F9D                          _rd1RegCompleteHandler 071C  
                           ?_I2C_MasterStartRx 0070                     __end_of_I2C_MasterSendNack 0F6E  
                        _wr1RegCompleteHandler 06FA                     __size_of_IO_Expander_Write 0014  
                                   __pmaintext 006A                            ??_I2C_MasterSendAck 0070  
                     rd1RegCompleteHandler@ptr 0079                  ?_EUSART_SetTxInterruptHandler 0023  
             _EUSART_TxDefaultInterruptHandler 005A                    __end_of_I2C_DO_SEND_RESTART 0F93  
                              _I2C_DO_TX_EMPTY 0477                            I2C_SetBuffer@buffer 0073  
                                   __pintentry 0004                            ??_I2C_MasterStartRx 0070  
                __size_of_I2C_DO_SEND_ADR_READ 0009                                        _BAUDCON 019F  
                                      _ACKSTAT 10B6               __size_of_I2C_CallbackReturnReset 0002  
                    __size_of_LCD_Write_String 001F                   ??_EUSART_DefaultErrorHandler 0071  
                                      ?_printf 003E                 I2C_SetDataCompleteCallback@ptr 0077  
                      __size_of_ADC_Initialize 0008                       ??_I2C_DO_RX_NACK_RESTART 0070  
                             ?_DATAEE_ReadByte 0070              __end_of_I2C_DO_SEND_RESTART_WRITE 0F8E  
                         ?_I2C_DO_RX_NACK_STOP 0070                                        _LCD_CMD 0695  
                                _eusartRxCount 0062                                 main@lectureAN1 0044  
                           __size_of_vfpfcnvrt 007C                  __size_of_EUSART_RxDataHandler 001A  
                    __end_of_I2C_MasterSendAck 0F72                                        _OSCTUNE 0098  
                     ??_EUSART_SetErrorHandler 0025                                        _SSPCON1 0215  
                                      _SSPCON2 0216                                        _SSPSTAT 0214  
                    __end_of_I2C_MasterStartRx 0F59                   ?_I2C_SetDataCompleteCallback 0075  
                                    _I2C_DO_RX 0312                                      _I2C_DO_TX 02BD  
             __end_of_I2C_DO_SEND_RESTART_READ 0F89                           DATAEE_WriteByte@bAdd 0024  
                    ??_rdBlkRegCompleteHandler 007A                                        _i2c_add 0060  
                              ??_I2C_MasterFsm 0020                                ??_I2C_MasterIsr 007D  
                         _ADC_InterruptHandler 005C            __size_of_EUSART_DefaultErrorHandler 0004  
                          __end_of_I2C_DO_IDLE 0F84                            __end_of_I2C_DO_RCEN 0FE9  
                              ??_I2C_SetBuffer 0072                                      ?_vfprintf 0036  
                      I2C_SetBuffer@bufferSize 0070                                 _I2C_MasterStop 0F53  
                               _I2C_Initialize 07D3                      __size_of_I2C_DO_SEND_STOP 0005  
                             ??_LCD_Set_Cursor 002A                                        __ptext1 06E8  
                                      __ptext2 0556                                        __ptext3 0241  
                                      __ptext4 039D                                        __ptext5 0FE9  
                                      __ptext6 0500                                        __ptext7 06D5  
                                      __ptext8 0F76                                        __ptext9 05C8  
                              __size_of_printf 0012                          ??_I2C_DO_RX_NACK_STOP 0070  
                        _OSCILLATOR_Initialize 07B0                             I2C_SetCallback@idx 0074  
                     ??_PIN_MANAGER_Initialize 0023                  I2C_CallbackReturnReset@funPtr 0079  
                           I2C_SetCallback@ptr 0072                       wr1RegCompleteHandler@ptr 0079  
                     __size_of_I2C_Master_Init 000B                       __size_of_I2C_Master_Wait 000C  
                     __size_of_I2C_Master_Stop 0006                                      _LCD_Clear 07E6  
                               main@sauvegarde 0046                     __size_of_SYSTEM_Initialize 0013  
                                      clrloop0 0FDD                           end_of_initialization 0066  
                                   ?_I2C_DO_RX 0070                                     ?_I2C_DO_TX 0070  
        __end_of_EUSART_SetOverrunErrorHandler 0FD0         __size_of_EUSART_SetOverrunErrorHandler 0006  
                _EUSART_SetOverrunErrorHandler 0FCA                      __size_of_I2C_MasterIsNack 0006  
                                      fputc@fp 0028                         ?_rd1RegCompleteHandler 0079  
                      __end_of_I2C_DO_TX_EMPTY 04A6                      __size_of_I2C_MasterSetIrq 0003  
                            _EUSART_Initialize 0358                         ?_wr1RegCompleteHandler 0079  
                    __size_of_I2C_Master_Start 0006                      __size_of_I2C_Master_Write 0010  
                           ?_EUSART_Initialize 0070                       __size_of_I2C_SetCallback 0026  
                            __end_of_vfpfcnvrt 02BD                                      _RCSTAbits 019D  
                       __end_of_I2C_MasterStop 0F56                         __end_of_I2C_Initialize 07DD  
                                   ??_vfprintf 0039                            ??_EUSART_Initialize 0025  
                             ??_WDT_Initialize 0023                 ??_EUSART_SetTxInterruptHandler 0025  
                                    _PORTDbits 000F                __end_of_rdBlkRegCompleteHandler 067E  
                         _I2C_MasterSendTxData 0F7A                                     LCD_CMD@CMD 0028  
              __size_of_I2C_DO_RX_NACK_RESTART 0005                          __size_of_EUSART_Write 002B  
                   __size_of_I2C_MasterSendAck 0004                                     ?_LCD_Clear 0070  
                             ??_LCD_Write_4Bit 0025                __size_of_EUSART_SetErrorHandler 0006  
                     __end_of_DATAEE_WriteByte 05C8                              LCD_Write_String@i 002C  
                   __size_of_I2C_MasterStartRx 0003                               ??_LCD_Write_Char 0027  
                    __end_of_EUSART_Initialize 039D                                    _I2C_DO_IDLE 0F7F  
                                  _I2C_DO_RCEN 0FE2                     rdBlkRegCompleteHandler@ptr 0079  
                                    _TXSTAbits 019E                        ?_I2C_CallbackReturnStop 0079  
                            __size_of_LCD_Init 008B                       _I2C_DO_SEND_RESTART_READ 0F84  
                 I2C_CallbackReturnStop@funPtr 0079                                ?_I2C_MasterStop 0070  
                              ?_I2C_Initialize 0070                        _I2C_CallbackReturnReset 0002  
           __end_of_EUSART_DefaultErrorHandler 0F66                     _EUSART_DefaultErrorHandler 0F62  
                                  vfpfcnvrt@ap 002F                                    vfpfcnvrt@fp 0035  
         __size_of_I2C_SetDataCompleteCallback 000D                               _LCD_Write_String 062D  
                                 _EUSART_Write 0500                                 _ADC_Initialize 0FF8  
                        ?_I2C_MasterSendTxData 0070                         ?_OSCILLATOR_Initialize 0070  
                  ??_I2C_DO_SEND_RESTART_WRITE 0070                                 __end_of_printf 06FA  
                          start_initialization 0049                __size_of_PIN_MANAGER_Initialize 0022  
                                ??_EUSART_Read 0023                                  ?_I2C_DO_RESET 0070  
 EUSART_SetRxInterruptHandler@interruptHandler 0023   EUSART_SetTxInterruptHandler@interruptHandler 0023  
                                  putch@txData 0025                                    ??_I2C_DO_RX 007A  
                                  ??_I2C_DO_TX 007A                              ??_I2C_Master_Init 0023  
                            ??_I2C_Master_Wait 0023                              ??_I2C_Master_Stop 0023  
               __end_of_I2C_CallbackReturnStop 0F50                         _I2C_DO_RX_NACK_RESTART 0FA2  
                             ?_I2C_DO_TX_EMPTY 0070                            DATAEE_ReadByte@bAdd 0023  
                           _I2C_MasterClearIrq 0F5F                 ?_EUSART_SetOverrunErrorHandler 0023  
                                  vfprintf@fmt 0036                     _EUSART_FramingErrorHandler 0056  
                       _EUSART_SetErrorHandler 0FBE                            ?_I2C_MasterClearIrq 0070  
                       __end_of_ADC_Initialize 1000                    __end_of_I2C_MasterGetRxData 0F5C  
                                  __pdataBANK0 0068                          __end_of_I2C_DO_RX_ACK 0F9D  
                             _I2C_DO_SEND_STOP 0F93                              ??_I2C_SetCallback 0073  
                                     ??_printf 0040                             _I2C_MasterSendNack 0F6A  
                     ?_I2C_MasterEnableRestart 0070                              _i2c_fsmStateTable 0418  
                                     ?_LCD_CMD 0070                    __end_of_EUSART_Transmit_ISR 060C  
                        _I2C_DO_SEND_ADR_WRITE 0FF0                                    __pbssCOMMON 007D  
                                    ___latbits 0003                                  __pcstackBANK0 0020  
                               ??_I2C_DO_RESET 0070                                    ??_LCD_Clear 0029  
                          ?_I2C_MasterSendNack 0070                   __end_of_I2C_DO_SEND_ADR_READ 07F8  
                         ??_I2C_MasterClearIrq 0070                    __end_of_I2C_DO_ADDRESS_NACK 0500  
                   __end_of_EUSART_Receive_ISR 0418                               _I2C_MasterIsNack 0FAC  
                   __size_of_EUSART_Initialize 0045                      _I2C_DO_SEND_RESTART_WRITE 0F89  
             _EUSART_RxDefaultInterruptHandler 0058                            __end_of_EUSART_Read 0556  
                             _I2C_MasterSetIrq 0F5C                               _I2C_Master_Start 0FB2  
                        _rd2RegCompleteHandler 070B                               _I2C_Master_Write 073E  
                 __end_of_EUSART_RxDataHandler 0666                         _PIN_MANAGER_Initialize 05C8  
                        _wr2RegCompleteHandler 072D                          IO_Expander_Write@Data 0024  
                    ??_I2C_CallbackReturnReset 007A                           EUSART_Read@readValue 0024  
                         ??_I2C_MasterSendNack 0070                       rd2RegCompleteHandler@ptr 0079  
                              ?_ADC_Initialize 0070                                   _eusartRxHead 0064  
                                 _eusartTxHead 0067                                   _eusartRxTail 0063  
                       ??_I2C_MasterSendTxData 0070                                   _eusartTxTail 0066  
                    __end_of_i2c_fsmStateTable 0438                           I2C_Master_Write@data 0023  
                 ??_INTERRUPT_InterruptManager 007D                              __size_of_vfprintf 0028  
                      _eusartTxBufferRemaining 0065                   __size_of_I2C_DO_SEND_RESTART 0005  
                               __size_of_fputc 0041                       __size_of_DATAEE_ReadByte 000D  
                      ??_rd1RegCompleteHandler 007A                                 __size_of_putch 0007  
                               _eusartRxBuffer 00C5                        ??_wr1RegCompleteHandler 007A  
                               _eusartTxBuffer 00CD                                       _LCD_Init 01B6  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0023  
                                    clear_ram0 0FDC                                       _PIE1bits 0091  
                                     _PIE2bits 0092                              _eusartRxLastError 0061  
          __size_of_INTERRUPT_InterruptManager 0043                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0025                                       _PIR2bits 0012  
                        __end_of_I2C_MasterFsm 04D4                          __end_of_I2C_MasterIsr 0F76  
                  __end_of_I2C_DO_RX_NACK_STOP 0FA2      __end_of_EUSART_DefaultOverrunErrorHandler 0F6A  
   __size_of_EUSART_DefaultOverrunErrorHandler 0004            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 0F66  
              __end_of_I2C_MasterEnableRestart 0F53                                      _vfpfcnvrt 0241  
                        __end_of_I2C_SetBuffer 075E                                     _ADCON0bits 009D  
                       ?_I2C_DO_SEND_ADR_WRITE 0070                       I2C_MasterSendTxData@data 0070  
                             __size_of_LCD_CMD 0016                       wr2RegCompleteHandler@ptr 0079  
                        DATAEE_WriteByte@bData 0023                                    _EUSART_Read 052B  
                   ??_I2C_DO_SEND_RESTART_READ 0070                       ?_rdBlkRegCompleteHandler 0079  
                            ?_DATAEE_WriteByte 0023                       __end_of_LCD_Write_String 064C  
                                   _I2C_Status 00A0                                   ?_I2C_DO_IDLE 0070  
                                 ?_I2C_DO_RCEN 0070                         ?_rd2RegCompleteHandler 0079  
                           ??_DATAEE_WriteByte 0024                                     _EECON1bits 0195  
                       ?_wr2RegCompleteHandler 0079                               ??_I2C_MasterStop 0070  
                             ??_I2C_Initialize 0023                                     vfprintf@ap 0038  
                                   vfprintf@fp 003B                              _ADC_GetConversion 060C  
                         __end_of_I2C_DO_RESET 0FAC                        ??_OSCILLATOR_Initialize 0023  
                          _EUSART_ErrorHandler 0052                             ?_ADC_GetConversion 0023  
                         _I2C_DO_SEND_ADR_READ 07EF                    ?_EUSART_DefaultErrorHandler 0070  
                                   ?_vfpfcnvrt 002E                            ??_ADC_GetConversion 0025  
                              _I2C_Master_Init 07C8                                _I2C_Master_Wait 07BC  
                              _I2C_Master_Stop 0FB8                           _EUSART_RxDataHandler 064C  
                                     __ptext10 07B0                                       __ptext11 07D3  
                                     __ptext20 067E                                       __ptext12 0358  
                                     __ptext21 0448                                       __ptext13 0FD6  
                                     __ptext30 07BC                                       __ptext22 01B6  
                                     __ptext14 0FD0                                       __ptext31 07C8  
                                     __ptext23 07E6                                       __ptext15 0FCA  
                                     __ptext40 04D4                                       __ptext32 052B  
                                     __ptext24 0695                                       __ptext16 0FC4  
                                     __ptext41 0FA7                                       __ptext33 05A4  
                                     __ptext25 06AB                                       __ptext17 0FBE  
                                     __ptext50 0312                                       __ptext42 0FA2  
                                     __ptext34 078A                                       __ptext26 06C1  
                                     __ptext18 0FF8                                       __ptext51 02BD  
                                     __ptext43 0F9D                                       __ptext35 060C  
                                     __ptext27 073E                                       __ptext19 062D  
                                     __ptext60 0F59                                       __ptext52 0FF0  
                                     __ptext44 0F98                                       __ptext28 0FB8  
                                     __ptext61 0F6A                                       __ptext53 07EF  
                                     __ptext45 0F93                                       __ptext37 0F72  
                                     __ptext29 0FB2                                       __ptext70 0797  
                                     __ptext62 0F56                                       __ptext54 0F7F  
                                     __ptext46 0F8E                                       __ptext38 04A6  
                                     __ptext71 057E                                       __ptext63 0002  
                                     __ptext55 0477                                       __ptext47 0F89  
                                     __ptext39 0F5F                                       __ptext80 064C  
                                     __ptext72 074E                                       __ptext64 0F4E  
                                     __ptext56 0F5C                                       __ptext48 0F84  
                                     __ptext73 0F53                                       __ptext65 0666  
                                     __ptext57 0FAC                                       __ptext49 0FE2  
                                     __ptext74 0F50                                       __ptext66 06FA  
                                     __ptext58 0F7A                                       __ptext75 05EA  
                                     __ptext67 070B                                       __ptext59 0F6E  
                                     __ptext76 03DE                                       __ptext68 071C  
                                     __ptext77 0F66                                       __ptext69 072D  
                                     __ptext78 0F4C                                       __ptext79 0F62  
          __end_of_I2C_SetDataCompleteCallback 07A4                    _I2C_SetDataCompleteCallback 0797  
                      __size_of_LCD_Set_Cursor 002F                        ?_I2C_DO_RX_NACK_RESTART 0070  
                  DATAEE_WriteByte@GIEBitValue 0025                       __end_of_I2C_DO_SEND_STOP 0F98  
                              _BackLight_State 0068                                  __size_of_main 014C  
                            ??_DATAEE_ReadByte 0023                      __end_of_ADC_GetConversion 062D  
                      ?_EUSART_SetErrorHandler 0023                                _I2C_SetCallback 057E  
                ??_I2C_SetDataCompleteCallback 0078  EUSART_SetOverrunErrorHandler@interruptHandler 0023  
                                     int$flags 007E                          ?_I2C_DO_SEND_ADR_READ 0070  
                                     _vfprintf 0556             __end_of_INTERRUPT_InterruptManager 0047  
                   _INTERRUPT_InterruptManager 0004                                      printf@fmt 003E  
        __end_of_EUSART_SetFramingErrorHandler 0FCA         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 0FC4                       __end_of_I2C_MasterIsNack 0FB2  
                     __end_of_I2C_MasterSetIrq 0F5F                       __end_of_I2C_Master_Start 0FB8  
                     __end_of_I2C_Master_Write 074E                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0070                             LCD_Write_Char@Data 0028  
               __end_of_I2C_DO_RX_NACK_RESTART 0FA7                        __size_of_WDT_Initialize 0004  
                                     intlevel1 0000               __size_of_I2C_MasterEnableRestart 0003  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0FC4  
                          _I2C_DO_SEND_RESTART 0F8E                               ??_ADC_Initialize 0023  
         __end_of_EUSART_SetRxInterruptHandler 0FD6          __size_of_EUSART_SetRxInterruptHandler 0006  
                 _EUSART_SetRxInterruptHandler 0FD0                        __size_of_LCD_Write_4Bit 0016  
                      __size_of_LCD_Write_Char 0017                                       printf@ap 0041  
                           _EUSART_Receive_ISR 03DE  EUSART_SetFramingErrorHandler@interruptHandler 0023  
                     __size_of_I2C_DO_TX_EMPTY 002F                        __end_of_I2C_Master_Init 07D3  
                      __end_of_I2C_Master_Wait 07C8                        __end_of_I2C_Master_Stop 0FBE  
                                  ??_vfpfcnvrt 0030                                LCD_Init@I2C_Add 002B  
                                __pstringtext1 0418                                  __pstringtext2 075E  
                                __pstringtext3 076D                                  __pstringtext4 077C  
                                __pstringtext5 07A4                                  __pstringtext6 07DD  
                                __pstringtext7 07F8                                  __pstringtext8 0000  
                         ?_I2C_DO_SEND_RESTART 0070                            ?_EUSART_Receive_ISR 0070  
                 __size_of_I2C_MasterGetRxData 0003                              LCD_Set_Cursor@COL 0029  
                            LCD_Set_Cursor@ROW 002C                                    _SSPCON1bits 0215  
                                  _SSPCON2bits 0216                    __size_of_I2C_MasterClearIrq 0003  
                           EUSART_Write@txData 0024                   __size_of_EUSART_Transmit_ISR 0022  
                      __end_of_I2C_SetCallback 05A4                 __end_of_PIN_MANAGER_Initialize 05EA  
               __size_of_rd1RegCompleteHandler 0011                  __end_of_rd1RegCompleteHandler 072D  
                       __size_of_I2C_DO_RX_ACK 0005                 __size_of_wr1RegCompleteHandler 0011  
                         ??_EUSART_Receive_ISR 0071                          __size_of_I2C_DO_RESET 0005  
                __end_of_wr1RegCompleteHandler 070B                          _MSSP_InterruptHandler 005E  
                 __size_of_I2C_DO_ADDRESS_NACK 002C                     __size_of_ADC_GetConversion 0021  
                         __size_of_I2C_DO_IDLE 0005                           __size_of_I2C_DO_RCEN 0007  
                           __size_of_I2C_DO_RX 0046                             __size_of_I2C_DO_TX 0055  
